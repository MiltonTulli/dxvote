{"version":3,"sources":["../node_modules/prismjs/components lazy /^/.//prism/-.*$/ groupOptions: {} namespace object","provider/connectors.ts","stores/Provider.ts","services/ABIService.ts","provider/UncheckedJsonRpcSigner.ts","stores/actions/error.ts","stores/actions/actions.ts","stores/Transaction.ts","services/MulticallService.ts","services/DaoService.ts","services/EventsService.ts","services/IPFSService.ts","services/PinataService.ts","services/EtherscanService.ts","services/CoingeckoService.ts","stores/Modal.ts","stores/ConfigStore.ts","stores/DaoStore.ts","stores/UserStore.ts","contracts/index.ts","cache/index.ts","stores/BlockchainStore.ts","contexts/index.ts","components/Web3ReactManager/index.tsx","provider/providerHooks.ts","serviceWorker.ts","theme/index.tsx","components/Modal/index.tsx","components/common/Link.tsx","assets/images/x.svg","components/common/Copy.tsx","components/AccountDetails/index.tsx","assets/images/metamask.png","components/WalletModal/Option.tsx","components/WalletModal/index.tsx","components/common/Box.tsx","components/Web3ConnectStatus/index.tsx","assets/images/DXdao.svg","components/Header/index.tsx","components/Footer/index.tsx","PageRouter.tsx","components/common/ActiveButton.tsx","pages/Proposals.tsx","components/common/Question.tsx","pages/NewProposal.tsx","components/common/BlockchainLink.tsx","pages/User.tsx","pages/Proposal.tsx","components/FinanceInformation.tsx","components/SchemesInformation.tsx","components/GovernanceInformation.tsx","pages/Info.tsx","pages/Configuration.tsx","pages/FAQ.tsx","pages/Forum.tsx","index.tsx","utils/address.ts","utils/bignumber.ts","utils/enums.ts","utils/constants.ts","utils/date.ts","utils/helperHooks.ts","utils/helpers.ts","utils/number.ts","utils/permissions.ts","utils/proposals.ts","utils/scheme.ts","utils/cache.ts"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","ETH_NETWORKS","process","split","NETWORK_NAMES","NETWORK_IDS","NETWORK_ASSET_SYMBOL","ETH_NETWORKS_IDS","network","web3ContextNames","isChainIdSupported","chainId","indexOf","injected","InjectedConnector","supportedChainIds","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","ContractType","ERRORS","schema","Avatar","require","abi","Controller","VotingMachine","DXDVotingMachine","Reputation","WalletScheme","ERC20","PermissionRegistry","Multicall","ContributionReward","SchemeRegistrar","Redeemer","ABIService","context","this","contractType","data","library","providerStore","getActiveWeb3React","contractInterface","Interface","getAbi","functionSignature","substring","functionName","functions","sighash","function","args","eth","decodeParameters","inputs","input","type","UncheckedJsonRpcSigner","signer","ethers","defineReadOnly","provider","getAddress","transaction","sendUncheckedTransaction","hash","nonce","gasLimit","gasPrice","value","confirmations","from","wait","waitForTransaction","message","signMessage","errorCodeMapping","Web3Errors","SIGNATURE_REJECTED","isKnownErrorCode","codeStr","toString","getErrorByCode","UNKNOWN_ERROR","sendAction","params","contract","action","sender","overrides","console","debug","preLog","promiEvent","PromiEvent","methods","send","once","emit","TXEvents","TX_HASH","receipt","RECEIPT","confNumber","CONFIRMATION","on","error","TX_ERROR","INVARIANT","FINALLY","catch","FetchCode","ProviderStore","accounts","defaultAccount","web3Contexts","supportedNetworks","chainData","activeChainId","activeFetchLoop","activeAccount","fetchUserBlockchainData","web3React","account","a","transactionStore","checkPendingTransactions","currentBlockNumber","makeObservable","observable","setCurrentBlockNumber","setActiveAccount","blocknumber","getCurrentBlockNumber","newBlockNumber","oldBlockNumber","getSigner","address","signerAccount","Contract","getBlock","blockData","date","Date","timestamp","moment","format","ContextNotFound","contractAddress","BlockchainActionNoAccount","BlockchainActionNoChainId","getContract","addTransactionRecord","to","sendTransaction","MulticallService","activeCalls","activeCallsRaw","resetActiveCalls","calls","rawCalls","configStore","multi","getNetworkContracts","utils","multicall","aggregate","call","response","results","returnData","blockNumber","forEach","addCall","addContractCall","abiService","iface","encoded","method","encode","push","result","decode","DaoService","createProposal","vote","approveVotingMachineToken","stake","execute","redeem","callData","controller","avatarAddress","avatar","genericCall","encodeABI","recommendedCalls","getRecommendedCalls","controllerCallDecoded","decodeCall","asset","ZERO_ADDRESS","bnum","ERC20_TRANSFER_SIGNATURE","ERC20_APPROVE_SIGNATURE","recommendedCallUsed","find","recommendedCall","ANY_ADDRESS","encodeFunctionSignature","callParameters","param","__length__","decodedCallText","decodeText","length","paramIndex","decimals","replaceAll","normalizeBalance","toName","JSON","stringify","scheme","schemeType","proposalData","networkContracts","sendRawTransaction","encodeFunctionCall","contentHash","descriptionHash","reputationChange","ethValue","tokenValue","externalToken","beneficiary","titleText","decision","amount","proposalId","daoStore","getVotingMachineOfProposal","votingMachineAddress","getCache","votingMachines","token","MAX_UINT","redeemerAddress","schemeAddress","web3","EventsService","activeEventsCalls","eventName","fromBlock","toBlock","log","_","getPastEvents","orderBy","activeEventCall","getEvents","events","event","addEventCall","CID","IPFSService","ipfs","started","IPFS","create","content","add","cid","string","pin","get","file","path","chunk","concat","axios","url","PinataService","auth","ipfsHashes","i","pinataApiKey","getLocalConfig","pinata","headers","Authorization","status","hashToPin","pinataMetadata","getActiveChainName","fromIpfs","keyValues","EtherscanService","etherscanAPIKey","etherscan","CoingeckoService","prices","tokens","getTokensToFetchPrice","networkName","tokenAddresses","pricesResponse","tokenAddress","toChecksumAddress","TransactionStore","txRecords","filter","isTxPending","currentBlock","isStale","getTransactionReceipt","blockNumberChecked","SUCCESS","txHash","record","undefined","records","txRecord","ModalStore","walletModalVisible","toggleWalletModal","setWalletModalVisible","visible","ipfsHashesOfNetworkCaches","ConfigStore","darkMode","appConfig","toggleDarkMode","activeWeb3","localStorage","getItem","parse","pinOnStart","config","setItem","ipfsService","getContentFromIPFS","daostack","schemeRegistrar","contractToCall","votingMachine","gen","newProposalTopics","voteParams","contributionReward","creationLogEncoding","competitionScheme","multicallSchemes","addresses","genericSchemes","dxSchemes","dxd","soliditySha3","tokenInFile","contracts","fetchPrice","proposalTemplates","networkTokens","getTokensOfNetwork","defaultValue","permissionRegistry","ANY_FUNC_SIGNATURE","networkToken","symbol","DaoStore","daoCache","setCache","unparsedCache","daoInfo","ethBalance","repEvents","repEvent","schemes","callPermissions","proposals","values","stateInScheme","stateInVotingMachine","currentBoostedVotePeriodLimit","daoBountyRemain","daoBounty","totalStakes","confidenceThreshold","secondsFromTimeOutTillExecuteBoosted","submittedTime","preBoostedPhaseTime","boostedPhaseTime","positiveVotes","negativeVotes","preBoostedPositiveVotes","preBoostedNegativeVotes","positiveStakes","negativeStakes","votingParameters","paramsHash","unparsedParams","queuedVoteRequiredPercentage","queuedVotePeriodLimit","boostedVotePeriodLimit","preBoostedVotePeriodLimit","thresholdConst","limitExponentValue","quietEndingPeriod","proposingRepReward","votersReputationLossRatio","minimumDaoBounty","daoBountyConst","activationTime","newNetworkCache","parseCache","_schemeName","_schemeAddress","getProposal","schemeInfo","getSchemeProposals","proposal","users","totalPositiveVotes","totalPositiveVotesAmount","totalNegativeVotes","totalNegativeVotesAmount","totalPositiveStakes","totalPositiveStakesAmount","totalNegativeStakes","totalNegativeStakesAmount","totalProposalsCreated","cache","rep","sortBy","unshift","repTotalSupply","plus","minus","l1BlockNumber","div","toNumber","votes","voter","correctVotes","wrongVotes","correctStakes","wrongStakes","totalVoted","totalStaked","score","winningVote","stakes","staker","proposalCreator","proposer","getRepAt","totalSupply","times","toFixed","Math","min","Number","creationEvent","tx","ranking","key","assign","allProposals","proposalEvents","getVotesOfProposal","getStakesOfProposal","redeems","getRedeemsOfProposal","redeemsRep","getRedeemsRepOfProposal","stateChanges","getProposalStateChanges","totalRep","history","text","VoteDecision","block","transactionIndex","logIndex","VotingMachineProposalState","state","userAddress","userRep","repBalance","repPercentage","formatPercentage","redeemRep","newProposalEvents","pickBy","newProposal","proposalStateChangeEvents","votingMachineOfProposal","votingMachineParams","autoBoost","decodeProposalStatus","maxSecondsForExecution","proposalStateChanges","proposalStateChange","getScheme","assetLimits","controllerAddress","assetAddress","callAllowance","getCallAllowance","fromTime","lt","atBlock","inL2","UserStore","userInfo","dxdBalance","dxdApproved","genBalance","genApproved","update","callsToExecute","executeMulticall","callsResponse","decodedReturnData","DxController","DxAvatar","DxReputation","GenesisProtocol","getContracts","networkConfig","reputation","gen2","getUpdatedCache","networkCache","updateDaoInfo","updateReputationEvents","networkCacheUpdated","_address","updateVotingMachine","updateSchemes","updatePermissionRegistry","updateProposals","l2BlockNumber","tokenBalances","sortEvents","reputationEvent","signature","returnValues","_to","_amount","transactionHash","_from","newVotingMachineEvents","votingMachineEventsInCache","votingMachineParamsHash","votingMachineEvent","proposalCreated","findIndex","newProposalEvent","_proposalId","_organization","_proposer","paramHash","_paramsHash","_proposalState","preBoosted","_voter","_vote","_reputation","_staker","amount4Bounty","_beneficiary","decodeSchemeParameters","permissionRegistryEvent","eventValues","controllerEvents","controllerEventsIndex","controllerEvent","_scheme","schemeTypeData","getSchemeTypeData","WalletSchemeJSON","walletSchemeContract","callsResponse1","permissions","decodePermission","schemeName","maxRepPercentageChange","ZERO_HASH","callsResponse2","boostedVoteRequiredPercentage","registered","proposalIds","boostedProposals","_sender","avatarAddressEncoded","encodeParameter","schemeEvents","getRawEvents","schemeEventsBatchs","schemeEventsBatchsIndex","schemeEvent","topics","decodeParameter","ContributionRewardJSON","votingMachineProposalInfo","proposalStatusWithVotes","proposalTimes","schemeProposalInfo","WalletSchemeProposalState","Submitted","title","ExecutionSucceded","Rejected","transactionReceipt","newProposalTopic","logs","decodedProposer","creationLogDecoded","_descriptionHash","ipfsHashToDescriptionHash","_parametersHash","_permissions","_reputationChange","_rewards","_externalToken","_data","_value","callIndex","_contractsToCall","_callsData","_values","daoRedeemItsWinnings","shouldBoost","descriptionHashToIPFSHash","retryIntent","proposalIndex","ipfsHash","isNode","request","timeout","sleep","Executed","proposalShouldBoost","BlockchainStore","initialLoadComplete","contractStorage","eventsStorage","updateStore","fetchData","multicallService","index","lastFetched","executeCalls","multicallResponse","reduceMulticall","entry","has","emitions","entries","oldEntry","reset","active","getCacheIPFSHash","getBlockNumber","lastCheckedBlockNumber","tokensBalancesCalls","addCalls","executeAndUpdateMulticall","tokensBalancesCall","blockchainStore","getCachedValue","rootContext","React","createContext","modalStore","userStore","daoService","eventsService","pinataService","etherscanService","coingeckoService","useContext","Web3ReactManager","children","web3ContextInjected","useWeb3React","networkActive","networkError","setWeb3Context","loadConfig","triedEager","useWeb3ReactCore","activate","useState","tried","setTried","useEffect","isAuthorized","isMobile","window","ethereum","useEagerConnect","walletInstalled","location","reload","suppress","handleChainChanged","handleAccountsChanged","handleNetworkChanged","removeListener","useInactiveListener","useInterval","BlurWrapper","styled","OverBlurModal","className","Boolean","hostname","match","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","reduce","accumulator","size","css","white","ThemeProvider","setDarkMode","theme","black","textColor","greyText","backgroundColor","activeButtonBackground","modalBackground","inputBackground","placeholderGray","shadowColor","borderStyle","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","bodyText","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle","createGlobalStyle","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","suppressClassNameWarning","mobile","rest","attrs","StyledDialogContent","minHeight","maxHeight","isOpen","slideInAnimation","aria-label","HiddenCloseButton","button","Modal","onDismiss","hidden","onClick","_line","_line2","Link","target","rel","CopyIcon","TransactionStatusText","span","CopyHelper","toCopy","useCopyClipboard","isCopied","setCopied","_extends","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","x1","y1","x2","y2","ForwardRef","OptionButton","HeaderRow","UpperSection","InfoCard","AccountGroupingRow","AccountSection","YourAccount","GreenCircle","CircleWrapper","AccountControl","ConnectButtonRow","StyledLink","CloseIcon","CloseColor","Close","WalletAction","AccountDetails","openOptions","alt","close","getBlockchainLink","clickable","transparentize","OptionCard","OptionCardLeft","OptionCardClickable","disabled","HeaderText","SubHeader","IconWrapper","Option","link","header","subheader","src","metamaskIcon","Wrapper","ContentWrapper","Blurb","OptionGrid","HoverText","WALLET_VIEWS","WalletModal","observer","walletView","setWalletView","connectionErrorMessage","setConnectionErrorMessage","walletModalOpen","activePrevious","usePrevious","connectorPrevious","tryActivation","getOptions","isMetamask","isMetaMask","option","mobileOnly","style","Box","WrongNetworkButton","AccountButton","ConnectButton","Web3ConnectStatus","display","shortenAddress","fontSize","toCamelCaseString","NavWrapper","NavSection","MenuItem","ItemBox","Header","NavItem","withRouter","route","cursor","getUserInfo","parseFloat","Web3","fromWei","dxdaoIcon","margin","FooterWrapper","LeftFooter","FooterItem","FooterDivider","Footer","useHistory","PageRouterWrapper","LoadingBox","PageRouter","useLocation","start","isAuthenticated","providerActive","pathname","loadPrices","updatePinList","Button","ButtonWithRouter","ActiveButton","ProposalsTableWrapper","ProposalsFilter","select","ProposalsNameFilter","ProposalTableHeaderActions","ProposalTableHeaderWrapper","TableHeader","align","TableRowsWrapper","TableRow","TableCell","weight","wrapText","ProposalsPage","getAllSchemes","stateFilter","setStateFilter","schemeFilter","setSchemeFilter","titleFilter","setTitleFilter","userEvents","getUserEvents","getAllProposals","cacheProposal","getProposalStatus","sortedProposals","sort","b","finishTime","flexDirection","justifyContent","placeholder","onChange","newValue","positiveStake","formatNumberValue","negativeStake","repAtCreation","positiveVotesPercentage","negativeVotesPercentage","timeToBoost","timeToTimestamp","boostTime","timeToFinish","votingMachineTokenName","voted","staked","created","textDecoration","minWidth","textAlign","pendingAction","flex","QuestionLink","QuestionIcon","question","NewProposalFormWrapper","PlaceHolders","TitleInput","TextActions","CallRow","RemoveButton","TextInput","SelectInput","NewProposalPage","schemeInLocalStorage","networkAssetSymbol","defaultSchemeToUse","schemeToUse","setSchemeToUse","setTitleText","setIpfsHash","descriptionText","setDescriptionText","callsInStorage","dataValues","callInStorage","Array","functionParams","setCalls","repChange","contributionRewardCalls","setContributionRewardCalls","useReducer","x","forceUpdate","submitionState","setSubmitionState","errorMessage","setErrorMessage","getProposalTemplates","getSchemeRecommendedCalls","transferLimits","allowedToCall","allowedPermission","uploadToIPFS","bodyTextToUpload","tags","pinataPin","ipfsPin","uploaded","getContent","ipfsContent","callToController","callType","callDataFunctionSignature","callDataFunctionParamsEncoded","encodeParameters","functionParam","encodeControllerGenericCall","toWei","txerror","setCallsInState","changeCallType","allowedFunctions","onToSelectChange","toAddress","onFunctionParamsChange","onContributionRewardValueChange","setContributionRewardCallsInState","Question","splice","template","preview","commands","bold","italic","strikethrough","hr","divider","quote","image","unorderedListCommand","orderedListCommand","checkedListCommand","Markdown","borderRadius","border","padding","allowedCall","allowedCallIndex","selectedFunction","allowedFunction","allowedFunc","allowedFuncIndex","paddingRight","marginTop","funcParam","funcParamIndex","alignItems","AddressLink","BlockchainLink","onlyIcon","toFormat","end","formarText","InfoBox","UserPage","getUser","proposalsToRedeem","voteParameters","getVotingParametersOfProposal","historyEvent","borderBottom","ProposalInformationWrapper","InfoSidebarBox","ProposalInfoSection","ProposalInfoBox","SidebarDivider","SidebarRow","AmountInput","AmountBadge","ActionButton","ProposalPage","votingMachineUsed","stakeAmount","setStakeAmount","votePercentage","setVotePercentage","proposalDescription","setProposalDescription","proposalTitle","setProposalTitle","votingMachineTokenApproved","getProposalEvents","votedAmount","positiveVotesCount","negativeVotesCount","stakedAmount","positiveStakesCount","negativeStakesCount","userRepAtProposalCreation","totalRepAtProposalCreation","repPercentageAtCreation","executionTimeoutTime","proposalCallTexts","p","decodeWalletSchemeCall","canRedeemToken","gt","canRedeemRep","canRedeem","setCanRedeem","calculateStakes","getAmountOfProposalsPreBoostedInScheme","recommendedStakeToBoost","recommendedStakeToUnBoost","submitVote","repAmount","submitStake","denormalizeBalance","contributionRewardRedeemer","redeemContributionRewardCall","toRedeemResponse","toRedeem","executeProposal","finishTimeReached","unix","lineBreak","whiteSpace","proposalCallText","dangerouslySetInnerHTML","__html","redeemContributionReward","voteEvent","max","step","maxWidth","formatBalance","stakeEvent","borderTop","FinanceInfoWrapper","FinanceTableHeaderWrapper","FinanceInformation","getDaoInfo","getPrices","assets","total","tokenData","getTokenData","indexOfAssetInTotal","assetHolder","assetsOfHolder","parseCamelCase","usd","formatCurrency","SchemesInformationWrapper","SchemesInformation","schemeProposals","votingMachineParameters","getVotingParametersOfScheme","duration","humanize","canGenericCall","canUpgrade","canChangeConstraints","canRegisterSchemes","GovernanceInfoWrapper","GovernanceTableHeaderWrapper","GovernanceInformation","weiNumber","governanceInfo","getGovernanceInfo","chartType","loader","options","legend","pieSliceText","pieStartAngle","sliceVisibilityThreshold","hAxis","vAxis","user","InfoPageWrapper","InfoNavigation","InfoPage","searchPath","search","Row","InputBox","ConfigPage","etherscanApiStatus","setEtherscanApiStatus","pinataKeyStatus","setPinataKeyStatus","localConfig","setLocalConfig","onApiKeyValueChange","clear","serviceName","checked","FAQPage","questionId","FAQBox","document","querySelectorAll","scrollIntoView","daoAddresses","n","FAQBody","ForumPage","loading","setLoading","addEventListener","lists","list","getAttribute","frameId","random","substr","removeAttribute","j","attributes","attr","replace","iframe","createElement","join","frameBorder","scrolling","appendChild","discourse-url","category","per-page","updateLocale","relativeTime","s","m","h","d","Web3ProviderInjected","createWeb3ReactRoot","Root","getLibrary","exact","Proposals","Forum","FAQ","NewProposal","Info","User","Proposal","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","digits","isAddress","toLowerCase","BigNumber","EXPONENTIAL_AT","ROUNDING_MODE","ROUND_DOWN","DECIMAL_PLACES","FORMAT","groupSize","groupSeparator","decimalSeparator","DEFAULT_TOKEN_DECIMALS","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","setIsCopied","staticCopy","useCallback","didCopy","copy","hide","setTimeout","clearTimeout","toUpperCase","val","scale","decimalPlaces","scalePow","scaleMul","pow","ms","parsed","useLowerLimit","lte","balance","normalizedBalance","displayPrecision","truncateAt","roundDown","eq","ROUND_UP","padToDecimalPlaces","precision","minDecimals","zerosToPad","pad","permission","hexString","lookup","ret","len","hexToBinary","preBoostedProposals","upstakes","downstakes","threshold","recommendedThreshold","stakeToBoost","stakeToUnBoost","timeNow","ExpiredInQueue","ExecutionTimeout","Queued","PreBoosted","Boosted","QuietEndingPeriod","rawParameters","MAX_BLOCKS_PER_EVENTS_FETCH","eventsToGet","maxBlocksPerFetch","eventsFetched","getTimestampOfEvents","trunc","blocksToLower","topicsToGet","getPastLogs","blocksToFetch","timestamps","totalLength","blocksToFetchBatch","blockInfo","number","_jsonInterface","callResult","outputs","getCodec"],"mappings":"u61LAAA,IAAIA,EAAM,CACT,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,cAAe,CACd,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,mCAAoC,CACnC,IACA,KAED,sCAAuC,CACtC,IACA,KAED,uCAAwC,CACvC,IACA,KAED,0CAA2C,CAC1C,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,YAAa,CACZ,IACA,KAED,eAAgB,CACf,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,mBAAoB,CACnB,KAED,sBAAuB,CACtB,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,KAED,4BAA6B,CAC5B,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,oBAAqB,CACpB,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,iCAAkC,CACjC,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,aAAc,CACb,KACA,KAED,gBAAiB,CAChB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,gCAAiC,CAChC,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,k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","file":"static/js/main.a84a9e34.chunk.js","sourcesContent":["var map = {\n\t\"./prism-abap\": [\n\t\t734,\n\t\t0\n\t],\n\t\"./prism-abap.js\": [\n\t\t734,\n\t\t0\n\t],\n\t\"./prism-abap.min\": [\n\t\t735,\n\t\t1\n\t],\n\t\"./prism-abap.min.js\": [\n\t\t735,\n\t\t1\n\t],\n\t\"./prism-abnf\": [\n\t\t736,\n\t\t2\n\t],\n\t\"./prism-abnf.js\": [\n\t\t736,\n\t\t2\n\t],\n\t\"./prism-abnf.min\": [\n\t\t737,\n\t\t3\n\t],\n\t\"./prism-abnf.min.js\": [\n\t\t737,\n\t\t3\n\t],\n\t\"./prism-actionscript\": [\n\t\t738,\n\t\t4\n\t],\n\t\"./prism-actionscript.js\": [\n\t\t738,\n\t\t4\n\t],\n\t\"./prism-actionscript.min\": [\n\t\t739,\n\t\t5\n\t],\n\t\"./prism-actionscript.min.js\": [\n\t\t739,\n\t\t5\n\t],\n\t\"./prism-ada\": [\n\t\t740,\n\t\t6\n\t],\n\t\"./prism-ada.js\": [\n\t\t740,\n\t\t6\n\t],\n\t\"./prism-ada.min\": [\n\t\t741,\n\t\t7\n\t],\n\t\"./prism-ada.min.js\": [\n\t\t741,\n\t\t7\n\t],\n\t\"./prism-agda\": [\n\t\t742,\n\t\t8\n\t],\n\t\"./prism-agda.js\": [\n\t\t742,\n\t\t8\n\t],\n\t\"./prism-agda.min\": [\n\t\t743,\n\t\t9\n\t],\n\t\"./prism-agda.min.js\": [\n\t\t743,\n\t\t9\n\t],\n\t\"./prism-al\": [\n\t\t744,\n\t\t10\n\t],\n\t\"./prism-al.js\": [\n\t\t744,\n\t\t10\n\t],\n\t\"./prism-al.min\": [\n\t\t745,\n\t\t11\n\t],\n\t\"./prism-al.min.js\": [\n\t\t745,\n\t\t11\n\t],\n\t\"./prism-antlr4\": [\n\t\t746,\n\t\t12\n\t],\n\t\"./prism-antlr4.js\": [\n\t\t746,\n\t\t12\n\t],\n\t\"./prism-antlr4.min\": [\n\t\t747,\n\t\t13\n\t],\n\t\"./prism-antlr4.min.js\": [\n\t\t747,\n\t\t13\n\t],\n\t\"./prism-apacheconf\": [\n\t\t748,\n\t\t14\n\t],\n\t\"./prism-apacheconf.js\": [\n\t\t748,\n\t\t14\n\t],\n\t\"./prism-apacheconf.min\": [\n\t\t749,\n\t\t15\n\t],\n\t\"./prism-apacheconf.min.js\": [\n\t\t749,\n\t\t15\n\t],\n\t\"./prism-apl\": [\n\t\t750,\n\t\t16\n\t],\n\t\"./prism-apl.js\": [\n\t\t750,\n\t\t16\n\t],\n\t\"./prism-apl.min\": [\n\t\t751,\n\t\t17\n\t],\n\t\"./prism-apl.min.js\": [\n\t\t751,\n\t\t17\n\t],\n\t\"./prism-applescript\": [\n\t\t752,\n\t\t18\n\t],\n\t\"./prism-applescript.js\": [\n\t\t752,\n\t\t18\n\t],\n\t\"./prism-applescript.min\": [\n\t\t753,\n\t\t19\n\t],\n\t\"./prism-applescript.min.js\": [\n\t\t753,\n\t\t19\n\t],\n\t\"./prism-aql\": [\n\t\t754,\n\t\t20\n\t],\n\t\"./prism-aql.js\": [\n\t\t754,\n\t\t20\n\t],\n\t\"./prism-aql.min\": [\n\t\t755,\n\t\t21\n\t],\n\t\"./prism-aql.min.js\": [\n\t\t755,\n\t\t21\n\t],\n\t\"./prism-arduino\": [\n\t\t756,\n\t\t22\n\t],\n\t\"./prism-arduino.js\": [\n\t\t756,\n\t\t22\n\t],\n\t\"./prism-arduino.min\": [\n\t\t757,\n\t\t23\n\t],\n\t\"./prism-arduino.min.js\": [\n\t\t757,\n\t\t23\n\t],\n\t\"./prism-arff\": [\n\t\t758,\n\t\t24\n\t],\n\t\"./prism-arff.js\": [\n\t\t758,\n\t\t24\n\t],\n\t\"./prism-arff.min\": [\n\t\t759,\n\t\t25\n\t],\n\t\"./prism-arff.min.js\": [\n\t\t759,\n\t\t25\n\t],\n\t\"./prism-asciidoc\": [\n\t\t760,\n\t\t26\n\t],\n\t\"./prism-asciidoc.js\": [\n\t\t760,\n\t\t26\n\t],\n\t\"./prism-asciidoc.min\": [\n\t\t761,\n\t\t27\n\t],\n\t\"./prism-asciidoc.min.js\": [\n\t\t761,\n\t\t27\n\t],\n\t\"./prism-asm6502\": [\n\t\t762,\n\t\t28\n\t],\n\t\"./prism-asm6502.js\": [\n\t\t762,\n\t\t28\n\t],\n\t\"./prism-asm6502.min\": [\n\t\t763,\n\t\t29\n\t],\n\t\"./prism-asm6502.min.js\": [\n\t\t763,\n\t\t29\n\t],\n\t\"./prism-aspnet\": [\n\t\t764,\n\t\t30\n\t],\n\t\"./prism-aspnet.js\": [\n\t\t764,\n\t\t30\n\t],\n\t\"./prism-aspnet.min\": [\n\t\t765,\n\t\t31\n\t],\n\t\"./prism-aspnet.min.js\": [\n\t\t765,\n\t\t31\n\t],\n\t\"./prism-autohotkey\": [\n\t\t766,\n\t\t32\n\t],\n\t\"./prism-autohotkey.js\": [\n\t\t766,\n\t\t32\n\t],\n\t\"./prism-autohotkey.min\": [\n\t\t767,\n\t\t33\n\t],\n\t\"./prism-autohotkey.min.js\": [\n\t\t767,\n\t\t33\n\t],\n\t\"./prism-autoit\": [\n\t\t768,\n\t\t34\n\t],\n\t\"./prism-autoit.js\": [\n\t\t768,\n\t\t34\n\t],\n\t\"./prism-autoit.min\": [\n\t\t769,\n\t\t35\n\t],\n\t\"./prism-autoit.min.js\": [\n\t\t769,\n\t\t35\n\t],\n\t\"./prism-bash\": [\n\t\t770,\n\t\t36\n\t],\n\t\"./prism-bash.js\": [\n\t\t770,\n\t\t36\n\t],\n\t\"./prism-bash.min\": [\n\t\t771,\n\t\t37\n\t],\n\t\"./prism-bash.min.js\": [\n\t\t771,\n\t\t37\n\t],\n\t\"./prism-basic\": [\n\t\t772,\n\t\t38\n\t],\n\t\"./prism-basic.js\": [\n\t\t772,\n\t\t38\n\t],\n\t\"./prism-basic.min\": [\n\t\t773,\n\t\t39\n\t],\n\t\"./prism-basic.min.js\": [\n\t\t773,\n\t\t39\n\t],\n\t\"./prism-batch\": [\n\t\t774,\n\t\t40\n\t],\n\t\"./prism-batch.js\": [\n\t\t774,\n\t\t40\n\t],\n\t\"./prism-batch.min\": [\n\t\t775,\n\t\t41\n\t],\n\t\"./prism-batch.min.js\": [\n\t\t775,\n\t\t41\n\t],\n\t\"./prism-bbcode\": [\n\t\t776,\n\t\t42\n\t],\n\t\"./prism-bbcode.js\": [\n\t\t776,\n\t\t42\n\t],\n\t\"./prism-bbcode.min\": [\n\t\t777,\n\t\t43\n\t],\n\t\"./prism-bbcode.min.js\": [\n\t\t777,\n\t\t43\n\t],\n\t\"./prism-bison\": [\n\t\t778,\n\t\t44\n\t],\n\t\"./prism-bison.js\": [\n\t\t778,\n\t\t44\n\t],\n\t\"./prism-bison.min\": [\n\t\t779,\n\t\t45\n\t],\n\t\"./prism-bison.min.js\": [\n\t\t779,\n\t\t45\n\t],\n\t\"./prism-bnf\": [\n\t\t780,\n\t\t46\n\t],\n\t\"./prism-bnf.js\": [\n\t\t780,\n\t\t46\n\t],\n\t\"./prism-bnf.min\": [\n\t\t781,\n\t\t47\n\t],\n\t\"./prism-bnf.min.js\": [\n\t\t781,\n\t\t47\n\t],\n\t\"./prism-brainfuck\": [\n\t\t782,\n\t\t48\n\t],\n\t\"./prism-brainfuck.js\": [\n\t\t782,\n\t\t48\n\t],\n\t\"./prism-brainfuck.min\": [\n\t\t783,\n\t\t49\n\t],\n\t\"./prism-brainfuck.min.js\": [\n\t\t783,\n\t\t49\n\t],\n\t\"./prism-brightscript\": [\n\t\t784,\n\t\t50\n\t],\n\t\"./prism-brightscript.js\": [\n\t\t784,\n\t\t50\n\t],\n\t\"./prism-brightscript.min\": [\n\t\t785,\n\t\t51\n\t],\n\t\"./prism-brightscript.min.js\": [\n\t\t785,\n\t\t51\n\t],\n\t\"./prism-bro\": [\n\t\t786,\n\t\t52\n\t],\n\t\"./prism-bro.js\": [\n\t\t786,\n\t\t52\n\t],\n\t\"./prism-bro.min\": [\n\t\t787,\n\t\t53\n\t],\n\t\"./prism-bro.min.js\": [\n\t\t787,\n\t\t53\n\t],\n\t\"./prism-c\": [\n\t\t788,\n\t\t54\n\t],\n\t\"./prism-c.js\": [\n\t\t788,\n\t\t54\n\t],\n\t\"./prism-c.min\": [\n\t\t789,\n\t\t55\n\t],\n\t\"./prism-c.min.js\": [\n\t\t789,\n\t\t55\n\t],\n\t\"./prism-cil\": [\n\t\t790,\n\t\t56\n\t],\n\t\"./prism-cil.js\": [\n\t\t790,\n\t\t56\n\t],\n\t\"./prism-cil.min\": [\n\t\t791,\n\t\t57\n\t],\n\t\"./prism-cil.min.js\": [\n\t\t791,\n\t\t57\n\t],\n\t\"./prism-clike\": [\n\t\t792,\n\t\t58\n\t],\n\t\"./prism-clike.js\": [\n\t\t792,\n\t\t58\n\t],\n\t\"./prism-clike.min\": [\n\t\t793,\n\t\t59\n\t],\n\t\"./prism-clike.min.js\": [\n\t\t793,\n\t\t59\n\t],\n\t\"./prism-clojure\": [\n\t\t794,\n\t\t60\n\t],\n\t\"./prism-clojure.js\": [\n\t\t794,\n\t\t60\n\t],\n\t\"./prism-clojure.min\": [\n\t\t795,\n\t\t61\n\t],\n\t\"./prism-clojure.min.js\": [\n\t\t795,\n\t\t61\n\t],\n\t\"./prism-cmake\": [\n\t\t796,\n\t\t62\n\t],\n\t\"./prism-cmake.js\": [\n\t\t796,\n\t\t62\n\t],\n\t\"./prism-cmake.min\": [\n\t\t797,\n\t\t63\n\t],\n\t\"./prism-cmake.min.js\": [\n\t\t797,\n\t\t63\n\t],\n\t\"./prism-coffeescript\": [\n\t\t798,\n\t\t64\n\t],\n\t\"./prism-coffeescript.js\": [\n\t\t798,\n\t\t64\n\t],\n\t\"./prism-coffeescript.min\": [\n\t\t799,\n\t\t65\n\t],\n\t\"./prism-coffeescript.min.js\": [\n\t\t799,\n\t\t65\n\t],\n\t\"./prism-concurnas\": [\n\t\t800,\n\t\t66\n\t],\n\t\"./prism-concurnas.js\": [\n\t\t800,\n\t\t66\n\t],\n\t\"./prism-concurnas.min\": [\n\t\t801,\n\t\t67\n\t],\n\t\"./prism-concurnas.min.js\": [\n\t\t801,\n\t\t67\n\t],\n\t\"./prism-core\": [\n\t\t802,\n\t\t68\n\t],\n\t\"./prism-core.js\": [\n\t\t802,\n\t\t68\n\t],\n\t\"./prism-core.min\": [\n\t\t803,\n\t\t69\n\t],\n\t\"./prism-core.min.js\": [\n\t\t803,\n\t\t69\n\t],\n\t\"./prism-cpp\": [\n\t\t804,\n\t\t70\n\t],\n\t\"./prism-cpp.js\": [\n\t\t804,\n\t\t70\n\t],\n\t\"./prism-cpp.min\": [\n\t\t805,\n\t\t71\n\t],\n\t\"./prism-cpp.min.js\": [\n\t\t805,\n\t\t71\n\t],\n\t\"./prism-crystal\": [\n\t\t806,\n\t\t72\n\t],\n\t\"./prism-crystal.js\": [\n\t\t806,\n\t\t72\n\t],\n\t\"./prism-crystal.min\": [\n\t\t807,\n\t\t73\n\t],\n\t\"./prism-crystal.min.js\": [\n\t\t807,\n\t\t73\n\t],\n\t\"./prism-csharp\": [\n\t\t808,\n\t\t74\n\t],\n\t\"./prism-csharp.js\": [\n\t\t808,\n\t\t74\n\t],\n\t\"./prism-csharp.min\": [\n\t\t809,\n\t\t75\n\t],\n\t\"./prism-csharp.min.js\": [\n\t\t809,\n\t\t75\n\t],\n\t\"./prism-csp\": [\n\t\t810,\n\t\t76\n\t],\n\t\"./prism-csp.js\": [\n\t\t810,\n\t\t76\n\t],\n\t\"./prism-csp.min\": [\n\t\t811,\n\t\t77\n\t],\n\t\"./prism-csp.min.js\": [\n\t\t811,\n\t\t77\n\t],\n\t\"./prism-css\": [\n\t\t814,\n\t\t80\n\t],\n\t\"./prism-css-extras\": [\n\t\t812,\n\t\t78\n\t],\n\t\"./prism-css-extras.js\": [\n\t\t812,\n\t\t78\n\t],\n\t\"./prism-css-extras.min\": [\n\t\t813,\n\t\t79\n\t],\n\t\"./prism-css-extras.min.js\": [\n\t\t813,\n\t\t79\n\t],\n\t\"./prism-css.js\": [\n\t\t814,\n\t\t80\n\t],\n\t\"./prism-css.min\": [\n\t\t815,\n\t\t81\n\t],\n\t\"./prism-css.min.js\": [\n\t\t815,\n\t\t81\n\t],\n\t\"./prism-cypher\": [\n\t\t816,\n\t\t82\n\t],\n\t\"./prism-cypher.js\": [\n\t\t816,\n\t\t82\n\t],\n\t\"./prism-cypher.min\": [\n\t\t817,\n\t\t83\n\t],\n\t\"./prism-cypher.min.js\": [\n\t\t817,\n\t\t83\n\t],\n\t\"./prism-d\": [\n\t\t818,\n\t\t84\n\t],\n\t\"./prism-d.js\": [\n\t\t818,\n\t\t84\n\t],\n\t\"./prism-d.min\": [\n\t\t819,\n\t\t85\n\t],\n\t\"./prism-d.min.js\": [\n\t\t819,\n\t\t85\n\t],\n\t\"./prism-dart\": [\n\t\t820,\n\t\t86\n\t],\n\t\"./prism-dart.js\": [\n\t\t820,\n\t\t86\n\t],\n\t\"./prism-dart.min\": [\n\t\t821,\n\t\t87\n\t],\n\t\"./prism-dart.min.js\": [\n\t\t821,\n\t\t87\n\t],\n\t\"./prism-dax\": [\n\t\t822,\n\t\t88\n\t],\n\t\"./prism-dax.js\": [\n\t\t822,\n\t\t88\n\t],\n\t\"./prism-dax.min\": [\n\t\t823,\n\t\t89\n\t],\n\t\"./prism-dax.min.js\": [\n\t\t823,\n\t\t89\n\t],\n\t\"./prism-dhall\": [\n\t\t824,\n\t\t90\n\t],\n\t\"./prism-dhall.js\": [\n\t\t824,\n\t\t90\n\t],\n\t\"./prism-dhall.min\": [\n\t\t825,\n\t\t91\n\t],\n\t\"./prism-dhall.min.js\": [\n\t\t825,\n\t\t91\n\t],\n\t\"./prism-diff\": [\n\t\t826,\n\t\t92\n\t],\n\t\"./prism-diff.js\": [\n\t\t826,\n\t\t92\n\t],\n\t\"./prism-diff.min\": [\n\t\t827,\n\t\t93\n\t],\n\t\"./prism-diff.min.js\": [\n\t\t827,\n\t\t93\n\t],\n\t\"./prism-django\": [\n\t\t828,\n\t\t94\n\t],\n\t\"./prism-django.js\": [\n\t\t828,\n\t\t94\n\t],\n\t\"./prism-django.min\": [\n\t\t829,\n\t\t95\n\t],\n\t\"./prism-django.min.js\": [\n\t\t829,\n\t\t95\n\t],\n\t\"./prism-dns-zone-file\": [\n\t\t830,\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.js\": [\n\t\t830,\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.min\": [\n\t\t831,\n\t\t97\n\t],\n\t\"./prism-dns-zone-file.min.js\": [\n\t\t831,\n\t\t97\n\t],\n\t\"./prism-docker\": [\n\t\t832,\n\t\t98\n\t],\n\t\"./prism-docker.js\": [\n\t\t832,\n\t\t98\n\t],\n\t\"./prism-docker.min\": [\n\t\t833,\n\t\t99\n\t],\n\t\"./prism-docker.min.js\": [\n\t\t833,\n\t\t99\n\t],\n\t\"./prism-ebnf\": [\n\t\t834,\n\t\t100\n\t],\n\t\"./prism-ebnf.js\": [\n\t\t834,\n\t\t100\n\t],\n\t\"./prism-ebnf.min\": [\n\t\t835,\n\t\t101\n\t],\n\t\"./prism-ebnf.min.js\": [\n\t\t835,\n\t\t101\n\t],\n\t\"./prism-editorconfig\": [\n\t\t836,\n\t\t102\n\t],\n\t\"./prism-editorconfig.js\": [\n\t\t836,\n\t\t102\n\t],\n\t\"./prism-editorconfig.min\": [\n\t\t837,\n\t\t103\n\t],\n\t\"./prism-editorconfig.min.js\": [\n\t\t837,\n\t\t103\n\t],\n\t\"./prism-eiffel\": [\n\t\t838,\n\t\t104\n\t],\n\t\"./prism-eiffel.js\": [\n\t\t838,\n\t\t104\n\t],\n\t\"./prism-eiffel.min\": [\n\t\t839,\n\t\t105\n\t],\n\t\"./prism-eiffel.min.js\": [\n\t\t839,\n\t\t105\n\t],\n\t\"./prism-ejs\": [\n\t\t840,\n\t\t106\n\t],\n\t\"./prism-ejs.js\": [\n\t\t840,\n\t\t106\n\t],\n\t\"./prism-ejs.min\": [\n\t\t841,\n\t\t107\n\t],\n\t\"./prism-ejs.min.js\": [\n\t\t841,\n\t\t107\n\t],\n\t\"./prism-elixir\": [\n\t\t842,\n\t\t108\n\t],\n\t\"./prism-elixir.js\": [\n\t\t842,\n\t\t108\n\t],\n\t\"./prism-elixir.min\": [\n\t\t843,\n\t\t109\n\t],\n\t\"./prism-elixir.min.js\": [\n\t\t843,\n\t\t109\n\t],\n\t\"./prism-elm\": [\n\t\t844,\n\t\t110\n\t],\n\t\"./prism-elm.js\": [\n\t\t844,\n\t\t110\n\t],\n\t\"./prism-elm.min\": [\n\t\t845,\n\t\t111\n\t],\n\t\"./prism-elm.min.js\": [\n\t\t845,\n\t\t111\n\t],\n\t\"./prism-erb\": [\n\t\t846,\n\t\t112\n\t],\n\t\"./prism-erb.js\": [\n\t\t846,\n\t\t112\n\t],\n\t\"./prism-erb.min\": [\n\t\t847,\n\t\t113\n\t],\n\t\"./prism-erb.min.js\": [\n\t\t847,\n\t\t113\n\t],\n\t\"./prism-erlang\": [\n\t\t848,\n\t\t114\n\t],\n\t\"./prism-erlang.js\": [\n\t\t848,\n\t\t114\n\t],\n\t\"./prism-erlang.min\": [\n\t\t849,\n\t\t115\n\t],\n\t\"./prism-erlang.min.js\": [\n\t\t849,\n\t\t115\n\t],\n\t\"./prism-etlua\": [\n\t\t850,\n\t\t116\n\t],\n\t\"./prism-etlua.js\": [\n\t\t850,\n\t\t116\n\t],\n\t\"./prism-etlua.min\": [\n\t\t851,\n\t\t117\n\t],\n\t\"./prism-etlua.min.js\": [\n\t\t851,\n\t\t117\n\t],\n\t\"./prism-excel-formula\": [\n\t\t852,\n\t\t118\n\t],\n\t\"./prism-excel-formula.js\": [\n\t\t852,\n\t\t118\n\t],\n\t\"./prism-excel-formula.min\": [\n\t\t853,\n\t\t119\n\t],\n\t\"./prism-excel-formula.min.js\": [\n\t\t853,\n\t\t119\n\t],\n\t\"./prism-factor\": [\n\t\t854,\n\t\t120\n\t],\n\t\"./prism-factor.js\": [\n\t\t854,\n\t\t120\n\t],\n\t\"./prism-factor.min\": [\n\t\t855,\n\t\t121\n\t],\n\t\"./prism-factor.min.js\": [\n\t\t855,\n\t\t121\n\t],\n\t\"./prism-firestore-security-rules\": [\n\t\t856,\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.js\": [\n\t\t856,\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.min\": [\n\t\t857,\n\t\t123\n\t],\n\t\"./prism-firestore-security-rules.min.js\": [\n\t\t857,\n\t\t123\n\t],\n\t\"./prism-flow\": [\n\t\t858,\n\t\t124\n\t],\n\t\"./prism-flow.js\": [\n\t\t858,\n\t\t124\n\t],\n\t\"./prism-flow.min\": [\n\t\t859,\n\t\t125\n\t],\n\t\"./prism-flow.min.js\": [\n\t\t859,\n\t\t125\n\t],\n\t\"./prism-fortran\": [\n\t\t860,\n\t\t126\n\t],\n\t\"./prism-fortran.js\": [\n\t\t860,\n\t\t126\n\t],\n\t\"./prism-fortran.min\": [\n\t\t861,\n\t\t127\n\t],\n\t\"./prism-fortran.min.js\": [\n\t\t861,\n\t\t127\n\t],\n\t\"./prism-fsharp\": [\n\t\t862,\n\t\t128\n\t],\n\t\"./prism-fsharp.js\": [\n\t\t862,\n\t\t128\n\t],\n\t\"./prism-fsharp.min\": [\n\t\t863,\n\t\t129\n\t],\n\t\"./prism-fsharp.min.js\": [\n\t\t863,\n\t\t129\n\t],\n\t\"./prism-ftl\": [\n\t\t864,\n\t\t130\n\t],\n\t\"./prism-ftl.js\": [\n\t\t864,\n\t\t130\n\t],\n\t\"./prism-ftl.min\": [\n\t\t865,\n\t\t131\n\t],\n\t\"./prism-ftl.min.js\": [\n\t\t865,\n\t\t131\n\t],\n\t\"./prism-gcode\": [\n\t\t866,\n\t\t132\n\t],\n\t\"./prism-gcode.js\": [\n\t\t866,\n\t\t132\n\t],\n\t\"./prism-gcode.min\": [\n\t\t867,\n\t\t133\n\t],\n\t\"./prism-gcode.min.js\": [\n\t\t867,\n\t\t133\n\t],\n\t\"./prism-gdscript\": [\n\t\t868,\n\t\t134\n\t],\n\t\"./prism-gdscript.js\": [\n\t\t868,\n\t\t134\n\t],\n\t\"./prism-gdscript.min\": [\n\t\t869,\n\t\t135\n\t],\n\t\"./prism-gdscript.min.js\": [\n\t\t869,\n\t\t135\n\t],\n\t\"./prism-gedcom\": [\n\t\t870,\n\t\t136\n\t],\n\t\"./prism-gedcom.js\": [\n\t\t870,\n\t\t136\n\t],\n\t\"./prism-gedcom.min\": [\n\t\t871,\n\t\t137\n\t],\n\t\"./prism-gedcom.min.js\": [\n\t\t871,\n\t\t137\n\t],\n\t\"./prism-gherkin\": [\n\t\t872,\n\t\t138\n\t],\n\t\"./prism-gherkin.js\": [\n\t\t872,\n\t\t138\n\t],\n\t\"./prism-gherkin.min\": [\n\t\t873,\n\t\t139\n\t],\n\t\"./prism-gherkin.min.js\": [\n\t\t873,\n\t\t139\n\t],\n\t\"./prism-git\": [\n\t\t874,\n\t\t140\n\t],\n\t\"./prism-git.js\": [\n\t\t874,\n\t\t140\n\t],\n\t\"./prism-git.min\": [\n\t\t875,\n\t\t141\n\t],\n\t\"./prism-git.min.js\": [\n\t\t875,\n\t\t141\n\t],\n\t\"./prism-glsl\": [\n\t\t876,\n\t\t142\n\t],\n\t\"./prism-glsl.js\": [\n\t\t876,\n\t\t142\n\t],\n\t\"./prism-glsl.min\": [\n\t\t877,\n\t\t143\n\t],\n\t\"./prism-glsl.min.js\": [\n\t\t877,\n\t\t143\n\t],\n\t\"./prism-gml\": [\n\t\t878,\n\t\t144\n\t],\n\t\"./prism-gml.js\": [\n\t\t878,\n\t\t144\n\t],\n\t\"./prism-gml.min\": [\n\t\t879,\n\t\t145\n\t],\n\t\"./prism-gml.min.js\": [\n\t\t879,\n\t\t145\n\t],\n\t\"./prism-go\": [\n\t\t880,\n\t\t146\n\t],\n\t\"./prism-go.js\": [\n\t\t880,\n\t\t146\n\t],\n\t\"./prism-go.min\": [\n\t\t881,\n\t\t147\n\t],\n\t\"./prism-go.min.js\": [\n\t\t881,\n\t\t147\n\t],\n\t\"./prism-graphql\": [\n\t\t882,\n\t\t148\n\t],\n\t\"./prism-graphql.js\": [\n\t\t882,\n\t\t148\n\t],\n\t\"./prism-graphql.min\": [\n\t\t883,\n\t\t149\n\t],\n\t\"./prism-graphql.min.js\": [\n\t\t883,\n\t\t149\n\t],\n\t\"./prism-groovy\": [\n\t\t884,\n\t\t150\n\t],\n\t\"./prism-groovy.js\": [\n\t\t884,\n\t\t150\n\t],\n\t\"./prism-groovy.min\": [\n\t\t885,\n\t\t151\n\t],\n\t\"./prism-groovy.min.js\": [\n\t\t885,\n\t\t151\n\t],\n\t\"./prism-haml\": [\n\t\t886,\n\t\t152\n\t],\n\t\"./prism-haml.js\": [\n\t\t886,\n\t\t152\n\t],\n\t\"./prism-haml.min\": [\n\t\t887,\n\t\t153\n\t],\n\t\"./prism-haml.min.js\": [\n\t\t887,\n\t\t153\n\t],\n\t\"./prism-handlebars\": [\n\t\t888,\n\t\t154\n\t],\n\t\"./prism-handlebars.js\": [\n\t\t888,\n\t\t154\n\t],\n\t\"./prism-handlebars.min\": [\n\t\t889,\n\t\t155\n\t],\n\t\"./prism-handlebars.min.js\": [\n\t\t889,\n\t\t155\n\t],\n\t\"./prism-haskell\": [\n\t\t890,\n\t\t156\n\t],\n\t\"./prism-haskell.js\": [\n\t\t890,\n\t\t156\n\t],\n\t\"./prism-haskell.min\": [\n\t\t891,\n\t\t157\n\t],\n\t\"./prism-haskell.min.js\": [\n\t\t891,\n\t\t157\n\t],\n\t\"./prism-haxe\": [\n\t\t892,\n\t\t158\n\t],\n\t\"./prism-haxe.js\": [\n\t\t892,\n\t\t158\n\t],\n\t\"./prism-haxe.min\": [\n\t\t893,\n\t\t159\n\t],\n\t\"./prism-haxe.min.js\": [\n\t\t893,\n\t\t159\n\t],\n\t\"./prism-hcl\": [\n\t\t894,\n\t\t160\n\t],\n\t\"./prism-hcl.js\": [\n\t\t894,\n\t\t160\n\t],\n\t\"./prism-hcl.min\": [\n\t\t895,\n\t\t161\n\t],\n\t\"./prism-hcl.min.js\": [\n\t\t895,\n\t\t161\n\t],\n\t\"./prism-hlsl\": [\n\t\t896,\n\t\t162\n\t],\n\t\"./prism-hlsl.js\": [\n\t\t896,\n\t\t162\n\t],\n\t\"./prism-hlsl.min\": [\n\t\t897,\n\t\t163\n\t],\n\t\"./prism-hlsl.min.js\": [\n\t\t897,\n\t\t163\n\t],\n\t\"./prism-hpkp\": [\n\t\t898,\n\t\t164\n\t],\n\t\"./prism-hpkp.js\": [\n\t\t898,\n\t\t164\n\t],\n\t\"./prism-hpkp.min\": [\n\t\t899,\n\t\t165\n\t],\n\t\"./prism-hpkp.min.js\": [\n\t\t899,\n\t\t165\n\t],\n\t\"./prism-hsts\": [\n\t\t900,\n\t\t166\n\t],\n\t\"./prism-hsts.js\": [\n\t\t900,\n\t\t166\n\t],\n\t\"./prism-hsts.min\": [\n\t\t901,\n\t\t167\n\t],\n\t\"./prism-hsts.min.js\": [\n\t\t901,\n\t\t167\n\t],\n\t\"./prism-http\": [\n\t\t902,\n\t\t168\n\t],\n\t\"./prism-http.js\": [\n\t\t902,\n\t\t168\n\t],\n\t\"./prism-http.min\": [\n\t\t903,\n\t\t169\n\t],\n\t\"./prism-http.min.js\": [\n\t\t903,\n\t\t169\n\t],\n\t\"./prism-ichigojam\": [\n\t\t904,\n\t\t170\n\t],\n\t\"./prism-ichigojam.js\": [\n\t\t904,\n\t\t170\n\t],\n\t\"./prism-ichigojam.min\": [\n\t\t905,\n\t\t171\n\t],\n\t\"./prism-ichigojam.min.js\": [\n\t\t905,\n\t\t171\n\t],\n\t\"./prism-icon\": [\n\t\t906,\n\t\t172\n\t],\n\t\"./prism-icon.js\": [\n\t\t906,\n\t\t172\n\t],\n\t\"./prism-icon.min\": [\n\t\t907,\n\t\t173\n\t],\n\t\"./prism-icon.min.js\": [\n\t\t907,\n\t\t173\n\t],\n\t\"./prism-iecst\": [\n\t\t908,\n\t\t174\n\t],\n\t\"./prism-iecst.js\": [\n\t\t908,\n\t\t174\n\t],\n\t\"./prism-iecst.min\": [\n\t\t909,\n\t\t175\n\t],\n\t\"./prism-iecst.min.js\": [\n\t\t909,\n\t\t175\n\t],\n\t\"./prism-ignore\": [\n\t\t910,\n\t\t176\n\t],\n\t\"./prism-ignore.js\": [\n\t\t910,\n\t\t176\n\t],\n\t\"./prism-ignore.min\": [\n\t\t911,\n\t\t177\n\t],\n\t\"./prism-ignore.min.js\": [\n\t\t911,\n\t\t177\n\t],\n\t\"./prism-inform7\": [\n\t\t912,\n\t\t178\n\t],\n\t\"./prism-inform7.js\": [\n\t\t912,\n\t\t178\n\t],\n\t\"./prism-inform7.min\": [\n\t\t913,\n\t\t179\n\t],\n\t\"./prism-inform7.min.js\": [\n\t\t913,\n\t\t179\n\t],\n\t\"./prism-ini\": [\n\t\t914,\n\t\t180\n\t],\n\t\"./prism-ini.js\": [\n\t\t914,\n\t\t180\n\t],\n\t\"./prism-ini.min\": [\n\t\t915,\n\t\t181\n\t],\n\t\"./prism-ini.min.js\": [\n\t\t915,\n\t\t181\n\t],\n\t\"./prism-io\": [\n\t\t916,\n\t\t182\n\t],\n\t\"./prism-io.js\": [\n\t\t916,\n\t\t182\n\t],\n\t\"./prism-io.min\": [\n\t\t917,\n\t\t183\n\t],\n\t\"./prism-io.min.js\": [\n\t\t917,\n\t\t183\n\t],\n\t\"./prism-j\": [\n\t\t918,\n\t\t184\n\t],\n\t\"./prism-j.js\": [\n\t\t918,\n\t\t184\n\t],\n\t\"./prism-j.min\": [\n\t\t919,\n\t\t185\n\t],\n\t\"./prism-j.min.js\": [\n\t\t919,\n\t\t185\n\t],\n\t\"./prism-java\": [\n\t\t920,\n\t\t186\n\t],\n\t\"./prism-java.js\": [\n\t\t920,\n\t\t186\n\t],\n\t\"./prism-java.min\": [\n\t\t921,\n\t\t187\n\t],\n\t\"./prism-java.min.js\": [\n\t\t921,\n\t\t187\n\t],\n\t\"./prism-javadoc\": [\n\t\t922,\n\t\t188\n\t],\n\t\"./prism-javadoc.js\": [\n\t\t922,\n\t\t188\n\t],\n\t\"./prism-javadoc.min\": [\n\t\t923,\n\t\t189\n\t],\n\t\"./prism-javadoc.min.js\": [\n\t\t923,\n\t\t189\n\t],\n\t\"./prism-javadoclike\": [\n\t\t924,\n\t\t190\n\t],\n\t\"./prism-javadoclike.js\": [\n\t\t924,\n\t\t190\n\t],\n\t\"./prism-javadoclike.min\": [\n\t\t925,\n\t\t191\n\t],\n\t\"./prism-javadoclike.min.js\": [\n\t\t925,\n\t\t191\n\t],\n\t\"./prism-javascript\": [\n\t\t926,\n\t\t192\n\t],\n\t\"./prism-javascript.js\": [\n\t\t926,\n\t\t192\n\t],\n\t\"./prism-javascript.min\": [\n\t\t927,\n\t\t193\n\t],\n\t\"./prism-javascript.min.js\": [\n\t\t927,\n\t\t193\n\t],\n\t\"./prism-javastacktrace\": [\n\t\t928,\n\t\t194\n\t],\n\t\"./prism-javastacktrace.js\": [\n\t\t928,\n\t\t194\n\t],\n\t\"./prism-javastacktrace.min\": [\n\t\t929,\n\t\t195\n\t],\n\t\"./prism-javastacktrace.min.js\": [\n\t\t929,\n\t\t195\n\t],\n\t\"./prism-jolie\": [\n\t\t930,\n\t\t196\n\t],\n\t\"./prism-jolie.js\": [\n\t\t930,\n\t\t196\n\t],\n\t\"./prism-jolie.min\": [\n\t\t931,\n\t\t197\n\t],\n\t\"./prism-jolie.min.js\": [\n\t\t931,\n\t\t197\n\t],\n\t\"./prism-jq\": [\n\t\t932,\n\t\t198\n\t],\n\t\"./prism-jq.js\": [\n\t\t932,\n\t\t198\n\t],\n\t\"./prism-jq.min\": [\n\t\t933,\n\t\t199\n\t],\n\t\"./prism-jq.min.js\": [\n\t\t933,\n\t\t199\n\t],\n\t\"./prism-js-extras\": [\n\t\t934,\n\t\t200\n\t],\n\t\"./prism-js-extras.js\": [\n\t\t934,\n\t\t200\n\t],\n\t\"./prism-js-extras.min\": [\n\t\t935,\n\t\t201\n\t],\n\t\"./prism-js-extras.min.js\": [\n\t\t935,\n\t\t201\n\t],\n\t\"./prism-js-templates\": [\n\t\t936,\n\t\t202\n\t],\n\t\"./prism-js-templates.js\": [\n\t\t936,\n\t\t202\n\t],\n\t\"./prism-js-templates.min\": [\n\t\t937,\n\t\t203\n\t],\n\t\"./prism-js-templates.min.js\": [\n\t\t937,\n\t\t203\n\t],\n\t\"./prism-jsdoc\": [\n\t\t938,\n\t\t204\n\t],\n\t\"./prism-jsdoc.js\": [\n\t\t938,\n\t\t204\n\t],\n\t\"./prism-jsdoc.min\": [\n\t\t939,\n\t\t205\n\t],\n\t\"./prism-jsdoc.min.js\": [\n\t\t939,\n\t\t205\n\t],\n\t\"./prism-json\": [\n\t\t940,\n\t\t206\n\t],\n\t\"./prism-json.js\": [\n\t\t940,\n\t\t206\n\t],\n\t\"./prism-json.min\": [\n\t\t941,\n\t\t207\n\t],\n\t\"./prism-json.min.js\": [\n\t\t941,\n\t\t207\n\t],\n\t\"./prism-json5\": [\n\t\t942,\n\t\t208\n\t],\n\t\"./prism-json5.js\": [\n\t\t942,\n\t\t208\n\t],\n\t\"./prism-json5.min\": [\n\t\t943,\n\t\t209\n\t],\n\t\"./prism-json5.min.js\": [\n\t\t943,\n\t\t209\n\t],\n\t\"./prism-jsonp\": [\n\t\t944,\n\t\t210\n\t],\n\t\"./prism-jsonp.js\": [\n\t\t944,\n\t\t210\n\t],\n\t\"./prism-jsonp.min\": [\n\t\t945,\n\t\t211\n\t],\n\t\"./prism-jsonp.min.js\": [\n\t\t945,\n\t\t211\n\t],\n\t\"./prism-jsstacktrace\": [\n\t\t946,\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.js\": [\n\t\t946,\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.min\": [\n\t\t947,\n\t\t213\n\t],\n\t\"./prism-jsstacktrace.min.js\": [\n\t\t947,\n\t\t213\n\t],\n\t\"./prism-jsx\": [\n\t\t948,\n\t\t214\n\t],\n\t\"./prism-jsx.js\": [\n\t\t948,\n\t\t214\n\t],\n\t\"./prism-jsx.min\": [\n\t\t949,\n\t\t215\n\t],\n\t\"./prism-jsx.min.js\": [\n\t\t949,\n\t\t215\n\t],\n\t\"./prism-julia\": [\n\t\t950,\n\t\t216\n\t],\n\t\"./prism-julia.js\": [\n\t\t950,\n\t\t216\n\t],\n\t\"./prism-julia.min\": [\n\t\t951,\n\t\t217\n\t],\n\t\"./prism-julia.min.js\": [\n\t\t951,\n\t\t217\n\t],\n\t\"./prism-keyman\": [\n\t\t952,\n\t\t218\n\t],\n\t\"./prism-keyman.js\": [\n\t\t952,\n\t\t218\n\t],\n\t\"./prism-keyman.min\": [\n\t\t953,\n\t\t219\n\t],\n\t\"./prism-keyman.min.js\": [\n\t\t953,\n\t\t219\n\t],\n\t\"./prism-kotlin\": [\n\t\t954,\n\t\t220\n\t],\n\t\"./prism-kotlin.js\": [\n\t\t954,\n\t\t220\n\t],\n\t\"./prism-kotlin.min\": [\n\t\t955,\n\t\t221\n\t],\n\t\"./prism-kotlin.min.js\": [\n\t\t955,\n\t\t221\n\t],\n\t\"./prism-latex\": [\n\t\t956,\n\t\t222\n\t],\n\t\"./prism-latex.js\": [\n\t\t956,\n\t\t222\n\t],\n\t\"./prism-latex.min\": [\n\t\t957,\n\t\t223\n\t],\n\t\"./prism-latex.min.js\": [\n\t\t957,\n\t\t223\n\t],\n\t\"./prism-latte\": [\n\t\t958,\n\t\t224\n\t],\n\t\"./prism-latte.js\": [\n\t\t958,\n\t\t224\n\t],\n\t\"./prism-latte.min\": [\n\t\t959,\n\t\t225\n\t],\n\t\"./prism-latte.min.js\": [\n\t\t959,\n\t\t225\n\t],\n\t\"./prism-less\": [\n\t\t960,\n\t\t226\n\t],\n\t\"./prism-less.js\": [\n\t\t960,\n\t\t226\n\t],\n\t\"./prism-less.min\": [\n\t\t961,\n\t\t227\n\t],\n\t\"./prism-less.min.js\": [\n\t\t961,\n\t\t227\n\t],\n\t\"./prism-lilypond\": [\n\t\t962,\n\t\t228\n\t],\n\t\"./prism-lilypond.js\": [\n\t\t962,\n\t\t228\n\t],\n\t\"./prism-lilypond.min\": [\n\t\t963,\n\t\t229\n\t],\n\t\"./prism-lilypond.min.js\": [\n\t\t963,\n\t\t229\n\t],\n\t\"./prism-liquid\": [\n\t\t964,\n\t\t230\n\t],\n\t\"./prism-liquid.js\": [\n\t\t964,\n\t\t230\n\t],\n\t\"./prism-liquid.min\": [\n\t\t965,\n\t\t231\n\t],\n\t\"./prism-liquid.min.js\": [\n\t\t965,\n\t\t231\n\t],\n\t\"./prism-lisp\": [\n\t\t966,\n\t\t232\n\t],\n\t\"./prism-lisp.js\": [\n\t\t966,\n\t\t232\n\t],\n\t\"./prism-lisp.min\": [\n\t\t967,\n\t\t233\n\t],\n\t\"./prism-lisp.min.js\": [\n\t\t967,\n\t\t233\n\t],\n\t\"./prism-livescript\": [\n\t\t968,\n\t\t234\n\t],\n\t\"./prism-livescript.js\": [\n\t\t968,\n\t\t234\n\t],\n\t\"./prism-livescript.min\": [\n\t\t969,\n\t\t235\n\t],\n\t\"./prism-livescript.min.js\": [\n\t\t969,\n\t\t235\n\t],\n\t\"./prism-llvm\": [\n\t\t970,\n\t\t236\n\t],\n\t\"./prism-llvm.js\": [\n\t\t970,\n\t\t236\n\t],\n\t\"./prism-llvm.min\": [\n\t\t971,\n\t\t237\n\t],\n\t\"./prism-llvm.min.js\": [\n\t\t971,\n\t\t237\n\t],\n\t\"./prism-lolcode\": [\n\t\t972,\n\t\t238\n\t],\n\t\"./prism-lolcode.js\": [\n\t\t972,\n\t\t238\n\t],\n\t\"./prism-lolcode.min\": [\n\t\t973,\n\t\t239\n\t],\n\t\"./prism-lolcode.min.js\": [\n\t\t973,\n\t\t239\n\t],\n\t\"./prism-lua\": [\n\t\t974,\n\t\t240\n\t],\n\t\"./prism-lua.js\": [\n\t\t974,\n\t\t240\n\t],\n\t\"./prism-lua.min\": [\n\t\t975,\n\t\t241\n\t],\n\t\"./prism-lua.min.js\": [\n\t\t975,\n\t\t241\n\t],\n\t\"./prism-makefile\": [\n\t\t976,\n\t\t242\n\t],\n\t\"./prism-makefile.js\": [\n\t\t976,\n\t\t242\n\t],\n\t\"./prism-makefile.min\": [\n\t\t977,\n\t\t243\n\t],\n\t\"./prism-makefile.min.js\": [\n\t\t977,\n\t\t243\n\t],\n\t\"./prism-markdown\": [\n\t\t426\n\t],\n\t\"./prism-markdown.js\": [\n\t\t426\n\t],\n\t\"./prism-markdown.min\": [\n\t\t978,\n\t\t244\n\t],\n\t\"./prism-markdown.min.js\": [\n\t\t978,\n\t\t244\n\t],\n\t\"./prism-markup\": [\n\t\t420\n\t],\n\t\"./prism-markup-templating\": [\n\t\t979,\n\t\t245\n\t],\n\t\"./prism-markup-templating.js\": [\n\t\t979,\n\t\t245\n\t],\n\t\"./prism-markup-templating.min\": [\n\t\t980,\n\t\t246\n\t],\n\t\"./prism-markup-templating.min.js\": [\n\t\t980,\n\t\t246\n\t],\n\t\"./prism-markup.js\": [\n\t\t420\n\t],\n\t\"./prism-markup.min\": [\n\t\t981,\n\t\t247\n\t],\n\t\"./prism-markup.min.js\": [\n\t\t981,\n\t\t247\n\t],\n\t\"./prism-matlab\": [\n\t\t982,\n\t\t248\n\t],\n\t\"./prism-matlab.js\": [\n\t\t982,\n\t\t248\n\t],\n\t\"./prism-matlab.min\": [\n\t\t983,\n\t\t249\n\t],\n\t\"./prism-matlab.min.js\": [\n\t\t983,\n\t\t249\n\t],\n\t\"./prism-mel\": [\n\t\t984,\n\t\t250\n\t],\n\t\"./prism-mel.js\": [\n\t\t984,\n\t\t250\n\t],\n\t\"./prism-mel.min\": [\n\t\t985,\n\t\t251\n\t],\n\t\"./prism-mel.min.js\": [\n\t\t985,\n\t\t251\n\t],\n\t\"./prism-mizar\": [\n\t\t986,\n\t\t252\n\t],\n\t\"./prism-mizar.js\": [\n\t\t986,\n\t\t252\n\t],\n\t\"./prism-mizar.min\": [\n\t\t987,\n\t\t253\n\t],\n\t\"./prism-mizar.min.js\": [\n\t\t987,\n\t\t253\n\t],\n\t\"./prism-monkey\": [\n\t\t988,\n\t\t254\n\t],\n\t\"./prism-monkey.js\": [\n\t\t988,\n\t\t254\n\t],\n\t\"./prism-monkey.min\": [\n\t\t989,\n\t\t255\n\t],\n\t\"./prism-monkey.min.js\": [\n\t\t989,\n\t\t255\n\t],\n\t\"./prism-moonscript\": [\n\t\t990,\n\t\t256\n\t],\n\t\"./prism-moonscript.js\": [\n\t\t990,\n\t\t256\n\t],\n\t\"./prism-moonscript.min\": [\n\t\t991,\n\t\t257\n\t],\n\t\"./prism-moonscript.min.js\": [\n\t\t991,\n\t\t257\n\t],\n\t\"./prism-n1ql\": [\n\t\t992,\n\t\t258\n\t],\n\t\"./prism-n1ql.js\": [\n\t\t992,\n\t\t258\n\t],\n\t\"./prism-n1ql.min\": [\n\t\t993,\n\t\t259\n\t],\n\t\"./prism-n1ql.min.js\": [\n\t\t993,\n\t\t259\n\t],\n\t\"./prism-n4js\": [\n\t\t994,\n\t\t260\n\t],\n\t\"./prism-n4js.js\": [\n\t\t994,\n\t\t260\n\t],\n\t\"./prism-n4js.min\": [\n\t\t995,\n\t\t261\n\t],\n\t\"./prism-n4js.min.js\": [\n\t\t995,\n\t\t261\n\t],\n\t\"./prism-nand2tetris-hdl\": [\n\t\t996,\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.js\": [\n\t\t996,\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.min\": [\n\t\t997,\n\t\t263\n\t],\n\t\"./prism-nand2tetris-hdl.min.js\": [\n\t\t997,\n\t\t263\n\t],\n\t\"./prism-nasm\": [\n\t\t998,\n\t\t264\n\t],\n\t\"./prism-nasm.js\": [\n\t\t998,\n\t\t264\n\t],\n\t\"./prism-nasm.min\": [\n\t\t999,\n\t\t265\n\t],\n\t\"./prism-nasm.min.js\": [\n\t\t999,\n\t\t265\n\t],\n\t\"./prism-neon\": [\n\t\t1000,\n\t\t266\n\t],\n\t\"./prism-neon.js\": [\n\t\t1000,\n\t\t266\n\t],\n\t\"./prism-neon.min\": [\n\t\t1001,\n\t\t267\n\t],\n\t\"./prism-neon.min.js\": [\n\t\t1001,\n\t\t267\n\t],\n\t\"./prism-nginx\": [\n\t\t1002,\n\t\t268\n\t],\n\t\"./prism-nginx.js\": [\n\t\t1002,\n\t\t268\n\t],\n\t\"./prism-nginx.min\": [\n\t\t1003,\n\t\t269\n\t],\n\t\"./prism-nginx.min.js\": [\n\t\t1003,\n\t\t269\n\t],\n\t\"./prism-nim\": [\n\t\t1004,\n\t\t270\n\t],\n\t\"./prism-nim.js\": [\n\t\t1004,\n\t\t270\n\t],\n\t\"./prism-nim.min\": [\n\t\t1005,\n\t\t271\n\t],\n\t\"./prism-nim.min.js\": [\n\t\t1005,\n\t\t271\n\t],\n\t\"./prism-nix\": [\n\t\t1006,\n\t\t272\n\t],\n\t\"./prism-nix.js\": [\n\t\t1006,\n\t\t272\n\t],\n\t\"./prism-nix.min\": [\n\t\t1007,\n\t\t273\n\t],\n\t\"./prism-nix.min.js\": [\n\t\t1007,\n\t\t273\n\t],\n\t\"./prism-nsis\": [\n\t\t1008,\n\t\t274\n\t],\n\t\"./prism-nsis.js\": [\n\t\t1008,\n\t\t274\n\t],\n\t\"./prism-nsis.min\": [\n\t\t1009,\n\t\t275\n\t],\n\t\"./prism-nsis.min.js\": [\n\t\t1009,\n\t\t275\n\t],\n\t\"./prism-objectivec\": [\n\t\t1010,\n\t\t276\n\t],\n\t\"./prism-objectivec.js\": [\n\t\t1010,\n\t\t276\n\t],\n\t\"./prism-objectivec.min\": [\n\t\t1011,\n\t\t277\n\t],\n\t\"./prism-objectivec.min.js\": [\n\t\t1011,\n\t\t277\n\t],\n\t\"./prism-ocaml\": [\n\t\t1012,\n\t\t278\n\t],\n\t\"./prism-ocaml.js\": [\n\t\t1012,\n\t\t278\n\t],\n\t\"./prism-ocaml.min\": [\n\t\t1013,\n\t\t279\n\t],\n\t\"./prism-ocaml.min.js\": [\n\t\t1013,\n\t\t279\n\t],\n\t\"./prism-opencl\": [\n\t\t1014,\n\t\t280\n\t],\n\t\"./prism-opencl.js\": [\n\t\t1014,\n\t\t280\n\t],\n\t\"./prism-opencl.min\": [\n\t\t1015,\n\t\t281\n\t],\n\t\"./prism-opencl.min.js\": [\n\t\t1015,\n\t\t281\n\t],\n\t\"./prism-oz\": [\n\t\t1016,\n\t\t282\n\t],\n\t\"./prism-oz.js\": [\n\t\t1016,\n\t\t282\n\t],\n\t\"./prism-oz.min\": [\n\t\t1017,\n\t\t283\n\t],\n\t\"./prism-oz.min.js\": [\n\t\t1017,\n\t\t283\n\t],\n\t\"./prism-parigp\": [\n\t\t1018,\n\t\t284\n\t],\n\t\"./prism-parigp.js\": [\n\t\t1018,\n\t\t284\n\t],\n\t\"./prism-parigp.min\": [\n\t\t1019,\n\t\t285\n\t],\n\t\"./prism-parigp.min.js\": [\n\t\t1019,\n\t\t285\n\t],\n\t\"./prism-parser\": [\n\t\t1020,\n\t\t286\n\t],\n\t\"./prism-parser.js\": [\n\t\t1020,\n\t\t286\n\t],\n\t\"./prism-parser.min\": [\n\t\t1021,\n\t\t287\n\t],\n\t\"./prism-parser.min.js\": [\n\t\t1021,\n\t\t287\n\t],\n\t\"./prism-pascal\": [\n\t\t1022,\n\t\t288\n\t],\n\t\"./prism-pascal.js\": [\n\t\t1022,\n\t\t288\n\t],\n\t\"./prism-pascal.min\": [\n\t\t1023,\n\t\t289\n\t],\n\t\"./prism-pascal.min.js\": [\n\t\t1023,\n\t\t289\n\t],\n\t\"./prism-pascaligo\": [\n\t\t1024,\n\t\t290\n\t],\n\t\"./prism-pascaligo.js\": [\n\t\t1024,\n\t\t290\n\t],\n\t\"./prism-pascaligo.min\": [\n\t\t1025,\n\t\t291\n\t],\n\t\"./prism-pascaligo.min.js\": [\n\t\t1025,\n\t\t291\n\t],\n\t\"./prism-pcaxis\": [\n\t\t1026,\n\t\t292\n\t],\n\t\"./prism-pcaxis.js\": [\n\t\t1026,\n\t\t292\n\t],\n\t\"./prism-pcaxis.min\": [\n\t\t1027,\n\t\t293\n\t],\n\t\"./prism-pcaxis.min.js\": [\n\t\t1027,\n\t\t293\n\t],\n\t\"./prism-peoplecode\": [\n\t\t1028,\n\t\t294\n\t],\n\t\"./prism-peoplecode.js\": [\n\t\t1028,\n\t\t294\n\t],\n\t\"./prism-peoplecode.min\": [\n\t\t1029,\n\t\t295\n\t],\n\t\"./prism-peoplecode.min.js\": [\n\t\t1029,\n\t\t295\n\t],\n\t\"./prism-perl\": [\n\t\t1030,\n\t\t296\n\t],\n\t\"./prism-perl.js\": [\n\t\t1030,\n\t\t296\n\t],\n\t\"./prism-perl.min\": [\n\t\t1031,\n\t\t297\n\t],\n\t\"./prism-perl.min.js\": [\n\t\t1031,\n\t\t297\n\t],\n\t\"./prism-php\": [\n\t\t1034,\n\t\t300\n\t],\n\t\"./prism-php-extras\": [\n\t\t1032,\n\t\t298\n\t],\n\t\"./prism-php-extras.js\": [\n\t\t1032,\n\t\t298\n\t],\n\t\"./prism-php-extras.min\": [\n\t\t1033,\n\t\t299\n\t],\n\t\"./prism-php-extras.min.js\": [\n\t\t1033,\n\t\t299\n\t],\n\t\"./prism-php.js\": [\n\t\t1034,\n\t\t300\n\t],\n\t\"./prism-php.min\": [\n\t\t1035,\n\t\t301\n\t],\n\t\"./prism-php.min.js\": [\n\t\t1035,\n\t\t301\n\t],\n\t\"./prism-phpdoc\": [\n\t\t1036,\n\t\t302\n\t],\n\t\"./prism-phpdoc.js\": [\n\t\t1036,\n\t\t302\n\t],\n\t\"./prism-phpdoc.min\": [\n\t\t1037,\n\t\t303\n\t],\n\t\"./prism-phpdoc.min.js\": [\n\t\t1037,\n\t\t303\n\t],\n\t\"./prism-plsql\": [\n\t\t1038,\n\t\t304\n\t],\n\t\"./prism-plsql.js\": [\n\t\t1038,\n\t\t304\n\t],\n\t\"./prism-plsql.min\": [\n\t\t1039,\n\t\t305\n\t],\n\t\"./prism-plsql.min.js\": [\n\t\t1039,\n\t\t305\n\t],\n\t\"./prism-powerquery\": [\n\t\t1040,\n\t\t306\n\t],\n\t\"./prism-powerquery.js\": [\n\t\t1040,\n\t\t306\n\t],\n\t\"./prism-powerquery.min\": [\n\t\t1041,\n\t\t307\n\t],\n\t\"./prism-powerquery.min.js\": [\n\t\t1041,\n\t\t307\n\t],\n\t\"./prism-powershell\": [\n\t\t1042,\n\t\t308\n\t],\n\t\"./prism-powershell.js\": [\n\t\t1042,\n\t\t308\n\t],\n\t\"./prism-powershell.min\": [\n\t\t1043,\n\t\t309\n\t],\n\t\"./prism-powershell.min.js\": [\n\t\t1043,\n\t\t309\n\t],\n\t\"./prism-processing\": [\n\t\t1044,\n\t\t310\n\t],\n\t\"./prism-processing.js\": [\n\t\t1044,\n\t\t310\n\t],\n\t\"./prism-processing.min\": [\n\t\t1045,\n\t\t311\n\t],\n\t\"./prism-processing.min.js\": [\n\t\t1045,\n\t\t311\n\t],\n\t\"./prism-prolog\": [\n\t\t1046,\n\t\t312\n\t],\n\t\"./prism-prolog.js\": [\n\t\t1046,\n\t\t312\n\t],\n\t\"./prism-prolog.min\": [\n\t\t1047,\n\t\t313\n\t],\n\t\"./prism-prolog.min.js\": [\n\t\t1047,\n\t\t313\n\t],\n\t\"./prism-properties\": [\n\t\t1048,\n\t\t314\n\t],\n\t\"./prism-properties.js\": [\n\t\t1048,\n\t\t314\n\t],\n\t\"./prism-properties.min\": [\n\t\t1049,\n\t\t315\n\t],\n\t\"./prism-properties.min.js\": [\n\t\t1049,\n\t\t315\n\t],\n\t\"./prism-protobuf\": [\n\t\t1050,\n\t\t316\n\t],\n\t\"./prism-protobuf.js\": [\n\t\t1050,\n\t\t316\n\t],\n\t\"./prism-protobuf.min\": [\n\t\t1051,\n\t\t317\n\t],\n\t\"./prism-protobuf.min.js\": [\n\t\t1051,\n\t\t317\n\t],\n\t\"./prism-pug\": [\n\t\t1052,\n\t\t318\n\t],\n\t\"./prism-pug.js\": [\n\t\t1052,\n\t\t318\n\t],\n\t\"./prism-pug.min\": [\n\t\t1053,\n\t\t319\n\t],\n\t\"./prism-pug.min.js\": [\n\t\t1053,\n\t\t319\n\t],\n\t\"./prism-puppet\": [\n\t\t1054,\n\t\t320\n\t],\n\t\"./prism-puppet.js\": [\n\t\t1054,\n\t\t320\n\t],\n\t\"./prism-puppet.min\": [\n\t\t1055,\n\t\t321\n\t],\n\t\"./prism-puppet.min.js\": [\n\t\t1055,\n\t\t321\n\t],\n\t\"./prism-pure\": [\n\t\t1056,\n\t\t322\n\t],\n\t\"./prism-pure.js\": [\n\t\t1056,\n\t\t322\n\t],\n\t\"./prism-pure.min\": [\n\t\t1057,\n\t\t323\n\t],\n\t\"./prism-pure.min.js\": [\n\t\t1057,\n\t\t323\n\t],\n\t\"./prism-purebasic\": [\n\t\t1058,\n\t\t324\n\t],\n\t\"./prism-purebasic.js\": [\n\t\t1058,\n\t\t324\n\t],\n\t\"./prism-purebasic.min\": [\n\t\t1059,\n\t\t325\n\t],\n\t\"./prism-purebasic.min.js\": [\n\t\t1059,\n\t\t325\n\t],\n\t\"./prism-python\": [\n\t\t1060,\n\t\t326\n\t],\n\t\"./prism-python.js\": [\n\t\t1060,\n\t\t326\n\t],\n\t\"./prism-python.min\": [\n\t\t1061,\n\t\t327\n\t],\n\t\"./prism-python.min.js\": [\n\t\t1061,\n\t\t327\n\t],\n\t\"./prism-q\": [\n\t\t1062,\n\t\t328\n\t],\n\t\"./prism-q.js\": [\n\t\t1062,\n\t\t328\n\t],\n\t\"./prism-q.min\": [\n\t\t1063,\n\t\t329\n\t],\n\t\"./prism-q.min.js\": [\n\t\t1063,\n\t\t329\n\t],\n\t\"./prism-qml\": [\n\t\t1064,\n\t\t330\n\t],\n\t\"./prism-qml.js\": [\n\t\t1064,\n\t\t330\n\t],\n\t\"./prism-qml.min\": [\n\t\t1065,\n\t\t331\n\t],\n\t\"./prism-qml.min.js\": [\n\t\t1065,\n\t\t331\n\t],\n\t\"./prism-qore\": [\n\t\t1066,\n\t\t332\n\t],\n\t\"./prism-qore.js\": [\n\t\t1066,\n\t\t332\n\t],\n\t\"./prism-qore.min\": [\n\t\t1067,\n\t\t333\n\t],\n\t\"./prism-qore.min.js\": [\n\t\t1067,\n\t\t333\n\t],\n\t\"./prism-r\": [\n\t\t1068,\n\t\t334\n\t],\n\t\"./prism-r.js\": [\n\t\t1068,\n\t\t334\n\t],\n\t\"./prism-r.min\": [\n\t\t1069,\n\t\t335\n\t],\n\t\"./prism-r.min.js\": [\n\t\t1069,\n\t\t335\n\t],\n\t\"./prism-racket\": [\n\t\t1070,\n\t\t336\n\t],\n\t\"./prism-racket.js\": [\n\t\t1070,\n\t\t336\n\t],\n\t\"./prism-racket.min\": [\n\t\t1071,\n\t\t337\n\t],\n\t\"./prism-racket.min.js\": [\n\t\t1071,\n\t\t337\n\t],\n\t\"./prism-reason\": [\n\t\t1072,\n\t\t338\n\t],\n\t\"./prism-reason.js\": [\n\t\t1072,\n\t\t338\n\t],\n\t\"./prism-reason.min\": [\n\t\t1073,\n\t\t339\n\t],\n\t\"./prism-reason.min.js\": [\n\t\t1073,\n\t\t339\n\t],\n\t\"./prism-regex\": [\n\t\t1074,\n\t\t340\n\t],\n\t\"./prism-regex.js\": [\n\t\t1074,\n\t\t340\n\t],\n\t\"./prism-regex.min\": [\n\t\t1075,\n\t\t341\n\t],\n\t\"./prism-regex.min.js\": [\n\t\t1075,\n\t\t341\n\t],\n\t\"./prism-renpy\": [\n\t\t1076,\n\t\t342\n\t],\n\t\"./prism-renpy.js\": [\n\t\t1076,\n\t\t342\n\t],\n\t\"./prism-renpy.min\": [\n\t\t1077,\n\t\t343\n\t],\n\t\"./prism-renpy.min.js\": [\n\t\t1077,\n\t\t343\n\t],\n\t\"./prism-rest\": [\n\t\t1078,\n\t\t344\n\t],\n\t\"./prism-rest.js\": [\n\t\t1078,\n\t\t344\n\t],\n\t\"./prism-rest.min\": [\n\t\t1079,\n\t\t345\n\t],\n\t\"./prism-rest.min.js\": [\n\t\t1079,\n\t\t345\n\t],\n\t\"./prism-rip\": [\n\t\t1080,\n\t\t346\n\t],\n\t\"./prism-rip.js\": [\n\t\t1080,\n\t\t346\n\t],\n\t\"./prism-rip.min\": [\n\t\t1081,\n\t\t347\n\t],\n\t\"./prism-rip.min.js\": [\n\t\t1081,\n\t\t347\n\t],\n\t\"./prism-roboconf\": [\n\t\t1082,\n\t\t348\n\t],\n\t\"./prism-roboconf.js\": [\n\t\t1082,\n\t\t348\n\t],\n\t\"./prism-roboconf.min\": [\n\t\t1083,\n\t\t349\n\t],\n\t\"./prism-roboconf.min.js\": [\n\t\t1083,\n\t\t349\n\t],\n\t\"./prism-robotframework\": [\n\t\t1084,\n\t\t350\n\t],\n\t\"./prism-robotframework.js\": [\n\t\t1084,\n\t\t350\n\t],\n\t\"./prism-robotframework.min\": [\n\t\t1085,\n\t\t351\n\t],\n\t\"./prism-robotframework.min.js\": [\n\t\t1085,\n\t\t351\n\t],\n\t\"./prism-ruby\": [\n\t\t1086,\n\t\t352\n\t],\n\t\"./prism-ruby.js\": [\n\t\t1086,\n\t\t352\n\t],\n\t\"./prism-ruby.min\": [\n\t\t1087,\n\t\t353\n\t],\n\t\"./prism-ruby.min.js\": [\n\t\t1087,\n\t\t353\n\t],\n\t\"./prism-rust\": [\n\t\t1088,\n\t\t354\n\t],\n\t\"./prism-rust.js\": [\n\t\t1088,\n\t\t354\n\t],\n\t\"./prism-rust.min\": [\n\t\t1089,\n\t\t355\n\t],\n\t\"./prism-rust.min.js\": [\n\t\t1089,\n\t\t355\n\t],\n\t\"./prism-sas\": [\n\t\t1090,\n\t\t356\n\t],\n\t\"./prism-sas.js\": [\n\t\t1090,\n\t\t356\n\t],\n\t\"./prism-sas.min\": [\n\t\t1091,\n\t\t357\n\t],\n\t\"./prism-sas.min.js\": [\n\t\t1091,\n\t\t357\n\t],\n\t\"./prism-sass\": [\n\t\t1092,\n\t\t358\n\t],\n\t\"./prism-sass.js\": [\n\t\t1092,\n\t\t358\n\t],\n\t\"./prism-sass.min\": [\n\t\t1093,\n\t\t359\n\t],\n\t\"./prism-sass.min.js\": [\n\t\t1093,\n\t\t359\n\t],\n\t\"./prism-scala\": [\n\t\t1094,\n\t\t360\n\t],\n\t\"./prism-scala.js\": [\n\t\t1094,\n\t\t360\n\t],\n\t\"./prism-scala.min\": [\n\t\t1095,\n\t\t361\n\t],\n\t\"./prism-scala.min.js\": [\n\t\t1095,\n\t\t361\n\t],\n\t\"./prism-scheme\": [\n\t\t1096,\n\t\t362\n\t],\n\t\"./prism-scheme.js\": [\n\t\t1096,\n\t\t362\n\t],\n\t\"./prism-scheme.min\": [\n\t\t1097,\n\t\t363\n\t],\n\t\"./prism-scheme.min.js\": [\n\t\t1097,\n\t\t363\n\t],\n\t\"./prism-scss\": [\n\t\t1098,\n\t\t364\n\t],\n\t\"./prism-scss.js\": [\n\t\t1098,\n\t\t364\n\t],\n\t\"./prism-scss.min\": [\n\t\t1099,\n\t\t365\n\t],\n\t\"./prism-scss.min.js\": [\n\t\t1099,\n\t\t365\n\t],\n\t\"./prism-shell-session\": [\n\t\t1100,\n\t\t366\n\t],\n\t\"./prism-shell-session.js\": [\n\t\t1100,\n\t\t366\n\t],\n\t\"./prism-shell-session.min\": [\n\t\t1101,\n\t\t367\n\t],\n\t\"./prism-shell-session.min.js\": [\n\t\t1101,\n\t\t367\n\t],\n\t\"./prism-smali\": [\n\t\t1102,\n\t\t368\n\t],\n\t\"./prism-smali.js\": [\n\t\t1102,\n\t\t368\n\t],\n\t\"./prism-smali.min\": [\n\t\t1103,\n\t\t369\n\t],\n\t\"./prism-smali.min.js\": [\n\t\t1103,\n\t\t369\n\t],\n\t\"./prism-smalltalk\": [\n\t\t1104,\n\t\t370\n\t],\n\t\"./prism-smalltalk.js\": [\n\t\t1104,\n\t\t370\n\t],\n\t\"./prism-smalltalk.min\": [\n\t\t1105,\n\t\t371\n\t],\n\t\"./prism-smalltalk.min.js\": [\n\t\t1105,\n\t\t371\n\t],\n\t\"./prism-smarty\": [\n\t\t1106,\n\t\t372\n\t],\n\t\"./prism-smarty.js\": [\n\t\t1106,\n\t\t372\n\t],\n\t\"./prism-smarty.min\": [\n\t\t1107,\n\t\t373\n\t],\n\t\"./prism-smarty.min.js\": [\n\t\t1107,\n\t\t373\n\t],\n\t\"./prism-solidity\": [\n\t\t1108,\n\t\t374\n\t],\n\t\"./prism-solidity.js\": [\n\t\t1108,\n\t\t374\n\t],\n\t\"./prism-solidity.min\": [\n\t\t1109,\n\t\t375\n\t],\n\t\"./prism-solidity.min.js\": [\n\t\t1109,\n\t\t375\n\t],\n\t\"./prism-solution-file\": [\n\t\t1110,\n\t\t376\n\t],\n\t\"./prism-solution-file.js\": [\n\t\t1110,\n\t\t376\n\t],\n\t\"./prism-solution-file.min\": [\n\t\t1111,\n\t\t377\n\t],\n\t\"./prism-solution-file.min.js\": [\n\t\t1111,\n\t\t377\n\t],\n\t\"./prism-soy\": [\n\t\t1112,\n\t\t378\n\t],\n\t\"./prism-soy.js\": [\n\t\t1112,\n\t\t378\n\t],\n\t\"./prism-soy.min\": [\n\t\t1113,\n\t\t379\n\t],\n\t\"./prism-soy.min.js\": [\n\t\t1113,\n\t\t379\n\t],\n\t\"./prism-sparql\": [\n\t\t1114,\n\t\t380\n\t],\n\t\"./prism-sparql.js\": [\n\t\t1114,\n\t\t380\n\t],\n\t\"./prism-sparql.min\": [\n\t\t1115,\n\t\t381\n\t],\n\t\"./prism-sparql.min.js\": [\n\t\t1115,\n\t\t381\n\t],\n\t\"./prism-splunk-spl\": [\n\t\t1116,\n\t\t382\n\t],\n\t\"./prism-splunk-spl.js\": [\n\t\t1116,\n\t\t382\n\t],\n\t\"./prism-splunk-spl.min\": [\n\t\t1117,\n\t\t383\n\t],\n\t\"./prism-splunk-spl.min.js\": [\n\t\t1117,\n\t\t383\n\t],\n\t\"./prism-sqf\": [\n\t\t1118,\n\t\t384\n\t],\n\t\"./prism-sqf.js\": [\n\t\t1118,\n\t\t384\n\t],\n\t\"./prism-sqf.min\": [\n\t\t1119,\n\t\t385\n\t],\n\t\"./prism-sqf.min.js\": [\n\t\t1119,\n\t\t385\n\t],\n\t\"./prism-sql\": [\n\t\t1120,\n\t\t386\n\t],\n\t\"./prism-sql.js\": [\n\t\t1120,\n\t\t386\n\t],\n\t\"./prism-sql.min\": [\n\t\t1121,\n\t\t387\n\t],\n\t\"./prism-sql.min.js\": [\n\t\t1121,\n\t\t387\n\t],\n\t\"./prism-stylus\": [\n\t\t1122,\n\t\t388\n\t],\n\t\"./prism-stylus.js\": [\n\t\t1122,\n\t\t388\n\t],\n\t\"./prism-stylus.min\": [\n\t\t1123,\n\t\t389\n\t],\n\t\"./prism-stylus.min.js\": [\n\t\t1123,\n\t\t389\n\t],\n\t\"./prism-swift\": [\n\t\t1124,\n\t\t390\n\t],\n\t\"./prism-swift.js\": [\n\t\t1124,\n\t\t390\n\t],\n\t\"./prism-swift.min\": [\n\t\t1125,\n\t\t391\n\t],\n\t\"./prism-swift.min.js\": [\n\t\t1125,\n\t\t391\n\t],\n\t\"./prism-t4-cs\": [\n\t\t1126,\n\t\t392\n\t],\n\t\"./prism-t4-cs.js\": [\n\t\t1126,\n\t\t392\n\t],\n\t\"./prism-t4-cs.min\": [\n\t\t1127,\n\t\t393\n\t],\n\t\"./prism-t4-cs.min.js\": [\n\t\t1127,\n\t\t393\n\t],\n\t\"./prism-t4-templating\": [\n\t\t1128,\n\t\t394\n\t],\n\t\"./prism-t4-templating.js\": [\n\t\t1128,\n\t\t394\n\t],\n\t\"./prism-t4-templating.min\": [\n\t\t1129,\n\t\t395\n\t],\n\t\"./prism-t4-templating.min.js\": [\n\t\t1129,\n\t\t395\n\t],\n\t\"./prism-t4-vb\": [\n\t\t1130,\n\t\t396\n\t],\n\t\"./prism-t4-vb.js\": [\n\t\t1130,\n\t\t396\n\t],\n\t\"./prism-t4-vb.min\": [\n\t\t1131,\n\t\t397\n\t],\n\t\"./prism-t4-vb.min.js\": [\n\t\t1131,\n\t\t397\n\t],\n\t\"./prism-tap\": [\n\t\t1132,\n\t\t398\n\t],\n\t\"./prism-tap.js\": [\n\t\t1132,\n\t\t398\n\t],\n\t\"./prism-tap.min\": [\n\t\t1133,\n\t\t399\n\t],\n\t\"./prism-tap.min.js\": [\n\t\t1133,\n\t\t399\n\t],\n\t\"./prism-tcl\": [\n\t\t1134,\n\t\t400\n\t],\n\t\"./prism-tcl.js\": [\n\t\t1134,\n\t\t400\n\t],\n\t\"./prism-tcl.min\": [\n\t\t1135,\n\t\t401\n\t],\n\t\"./prism-tcl.min.js\": [\n\t\t1135,\n\t\t401\n\t],\n\t\"./prism-textile\": [\n\t\t1136,\n\t\t402\n\t],\n\t\"./prism-textile.js\": [\n\t\t1136,\n\t\t402\n\t],\n\t\"./prism-textile.min\": [\n\t\t1137,\n\t\t403\n\t],\n\t\"./prism-textile.min.js\": [\n\t\t1137,\n\t\t403\n\t],\n\t\"./prism-toml\": [\n\t\t1138,\n\t\t404\n\t],\n\t\"./prism-toml.js\": [\n\t\t1138,\n\t\t404\n\t],\n\t\"./prism-toml.min\": [\n\t\t1139,\n\t\t405\n\t],\n\t\"./prism-toml.min.js\": [\n\t\t1139,\n\t\t405\n\t],\n\t\"./prism-tsx\": [\n\t\t1140,\n\t\t406\n\t],\n\t\"./prism-tsx.js\": [\n\t\t1140,\n\t\t406\n\t],\n\t\"./prism-tsx.min\": [\n\t\t1141,\n\t\t407\n\t],\n\t\"./prism-tsx.min.js\": [\n\t\t1141,\n\t\t407\n\t],\n\t\"./prism-tt2\": [\n\t\t1142,\n\t\t408\n\t],\n\t\"./prism-tt2.js\": [\n\t\t1142,\n\t\t408\n\t],\n\t\"./prism-tt2.min\": [\n\t\t1143,\n\t\t409\n\t],\n\t\"./prism-tt2.min.js\": [\n\t\t1143,\n\t\t409\n\t],\n\t\"./prism-turtle\": [\n\t\t1144,\n\t\t410\n\t],\n\t\"./prism-turtle.js\": [\n\t\t1144,\n\t\t410\n\t],\n\t\"./prism-turtle.min\": [\n\t\t1145,\n\t\t411\n\t],\n\t\"./prism-turtle.min.js\": [\n\t\t1145,\n\t\t411\n\t],\n\t\"./prism-twig\": [\n\t\t1146,\n\t\t412\n\t],\n\t\"./prism-twig.js\": [\n\t\t1146,\n\t\t412\n\t],\n\t\"./prism-twig.min\": [\n\t\t1147,\n\t\t413\n\t],\n\t\"./prism-twig.min.js\": [\n\t\t1147,\n\t\t413\n\t],\n\t\"./prism-typescript\": [\n\t\t1148,\n\t\t414\n\t],\n\t\"./prism-typescript.js\": [\n\t\t1148,\n\t\t414\n\t],\n\t\"./prism-typescript.min\": [\n\t\t1149,\n\t\t415\n\t],\n\t\"./prism-typescript.min.js\": [\n\t\t1149,\n\t\t415\n\t],\n\t\"./prism-unrealscript\": [\n\t\t1150,\n\t\t416\n\t],\n\t\"./prism-unrealscript.js\": [\n\t\t1150,\n\t\t416\n\t],\n\t\"./prism-unrealscript.min\": [\n\t\t1151,\n\t\t417\n\t],\n\t\"./prism-unrealscript.min.js\": [\n\t\t1151,\n\t\t417\n\t],\n\t\"./prism-vala\": [\n\t\t1152,\n\t\t418\n\t],\n\t\"./prism-vala.js\": [\n\t\t1152,\n\t\t418\n\t],\n\t\"./prism-vala.min\": [\n\t\t1153,\n\t\t419\n\t],\n\t\"./prism-vala.min.js\": [\n\t\t1153,\n\t\t419\n\t],\n\t\"./prism-vbnet\": [\n\t\t1154,\n\t\t420\n\t],\n\t\"./prism-vbnet.js\": [\n\t\t1154,\n\t\t420\n\t],\n\t\"./prism-vbnet.min\": [\n\t\t1155,\n\t\t421\n\t],\n\t\"./prism-vbnet.min.js\": [\n\t\t1155,\n\t\t421\n\t],\n\t\"./prism-velocity\": [\n\t\t1156,\n\t\t422\n\t],\n\t\"./prism-velocity.js\": [\n\t\t1156,\n\t\t422\n\t],\n\t\"./prism-velocity.min\": [\n\t\t1157,\n\t\t423\n\t],\n\t\"./prism-velocity.min.js\": [\n\t\t1157,\n\t\t423\n\t],\n\t\"./prism-verilog\": [\n\t\t1158,\n\t\t424\n\t],\n\t\"./prism-verilog.js\": [\n\t\t1158,\n\t\t424\n\t],\n\t\"./prism-verilog.min\": [\n\t\t1159,\n\t\t425\n\t],\n\t\"./prism-verilog.min.js\": [\n\t\t1159,\n\t\t425\n\t],\n\t\"./prism-vhdl\": [\n\t\t1160,\n\t\t426\n\t],\n\t\"./prism-vhdl.js\": [\n\t\t1160,\n\t\t426\n\t],\n\t\"./prism-vhdl.min\": [\n\t\t1161,\n\t\t427\n\t],\n\t\"./prism-vhdl.min.js\": [\n\t\t1161,\n\t\t427\n\t],\n\t\"./prism-vim\": [\n\t\t1162,\n\t\t428\n\t],\n\t\"./prism-vim.js\": [\n\t\t1162,\n\t\t428\n\t],\n\t\"./prism-vim.min\": [\n\t\t1163,\n\t\t429\n\t],\n\t\"./prism-vim.min.js\": [\n\t\t1163,\n\t\t429\n\t],\n\t\"./prism-visual-basic\": [\n\t\t1164,\n\t\t430\n\t],\n\t\"./prism-visual-basic.js\": [\n\t\t1164,\n\t\t430\n\t],\n\t\"./prism-visual-basic.min\": [\n\t\t1165,\n\t\t431\n\t],\n\t\"./prism-visual-basic.min.js\": [\n\t\t1165,\n\t\t431\n\t],\n\t\"./prism-warpscript\": [\n\t\t1166,\n\t\t432\n\t],\n\t\"./prism-warpscript.js\": [\n\t\t1166,\n\t\t432\n\t],\n\t\"./prism-warpscript.min\": [\n\t\t1167,\n\t\t433\n\t],\n\t\"./prism-warpscript.min.js\": [\n\t\t1167,\n\t\t433\n\t],\n\t\"./prism-wasm\": [\n\t\t1168,\n\t\t434\n\t],\n\t\"./prism-wasm.js\": [\n\t\t1168,\n\t\t434\n\t],\n\t\"./prism-wasm.min\": [\n\t\t1169,\n\t\t435\n\t],\n\t\"./prism-wasm.min.js\": [\n\t\t1169,\n\t\t435\n\t],\n\t\"./prism-wiki\": [\n\t\t1170,\n\t\t436\n\t],\n\t\"./prism-wiki.js\": [\n\t\t1170,\n\t\t436\n\t],\n\t\"./prism-wiki.min\": [\n\t\t1171,\n\t\t437\n\t],\n\t\"./prism-wiki.min.js\": [\n\t\t1171,\n\t\t437\n\t],\n\t\"./prism-xeora\": [\n\t\t1172,\n\t\t438\n\t],\n\t\"./prism-xeora.js\": [\n\t\t1172,\n\t\t438\n\t],\n\t\"./prism-xeora.min\": [\n\t\t1173,\n\t\t439\n\t],\n\t\"./prism-xeora.min.js\": [\n\t\t1173,\n\t\t439\n\t],\n\t\"./prism-xml-doc\": [\n\t\t1174,\n\t\t440\n\t],\n\t\"./prism-xml-doc.js\": [\n\t\t1174,\n\t\t440\n\t],\n\t\"./prism-xml-doc.min\": [\n\t\t1175,\n\t\t441\n\t],\n\t\"./prism-xml-doc.min.js\": [\n\t\t1175,\n\t\t441\n\t],\n\t\"./prism-xojo\": [\n\t\t1176,\n\t\t442\n\t],\n\t\"./prism-xojo.js\": [\n\t\t1176,\n\t\t442\n\t],\n\t\"./prism-xojo.min\": [\n\t\t1177,\n\t\t443\n\t],\n\t\"./prism-xojo.min.js\": [\n\t\t1177,\n\t\t443\n\t],\n\t\"./prism-xquery\": [\n\t\t1178,\n\t\t444\n\t],\n\t\"./prism-xquery.js\": [\n\t\t1178,\n\t\t444\n\t],\n\t\"./prism-xquery.min\": [\n\t\t1179,\n\t\t445\n\t],\n\t\"./prism-xquery.min.js\": [\n\t\t1179,\n\t\t445\n\t],\n\t\"./prism-yaml\": [\n\t\t1180,\n\t\t446\n\t],\n\t\"./prism-yaml.js\": [\n\t\t1180,\n\t\t446\n\t],\n\t\"./prism-yaml.min\": [\n\t\t1181,\n\t\t447\n\t],\n\t\"./prism-yaml.min.js\": [\n\t\t1181,\n\t\t447\n\t],\n\t\"./prism-yang\": [\n\t\t1182,\n\t\t448\n\t],\n\t\"./prism-yang.js\": [\n\t\t1182,\n\t\t448\n\t],\n\t\"./prism-yang.min\": [\n\t\t1183,\n\t\t449\n\t],\n\t\"./prism-yang.min.js\": [\n\t\t1183,\n\t\t449\n\t],\n\t\"./prism-zig\": [\n\t\t1184,\n\t\t450\n\t],\n\t\"./prism-zig.js\": [\n\t\t1184,\n\t\t450\n\t],\n\t\"./prism-zig.min\": [\n\t\t1185,\n\t\t451\n\t],\n\t\"./prism-zig.min.js\": [\n\t\t1185,\n\t\t451\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 2312;\nmodule.exports = webpackAsyncContext;","import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const ETH_NETWORKS = process.env.REACT_APP_ETH_NETWORKS.split(',');\n\nexport const NETWORK_NAMES = {\n  '1': 'mainnet',\n  '4': 'rinkeby',\n  '100': 'xdai',\n  '42161': 'arbitrum',\n  '421611': 'arbitrumTestnet',\n  '1337': 'localhost',\n};\n\nexport const NETWORK_IDS = {\n  'mainnet': 1,\n  'rinkeby': 4,\n  'xdai': 100,\n  'arbitrum': 42161,\n  'arbitrumTestnet': 421611,\n  'localhost': 1337,\n};\n\nexport const NETWORK_ASSET_SYMBOL = {\n  'mainnet': 'ETH',\n  'rinkeby': 'ETH',\n  'xdai': 'XDAI',\n  'arbitrum': 'ETH',\n  'arbitrumTestnet': 'ETH',\n  'localhost': 'ETH'\n};\n\nexport const ETH_NETWORKS_IDS = ETH_NETWORKS.map((network) => {return NETWORK_IDS[network]});\nexport const DEFAULT_ETH_CHAIN_ID = NETWORK_IDS[ETH_NETWORKS[0]];\n\nexport const web3ContextNames = {\n  injected: 'INJECTED',\n  metamask: 'METAMASK',\n};\n\nexport const isChainIdSupported = (chainId: number): boolean => {\n  return ETH_NETWORKS_IDS ? ETH_NETWORKS_IDS.indexOf(chainId) >= 0 : false;\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: ETH_NETWORKS_IDS,\n});\n\nexport const SUPPORTED_WALLETS = {\n    INJECTED: {\n        connector: injected,\n        name: 'Injected',\n        iconName: 'arrow-right.svg',\n        description: 'Injected web3 provider.',\n        href: null,\n        color: '#010101',\n        primary: true,\n    },\n    METAMASK: {\n        connector: injected,\n        name: 'MetaMask',\n        description: 'Easy-to-use browser extension.',\n        href: null,\n        color: '#E8831D',\n    }\n};\n\nexport default {\n  injected\n};\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\nimport { ethers } from 'ethers';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport UncheckedJsonRpcSigner from 'provider/UncheckedJsonRpcSigner';\nimport { sendAction } from './actions/actions';\nimport { web3ContextNames } from '../provider/connectors';\nimport PromiEvent from 'promievent';\nimport { TXEvents } from '../utils';\nimport moment from 'moment';\nimport { schema } from '../services/ABIService';\n\nexport enum ContractType {\n    ERC20 = 'ERC20',\n    Avatar = 'Avatar',\n    Controller = 'Controller',\n    Reputation = 'Reputation',\n    PermissionRegistry = 'PermissionRegistry',\n    VotingMachine = 'VotingMachine',\n    DXDVotingMachine = 'DXDVotingMachine',\n    WalletScheme = 'WalletScheme',\n    Multicall = 'Multicall',\n    Redeemer ='Redeemer'\n}\n\nexport interface ChainData {\n    currentBlockNumber: number;\n}\n\nenum ERRORS {\n    UntrackedChainId = 'Attempting to access data for untracked chainId',\n    ContextNotFound = 'Specified context name note stored',\n    BlockchainActionNoAccount = 'Attempting to do blockchain transaction with no account',\n    BlockchainActionNoChainId = 'Attempting to do blockchain transaction with no chainId',\n    BlockchainActionNoResponse = 'No error or response received from blockchain action',\n}\n\nexport default class ProviderStore {\n    provider: any;\n    accounts: string[];\n    defaultAccount: string | null;\n    web3Contexts: object;\n    supportedNetworks: number[];\n    chainData: ChainData;\n    activeChainId: number;\n    activeFetchLoop: any;\n    activeAccount: string;\n    context: RootContext;\n\n    constructor(context) {\n      this.context = context;\n      this.web3Contexts = {};\n      this.chainData = { currentBlockNumber: -1 };\n      makeObservable(this, {\n          provider: observable,\n          accounts: observable,\n          defaultAccount: observable,\n          web3Contexts: observable,\n          chainData: observable, \n          activeChainId: observable, \n          activeFetchLoop: observable, \n          activeAccount: observable,\n          setCurrentBlockNumber: action,\n          setActiveAccount: action,\n          fetchUserBlockchainData: action\n        }\n      );\n    }\n\n    isFresh(blocknumber: number): boolean {\n        return blocknumber === this.getCurrentBlockNumber();\n    }\n\n    isFresher(newBlockNumber: number, oldBlockNumber: number): boolean {\n        return newBlockNumber > oldBlockNumber;\n    }\n\n    isBlockStale(blocknumber: number) {\n        return blocknumber < this.chainData.currentBlockNumber;\n    }\n\n    getCurrentBlockNumber(): number {\n        return this.chainData.currentBlockNumber;\n    }\n\n    setCurrentBlockNumber(blocknumber): void {\n        this.chainData.currentBlockNumber = blocknumber;\n    }\n\n    setActiveAccount(account: string) {\n        this.activeAccount = account;\n    }\n\n    fetchUserBlockchainData = async (\n        web3React: Web3ReactContextInterface,\n        account: string\n    ) => {\n        const { transactionStore } = this.context;\n\n        console.debug('[Fetch Start - User Blockchain Data]', {\n            account,\n        });\n\n        transactionStore.checkPendingTransactions(web3React, account);\n    };\n\n    // account is optional\n    getProviderOrSigner(library, account) {\n        console.debug('[getProviderOrSigner', {\n            library,\n            account,\n            signer: library.getSigner(account),\n        });\n\n        return account\n            ? new UncheckedJsonRpcSigner(library.getSigner(account))\n            : library;\n    }\n\n    getContract(\n        web3React: Web3ReactContextInterface,\n        type: ContractType,\n        address: string,\n        signerAccount?: string\n    ): ethers.Contract {\n        const { library } = web3React;\n\n        if (signerAccount) {\n            return new library.eth.Contract(schema[type], address, {\n                from: signerAccount,\n            });\n        }\n\n        return new library.eth.Contract(schema[type], address);\n    }\n\n    // get blockTime from blocknumber\n    async getBlockTime(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        const date = new Date(blockData.timestamp * 1000);\n        return moment(date).format('DD.MM - HH:mm');\n    }\n\n\n    // get blockHash from blocknumber\n    async getBlockHash(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        return blockData.hash;\n    }\n\n    getActiveWeb3React(): Web3ReactContextInterface {\n        const contextInjected = this.web3Contexts[web3ContextNames.injected];\n        return contextInjected;\n    }\n\n    getWeb3React(name): Web3ReactContextInterface {\n        if (!this.web3Contexts[name]) {\n            throw new Error(ERRORS.ContextNotFound);\n        }\n        return this.web3Contexts[name];\n    }\n\n    @action setWeb3Context(name, context: Web3ReactContextInterface) {\n        console.debug('[setWeb3Context]', name, context);\n        this.web3Contexts[name] = context;\n    }\n\n    @action sendTransaction = (\n        web3React: Web3ReactContextInterface,\n        contractType: ContractType,\n        contractAddress: string,\n        action: string,\n        params: any[],\n        overrides?: any\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.context;\n        const { chainId, account } = web3React;\n\n        overrides = overrides ? overrides : {};\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n\n        const contract = this.getContract(\n            web3React,\n            contractType,\n            contractAddress,\n            account\n        );\n\n        const response = sendAction({\n            contract,\n            action,\n            sender: account,\n            data: params,\n            overrides,\n        }).on(TXEvents.TX_HASH, (hash) => {\n            transactionStore.addTransactionRecord(account, hash);\n        });\n\n        return response;\n    };\n    \n    @action sendRawTransaction = (\n        web3React: Web3ReactContextInterface,\n        to: string,\n        data: string,\n        value: string\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.context;\n        const { chainId, account } = web3React;\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n\n        const promiEvent = new PromiEvent<any>(() => {\n            web3React.library.eth.sendTransaction({ from: account, to: to, data: data, value: value })\n                .once('transactionHash', (hash) => {\n                    transactionStore.addTransactionRecord(account, hash);\n                    promiEvent.emit(TXEvents.TX_HASH, hash);\n                    console.debug(TXEvents.TX_HASH, hash);\n                })\n                .once('receipt', (receipt) => {\n                    promiEvent.emit(TXEvents.RECEIPT, receipt);\n                    console.debug(TXEvents.RECEIPT, receipt);\n                })\n                .once('confirmation', (confNumber, receipt) => {\n                    promiEvent.emit(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                    console.debug(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                })\n                .on('error', (error) => {\n                    console.debug(error.code);\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                })\n                .then((receipt) => {\n                    promiEvent.emit(TXEvents.FINALLY, receipt);\n                    console.debug(TXEvents.FINALLY, receipt);\n                })\n                .catch((e) => {\n                    console.debug('rejected', e);\n                });\n        });\n\n        return promiEvent;\n    };\n}\n","import { Interface } from 'ethers/utils';\nimport RootContext from '../contexts';\n\nexport const schema = {\n  Avatar: require('../contracts/DxAvatar').abi,\n  Controller: require('../contracts/DxController').abi,\n  VotingMachine: require('../contracts/GenesisProtocol').abi,\n  DXDVotingMachine: require('../contracts/DXDVotingMachine').abi,\n  Reputation: require('../contracts/DxReputation').abi,\n  WalletScheme: require('../contracts/WalletScheme').abi,\n  ERC20: require('../contracts/ERC20').abi,\n  PermissionRegistry: require('../contracts/PermissionRegistry').abi,\n  Multicall: require('../contracts/Multicall').abi,\n  ContributionReward: require('../contracts/ContributionReward').abi,\n  SchemeRegistrar: require('../contracts/SchemeRegistrar').abi,\n  Redeemer: require('../contracts/Redeemer').abi,\n};\n\nexport default class ABIService {\n  context: RootContext;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  getAbi(contractType: string) {\n    return schema[contractType];\n  }\n  \n  decodeCall(contractType: string, data: string) {\n    const { providerStore } = this.context;\n\n    const { library } = providerStore.getActiveWeb3React();\n\n    const contractInterface = new Interface(this.getAbi(contractType));\n    const functionSignature = data.substring(0,10);\n    for (const functionName in contractInterface.functions) {\n      if (contractInterface.functions[functionName].sighash === functionSignature){\n        return {\n          function: contractInterface.functions[functionName],\n          args: library.eth.abi.decodeParameters(\n            contractInterface.functions[functionName].inputs.map((input) => {return input.type}), data.substring(10)\n          )\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","import * as ethers from 'ethers';\n\nclass UncheckedJsonRpcSigner extends ethers.Signer {\n    signer: any;\n\n    constructor(signer) {\n        super();\n        ethers.utils.defineReadOnly(this, 'signer', signer);\n        ethers.utils.defineReadOnly(this, 'provider', signer.provider);\n    }\n\n    getAddress() {\n        return this.signer.getAddress();\n    }\n\n    sendTransaction(transaction) {\n        return this.signer\n            .sendUncheckedTransaction(transaction)\n            .then((hash) => {\n                return {\n                    hash: hash,\n                    nonce: null,\n                    gasLimit: null,\n                    gasPrice: null,\n                    data: null,\n                    value: null,\n                    chainId: null,\n                    confirmations: 0,\n                    from: null,\n                    wait: (confirmations) => {\n                        return this.signer.provider.waitForTransaction(\n                            hash,\n                            confirmations\n                        );\n                    },\n                };\n            });\n    }\n\n    signMessage(message) {\n        return this.signer.signMessage(message);\n    }\n}\n\nexport default UncheckedJsonRpcSigner;\n","import { Web3Errors } from '../../utils';\n\nconst errorCodeMapping = {\n    '4001': Web3Errors.SIGNATURE_REJECTED,\n};\n\nexport const isKnownErrorCode = (code: number): boolean => {\n    const codeStr = code.toString();\n    return !!errorCodeMapping[codeStr];\n};\n\nexport const getErrorByCode = (code: number): Web3Errors => {\n    const codeStr = code.toString();\n    if (isKnownErrorCode(code)) {\n        return errorCodeMapping[codeStr];\n    } else {\n        return Web3Errors.UNKNOWN_ERROR;\n    }\n};\n","import { Contract } from 'ethers';\nimport { TXEvents } from '../../utils';\nimport { getErrorByCode, isKnownErrorCode } from './error';\nimport PromiEvent from 'promievent';\n\ninterface ActionRequest {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: any[];\n    overrides: any;\n}\n\nexport interface ActionResponse {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: object;\n    txResponse: any | undefined;\n    error: any | undefined;\n}\n\nconst preLog = (params: ActionRequest) => {\n    console.debug(`[@action start: ${params.action}]`, {\n        contract: params.contract,\n        action: params.action,\n        sender: params.sender,\n        data: params.data,\n        overrides: params.overrides,\n    });\n};\n\nexport const sendAction = (params: ActionRequest): PromiEvent<any> => {\n    const { contract, action, sender, data, overrides } = params;\n    preLog(params);\n\n    const promiEvent = new PromiEvent<any>(() => {\n        contract.methods[action](...data)\n            .send({ from: sender, ...overrides })\n            .once('transactionHash', (hash) => {\n                promiEvent.emit(TXEvents.TX_HASH, hash);\n                console.debug(TXEvents.TX_HASH, hash);\n            })\n            .once('receipt', (receipt) => {\n                promiEvent.emit(TXEvents.RECEIPT, receipt);\n                console.debug(TXEvents.RECEIPT, receipt);\n            })\n            .once('confirmation', (confNumber, receipt) => {\n                promiEvent.emit(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n                console.debug(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n            })\n            .on('error', (error) => {\n                console.debug(error.code);\n                if (error.code && isKnownErrorCode(error.code)) {\n                    promiEvent.emit(\n                        TXEvents.TX_ERROR,\n                        getErrorByCode(error.code)\n                    );\n                    console.debug(TXEvents.TX_ERROR, getErrorByCode(error.code));\n                } else {\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                }\n            })\n            .then((receipt) => {\n                promiEvent.emit(TXEvents.FINALLY, receipt);\n                console.debug(TXEvents.FINALLY, receipt);\n            })\n            .catch((e) => {\n                console.debug('rejected', e);\n            });\n    });\n\n    return promiEvent;\n};\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { TransactionReceipt } from 'web3-core';\n\nexport interface TransactionRecord {\n    hash: string;\n    blockNumberChecked: number;\n    receipt: TransactionReceipt | undefined;\n}\n\nconst ERRORS = {\n    unknownTxHash: 'Transaction hash is not stored',\n    unknownNetworkId: 'NetworkID specified is not tracked',\n    txHashAlreadyExists: 'Transaction hash already exists for network',\n    txHasNoHash: 'Attempting to add transaction record without hash',\n};\n\nexport enum FetchCode {\n    SUCCESS,\n    FAILURE,\n    STALE,\n}\n\nexport interface TransactionRecordMap {\n    [index: string]: TransactionRecord[];\n}\n\nexport default class TransactionStore {\n    txRecords: TransactionRecordMap;\n    context: RootContext;\n\n    constructor(context) {\n        this.context = context;\n        this.txRecords = {};\n        makeObservable(this, {\n            txRecords: observable,\n            checkPendingTransactions: action,\n            addTransactionRecord: action,\n          }\n        );\n    }\n\n    // @dev Transactions are pending if we haven't seen their receipt yet\n    getPendingTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    getConfirmedTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return !this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    async checkPendingTransactions(\n        web3React: Web3ReactContextInterface,\n        account\n    ): Promise<FetchCode> {\n        const { providerStore } = this.context;\n        const currentBlock = providerStore.getCurrentBlockNumber();\n\n        const { library } = web3React;\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            records.forEach((value) => {\n                if (\n                    this.isTxPending(value) &&\n                    this.isStale(value, currentBlock)\n                ) {\n                    library.eth\n                        .getTransactionReceipt(value.hash)\n                        .then((receipt) => {\n                            value.blockNumberChecked = currentBlock;\n                            if (receipt) {\n                                value.receipt = receipt;\n                            }\n                        })\n                        .catch(() => {\n                            value.blockNumberChecked = currentBlock;\n                        });\n                }\n            });\n        }\n\n        return FetchCode.SUCCESS;\n    }\n\n    // @dev Add transaction record. It's in a pending state until mined.\n    addTransactionRecord(account: string, txHash: string) {\n        const record: TransactionRecord = {\n            hash: txHash,\n            blockNumberChecked: 0,\n            receipt: undefined,\n        };\n\n        if (!txHash) {\n            throw new Error(\n                'Attempting to add transaction record without hash'\n            );\n        }\n\n        let records = this.txRecords[account];\n\n        if (records) {\n            const duplicate = records.find((value) => value.hash === txHash);\n            if (!!duplicate) {\n                throw new Error(ERRORS.txHashAlreadyExists);\n            }\n            this.txRecords[account].push(record);\n        } else {\n            this.txRecords[account] = [];\n            this.txRecords[account].push(record);\n        }\n    }\n\n    isTxPending(txRecord: TransactionRecord): boolean {\n        return !txRecord.receipt;\n    }\n\n    isStale(txRecord: TransactionRecord, currentBlock: number) {\n        return txRecord.blockNumberChecked < currentBlock;\n    }\n}\n","import { Interface } from 'ethers/utils';\nimport RootContext from '../contexts';\nimport { ContractType } from '../stores/Provider';\n\nexport default class MulticallService {\n  context: RootContext;\n\n  activeCalls: Call[];\n  activeCallsRaw: any[];\n\n  constructor(context: RootContext) {\n    this.context = context;\n    this.resetActiveCalls();\n  }\n\n  // Add call additions and removals\n  async executeCalls(calls?: Call[], rawCalls?: any[]) {\n    const { providerStore, configStore } = this.context;\n\n    const multi = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Multicall,\n      configStore.getNetworkContracts().utils.multicall\n    );\n\n    const response = await multi.methods.aggregate(rawCalls || this.activeCallsRaw).call();\n    return {\n      calls: calls || this.activeCalls,\n      results: response.returnData,\n      blockNumber: response.blockNumber,\n    };\n  }\n\n  addCalls(calls: Call[]) {\n    calls.forEach(call => this.addCall(call));\n  }\n\n  addCall(call: Call) {\n    this.addContractCall(call);\n  }\n\n  addContractCall(call: Call) {\n    const { abiService } = this.context;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    call.params = call.params ? call.params : [];\n    const encoded = iface.functions[call.method].encode(call.params);\n    this.activeCallsRaw.push([call.address, encoded]);\n    this.activeCalls.push(call);\n  }\n\n  decodeCall(call: Call, result: any) {\n    const { abiService } = this.context;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    return iface.functions[call.method].decode(result);\n  }\n\n  resetActiveCalls() {\n    this.activeCalls = [];\n    this.activeCallsRaw = [];\n  }\n}\n","import { action, makeObservable } from 'mobx';\nimport contentHash from 'content-hash';\nimport PromiEvent from 'promievent';\nimport RootContext from '../contexts';\nimport { ContractType } from '../stores/Provider';\nimport {\n  BigNumber,\n  bnum,\n  ZERO_ADDRESS,\n  ANY_ADDRESS,\n  ERC20_TRANSFER_SIGNATURE,\n  ERC20_APPROVE_SIGNATURE,\n  MAX_UINT,\n  normalizeBalance\n} from '../utils';\n\nexport default class DaoService {\n  context: RootContext;\n\n  constructor(context: RootContext) {\n    this.context = context;\n    \n    makeObservable(this, {\n      createProposal: action,\n      vote: action,\n      approveVotingMachineToken: action,\n      stake: action,\n      execute: action,\n      redeem: action\n    });\n  }\n\n  encodeControllerGenericCall(\n    to: string,\n    callData: string,\n    value: BigNumber\n  ){\n    const { providerStore, configStore } = this.context;\n    const controller = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Controller,\n      configStore.getNetworkContracts().controller\n    )\n    const avatarAddress = configStore.getNetworkContracts().avatar;\n    return controller.methods.genericCall(to, callData, avatarAddress, value).encodeABI();\n  }\n  \n  decodeWalletSchemeCall(from: string, to: string, data: string, value: BigNumber){\n    const { abiService, providerStore, configStore } = this.context;\n    const { library } = providerStore.getActiveWeb3React();\n    const recommendedCalls = configStore.getRecommendedCalls();\n    let functionSignature = data.substring(0,10);\n    const controllerCallDecoded = abiService.decodeCall(ContractType.Controller, data);\n    let asset = ZERO_ADDRESS;\n    if (controllerCallDecoded && controllerCallDecoded.function.name == \"genericCall\") {\n      to = controllerCallDecoded.args[0];\n      data = \"0x\"+controllerCallDecoded.args[1].substring(10);\n      value = bnum(controllerCallDecoded.args[3]);\n      functionSignature = controllerCallDecoded.args[1].substring(0,10);\n    } else {\n      data = \"0x\"+data.substring(10);\n    }\n  \n    if (functionSignature == ERC20_TRANSFER_SIGNATURE || functionSignature == ERC20_APPROVE_SIGNATURE) {\n      asset = to;\n    }\n    const recommendedCallUsed = recommendedCalls.find((recommendedCall) => {\n      return (\n        asset == recommendedCall.asset\n        && (ANY_ADDRESS == recommendedCall.from || from == recommendedCall.from)\n        && (to == recommendedCall.to)\n        && functionSignature == library.eth.abi.encodeFunctionSignature(recommendedCall.functionName)\n      )\n    });\n\n    if (recommendedCallUsed) {\n      const callParameters = library.eth.abi\n        .decodeParameters(recommendedCallUsed.params.map((param) => param.type), data);\n      \n      if (callParameters.__length__)\n        delete callParameters.__length__;\n      \n      let decodedCallText = \"\";\n      \n      if (recommendedCallUsed.decodeText && recommendedCallUsed.decodeText.length > 0) {\n        decodedCallText = recommendedCallUsed.decodeText;\n        for (let paramIndex = 0; paramIndex < recommendedCallUsed.params.length; paramIndex++)\n          if (recommendedCallUsed.params[paramIndex].decimals)\n            decodedCallText = decodedCallText\n              .replaceAll(\n                \"[PARAM_\"+paramIndex+\"]\",\n                \"<italic>\"+normalizeBalance(callParameters[paramIndex], recommendedCallUsed.params[paramIndex].decimals)+\"</italic>\"\n              );\n          else\n            decodedCallText = decodedCallText\n              .replaceAll(\"[PARAM_\"+paramIndex+\"]\", \"<italic>\"+callParameters[paramIndex]+\"</italic>\");\n      } \n      \n      return `<strong>Description</strong>:${decodedCallText}\n      <strong>To</strong>: ${recommendedCallUsed.toName} <small>${recommendedCallUsed.to}</small>\n      <strong>Function</strong>: ${recommendedCallUsed.functionName} <small>${library.eth.abi.encodeFunctionSignature(recommendedCallUsed.functionName)}</small>\n      <strong>Params</strong>: ${JSON.stringify(Object.keys(callParameters).map((paramIndex) => callParameters[paramIndex]))}\n      <strong>Data</strong>: ${data} `\n      \n    } else {\n      return `<strong>From</strong>: ${from}\n      <strong>To</strong>: ${to}\n      <strong>Data</strong>: 0x${data.substring(10)}\n      <strong>Value</strong>: ${normalizeBalance(bnum(value))}`\n    }\n    \n  }\n  \n  createProposal(scheme: string, schemeType: string, proposalData: any): PromiEvent<any> {\n    const { providerStore, configStore } = this.context;\n    const networkContracts = configStore.getNetworkContracts();\n    const { library } = providerStore.getActiveWeb3React();\n\n    if (schemeType == \"ContributionReward\") {\n      // function proposeContributionReward(\n      //   Avatar _avatar,\n      //   string memory _descriptionHash,\n      //   int256 _reputationChange,\n      //   uint256[5] memory _rewards,\n      //   IERC20 _externalToken,\n      //   address payable _beneficiary\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeContributionReward',\n            type: 'function',\n            inputs: [\n              { type: 'address', name: '_avatar' },\n              { type: 'string', name: '_descriptionHash' },\n              { type: 'int256', name: '_reputationChange' },\n              { type: 'uint256[5]', name: '_rewards' },\n              { type: 'address', name: '_externalToken' },\n              { type: 'address', name: '_beneficiary' }\n            ]\n        },[\n          networkContracts.avatar,\n          contentHash.decode(proposalData.descriptionHash),\n          proposalData.reputationChange,\n          [0, proposalData.ethValue, proposalData.tokenValue, 0, 1],\n          proposalData.externalToken,\n          proposalData.beneficiary,\n        ]),\n        \"0\"\n      );\n    } else if (schemeType == \"GenericMulticall\") {\n      // function proposeCalls(\n      //   address[] memory _contractsToCall,\n      //   bytes[] memory _callsData,\n      //   uint256[] memory _values,\n      //   string memory _descriptionHash\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeCalls',\n            type: 'function',\n            inputs: [\n              { type: 'address[]', name: '_contractsToCall' },\n              { type: 'bytes[]', name: '_callsData' },\n              { type: 'uint256[]', name: '_values' },\n              { type: 'string', name: '_descriptionHash' }\n            ]\n        },[\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          contentHash.decode(proposalData.descriptionHash)\n        ]),\n        \"0\"\n      );\n    } else {\n      return providerStore.sendTransaction(\n        providerStore.getActiveWeb3React(),\n        ContractType.WalletScheme,\n        scheme,\n        'proposeCalls',\n        [\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          proposalData.titleText,\n          proposalData.descriptionHash\n        ],\n        {}\n      );\n    }\n  }\n  \n  vote(decision: string, amount: string, proposalId: string): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    const { account } = providerStore.getActiveWeb3React();\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'vote',\n      [proposalId, decision, amount, account],\n      {}\n    );\n  }\n  \n  approveVotingMachineToken(votingMachineAddress): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.ERC20,\n      daoStore.getCache().votingMachines[votingMachineAddress].token,\n      'approve',\n      [votingMachineAddress, MAX_UINT],\n      {}\n    );\n  }\n  \n  stake( decision: string, amount: string, proposalId: string, ): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'stake',\n      [proposalId, decision, amount],\n      {}\n    );\n  }\n  \n  execute(\n    proposalId: string,\n  ): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'execute',\n      [proposalId],\n      {}\n    );\n  }\n  \n  redeem(proposalId: string, account: string): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'redeem',\n      [proposalId, account],\n      {}\n    );\n  }\n  \n  redeemContributionReward(\n    redeemerAddress: string,\n    votingMachineAddress: string,\n    schemeAddress: string,\n    proposalId: string,\n    beneficiary: string\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.context;\n    // I have NO IDEA why it works with the voting machine address and scheme address are inverted in the function call,\n    // Alchemy uses it like that, weird.\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.Redeemer,\n      redeemerAddress,\n      'redeem',\n      [votingMachineAddress, schemeAddress, proposalId, configStore.getNetworkContracts().avatar, beneficiary],\n      {}\n    );\n  }\n  \n  redeemContributionRewardCall(\n    redeemerAddress: string,\n    votingMachineAddress: string,\n    schemeAddress: string,\n    proposalId: string,\n    beneficiary: string\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.context;\n    const web3 = providerStore.getActiveWeb3React().library;\n    return web3.eth.call({\n      to: redeemerAddress,\n      data: web3.eth.abi.encodeFunctionCall({\n          name: 'redeem',\n          type: 'function',\n          inputs: [{\n              type: 'address',\n              name: '_contributionReward'\n          },{\n              type: 'address',\n              name: '_genesisProtocol'\n          },{\n              type: 'bytes32',\n              name: '_proposalId'\n          },{\n              type: 'address',\n              name: '_avatar'\n          },{\n              type: 'address',\n              name: '_beneficiary'\n          }]\n      }, [votingMachineAddress, schemeAddress, proposalId, configStore.getNetworkContracts().avatar, beneficiary])\n    });\n  }\n}\n","import RootContext from '../contexts';\nimport _ from 'lodash';\nimport { ContractType } from '../stores/Provider';\n\nexport interface EventCall {\n  contractType: ContractType;\n  address: string;\n  eventName: string;\n  fromBlock: number;\n  toBlock: number;\n  executed?: boolean;\n}\n\nexport default class EventsService {\n  context: RootContext;  \n\n  activeEventsCalls: EventCall[];\n    \n  constructor(context: RootContext) {\n    this.context = context;\n    this.activeEventsCalls = [];\n  }\n  \n  async getEvents(\n    contractType: ContractType,\n    address: string,\n    eventName: string,\n    fromBlock: number,\n    toBlock: number\n  ){\n    const { providerStore } = this.context;\n    const contract = providerStore.getContract(providerStore.getActiveWeb3React(), contractType, address);\n    console.log('Getting event',eventName, fromBlock, toBlock);\n    return _.orderBy( \n      await contract.getPastEvents(eventName, {fromBlock: fromBlock, toBlock: toBlock })\n      , [\"blockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  async executeActiveEventCalls() {\n    return await Promise.all(this.activeEventsCalls.map(async (activeEventCall) => {\n      return await this.getEvents(\n        activeEventCall.contractType,\n        activeEventCall.address,\n        activeEventCall.eventName,\n        activeEventCall.fromBlock,\n        activeEventCall.toBlock\n      )\n    }));\n  }\n\n  addEventsCalls(events: EventCall[]) {\n    events.forEach(event => this.addEventCall(event));\n  }\n\n  addEventCall(event: EventCall) {\n    this.activeEventsCalls.push(event);\n  }\n\n  resetActiveEventCalls() {\n    this.activeEventsCalls = [];\n  }\n  \n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\nimport IPFS from 'ipfs-core';\nconst CID = require('cids')\n\nexport default class IPFSService {\n  context: RootContext;\n  calls: {[hash:string]: {\n    time: Number,\n    content: String,\n    fetched: Boolean\n  }} = {};\n  ipfs: any = null;\n  started: Boolean = false;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async start(){\n    if (!this.ipfs && !this.started) {\n      this.started = true;\n      try {\n        this.ipfs = await IPFS.create();\n      } catch (error) {\n        console.error('[IPFS]', error);\n      }\n    }\n  }\n\n  async add(content: String) {\n    const { cid } = await this.ipfs.add({content});\n    console.log(cid.string)\n    return cid.string;\n  }\n  \n  async pin(hash: String){\n    console.log(new CID(hash))\n    return await this.ipfs.pin.add(new CID(hash));\n  }\n  \n  async getContent(hash: String){\n    let content = []\n    for await (const file of this.ipfs.get(hash)) {\n      console.debug(\"[IPFS FILE]\",file.type, file.path);\n      if (!file.content) continue;\n      for await (const chunk of file.content) {\n        content = content.concat(chunk)\n      }\n    }\n    return content.toString();\n  }\n  \n  async getContentFromIPFS(hash: string) {\n    return (await axios({\n      method: \"GET\",\n      url: \"https://gateway.pinata.cloud/ipfs/\"+hash\n    })).data;\n  }\n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\nimport contentHash from 'content-hash';\n\nexport default class PinataService {\n  context: RootContext;\n  auth: Boolean = false;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async updatePinList() {\n    // const pinList = await this.getPinList();\n    const ipfsHashes = this.context.daoStore.getCache().ipfsHashes;\n    // const alreadyPinned = pinList.data.rows;\n    for (let i = 0; i < ipfsHashes.length; i++) {\n      // if (alreadyPinned.indexOf(pinned => alreadyPinned.ipfs_pin_hash == ipfsHashes[i].hash) < 0) {\n      //   console.debug('[PINATA] Pinning:', ipfsHashes[i].hash);\n      // } else {\n      //   console.debug('[PINATA] Alpready pinned:', ipfsHashes[i].hash);\n      // }\n    }\n  }\n  \n  async isAuthenticated(){\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\n    try {\n      const auth = await axios({\n        method: \"GET\",\n        url: \"https://api.pinata.cloud/data/testAuthentication\",\n        headers: { Authorization: `Bearer ${pinataApiKey}` }\n      });\n      this.auth = auth.status == 200;\n    } catch (error) {\n      this.auth = false;\n    }\n  }\n\n  async pin(hashToPin: String){\n    console.log('pininng', hashToPin)\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"POST\",\n      url: \"https://api.pinata.cloud/pinning/pinByHash\",\n      data: {\n        hashToPin,\n        pinataMetadata: {\n          name: `DXdao ${this.context.configStore.getActiveChainName()} DescriptionHash ${contentHash.fromIpfs(hashToPin)}`,\n          keyValues: { type: 'proposal' }\n        }\n      },\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n  \n  async getPinList(){\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"GET\",\n      url: `https://api.pinata.cloud/data/pinList?pageLimit=1000&metadata[name]=DXdao ${this.context.configStore.getActiveChainName()}`,\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\n\nexport default class EtherscanService {\n  context: RootContext;\n  auth: Boolean = false;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async isAuthenticated(){\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\n    const { account } = this.context.providerStore.getActiveWeb3React();\n    const auth = await axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=account&action=balance&address=${account}&tag=latest&apikey=${etherscanAPIKey}`,\n    });\n    this.auth = auth.data.status == 1;\n  }\n  \n  async getContractABI(address: string){\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n  \n  async getContractSource(address: string){\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\nimport web3 from \"web3\";\n\nexport default class CoingeckoService {\n  context: RootContext;\n  prices: any = {};\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async loadPrices(){\n    const tokens = this.context.configStore.getTokensToFetchPrice();\n    const networkName = this.context.configStore.getActiveChainName() == 'mainnet' ? 'ethereum'\n      : this.context.configStore.getActiveChainName() == 'xdai' ? 'xdai'\n      : '';\n    \n    if (networkName == 'ethereum' || networkName == 'xdai') {\n      let tokenAddresses = \"\";\n      tokens.map((token, i) => {\n        if (i == tokens.length - 1)\n          tokenAddresses += token.address;\n        else\n        tokenAddresses += token.address + \"%2C\";\n      })\n      console.log(`https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`)\n      const pricesResponse = await Promise.all([\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`\n        }),\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/price?ids=${networkName}&vs_currencies=usd`\n        })\n      ]);\n      \n      if ((pricesResponse[0].status == 200) && (pricesResponse[1].status == 200)){\n        this.prices = pricesResponse[0].data;\n        \n        Object.keys(this.prices).map((tokenAddress) => {\n          this.prices[web3.utils.toChecksumAddress(tokenAddress)] = this.prices[tokenAddress];\n          delete this.prices[tokenAddress];\n        });\n        \n        this.prices[\"0x0000000000000000000000000000000000000000\"] = pricesResponse[1].data[networkName];\n      }\n    }\n    return;\n  }\n  \n  getPrices() {\n    return this.prices;\n  }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\n\nexport default class ModalStore {\n    walletModalVisible: boolean;\n    context: RootContext;\n\n    constructor(context) {\n        this.context = context;\n        this.walletModalVisible = false;\n        makeObservable(this, {\n            walletModalVisible: observable,\n            toggleWalletModal: action,\n            setWalletModalVisible: action\n          }\n        );\n    }\n\n    @action toggleWalletModal() {\n        this.walletModalVisible = !this.walletModalVisible;\n    }\n\n    @action setWalletModalVisible(visible: boolean) {\n        this.walletModalVisible = visible;\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\nimport { _ } from 'lodash';\nimport { NETWORK_NAMES } from '../provider/connectors';\n\nconst Web3 = require('web3');\nconst web3 = new Web3();\n\nconst ipfsHashesOfNetworkCaches = {\n  \"mainnet\": \"QmZVaa3n4gZqrqMX6233FeD3TQC95QwUWwn6p72KNySxeN\",\n  \"xdai\": \"QmTqG4fj72npVGmjodNdJ6ZSUMjaD4SZNJDNCFZF1vutwV\",\n  \"rinkeby\": \"QmbstfTpn2aBsxGQqkA9Y1RWPbTjB829ePWhFQsZwBv3iJ\",\n  \"arbitrumTestnet\": \"QmW8GarhVMNSNS6PNAvnsRu39UbKXRwEWQtU4BueYsQiwz\",\n  \"localhost\": \"QmQFGjpUk52fYWNm3nWgELTjqter1dwnAaXggAhggnc26f\",\n  \"arbitrum\": \"QmccjtNMVNqK7WGi34Lc22WpKk85N27eVm6pBJ1wPchWYW\"\n};\nconst ipfsHashOfAppConfig = \"Qmc8fPUPDD3yrCxAu5iLuurwdiujRhoSaMyczjWj8P9A51\";\n\nimport { NETWORK_ASSET_SYMBOL } from '../provider/connectors';\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE } from '../utils';\n\nexport default class ConfigStore {\n    darkMode: boolean;\n    context: RootContext;\n    appConfig: AppConfig;\n\n    constructor(context) {\n      this.context = context;\n      this.darkMode = false;\n      makeObservable(this, {\n          darkMode: observable,\n          toggleDarkMode: action\n        }\n      );\n    }\n    \n    getActiveChainName() {\n      const activeWeb3 = this.context.providerStore.getActiveWeb3React();\n      return activeWeb3 ? NETWORK_NAMES[activeWeb3.chainId] : 'none';\n    }\n    \n    getLocalConfig() {\n      if (localStorage.getItem('dxvote-config'))\n        return JSON.parse(localStorage.getItem('dxvote-config'));\n      else return {\n        etherscan: '',\n        pinata: '',\n        pinOnStart: false\n      };\n    }\n    \n    setLocalConfig(config) {\n      localStorage.setItem('dxvote-config', JSON.stringify(config));\n    }\n    \n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n    }\n\n    @action setDarkMode(visible: boolean) {\n      this.darkMode = visible;\n    }\n    \n    @action async loadConfig() {\n      const config = await this.context.ipfsService.getContentFromIPFS(ipfsHashOfAppConfig)\n      this.appConfig = config;\n    }\n    \n    getCacheIPFSHash(networkName) {\n      return ipfsHashesOfNetworkCaches[networkName];\n    }\n\n    getSchemeTypeData(schemeAddress) {\n      const networkContracts = this.getNetworkContracts();\n      \n      if (networkContracts.daostack) {\n        if (networkContracts.daostack.schemeRegistrar && networkContracts.daostack.schemeRegistrar.address == schemeAddress) {\n          return {\n            type: \"SchemeRegistrar\",\n            name: \"SchemeRegistrar\",\n            contractToCall: networkContracts.daostack.schemeRegistrar.contractToCall,\n            votingMachine: networkContracts.votingMachines.gen.address,\n            newProposalTopics: networkContracts.daostack.schemeRegistrar.newProposalTopics,\n            voteParams: networkContracts.daostack.contributionReward.voteParams,\n            creationLogEncoding: networkContracts.daostack.schemeRegistrar.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.contributionReward && networkContracts.daostack.contributionReward.address == schemeAddress) {\n          return {\n            type: \"ContributionReward\",\n            name: \"ContributionReward\",\n            contractToCall: networkContracts.daostack.contributionReward.contractToCall,\n            votingMachine: networkContracts.votingMachines.gen.address,\n            newProposalTopics: networkContracts.daostack.contributionReward.newProposalTopics,\n            voteParams: networkContracts.daostack.contributionReward.voteParams,\n            creationLogEncoding: networkContracts.daostack.contributionReward.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.competitionScheme && networkContracts.daostack.competitionScheme.address == schemeAddress) {\n          return {\n            type: \"CompetitionScheme\",\n            name: \"CompetitionScheme\",\n            contractToCall: networkContracts.daostack.competitionScheme.contractToCall,\n            votingMachine: networkContracts.votingMachines.gen.address,\n            newProposalTopics: networkContracts.daostack.competitionScheme.newProposalTopics,\n            creationLogEncoding: networkContracts.daostack.competitionScheme.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.multicallSchemes && Object.keys(networkContracts.daostack.multicallSchemes.addresses).indexOf(schemeAddress) > -1) {\n          return {\n            type: \"GenericMulticall\",\n            votingMachine: networkContracts.votingMachines.gen.address,\n            contractToCall: ZERO_ADDRESS,\n            name: networkContracts.daostack.multicallSchemes.addresses[schemeAddress].name,\n            newProposalTopics: networkContracts.daostack.multicallSchemes.newProposalTopics,\n            voteParams: networkContracts.daostack.multicallSchemes.addresses[schemeAddress].voteParams,\n            creationLogEncoding: networkContracts.daostack.multicallSchemes.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.genericSchemes && Object.keys(networkContracts.daostack.genericSchemes.addresses).indexOf(schemeAddress) > -1) {\n          return {\n            type: \"GenericScheme\",\n            votingMachine: networkContracts.daostack.genericSchemes.addresses[schemeAddress].votingMachine,\n            contractToCall: networkContracts.daostack.genericSchemes.addresses[schemeAddress].contractToCall,\n            name: networkContracts.daostack.genericSchemes.addresses[schemeAddress].name,\n            newProposalTopics: networkContracts.daostack.genericSchemes.newProposalTopics,\n            voteParams: networkContracts.daostack.genericSchemes.addresses[schemeAddress].voteParams,\n            creationLogEncoding: networkContracts.daostack.genericSchemes.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.dxSchemes && Object.keys(networkContracts.daostack.dxSchemes).indexOf(schemeAddress) > -1) {\n          return {\n            type: \"OldDxScheme\",\n            votingMachine: networkContracts.votingMachines.gen.address,\n            contractToCall: ZERO_ADDRESS,\n            name: networkContracts.daostack.dxSchemes[schemeAddress],\n            newProposalTopics: [],\n            creationLogEncoding: []\n          };\n        }\n      }\n      return {\n        type: \"WalletScheme\",\n        votingMachine: networkContracts.votingMachines.dxd.address,\n        name: \"WalletScheme\",\n        newProposalTopics: [[\n          web3.utils.soliditySha3(\"ProposalStateChange(bytes32,uint256)\"),\n          null,\n          '0x0000000000000000000000000000000000000000000000000000000000000001']\n        ],\n        creationLogEncoding: []\n      }\n    }\n\n    getTokenData(tokenAddress) {\n      return this.appConfig[this.getActiveChainName()]\n        .tokens.find((tokenInFile) => tokenInFile.address == tokenAddress);\n    }\n    \n    getNetworkContracts() {\n      return this.appConfig[this.getActiveChainName()].contracts;\n    }\n    \n    getTokensOfNetwork() {\n      return this.appConfig[this.getActiveChainName()].tokens;\n    }\n\n    getTokensToFetchPrice() {\n      return this.appConfig[this.getActiveChainName()].tokens.filter((tokenInFile) => tokenInFile.fetchPrice);\n    }\n\n    getProposalTemplates() {\n      return this.appConfig[this.getActiveChainName()].proposalTemplates;\n    }\n\n    getRecommendedCalls() {\n      const networkName = this.getActiveChainName();\n      const networkContracts = this.getNetworkContracts();\n      const networkTokens = this.getTokensOfNetwork();\n      \n      let recommendedCalls: {\n        asset: string;\n        from: string;\n        to: string;\n        toName: string;\n        functionName: string;\n        params: {\n          type: string;\n          name: string;\n          defaultValue: string;\n          decimals ?: number;\n        }[];\n        decodeText: string;\n      }[] = [\n        {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"sendEther(uint256,address,address)\",\n          params: [\n            {type: \"uint256\", name: \"_amountInWei\", defaultValue: \"\", decimals: 18},\n            {type: \"address\", name: \"_to\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Send [PARAM_0] \"+NETWORK_ASSET_SYMBOL[networkName]+\" to [PARAM_1]\"\n        },{\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"externalTokenTransfer(address,address,uint256,address)\",\n          params: [\n            {type: \"address\", name: \"_externalToken\", defaultValue: \"\"},\n            {type: \"address\", name: \"_to\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"_value\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Send [PARAM_2] token([PARAM_0]) to [PARAM_1]\"\n        },{\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"mintReputation(uint256,address,address)\",\n          params: [\n            {type: \"uint256\", name: \"_amount\", defaultValue: \"\", decimals: 18},\n            {type: \"address\", name: \"_to\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Mint of [PARAM_0] REP to [PARAM_1]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"burnReputation(uint256,address,address)\",\n          params: [\n            {type: \"uint256\", name: \"_amount\", defaultValue: \"\", decimals: 18},\n            {type: \"address\", name: \"_from\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Burn of [PARAM_0] REP to [PARAM_1]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"registerScheme(address,bytes32,bytes4,address)\",\n          params: [\n            {type: \"address\", name: \"_scheme\", defaultValue: \"\"},\n            {type: \"bytes32\", name: \"_paramsHash\", defaultValue: \"\"},\n            {type: \"bytes4\", name: \"_permissions\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Register scheme [PARAM_0] with params hash [PARAM_1] and permissions [PARAM_2]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"unregisterScheme(address,address)\",\n          params: [\n            {type: \"address\", name: \"_scheme\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Unregister scheme [PARAM_0]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"genericCall(address,bytes,addres,uint256)\",\n          params: [\n            {type: \"address\", name: \"_contract\", defaultValue: \"\"},\n            {type: \"bytes\", name: \"_data\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar},\n            {type: \"uint256\", name: \"_value\", defaultValue: \"\"}\n          ],\n          decodeText: \"Generic call to [PARAM_0] with data [PARAM_1] and value [PARAM_2] \"+NETWORK_ASSET_SYMBOL[networkName]\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.permissionRegistry,\n          toName: \"Permission Registry\",\n          functionName: \"setTimeDelay(uint256)\",\n          params: [\n            {type: \"uint256\", name: \"newTimeDelay\", defaultValue: \"\"},\n          ],\n          decodeText: \"Set time delay to [PARAM_0] seconds\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.permissionRegistry,\n          toName: \"Permission Registry\",\n          functionName: \"setAdminPermission(address,address,address,bytes4,uint256,bool)\",\n          params: [\n            {type: \"address\", name: \"asset\", defaultValue: ZERO_ADDRESS},\n            {type: \"address\", name: \"from\", defaultValue: \"\"},\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"bytes4\", name: \"functionSignature\", defaultValue: ANY_FUNC_SIGNATURE},\n            {type: \"uint256\", name: \"valueAllowed\", defaultValue: \"0\"},\n            {type: \"bool\", name: \"allowed\", defaultValue: \"true\"},\n          ],\n          decodeText: \"Set [PARAM_5] admin permission in asset [PARAM_0] from [PARAM_1] to [PARAM_2] with function signature [PARAM_3] and value [PARAM_4]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: ANY_ADDRESS,\n          to: networkContracts.permissionRegistry,\n          toName: \"Permission Registry\",\n          functionName: \"setPermission(address,address,bytes4,uint256,bool)\",\n          params: [\n            {type: \"address\", name: \"asset\", defaultValue: ZERO_ADDRESS},\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"bytes4\", name: \"functionSignature\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"valueAllowed\", defaultValue: \"\"},\n            {type: \"bool\", name: \"allowed\", defaultValue: \"\"},\n          ],\n          decodeText: \"Set [PARAM_5] permission in asset [PARAM_0] from [FROM] to [PARAM_2] with function signature [PARAM_3] and value [PARAM_4]\"\n        }\n      ];\n      \n      if (this.appConfig[networkName].recommendedCalls && this.appConfig[networkName].recommendedCalls.length > 0)\n        recommendedCalls = recommendedCalls.concat(this.appConfig[networkName].recommendedCalls);\n      \n      networkTokens.map((networkToken) => {\n        recommendedCalls.push({\n          asset: networkToken.address,\n          from: ANY_ADDRESS,\n          to: networkToken.address,\n          toName: networkToken.name,\n          functionName: \"transfer(address,uint256)\",\n          params: [\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"value\", defaultValue: \"0\", decimals: networkToken.decimals}\n          ],\n          decodeText: \"Transfer [PARAM_1] \"+networkToken.symbol+\" to [PARAM_0]\"\n        });\n\n        recommendedCalls.push({\n          asset: networkToken.address,\n          from: ANY_ADDRESS,\n          to: networkToken.address,\n          toName: `ERC20 ${networkToken.symbol}`,\n          functionName: \"approve(address,uint256)\",\n          params: [\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"value\", defaultValue: \"0\", decimals: networkToken.decimals}\n          ],\n          decodeText: \"Approve [PARAM_1] \"+networkToken.symbol+\" to [PARAM_0]\"\n        });\n      });\n      \n      return recommendedCalls;\n    }\n}\n","import RootContext from '../contexts';\nimport { action, makeObservable } from 'mobx';\nimport _ from 'lodash';\nimport {\n  BigNumber,\n  ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE, MAX_UINT,\n  bnum,\n  decodeProposalStatus,\n  VoteDecision,\n  VotingMachineProposalState,\n  normalizeBalance,\n  formatPercentage\n} from '../utils';\n\nexport default class DaoStore {\n  daoCache: DaoNetworkCache;\n  context: RootContext;\n\n  constructor(context) {\n    this.context = context;\n    \n    makeObservable(this, {\n      setCache: action\n    });\n  }\n  \n  // Parse bignnumbers\n  parseCache(unparsedCache: DaoNetworkCache): DaoNetworkCache {\n    unparsedCache.daoInfo.ethBalance = bnum(unparsedCache.daoInfo.ethBalance);\n    unparsedCache.daoInfo.repEvents.map((repEvent, i) => {\n      unparsedCache.daoInfo.repEvents[i].amount = bnum(repEvent.amount)\n    })\n    Object.keys(unparsedCache.schemes).map((schemeAddress) => {\n      unparsedCache.schemes[schemeAddress].ethBalance = bnum(unparsedCache.schemes[schemeAddress].ethBalance)\n    })\n    Object.keys(unparsedCache.callPermissions).map((asset) => {\n      Object.keys(unparsedCache.callPermissions[asset]).map((from) => {\n        Object.keys(unparsedCache.callPermissions[asset][from]).map((to) => {\n          Object.keys(unparsedCache.callPermissions[asset][from][to]).map((functionSignature) => {\n            unparsedCache.callPermissions[asset][from][to][functionSignature].value =\n              bnum(unparsedCache.callPermissions[asset][from][to][functionSignature].value);\n          })\n        })\n      })\n    })\n    Object.keys(unparsedCache.proposals).map((proposalId) => {\n      unparsedCache.proposals[proposalId].values = unparsedCache.proposals[proposalId].values.map((value) => {\n        return bnum(value);\n      })\n\n      unparsedCache.proposals[proposalId].stateInScheme = unparsedCache.proposals[proposalId].stateInScheme;\n      unparsedCache.proposals[proposalId].stateInVotingMachine = unparsedCache.proposals[proposalId].stateInVotingMachine;\n      unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit = bnum(unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit);\n      unparsedCache.proposals[proposalId].daoBountyRemain = bnum(unparsedCache.proposals[proposalId].daoBountyRemain);\n      unparsedCache.proposals[proposalId].daoBounty = bnum(unparsedCache.proposals[proposalId].daoBounty);\n      unparsedCache.proposals[proposalId].totalStakes = bnum(unparsedCache.proposals[proposalId].totalStakes);\n      unparsedCache.proposals[proposalId].confidenceThreshold = bnum(unparsedCache.proposals[proposalId].confidenceThreshold);\n      unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = bnum(unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted);\n      unparsedCache.proposals[proposalId].submittedTime = bnum(unparsedCache.proposals[proposalId].submittedTime);\n      unparsedCache.proposals[proposalId].preBoostedPhaseTime = bnum(unparsedCache.proposals[proposalId].preBoostedPhaseTime);\n      unparsedCache.proposals[proposalId].boostedPhaseTime = bnum(unparsedCache.proposals[proposalId].boostedPhaseTime);\n      unparsedCache.proposals[proposalId].positiveVotes = bnum(unparsedCache.proposals[proposalId].positiveVotes);\n      unparsedCache.proposals[proposalId].negativeVotes = bnum(unparsedCache.proposals[proposalId].negativeVotes);\n      unparsedCache.proposals[proposalId].preBoostedPositiveVotes = bnum(unparsedCache.proposals[proposalId].preBoostedPositiveVotes);\n      unparsedCache.proposals[proposalId].preBoostedNegativeVotes = bnum(unparsedCache.proposals[proposalId].preBoostedNegativeVotes);\n      unparsedCache.proposals[proposalId].positiveStakes = bnum(unparsedCache.proposals[proposalId].positiveStakes);\n      unparsedCache.proposals[proposalId].negativeStakes = bnum(unparsedCache.proposals[proposalId].negativeStakes);\n    });\n    \n    Object.keys(unparsedCache.votingMachines).map((votingMachineAddress) => {\n      Object.keys(unparsedCache.votingMachines[votingMachineAddress].votingParameters)\n        .map((paramsHash) => {\n          const unparsedParams = unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash];\n        unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash] = {\n          queuedVoteRequiredPercentage: bnum(unparsedParams.queuedVoteRequiredPercentage),\n          queuedVotePeriodLimit: bnum(unparsedParams.queuedVotePeriodLimit),\n          boostedVotePeriodLimit: bnum(unparsedParams.boostedVotePeriodLimit),\n          preBoostedVotePeriodLimit: bnum(unparsedParams.preBoostedVotePeriodLimit),\n          thresholdConst: bnum(unparsedParams.thresholdConst),\n          limitExponentValue: bnum(unparsedParams.limitExponentValue),\n          quietEndingPeriod: bnum(unparsedParams.quietEndingPeriod),\n          proposingRepReward: bnum(unparsedParams.proposingRepReward),\n          votersReputationLossRatio: bnum(unparsedParams.votersReputationLossRatio),\n          minimumDaoBounty: bnum(unparsedParams.minimumDaoBounty),\n          daoBountyConst: bnum(unparsedParams.daoBountyConst),\n          activationTime: bnum(unparsedParams.activationTime)\n        };\n      })\n    })\n    return unparsedCache;\n  }\n  \n  getCache(): DaoNetworkCache {\n    return this.daoCache;\n  }\n  \n  setCache(newNetworkCache: DaoNetworkCache) {\n    this.daoCache = this.parseCache(newNetworkCache);\n    console.debug('Cache SET]', this.daoCache);\n  }\n\n  getDaoInfo(): DaoInfo {\n    return this.getCache().daoInfo;\n  }\n  \n  getSchemeProposalsByName(_schemeName: string): Proposal[] {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getSchemeByName(_schemeName: string): Scheme {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let schemeInfo;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeInfo = this.getCache().schemes[schemeAddress];\n        break;\n      }\n    }\n    return schemeInfo;\n  }\n  \n  getSchemeProposals(schemeAddress: string): Proposal[] {\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getAmountOfProposalsPreBoostedInScheme(schemeAddress: string): number {\n    return this.getSchemeProposals(schemeAddress).filter((proposal) => {\n      return (proposal.stateInVotingMachine == 4)\n    }).length;\n  }\n  \n  getGovernanceInfo(): any {\n    let users = {},\n    totalPositiveVotes = 0,\n    totalPositiveVotesAmount = bnum(0),\n    totalNegativeVotes = 0,\n    totalNegativeVotesAmount = bnum(0),\n    totalPositiveStakes = 0,\n    totalPositiveStakesAmount = bnum(0),\n    totalNegativeStakes = 0,\n    totalNegativeStakesAmount = bnum(0),\n    totalProposalsCreated = 0;\n    const cache = this.getCache();\n    let rep = [];\n    rep = _.sortBy(rep, [function(o) { return o[1]; }]);\n    rep.unshift([\"User Address\", \"REP %\"]);\n    \n    let repEvents = [];\n    let repTotalSupply = bnum(0);\n    let blockNumber = 0;\n    for (let i = 0; i < cache.daoInfo.repEvents.length; i++) {\n      if (cache.daoInfo.repEvents[i].event == \"Mint\")\n        repTotalSupply = repTotalSupply.plus(cache.daoInfo.repEvents[i].amount);\n      else if (cache.daoInfo.repEvents[i].event == \"Burn\")\n        repTotalSupply = repTotalSupply.minus(cache.daoInfo.repEvents[i].amount);\n      \n      if (cache.daoInfo.repEvents[i].l1BlockNumber > blockNumber){\n        blockNumber = cache.daoInfo.repEvents[i].l1BlockNumber;\n        repEvents.push([blockNumber, bnum(repTotalSupply).div(10**18).toNumber()])\n      }\n    }\n    repEvents.unshift([\"Block\", \"Total Rep\"]);\n\n    Object.keys(cache.votingMachines).map((votingMachineAddress) => {\n      cache.votingMachines[votingMachineAddress].events.votes.map((vote) => {\n        if (!users[vote.voter])\n          users[vote.voter] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[vote.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", vote.proposalId);\n        } else {\n          if (vote.vote == 1){\n            totalPositiveVotes ++;\n            totalPositiveVotesAmount = totalPositiveVotesAmount.plus(bnum(vote.amount));\n          } else {\n            totalNegativeVotes ++;\n            totalNegativeVotesAmount = totalNegativeVotesAmount.plus(bnum(vote.amount));\n          }\n          if (cache.proposals[vote.proposalId].winningVote == vote.vote){\n            users[vote.voter].correctVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 3;\n            \n          } else {\n            users[vote.voter].wrongVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 1;\n          }\n        }\n      })\n      cache.votingMachines[votingMachineAddress].events.stakes.map((stake) => {\n        if (!users[stake.staker])\n          users[stake.staker] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[stake.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", stake.proposalId);\n        } else {\n          if (stake.vote == 1){\n            totalPositiveStakes ++;\n            totalPositiveStakesAmount = totalPositiveStakesAmount.plus(bnum(stake.amount));\n          } else {\n            totalNegativeStakes ++;\n            totalNegativeStakesAmount = totalNegativeStakesAmount.plus(bnum(stake.amount));\n          }\n          \n          if (cache.proposals[stake.proposalId].winningVote == stake.vote){\n            users[stake.staker].correctStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n            users[stake.staker].score += 1;\n          } else {\n            users[stake.staker].wrongStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n          }\n        }\n      });\n    })\n\n\n    Object.keys(cache.proposals).map( (proposalId) => {\n      \n      const proposalCreator = cache.proposals[proposalId].proposer;\n      \n      if (proposalCreator != \"0x0000000000000000000000000000000000000000\") {\n        if (!users[proposalCreator])\n          users[proposalCreator] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n          \n        const score = cache.proposals[proposalId].positiveVotes.plus(cache.proposals[proposalId].negativeVotes)\n          .div(this.getRepAt().totalSupply).div(\"0.20\").times(\"10\").toFixed(2);\n        users[proposalCreator].score += Math.min(Math.min(Number(score), 1), 30);\n        users[proposalCreator].proposals ++;\n      } else {\n        console.debug(\n          \"Couldnt get proposer for proposal\", proposalId, \"in scheme\",\n          cache.schemes[cache.proposals[proposalId].scheme].name,\n          \"in transaction\", cache.proposals[proposalId].creationEvent.tx\n        )\n      }\n      totalProposalsCreated ++;\n\n    });\n    \n    return {\n      totalPositiveVotes,\n      totalPositiveVotesAmount,\n      totalNegativeVotes,\n      totalNegativeVotesAmount,\n      totalPositiveStakes,\n      totalPositiveStakesAmount,\n      totalNegativeStakes,\n      totalNegativeStakesAmount,\n      totalProposalsCreated,\n      rep,\n      repEvents,\n      ranking: _.orderBy(\n        Object.keys(users).map(key => ( Object.assign({ address: key }, users[key]) )), [\"score\"], [\"desc\"]\n      )\n    }\n  }\n  \n  getAllProposals(): Proposal[] {\n    const allProposals = Object.keys(this.getCache().proposals)\n      .map( (proposalId) => {return this.getCache().proposals[proposalId] } );\n    return _.orderBy(\n      allProposals ,\n      [\"creationEvent.l1BlockNumber\", \"creationEvent.l2BlockNumber\", \"creationEvent.transactionIndex\", \"creationEvent.logIndex\"],\n      [\"asc\",\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  getAllSchemes(): Scheme[] {\n    const schemeAddresses = Object.keys(this.getCache().schemes);\n    return schemeAddresses.map( (schemeAddress) => {return this.getCache().schemes[schemeAddress] } );\n  }\n  \n  getProposal(proposalId): Proposal {\n    return this.getCache().proposals[proposalId];\n  }\n  \n  getScheme(schemeAddress): Scheme {\n    return this.getCache().schemes[schemeAddress];\n  }\n  \n  getVotingMachineOfProposal(proposalId): string {\n    return this.getCache().schemes[\n      this.getCache().proposals[proposalId].scheme\n    ].votingMachine;\n  }\n  \n  getVotingParametersOfProposal(proposalId): VotingMachineParameters {\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)].votingParameters[\n      this.getCache().proposals[proposalId].paramsHash\n    ];\n  }\n  \n  getVotingParametersOfScheme(schemeAddress): VotingMachineParameters {\n    const scheme = this.getCache().schemes[schemeAddress];\n    return this.getCache().votingMachines[scheme.votingMachine].votingParameters[ scheme.paramsHash ];\n  }\n  \n  getProposalEvents(proposalId): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    stateChanges: ProposalStateChange[],\n    history: {\n      text: string,\n      event: any\n    }[]\n  }{\n    const proposalEvents = {\n      votes: this.getVotesOfProposal(proposalId),\n      stakes: this.getStakesOfProposal(proposalId),\n      redeems: this.getRedeemsOfProposal(proposalId),\n      redeemsRep: this.getRedeemsRepOfProposal(proposalId),\n      stateChanges: this.getProposalStateChanges(proposalId)\n    }\n    \n    const proposal = this.getProposal(proposalId);\n    const totalRep = this.getRepAt().totalSupply;\n    \n    let history = proposalEvents.votes.map((event) => {\n      return {\n        text: `Vote from ${event.voter} of ${(bnum(event.amount)).times('100').div(totalRep).toFixed(4)} % REP on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Stake from ${event.staker} of ${normalizeBalance(event.amount).toString()} DXD on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stateChanges.map((event) => {\n      return {\n        text: `Proposal change to state ${VotingMachineProposalState[event.state]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history.push({\n      text: `Proposal created by ${proposal.proposer}`,\n      event: {\n        proposalId: proposal.id,\n        tx: proposal.creationEvent.tx,\n        block: proposal.creationEvent.l1BlockNumber,\n        transactionIndex: proposal.creationEvent.transactionIndex,\n        logIndex: proposal.creationEvent.logIndex,\n        timestamp: proposal.creationEvent.timestamp\n      }\n    });\n    \n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      stateChanges: proposalEvents.stateChanges,\n      history: history\n    }\n  }\n  \n  getUser(userAddress): {\n    repBalance: BigNumber,\n    repPercentage: string\n  } {\n    const { providerStore } = this.context;\n    const { userRep, totalSupply } = this.getRepAt(userAddress, providerStore.getCurrentBlockNumber())\n    return {\n      repBalance: userRep,\n      repPercentage: userRep ? formatPercentage(userRep.div(totalSupply), 2, false) : \"0\"\n    }\n  }\n  \n  getUserEvents(userAddress): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    newProposal: ProposalEvent[],\n    history: {\n      text: string,\n      event: any\n    }[]\n  }{\n    \n    let history : {\n      text: string,\n      event: any\n    }[] = [];\n    \n    const cache = this.getCache();\n    const votingMachines = this.context.configStore.getNetworkContracts().votingMachines;\n    let proposalEvents = {\n      votes: [],\n      stakes: [],\n      redeems: [],\n      redeemsRep: []\n    };\n    if (votingMachines.gen) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.gen.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.gen.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.gen.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.gen.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n\n    if (votingMachines.dxd && cache.votingMachines[votingMachines.dxd.address]) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.dxd.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.dxd.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.dxd.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.dxd.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n    \n    const newProposalEvents: ProposalEvent[] = \n    Object.keys(_.pickBy(cache.proposals, (proposal) => proposal.proposer == userAddress))\n      .map((proposalId) => {\n        history.push({\n          text: `Proposal ${proposalId} created`,\n          event: {\n            proposalId: proposalId,\n            tx: cache.proposals[proposalId].creationEvent.tx,\n            block: cache.proposals[proposalId].creationEvent.l1BlockNumber,\n            transactionIndex: cache.proposals[proposalId].creationEvent.transactionIndex,\n            logIndex: cache.proposals[proposalId].creationEvent.logIndex,\n            timestamp: cache.proposals[proposalId].creationEvent.timestamp\n          }\n        })\n        return Object.assign({ proposalId: proposalId, }, cache.proposals[proposalId].creationEvent);\n      });\n\n    history = history.concat(proposalEvents.votes.map((event) => {\n      return {\n        text: `Voted with ${event.amount} REP for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Staked ${event.amount} DXD for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      newProposal: newProposalEvents,\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      history: history\n    }\n  }\n  \n  getProposalStatus(proposalId: string): any {\n    const proposal = this.getCache().proposals[proposalId];\n    const proposalStateChangeEvents = this.getProposalStateChanges(proposalId);\n    const scheme = this.getCache().schemes[proposal.scheme];\n    const votingMachineOfProposal = this.getVotingMachineOfProposal(proposalId);\n    const networkContracts = this.context.configStore.getNetworkContracts();\n    const votingMachineParams = \n    (proposal.paramsHash == \"0x0000000000000000000000000000000000000000000000000000000000000000\")\n    ? this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[scheme.paramsHash]\n    : this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[proposal.paramsHash];\n    \n    const autoBoost = (networkContracts.votingMachines.dxd && networkContracts.votingMachines.dxd.address == votingMachineOfProposal)\n    return decodeProposalStatus(\n      proposal, proposalStateChangeEvents, votingMachineParams, scheme.maxSecondsForExecution, autoBoost, scheme.type\n    );\n  }\n  \n  getVotesOfProposal(proposalId: string): Vote[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.votes\n      .filter((vote) => {return (proposalId === vote.proposalId)});\n  }\n  \n  getStakesOfProposal(proposalId: string): Stake[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.stakes\n      .filter((stake) => {return (proposalId === stake.proposalId)});\n  }\n  \n  getRedeemsOfProposal(proposalId: string): Redeem[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeems\n      .filter((redeem) => {return (proposalId === redeem.proposalId)});\n  }\n  \n  getRedeemsRepOfProposal(proposalId: string): RedeemRep[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeemsRep\n      .filter((redeemRep) => {return (proposalId === redeemRep.proposalId)});\n  }\n  \n  getProposalStateChanges(proposalId: string): ProposalStateChange[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.proposalStateChanges\n      .filter((proposalStateChange) => {return (proposalId === proposalStateChange.proposalId)});\n  }\n\n  getSchemeRecommendedCalls(schemeAddress): any {\n    const networkContracts = this.context.configStore.getNetworkContracts();\n    const { library } = this.context.providerStore.getActiveWeb3React();\n    const scheme = this.getScheme(schemeAddress);\n    const callPermissions = this.getCache().callPermissions;\n    let assetLimits = {};\n    const from = scheme.controllerAddress == networkContracts.controller ? networkContracts.avatar : schemeAddress;\n    let recommendedCalls = this.context.configStore.getRecommendedCalls();\n\n    Object.keys(callPermissions).map((assetAddress) => {\n      const callAllowance = this.getCallAllowance(assetAddress, from, schemeAddress, ANY_FUNC_SIGNATURE);\n      if (callAllowance.fromTime > 0 && callAllowance.value.lt(MAX_UINT))\n        assetLimits[assetAddress] = callAllowance.value;\n    })\n\n    for (let i = 0; i < recommendedCalls.length; i++) {\n      const callAllowance = this.getCallAllowance(\n        recommendedCalls[i].asset,\n        from,\n        recommendedCalls[i].to,\n        library.eth.abi.encodeFunctionSignature(recommendedCalls[i].functionName)\n      );\n      recommendedCalls[i][\"functionSignature\"] = library.eth.abi.encodeFunctionSignature(recommendedCalls[i].functionName)\n      recommendedCalls[i][\"value\"] = callAllowance.value;\n      recommendedCalls[i][\"fromTime\"] = callAllowance.fromTime;\n    }\n    \n    return { assetLimits, recommendedCalls };\n  }\n  \n  getCallAllowance(asset, from, to, functionSignature): any {\n    const networkContracts = this.context.configStore.getNetworkContracts();\n    const callPermissions = this.getCache().callPermissions;\n  \n    if (to == networkContracts.controller && from != networkContracts.avatar) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (\n      asset == ZERO_ADDRESS\n      && to == networkContracts.permissionRegistry\n      && from == networkContracts.avatar\n    ) {\n      return {\n        value: bnum(0),\n        fromTime: 1\n      };\n    } else if (!callPermissions[asset] || !callPermissions[asset][from]) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (callPermissions[asset][from][to] && callPermissions[asset][from][to][functionSignature]) {\n      return {\n        value: callPermissions[asset][from][to][functionSignature].value,\n        fromTime: callPermissions[asset][from][to][functionSignature].fromTime\n      };\n    } else if (callPermissions[asset][from][to] && callPermissions[asset][from][to][ANY_FUNC_SIGNATURE]) {\n      return {\n        value: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].value,\n        fromTime: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].fromTime\n      };\n    } else if (callPermissions[asset][from][ANY_ADDRESS] && callPermissions[asset][from][ANY_ADDRESS][functionSignature]) {\n      return {\n        value: callPermissions[asset][from][ANY_ADDRESS][functionSignature].value,\n        fromTime: callPermissions[asset][from][ANY_ADDRESS][functionSignature].fromTime\n      };\n    } else if (callPermissions[asset][from][ANY_ADDRESS] && callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE]) {\n      return {\n        value: callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].value,\n        fromTime: callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].fromTime\n      };\n    } else {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    }\n  }\n  \n  getRepAt(userAddress: string = ZERO_ADDRESS, atBlock: number = 0): {\n    userRep: BigNumber,\n    totalSupply: BigNumber\n  } {\n    const { daoStore, providerStore, configStore } = this.context;\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\n    let userRep = bnum(0), totalSupply = bnum(0);\n    if (atBlock == 0)\n      atBlock = providerStore.getCurrentBlockNumber();\n    const inL2 = configStore.getActiveChainName().indexOf('arbitrum') > -1\n\n    for (let i = 0; i < repEvents.length; i++) {\n      if (repEvents[i][inL2 ? 'l2BlockNumber' : 'l1BlockNumber'] <= atBlock) {\n        if (repEvents[i].event === 'Mint') {\n          totalSupply = totalSupply.plus(repEvents[i].amount)\n          if (repEvents[i].account == userAddress)\n            userRep = userRep.plus(repEvents[i].amount)\n        } else if (repEvents[i].event === 'Burn') {\n          totalSupply = totalSupply.minus(repEvents[i].amount)\n          if (repEvents[i].account == userAddress)\n            userRep = userRep.minus(repEvents[i].amount)\n        }\n      }\n    }\n    return { userRep, totalSupply };\n  }\n    \n  getUsersRep(): {\n    [userAddress: string]: BigNumber\n  } {\n    const { daoStore, providerStore } = this.context;\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\n    let users = {}\n    const atBlock = providerStore.getCurrentBlockNumber();\n\n    for (let i = 0; i < repEvents.length; i++) {\n      if (repEvents[i].l1BlockNumber <= atBlock) {\n        if (repEvents[i].event === 'Mint') {\n          if (!users[repEvents[i].account])\n            users[repEvents[i].account] = repEvents[i].amount;\n          else\n            users[repEvents[i].account] = users[repEvents[i].account].plus(repEvents[i].amount);\n        } else if (repEvents[i].event === 'Burn') {\n          if (users[repEvents[i].account])\n            users[repEvents[i].account] = users[repEvents[i].account].minus(repEvents[i].amount);\n        }\n      }\n    }\n    return users;\n  }\n  \n}\n","import { makeObservable, observable, action } from 'mobx';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport RootContext from '../contexts';\nimport { ContractType } from './Provider';\nimport { BigNumber, bnum } from '../utils';\nimport { executeMulticall } from '../utils/cache';\n\nexport default class UserStore {\n  userInfo: { \n    address: string,\n    ethBalance: BigNumber,\n    repBalance: BigNumber,\n    dxdBalance: BigNumber,\n    dxdApproved: BigNumber,\n    genBalance: BigNumber,\n    genApproved: BigNumber\n  };\n  context: RootContext;\n\n  constructor(context) {\n    this.context = context;\n    this.userInfo = {\n      address: context.providerStore.getActiveWeb3React(),\n      ethBalance: bnum(0),\n      repBalance: bnum(0),\n      dxdBalance: bnum(0),\n      dxdApproved: bnum(0),\n      genBalance: bnum(0),\n      genApproved: bnum(0)\n    };\n    makeObservable(this, {\n        userInfo: observable,\n        update: action\n      }\n    );\n  }\n  \n  getUserInfo() {\n    return this.userInfo;\n  }\n\n  async update(web3React: Web3ReactContextInterface) {\n    const { configStore, providerStore, daoStore, transactionStore } = this.context;\n    const networkContracts = configStore.getNetworkContracts();\n    const account = web3React.account;\n    \n    transactionStore.checkPendingTransactions(web3React, account);\n    let callsToExecute = [[\n      providerStore.getContract(web3React, ContractType.Multicall, networkContracts.utils.multicall),\n      'getEthBalance',\n      [account],\n    ]];\n    \n    if (networkContracts.votingMachines.gen) {\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.gen.token),\n        'balanceOf',\n        [account],\n      ]);\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.gen.token),\n        'allowance',\n        [account, networkContracts.votingMachines.gen.address],\n      ]);\n    }\n    if (networkContracts.votingMachines.dxd) {\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.dxd.token),\n        'balanceOf',\n        [account],\n      ]);\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.dxd.token),\n        'allowance',\n        [account, networkContracts.votingMachines.dxd.address],\n      ]);\n    }\n    \n    const callsResponse = await executeMulticall(\n      web3React.library,\n      providerStore.getContract(web3React, ContractType.Multicall, networkContracts.utils.multicall),\n      callsToExecute\n    );\n    \n    let userInfo = this.userInfo;\n    userInfo.repBalance = account && daoStore.daoCache ? daoStore.getRepAt(account, providerStore.getCurrentBlockNumber()).userRep : bnum(0);\n\n    // TO DO: Improve this mess of ifs\n    userInfo.ethBalance = account ? bnum(callsResponse.decodedReturnData[0]) : bnum(0);\n    userInfo.genBalance = (account && networkContracts.votingMachines.gen) ? bnum(callsResponse.decodedReturnData[1]) : bnum(0);\n    userInfo.genApproved = (account && networkContracts.votingMachines.gen) ? bnum(callsResponse.decodedReturnData[2]) : bnum(0);\n    userInfo.dxdBalance = (account && networkContracts.votingMachines.dxd && networkContracts.votingMachines.gen)\n      ? bnum(callsResponse.decodedReturnData[3])\n      : (account && networkContracts.votingMachines.dxd && !networkContracts.votingMachines.gen) \n      ? bnum(callsResponse.decodedReturnData[1])\n      : bnum(0);\n    userInfo.dxdApproved = (account && networkContracts.votingMachines.dxd && networkContracts.votingMachines.gen)\n      ? bnum(callsResponse.decodedReturnData[4])\n      : (account && networkContracts.votingMachines.dxd && !networkContracts.votingMachines.gen) \n      ? bnum(callsResponse.decodedReturnData[2])\n      : bnum(0);\n      \n    this.userInfo = userInfo;\n  }\n  \n}\n","const PermissionRegistry = require(\"./PermissionRegistry\");\nconst DxController = require(\"./DxController\");\nconst DxAvatar = require(\"./DxAvatar\");\nconst DxReputation = require(\"./DxReputation\");\nconst DXDVotingMachine = require(\"./DXDVotingMachine\");\nconst GenesisProtocol = require(\"./GenesisProtocol\");\nconst ERC20 = require(\"./ERC20\");\nconst Multicall = require(\"./Multicall\");\n\nexport const getContracts = async function(networkConfig: NetworkContracts, web3: any) {\n  const avatar = await new web3.eth.Contract(DxAvatar.abi, networkConfig.avatar);\n  const controller = await new web3.eth.Contract(DxController.abi, networkConfig.controller);\n  const reputation = await new web3.eth.Contract(DxReputation.abi, networkConfig.reputation);\n  const permissionRegistry = await new web3.eth.Contract(PermissionRegistry.abi, networkConfig.permissionRegistry);\n  const multicall = await new web3.eth.Contract(Multicall.abi, networkConfig.utils.multicall);\n\n  let votingMachines = {};\n\n  if (networkConfig.votingMachines.gen)\n    votingMachines[networkConfig.votingMachines.gen.address] = {\n      name: \"GenesisProtocol\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen.token)\n    }\n    \n  if (networkConfig.votingMachines.gen2)\n    votingMachines[networkConfig.votingMachines.gen2.address] = {\n      name: \"GenesisProtocol2\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen2.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen2.token)\n    }\n  \n  if (networkConfig.votingMachines.dxd)\n    votingMachines[networkConfig.votingMachines.dxd.address] = {\n      name: \"DXDVotingMachine\",\n      contract: await new web3.eth.Contract(DXDVotingMachine.abi, networkConfig.votingMachines.dxd.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.dxd.token)\n    }\n  \n  return { votingMachines, avatar, controller, reputation, permissionRegistry, multicall };\n  \n}\n","import axios from 'axios';\nimport {\n  bnum,\n  ZERO_HASH,\n  ZERO_ADDRESS,\n  sleep,\n  decodePermission,\n  decodeSchemeParameters,\n  WalletSchemeProposalState,\n  VotingMachineProposalState\n} from '../utils';\nimport {\n  getEvents,\n  getRawEvents,\n  sortEvents,\n  executeMulticall,\n  isNode,\n  descriptionHashToIPFSHash,\n  ipfsHashToDescriptionHash,\n  getSchemeTypeData\n} from '../utils/cache';\nimport WalletSchemeJSON from '../contracts/WalletScheme.json';\nimport ContributionRewardJSON from '../contracts/ContributionReward.json';\nimport { getContracts } from '../contracts';\n\nexport const getUpdatedCache = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  console.debug('[Cache Update]', fromBlock, toBlock);\n  const networkContracts = await getContracts(networkConfig, web3);\n  \n  (await Promise.all([\n    updateDaoInfo(networkCache, networkContracts, web3),\n    updateReputationEvents(networkCache, networkContracts.reputation, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n  \n  await Promise.all(Object.keys(networkContracts.votingMachines).map(async (votingMachineAddress) => {\n  \n    if (!networkCache.votingMachines[votingMachineAddress])\n      networkCache.votingMachines[votingMachineAddress] = {\n        name: networkContracts.votingMachines[votingMachineAddress].name,\n        events: {\n          votes: [],\n          stakes: [],\n          redeems: [],\n          redeemsRep: [],\n          proposalStateChanges: [],\n          newProposal: []\n        },\n        token: networkContracts.votingMachines[votingMachineAddress].token._address,\n        votingParameters: {}\n      };\n  \n    networkCache = await updateVotingMachine(\n      networkCache,\n      networkContracts.avatar._address,\n      networkContracts.votingMachines[votingMachineAddress].contract,\n      networkContracts.multicall,\n      fromBlock,\n      toBlock,\n      web3\n    );\n  \n  }));\n  \n  networkCache = await updateSchemes(networkCache, networkConfig, fromBlock, toBlock, web3);\n  \n  (await Promise.all([\n    updatePermissionRegistry(networkCache, networkConfig, fromBlock, toBlock, web3),\n    updateProposals(networkCache, networkConfig, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n\n  networkCache.l1BlockNumber = Number(toBlock);\n  networkCache.l2BlockNumber = 0;\n  \n  console.debug('Total Proposals', Object.keys(networkCache.proposals).length);\n\n  return networkCache;\n}\n\n// Update the DAOinfo field in cache\nexport const updateDaoInfo = async function (\n  networkCache: DaoNetworkCache, networkContracts: any, web3: any\n): Promise<DaoNetworkCache> {\n  let callsToExecute = [\n    [networkContracts.reputation, \"totalSupply\", []],\n    [networkContracts.multicall, \"getEthBalance\", [networkContracts.avatar._address]]\n  ];\n  const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n  networkCache.daoInfo.address = networkContracts.avatar._address;\n  networkCache.daoInfo.repEvents = !networkCache.daoInfo.repEvents ? [] : networkCache.daoInfo.repEvents;\n  networkCache.daoInfo.totalRep = bnum(callsResponse.decodedReturnData[0]);\n  networkCache.daoInfo.ethBalance = bnum(callsResponse.decodedReturnData[1]);\n  if (!networkCache.daoInfo.tokenBalances)\n    networkCache.daoInfo.tokenBalances = {};\n  return networkCache;\n}\n\n// Get all Mint and Burn reputation events to calculate rep by time off chain\nexport const updateReputationEvents = async function (\n  networkCache: DaoNetworkCache, reputation: any, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n\n  if (!networkCache.daoInfo.repEvents)\n    networkCache.daoInfo.repEvents = [];\n\n  let reputationEvents = sortEvents( await getEvents(web3, reputation, fromBlock, toBlock, 'allEvents'));\n\n  reputationEvents.map((reputationEvent) => {\n    switch (reputationEvent.event) {\n      case \"Mint\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._to,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n      break;\n      case \"Burn\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._from,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n      break;\n    }\n  });\n  \n  return networkCache;\n}\n\n// Update all voting machine information, events, token and voting parameters used.\nexport const updateVotingMachine = async function (\n  networkCache: DaoNetworkCache,\n  avatarAddress: string,\n  votingMachine: any,\n  multicall: any,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n\n  let newVotingMachineEvents = sortEvents(\n    await getEvents(web3, votingMachine, fromBlock, toBlock, 'allEvents')\n  );\n  const votingMachineEventsInCache = networkCache.votingMachines[votingMachine._address].events;\n  const votingMachineParamsHash = [];\n\n  newVotingMachineEvents.map((votingMachineEvent) => {\n    const proposalCreated = votingMachineEventsInCache.newProposal\n      .findIndex(newProposalEvent => votingMachineEvent.returnValues._proposalId == newProposalEvent.proposalId) > -1;\n    \n    if (votingMachineEvent.returnValues._organization == avatarAddress\n      || (votingMachineEvent.event == \"StateChange\" && proposalCreated))\n      switch (votingMachineEvent.event) {\n        case \"NewProposal\":\n          votingMachineEventsInCache.newProposal.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            proposer: votingMachineEvent.returnValues._proposer,\n            paramHash: votingMachineEvent.returnValues._paramsHash,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n          \n        if (votingMachineParamsHash.indexOf(votingMachineEvent.returnValues._paramsHash) < 0)\n          votingMachineParamsHash.push(votingMachineEvent.returnValues._paramsHash);\n        break;\n        case \"StateChange\":\n          votingMachineEventsInCache.proposalStateChanges.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            state: votingMachineEvent.returnValues._proposalState,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"VoteProposal\":\n          \n          const preBoosted = votingMachineEventsInCache.proposalStateChanges\n            .findIndex(i => i.state === \"5\") >= 0;\n\n          votingMachineEventsInCache.votes.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            voter: votingMachineEvent.returnValues._voter,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._reputation,\n            preBoosted: preBoosted,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Stake\":\n        votingMachineEventsInCache.stakes.push({\n          event: votingMachineEvent.event,\n          signature: votingMachineEvent.signature,\n          address: votingMachineEvent.address,\n            staker: votingMachineEvent.returnValues._staker,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._amount,\n            amount4Bounty: bnum(\"0\"),\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Redeem\":\n          votingMachineEventsInCache.redeems.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"RedeemReputation\":\n          votingMachineEventsInCache.redeemsRep.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n      }\n  });\n  \n  const callsToExecute = [];\n  for (let i = 0; i < votingMachineParamsHash.length; i++) {\n    callsToExecute.push([\n      votingMachine,\n      \"parameters\",\n      [votingMachineParamsHash[i]]\n    ]);\n  }\n\n  const callsResponse = await executeMulticall(web3, multicall, callsToExecute);\n\n  for (let i = 0; i < callsResponse.returnData.length; i++) {\n    networkCache.votingMachines[votingMachine._address].votingParameters[ votingMachineParamsHash[i] ] =\n      decodeSchemeParameters(web3.eth.abi.decodeParameters(\n        [\n          {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n          {type: 'uint256', name: 'queuedVotePeriodLimit' },\n          {type: 'uint256', name: 'boostedVotePeriodLimit' },\n          {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n          {type: 'uint256', name: 'thresholdConst' },\n          {type: 'uint256', name: 'limitExponentValue' },\n          {type: 'uint256', name: 'quietEndingPeriod' },\n          {type: 'uint256', name: 'proposingRepReward' },\n          {type: 'uint256', name: 'votersReputationLossRatio' },\n          {type: 'uint256', name: 'minimumDaoBounty' },\n          {type: 'uint256', name: 'daoBountyConst' },\n          {type: 'uint256', name: 'activationTime' }\n        ], callsResponse.returnData[i])\n      );\n    }\n  \n  networkCache.votingMachines[votingMachine._address].events = votingMachineEventsInCache;\n\n  return networkCache;\n}\n\n// Gets all teh events form the permission registry and stores the permissions set.\nexport const updatePermissionRegistry = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  const networkContracts = await getContracts(networkConfig, web3);\n  if (networkContracts.permissionRegistry._address != ZERO_ADDRESS) {\n  \n    let permissionRegistryEvents = sortEvents(\n      await getEvents(web3, networkContracts.permissionRegistry, fromBlock, toBlock, 'allEvents')\n    );\n    permissionRegistryEvents.map((permissionRegistryEvent) => {\n      const eventValues = permissionRegistryEvent.returnValues;\n      \n      if (!networkCache.callPermissions[eventValues.asset])\n        networkCache.callPermissions[eventValues.asset] = {};\n        \n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from])\n        networkCache.callPermissions[eventValues.asset][eventValues.from] = {};\n        \n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to])\n        networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to] = {};\n      \n      networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to][eventValues.functionSignature] = {\n        value: eventValues.value,\n        fromTime: eventValues.fromTime\n      };\n    });\n  }\n  \n  return networkCache;\n}\n\n// Update all the schemes information\nexport const updateSchemes = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  const networkContracts = await getContracts(networkConfig, web3);\n\n  let controllerEvents = sortEvents(\n    await getEvents(web3, networkContracts.controller, fromBlock, toBlock, 'allEvents')\n  );\n  \n  for (let controllerEventsIndex = 0; controllerEventsIndex < controllerEvents.length; controllerEventsIndex++) {\n    const controllerEvent = controllerEvents[controllerEventsIndex];\n    \n    const schemeAddress = controllerEvent.returnValues._scheme;\n    \n    // Add or update the scheme information, register scheme is used to add and updates scheme parametersHash\n    if (controllerEvent.event == \"RegisterScheme\") {\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      console.debug('Register Scheme event for ', schemeAddress, schemeTypeData.name);\n      \n      let callsToExecute = [\n        [networkContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [networkContracts.controller, \"getSchemePermissions\", [schemeAddress, networkContracts.avatar._address]],\n        [networkContracts.controller, \"getSchemeParameters\", [schemeAddress, networkContracts.avatar._address]]\n      ];\n      \n      if (schemeTypeData.type == 'WalletScheme') {\n        const walletSchemeContract = await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress);\n        callsToExecute.push([walletSchemeContract, \"controllerAddress\", []]);\n        callsToExecute.push([walletSchemeContract, \"schemeName\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxSecondsForExecution\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxRepPercentageChange\", []]);\n      }\n      \n      const callsResponse1 = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const ethBalance = callsResponse1.decodedReturnData[0];\n      \n      const permissions = decodePermission(callsResponse1.decodedReturnData[1]);\n      const paramsHash = schemeTypeData.voteParams\n        ? schemeTypeData.voteParams\n        : callsResponse1.decodedReturnData[2];\n\n      const controllerAddress = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[3]\n        : networkContracts.avatar._address;\n      const schemeName = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[4]\n        : schemeTypeData.name;\n      const maxSecondsForExecution = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[5]\n        : 0;\n      const maxRepPercentageChange = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[6]\n        : 0;\n      \n      callsToExecute = [];\n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([\n          votingMachine,\n          \"getBoostedVoteRequiredPercentage\",\n          [schemeAddress, networkContracts.avatar._address, paramsHash]\n        ]);\n      }\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        callsToExecute.push([\n          votingMachine,\n          \"parameters\",\n          [paramsHash]\n        ]);\n      }\n\n      const callsResponse2 = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse2.returnData[0])['0']\n        : 0;\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        try {\n          networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash] =\n          decodeSchemeParameters(web3.eth.abi.decodeParameters(\n            [\n              {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n              {type: 'uint256', name: 'queuedVotePeriodLimit' },\n              {type: 'uint256', name: 'boostedVotePeriodLimit' },\n              {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n              {type: 'uint256', name: 'thresholdConst' },\n              {type: 'uint256', name: 'limitExponentValue' },\n              {type: 'uint256', name: 'quietEndingPeriod' },\n              {type: 'uint256', name: 'proposingRepReward' },\n              {type: 'uint256', name: 'votersReputationLossRatio' },\n              {type: 'uint256', name: 'minimumDaoBounty' },\n              {type: 'uint256', name: 'daoBountyConst' },\n              {type: 'uint256', name: 'activationTime' }\n            ], callsResponse2.returnData[1])\n          );\n        } catch (error) {\n          console.error(\"Error getting parameters configuration for\", schemeTypeData.name);\n        }\n      }\n    \n      if (!networkCache.schemes[schemeAddress]) {\n        networkCache.schemes[schemeAddress] = {\n          address: schemeAddress,\n          registered: true,\n          controllerAddress,\n          name: schemeName,\n          type: schemeTypeData.type,\n          ethBalance: ethBalance,\n          tokenBalances: {},\n          votingMachine: schemeTypeData.votingMachine,\n          paramsHash: paramsHash,\n          permissions,\n          boostedVoteRequiredPercentage,\n          proposalIds: [],\n          boostedProposals: 0,\n          maxSecondsForExecution,\n          maxRepPercentageChange,\n          newProposalEvents: []\n        };\n      } else {\n        networkCache.schemes[schemeAddress].paramsHash = paramsHash;\n        networkCache.schemes[schemeAddress].permissions = permissions;\n        networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n      }\n    \n    // Mark scheme as not registered but save all previous data\n    } else if (\n      controllerEvent.event == \"UnregisterScheme\" && \n      // This condition is added to skip the first scheme added (that is the dao creator account)\n      (controllerEvent.returnValues._sender != schemeAddress)\n    ) {\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      console.debug('Unregister scheme event', schemeAddress, schemeTypeData.name);\n      let callsToExecute = [\n        [networkContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, networkContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n      }\n      const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n      \n      // Update the scheme values a last time\n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].registered = false;\n    }\n    \n  };\n  \n  // Update registered schemes\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    if (networkCache.schemes[schemeAddress].registered) {\n      \n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      let callsToExecute = [\n        [networkContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, networkContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n        callsToExecute.push([\n          votingMachine,\n          \"boostedVoteRequiredPercentage\",\n          [web3.utils.soliditySha3(schemeAddress, networkContracts.avatar._address), networkCache.schemes[schemeAddress].paramsHash]\n        ])\n      }\n      const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n        \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse.returnData[3])['0']\n        : 0;\n      \n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n    }\n\n  }));\n  \n  return networkCache;\n};\n\n// Update all the proposals information\nexport const updateProposals = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  \n  const networkContracts = await getContracts(networkConfig, web3);\n  const avatarAddress = networkContracts.avatar._address;\n  const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', avatarAddress);\n  \n  // Get new proposals\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    \n    const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n    const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n  \n    let schemeEvents = [];\n    for (let i = 0; i < schemeTypeData.newProposalTopics.length; i++) {\n      schemeEvents = schemeEvents.concat(await getRawEvents(\n        web3,\n        schemeAddress,\n        fromBlock,\n        toBlock,\n        schemeTypeData.newProposalTopics[i]\n      ));\n    }\n    \n    console.debug(\"Getting proposals of\", schemeTypeData.name, schemeEvents.length);\n    \n    let schemeEventsBatchs = [];\n    let schemeEventsBatchsIndex = 0;\n    for (var i = 0; i < schemeEvents.length; i += 50)\n      schemeEventsBatchs.push(schemeEvents.slice(i, i + 50));\n    \n    while(schemeEventsBatchsIndex < schemeEventsBatchs.length) {\n      \n      try {\n        console.debug(\"Getting proposals in event batch index\", schemeEventsBatchsIndex, \"in\", schemeTypeData.name,);\n        await Promise.all(schemeEventsBatchs[schemeEventsBatchsIndex].map(async (schemeEvent) => {\n          const proposalId = (schemeEvent.topics[1] == avatarAddressEncoded)\n          ? web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[2])\n          : web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[1]);\n          // Get all the proposal information from the scheme and voting machine\n          let callsToExecute = [\n            [ \n              votingMachine,\n              \"proposals\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                1] ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                2] ],\n            [ \n              votingMachine,\n              \"proposalStatus\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"getProposalTimes\",\n              [proposalId]\n            ]\n          ];\n\n          if (schemeTypeData.type == 'WalletScheme') {\n            callsToExecute.push([ \n              await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n              \"getOrganizationProposal\", [proposalId]\n            ]);\n          } else if (schemeTypeData.type == 'ContributionReward') {\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 0]\n            ]);\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 1]\n            ]);\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 2]\n            ]);\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 3]\n            ]);\n          }\n          \n          const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n          \n          const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n            [\n              {type: 'bytes32', name: 'organizationId' },\n              {type: 'address', name: 'callbacks' },\n              {type: 'uint256', name: 'state' },\n              {type: 'uint256', name: 'winningVote' },\n              {type: 'address', name: 'proposer' },\n              {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n              {type: 'bytes32', name: 'paramsHash' },\n              {type: 'uint256', name: 'daoBountyRemain' },\n              {type: 'uint256', name: 'daoBounty' },\n              {type: 'uint256', name: 'totalStakes' },\n              {type: 'uint256', name: 'confidenceThreshold' },\n              {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n            ],\n            callsResponse.returnData[0]\n          );\n          const positiveVotes = callsResponse.returnData[1];\n          const negativeVotes = callsResponse.returnData[2];\n          \n          const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n            ['uint256','uint256','uint256','uint256'], \n            callsResponse.returnData[3]\n          );\n          const proposalTimes = callsResponse.decodedReturnData[4];\n          \n          let schemeProposalInfo = {\n            to: [],\n            callData: [],\n            value: [],\n            state: WalletSchemeProposalState.Submitted,\n            title: \"\",\n            descriptionHash: \"\",\n            submittedTime: 0\n          };\n          let decodedProposer;\n          let creationLogDecoded;\n          \n          if (schemeTypeData.type == 'WalletScheme') {\n            schemeProposalInfo = web3.eth.abi.decodeParameters(\n                [ \n                  {type: 'address[]', name: 'to' },\n                  {type: 'bytes[]', name: 'callData' },\n                  {type: 'uint256[]', name: 'value' },\n                  {type: 'uint256', name: 'state' },\n                  {type: 'string', name: 'title' },\n                  {type: 'string', name: 'descriptionHash' },\n                  {type: 'uint256', name: 'submittedTime' }\n                ],\n                callsResponse.returnData[5]\n              );\n          } else {\n            if (schemeTypeData.type == 'ContributionReward') {\n              if (\n                callsResponse.decodedReturnData[5] > 0\n                || callsResponse.decodedReturnData[6] > 0\n                || callsResponse.decodedReturnData[7] > 0\n                || callsResponse.decodedReturnData[8] > 0\n              ) {\n                schemeProposalInfo.state = WalletSchemeProposalState.ExecutionSucceded;\n              } else if (votingMachineProposalInfo.state == \"1\" || votingMachineProposalInfo.state == \"2\") {\n                schemeProposalInfo.state = WalletSchemeProposalState.Rejected;\n              } else {\n                schemeProposalInfo.state = WalletSchemeProposalState.Submitted;\n              }\n            }\n            \n            const transactionReceipt = await web3.eth.getTransactionReceipt(schemeEvent.transactionHash);\n            try {\n              schemeTypeData.newProposalTopics.map((newProposalTopic, i) => {\n                transactionReceipt.logs.map((log) => {\n                  if (log.topics[0] == \"0x75b4ff136cc5de5957574c797de3334eb1c141271922b825eb071e0487ba2c5c\") {\n                    decodedProposer = web3.eth.abi.decodeParameters([\n                      { type:'uint256', name: \"_numOfChoices\"},\n                      { type:'address', name: \"_proposer\"},\n                      { type:'bytes32', name: \"_paramsHash\"}\n                    ], log.data)._proposer\n                  }\n                  if (!creationLogDecoded && (log.topics[0] == newProposalTopic[0])) {\n                    creationLogDecoded = web3.eth.abi.decodeParameters(schemeTypeData.creationLogEncoding[i], log.data)\n                    if (creationLogDecoded._descriptionHash.length > 0 && creationLogDecoded._descriptionHash != ZERO_HASH) {\n                      schemeProposalInfo.descriptionHash = ipfsHashToDescriptionHash(creationLogDecoded._descriptionHash);\n                    }\n                  }\n                  \n                })\n              });\n              \n            } catch (error) {\n              console.error('Error on adding content hash from tx', schemeEvent.transactionHash);\n            }\n            \n            if (schemeTypeData.type == 'SchemeRegistrar') {\n              \n              schemeProposalInfo.to = [schemeTypeData.contractToCall];\n              schemeProposalInfo.value = [0];\n              \n              if (creationLogDecoded._parametersHash) {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'registerScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'bytes32', name: '_paramsHash' },\n                      { type: 'bytes4', name: '_permissions' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    creationLogDecoded._parametersHash,\n                    creationLogDecoded._permissions,\n                    avatarAddress\n                  ]\n                )];\n              } else {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'unregisterScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    avatarAddress\n                  ]\n                )];\n              }\n              \n            } else if (schemeTypeData.type == \"ContributionReward\") {\n              \n              if (creationLogDecoded._reputationChange > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._reputationChange,\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              } else if (creationLogDecoded._reputationChange < 0) {\n\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'burnReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_from' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    bnum(creationLogDecoded._reputationChange).times(-1),\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[0] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintTokens',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_beneficiary' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[0],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[1] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'sendEther',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amountInWei' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[1],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[2] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'externalTokenTransfer',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_externalToken' },\n                      { type: 'address', name: '_to' },\n                      { type: 'uint256', name: '_value' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._externalToken,\n                    creationLogDecoded._beneficiary,\n                    creationLogDecoded._rewards[2],\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n            } else if (schemeTypeData.type == \"GenericScheme\") {\n              \n              schemeProposalInfo.to = [networkContracts.controller._address];\n              schemeProposalInfo.value = [0];\n              schemeProposalInfo.callData = [\n                web3.eth.abi.encodeFunctionCall({\n                  name: 'genericCall',\n                  type: 'function',\n                  inputs: [\n                    { type: 'address', name: '_contract' },\n                    { type: 'bytes', name: '_data' },\n                    { type: 'address', name: '_avatar' },\n                    { type: 'uint256', name: '_value' },\n                  ]\n                },[\n                  schemeTypeData.contractToCall,\n                  creationLogDecoded._data,\n                  avatarAddress,\n                  creationLogDecoded._value\n                ]\n              )];\n              \n            } else if (schemeTypeData.type == \"GenericMulticall\") {\n              for (let callIndex = 0; callIndex < creationLogDecoded._contractsToCall.length; callIndex++) {\n                schemeProposalInfo.to.push(networkContracts.controller._address);\n                schemeProposalInfo.value.push(0)\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'genericCall',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_contract' },\n                      { type: 'bytes', name: '_data' },\n                      { type: 'address', name: '_avatar' },\n                      { type: 'uint256', name: '_value' },\n                    ]\n                  },[\n                    creationLogDecoded._contractsToCall[callIndex],\n                    creationLogDecoded._callsData[callIndex],\n                    avatarAddress,\n                    creationLogDecoded._values[callIndex],\n                  ]\n                ));\n              }\n              \n            }\n          }\n          \n          networkCache.proposals[proposalId] = {\n            id: proposalId,\n            scheme: schemeAddress,\n            to: schemeProposalInfo.to,\n            title: schemeProposalInfo.title,\n            callData: schemeProposalInfo.callData,\n            values: schemeProposalInfo.value.map((value) => bnum(value)),\n            stateInScheme: Number(schemeProposalInfo.state),\n            stateInVotingMachine: Number(votingMachineProposalInfo.state),\n            descriptionHash: schemeProposalInfo.descriptionHash,\n            creationEvent: {\n              event: schemeEvent.event,\n              signature: schemeEvent.signature,\n              address: schemeEvent.address,\n              tx: schemeEvent.transactionHash,\n              l1BlockNumber: schemeEvent.l1BlockNumber,\n              l2BlockNumber: schemeEvent.l2BlockNumber,\n              timestamp: schemeEvent.timestamp,\n              transactionIndex: schemeEvent.transactionIndex,\n              logIndex: schemeEvent.logIndex\n            },\n            winningVote: votingMachineProposalInfo.winningVote,\n            proposer: decodedProposer ? decodedProposer : votingMachineProposalInfo.proposer,\n            currentBoostedVotePeriodLimit: votingMachineProposalInfo.currentBoostedVotePeriodLimit,\n            paramsHash: votingMachineProposalInfo.paramsHash,\n            daoBountyRemain: bnum(votingMachineProposalInfo.daoBountyRemain),\n            daoBounty: bnum(votingMachineProposalInfo.daoBounty),\n            totalStakes: bnum(votingMachineProposalInfo.totalStakes),\n            confidenceThreshold: votingMachineProposalInfo.confidenceThreshold,\n            secondsFromTimeOutTillExecuteBoosted: votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted,\n            submittedTime: bnum(proposalTimes[0]),\n            boostedPhaseTime: bnum(proposalTimes[1]),\n            preBoostedPhaseTime: bnum(proposalTimes[2]),\n            daoRedeemItsWinnings: votingMachineProposalInfo.daoRedeemItsWinnings,\n            shouldBoost: false,\n            positiveVotes: bnum(positiveVotes),\n            negativeVotes: bnum(negativeVotes),\n            preBoostedPositiveVotes: bnum(proposalStatusWithVotes[0]),\n            preBoostedNegativeVotes: bnum(proposalStatusWithVotes[1]),\n            positiveStakes: bnum(proposalStatusWithVotes[2]),\n            negativeStakes: bnum(proposalStatusWithVotes[3])\n          };\n          \n          networkCache.schemes[schemeAddress].proposalIds.push(proposalId);\n          networkCache.schemes[schemeAddress].newProposalEvents.push({\n            proposalId: proposalId,\n            event: schemeEvent.event,\n            signature: schemeEvent.signature,\n            address: schemeEvent.address,\n            tx: schemeEvent.transactionHash,\n            l1BlockNumber: schemeEvent.l1BlockNumber,\n            l2BlockNumber: schemeEvent.l2BlockNumber,\n            timestamp: schemeEvent.timestamp,\n            transactionIndex: schemeEvent.transactionIndex,\n            logIndex: schemeEvent.logIndex\n          });\n          \n          if (schemeProposalInfo.descriptionHash.length > 1){\n            networkCache.ipfsHashes.push({\n              hash: descriptionHashToIPFSHash(schemeProposalInfo.descriptionHash),\n              type: 'proposal',\n              name: proposalId\n            });\n          }\n          \n        }));\n        \n        schemeEventsBatchsIndex ++;\n      } catch (error) {\n        console.error('Error:',error.message);\n        console.debug('Trying again getting proposal info of schemeEventsBatchs index',schemeEventsBatchsIndex);\n      }\n    }\n    \n  }));\n  \n  let retryIntent = 0;\n  // Update proposals title\n  for (let proposalIndex = 0; proposalIndex < Object.keys(networkCache.proposals).length; proposalIndex++) {\n    const proposal = networkCache.proposals[Object.keys(networkCache.proposals)[proposalIndex]];\n    const ipfsHash = descriptionHashToIPFSHash(proposal.descriptionHash);\n    if (retryIntent > 3) {\n      retryIntent = 0;\n      continue;\n    }\n    if (\n      networkCache.schemes[proposal.scheme].type != \"WalletScheme\"\n      && proposal.descriptionHash && proposal.descriptionHash.length > 0\n      // Try to get title if cache is running in node script or if proposal was submitted in last 100000 blocks\n      && (proposal.title.length == 0\n        && (isNode() || proposal.creationEvent.l1BlockNumber > Number(toBlock) - 100000)\n      )\n    )\n      try {\n        console.debug('Getting title from proposal', proposal.id, proposal.descriptionHash, ipfsHash);\n        const response = await axios.request({\n          url:'https://ipfs.io/ipfs/'+ipfsHash,\n          method: \"GET\",\n          timeout: isNode() ? 5000 : 1000\n        });\n        if (response && response.data && response.data.title) {\n          networkCache.proposals[proposal.id].title = response.data.title;\n        } else {\n          console.error('Couldnt not get title from', proposal.id, ipfsHash);\n        }\n      } catch (error) {\n        console.error('Error getting title from', proposal.id, ipfsHash, 'waiting 2 seconds and trying again..');\n        console.error(error.message);\n        if (isNode()) {\n          proposalIndex --;\n          retryIntent ++;\n          await sleep(1000);\n        }\n      }\n  }\n\n  // Update existent active proposals\n  await Promise.all(Object.keys(networkCache.proposals).map(async (proposalId) => {\n    \n    if ((networkCache.proposals[proposalId].stateInVotingMachine > VotingMachineProposalState.Executed)\n    || (networkCache.proposals[proposalId].stateInScheme == WalletSchemeProposalState.Submitted)) {\n  \n      const schemeAddress = networkCache.proposals[proposalId].scheme;\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      // Get all the proposal information from the scheme and voting machine\n      let callsToExecute = [\n        [ \n          votingMachine,\n          \"proposals\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 1]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 2]\n        ],\n        [ \n          votingMachine,\n          \"proposalStatus\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"getProposalTimes\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"shouldBoost\",\n          [proposalId]\n        ]\n      ];\n  \n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([ \n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"getOrganizationProposal\", [proposalId]\n        ]);\n      } else if (\n        schemeTypeData.type == 'ContributionReward'\n        && networkCache.proposals[proposalId].stateInVotingMachine == VotingMachineProposalState.Executed\n        && networkCache.proposals[proposalId].stateInScheme == WalletSchemeProposalState.Submitted\n      ) {\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 0]\n        ]);\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 1]\n        ]);\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 2]\n        ]);\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 3]\n        ]);\n      }\n  \n      const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n  \n      const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n        [\n          {type: 'bytes32', name: 'organizationId' },\n          {type: 'address', name: 'callbacks' },\n          {type: 'uint256', name: 'state' },\n          {type: 'uint256', name: 'winningVote' },\n          {type: 'address', name: 'proposer' },\n          {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n          {type: 'bytes32', name: 'paramsHash' },\n          {type: 'uint256', name: 'daoBountyRemain' },\n          {type: 'uint256', name: 'daoBounty' },\n          {type: 'uint256', name: 'totalStakes' },\n          {type: 'uint256', name: 'confidenceThreshold' },\n          {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n        ],\n        callsResponse.returnData[0]\n      );\n      const positiveVotes = callsResponse.returnData[1];\n      const negativeVotes = callsResponse.returnData[2];\n  \n      const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n        ['uint256','uint256','uint256','uint256'], \n        callsResponse.returnData[3]\n      );\n      const proposalTimes = callsResponse.decodedReturnData[4];\n      const proposalShouldBoost = callsResponse.decodedReturnData[5];\n      \n      if (schemeTypeData.type == 'WalletScheme') {\n        networkCache.proposals[proposalId].stateInScheme = Number(web3.eth.abi.decodeParameters(\n          [ \n            {type: 'address[]', name: 'to' },\n            {type: 'bytes[]', name: 'callData' },\n            {type: 'uint256[]', name: 'value' },\n            {type: 'uint256', name: 'state' },\n            {type: 'string', name: 'title' },\n            {type: 'string', name: 'descriptionHash' },\n            {type: 'uint256', name: 'submittedTime' }\n          ],\n          callsResponse.returnData[6]\n        ).state);\n      } else if (\n        schemeTypeData.type == 'ContributionReward'\n        && networkCache.proposals[proposalId].stateInVotingMachine == VotingMachineProposalState.Executed\n        && networkCache.proposals[proposalId].stateInScheme == WalletSchemeProposalState.Submitted\n      ) {\n        if (schemeTypeData.type == 'ContributionReward') {\n          if (\n            callsResponse.decodedReturnData[6] > 0\n            || callsResponse.decodedReturnData[7] > 0\n            || callsResponse.decodedReturnData[8] > 0\n            || callsResponse.decodedReturnData[9] > 0\n          ) {\n            networkCache.proposals[proposalId].stateInScheme = WalletSchemeProposalState.ExecutionSucceded;\n          } else if (votingMachineProposalInfo.state == \"1\" || votingMachineProposalInfo.state == \"2\") {\n            networkCache.proposals[proposalId].stateInScheme = WalletSchemeProposalState.Rejected;\n          }\n        }\n      } else if (networkCache.proposals[proposalId].stateInVotingMachine == VotingMachineProposalState.Executed) {\n        networkCache.proposals[proposalId].stateInScheme = WalletSchemeProposalState.ExecutionSucceded;\n      }\n  \n      networkCache.proposals[proposalId].stateInVotingMachine = Number(votingMachineProposalInfo.state);\n      networkCache.proposals[proposalId].winningVote = votingMachineProposalInfo.winningVote;\n      networkCache.proposals[proposalId].currentBoostedVotePeriodLimit = votingMachineProposalInfo.currentBoostedVotePeriodLimit;\n      networkCache.proposals[proposalId].daoBountyRemain = bnum(votingMachineProposalInfo.daoBountyRemain);\n      networkCache.proposals[proposalId].daoBounty = bnum(votingMachineProposalInfo.daoBounty);\n      networkCache.proposals[proposalId].totalStakes = bnum(votingMachineProposalInfo.totalStakes);\n      networkCache.proposals[proposalId].confidenceThreshold = votingMachineProposalInfo.confidenceThreshold;\n      networkCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted;\n      networkCache.proposals[proposalId].boostedPhaseTime = bnum(proposalTimes[1]);\n      networkCache.proposals[proposalId].preBoostedPhaseTime = bnum(proposalTimes[2]);\n      networkCache.proposals[proposalId].daoRedeemItsWinnings = votingMachineProposalInfo.daoRedeemItsWinnings;\n      networkCache.proposals[proposalId].shouldBoost = proposalShouldBoost;\n      networkCache.proposals[proposalId].positiveVotes = bnum(positiveVotes);\n      networkCache.proposals[proposalId].negativeVotes = bnum(negativeVotes);\n      networkCache.proposals[proposalId].preBoostedPositiveVotes = bnum(proposalStatusWithVotes[0]);\n      networkCache.proposals[proposalId].preBoostedNegativeVotes = bnum(proposalStatusWithVotes[1]);\n      networkCache.proposals[proposalId].positiveStakes = bnum(proposalStatusWithVotes[2]);\n      networkCache.proposals[proposalId].negativeStakes = bnum(proposalStatusWithVotes[3]);\n  \n    }\n  \n  }));\n  \n  return networkCache;\n};\n","import RootContext from '../contexts';\nimport { makeObservable, observable, action } from 'mobx';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { isChainIdSupported } from '../provider/connectors';\nimport { ContractType } from './Provider';\nimport { bnum } from '../utils';\nimport { getUpdatedCache } from '../cache';\n\nexport default class BlockchainStore {\n  activeFetchLoop: boolean = false;\n  initialLoadComplete: boolean;\n  contractStorage: ContractStorage = {};\n  eventsStorage: EventStorage = {};\n  context: RootContext;\n\n  constructor(context) {\n    this.context = context;\n    makeObservable(this, {\n        activeFetchLoop: observable,\n        initialLoadComplete: observable,\n        updateStore: action,\n        fetchData: action\n      }\n    );\n  }\n\n  reduceMulticall(calls: Call[], results: any, blockNumber: number): CallEntry[] {\n    const { multicallService } = this.context;\n    return calls.map((call, index) => {\n      const value = multicallService.decodeCall(call, results[index]);\n      return {\n        contractType: call.contractType,\n        address: call.address,\n        method: call.method,\n        params: call.params,\n        response: {\n          value: value,\n          lastFetched: blockNumber\n        }\n      };\n    });\n  }\n  \n  async executeAndUpdateMulticall(multicallService){\n    const multicallResponse = await multicallService.executeCalls();\n    this.updateStore(\n      this.reduceMulticall(\n        multicallResponse.calls, multicallResponse.results, multicallResponse.blockNumber\n      ),\n      multicallResponse.blockNumber\n    );\n    multicallService.resetActiveCalls();\n  }\n\n  has(entry: Call): boolean {\n    const params = entry.params ? entry.params : [];\n    return (\n      !!this.contractStorage[entry.contractType] &&\n      !!this.contractStorage[entry.contractType][entry.address] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ]\n    );\n  }\n\n  getCachedValue(entry: Call) {\n    if (this.has(entry)) {\n      return this.get(entry).value.toString();\n    } else {\n      return undefined;\n    }\n  }\n  \n  getCachedEvents(address: string, eventName: string) {\n    if (this.eventsStorage[address] && this.eventsStorage[address][eventName])\n      return this.eventsStorage[address][eventName].emitions;\n    else\n      return [];\n  }\n\n  get(entry: Call): CallValue | undefined {\n    if (this.has(entry)) {\n      const params = entry.params ? entry.params : [];\n      return this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n    } else {\n      return undefined;\n    }\n  }\n\n  updateStore(entries: CallEntry[], blockNumber: number) {\n    entries.forEach((entry) => {\n      const params = entry.params ? entry.params : [];\n      if (!this.contractStorage[entry.contractType]) {\n        this.contractStorage[entry.contractType] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address]) {\n        this.contractStorage[entry.contractType][entry.address] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address][entry.method]) {\n        this.contractStorage[entry.contractType][entry.address][entry.method] = {};\n      }\n\n      if (\n        !this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ]\n      ) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n\n      const oldEntry = this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n\n      // Set if never fetched, or if the new data isn't stale\n      if (!oldEntry.lastFetched || (oldEntry.lastFetched && oldEntry.lastFetched <= blockNumber)) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n    });\n  }\n    \n  async fetchData(web3React: Web3ReactContextInterface, reset: boolean) {\n    if (!this.activeFetchLoop || reset\n      && web3React\n      && web3React.active\n      && isChainIdSupported(web3React.chainId)\n    ) {\n      this.initialLoadComplete = (reset) ? false : this.initialLoadComplete;\n      this.activeFetchLoop = true;\n      const { library, chainId } = web3React;\n      const {\n        providerStore,\n        configStore,\n        multicallService,\n        ipfsService,\n        daoStore\n      } = this.context;\n      const networkName = configStore.getActiveChainName();\n      \n      if (!daoStore.getCache()) {\n        console.debug('[IPFS Cache Fetch]', networkName, configStore.getCacheIPFSHash(networkName));\n        daoStore.setCache(\n          daoStore.parseCache(\n            await ipfsService.getContentFromIPFS(configStore.getCacheIPFSHash(networkName))\n          )\n        );\n      }\n      let networkCache = daoStore.getCache();\n\n      const blockNumber = await library.eth.getBlockNumber();\n      const lastCheckedBlockNumber = networkCache.l1BlockNumber;\n\n      if (blockNumber > lastCheckedBlockNumber) {\n        console.debug('[Fetch Loop] Fetch Blockchain Data', blockNumber, chainId);\n        \n        const fromBlock = lastCheckedBlockNumber + 1;\n        const toBlock = blockNumber;\n        const networkContracts = configStore.getNetworkContracts();\n        networkCache = await getUpdatedCache(networkCache, networkContracts, fromBlock, toBlock, library);\n        \n        let tokensBalancesCalls = [];\n        const tokens = configStore.getTokensToFetchPrice();\n        \n        tokens.map((token) => {\n          if (!networkCache.daoInfo.tokenBalances[token.address])\n            tokensBalancesCalls.push({\n              contractType: ContractType.ERC20,\n              address: token.address,\n              method: 'balanceOf',\n              params: [networkContracts.avatar],\n            });\n          Object.keys(networkCache.schemes).map((schemeAddress) => {\n            if (networkCache.schemes[schemeAddress].controllerAddress != networkContracts.controller)\n              tokensBalancesCalls.push({\n                contractType: ContractType.ERC20,\n                address: token.address,\n                method: 'balanceOf',\n                params: [schemeAddress],\n              });\n          })\n        });\n\n        if (tokensBalancesCalls.length > 0)\n          multicallService.addCalls(tokensBalancesCalls);\n        await this.executeAndUpdateMulticall(multicallService);\n        \n        tokensBalancesCalls.map((tokensBalancesCall) => {\n          if (tokensBalancesCall.params[0] == networkContracts.avatar) {\n            networkCache.daoInfo.tokenBalances[tokensBalancesCall.address] =\n              this.context.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          } else {\n            networkCache.schemes[tokensBalancesCall.params[0]].tokenBalances[tokensBalancesCall.address] =\n              this.context.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          }\n        });\n        \n        networkCache.l1BlockNumber = toBlock;\n        providerStore.setCurrentBlockNumber(toBlock);\n      }\n      daoStore.setCache(networkCache);\n\n      this.initialLoadComplete = true;\n      this.activeFetchLoop = false;\n    }\n  }\n}\n","import React from 'react';\n\nimport ABIService from '../services/ABIService';\nimport MulticallService from '../services/MulticallService';\nimport DaoService from '../services/DaoService';\nimport EventsService from '../services/EventsService';\nimport IPFSService from '../services/IPFSService';\nimport PinataService from '../services/PinataService';\nimport EtherscanService from '../services/EtherscanService';\nimport CoingeckoService from '../services/CoingeckoService';\n\nimport ProviderStore from '../stores/Provider';\nimport TransactionStore from '../stores/Transaction';\nimport ModalStore from '../stores/Modal';\nimport ConfigStore from '../stores/ConfigStore';\nimport DaoStore from '../stores/DaoStore';\nimport UserStore from '../stores/UserStore';\nimport BlockchainStore from '../stores/BlockchainStore';\n\n/*\nhttps://reactjs.org/docs/context.html#reactcreatecontext\n\nContext provides a way to pass data through the component tree without having to pass props down manually at every level.\n\nIn a typical React application, data is passed top-down (parent to child) via props, but such usage can be cumbersome for certain types of props (e.g. locale preference, UI theme) that are required by many components within an application. Context provides a way to share values like these between components without having to explicitly pass a prop through every level of the tree.\n\nA root single context calss is exported with the services and stores of the dapp.\n\nServices: Contexts that are not use to store data, only to process information in the dapp and fecth information from external protocols and APIs.\nStores: Context that are used to store data and expose them all around the dapp.\n*/\n\nexport default class RootContext {\n\n  providerStore: ProviderStore;\n  transactionStore: TransactionStore;\n  modalStore: ModalStore;\n  configStore: ConfigStore;\n  daoStore: DaoStore;\n  userStore: UserStore;\n  blockchainStore: BlockchainStore;\n  \n  abiService: ABIService;\n  multicallService: MulticallService;\n  daoService: DaoService;\n  eventsService: EventsService;\n  ipfsService: IPFSService;\n  pinataService: PinataService;\n  etherscanService: EtherscanService;\n  coingeckoService: CoingeckoService;\n  \n  constructor() {\n    this.providerStore = new ProviderStore(this);\n    this.transactionStore = new TransactionStore(this);\n    this.modalStore = new ModalStore(this);\n    this.configStore = new ConfigStore(this);\n    this.daoStore = new DaoStore(this);\n    this.userStore = new UserStore(this);\n    this.blockchainStore = new BlockchainStore(this);\n    \n    this.abiService = new ABIService(this);\n    this.multicallService = new MulticallService(this);\n    this.eventsService = new EventsService(this);\n    this.daoService = new DaoService(this);\n    this.ipfsService = new IPFSService(this);\n    this.pinataService = new PinataService(this);\n    this.etherscanService = new EtherscanService(this);\n    this.coingeckoService = new CoingeckoService(this);\n  }\n}\n\nexport const rootContext = React.createContext({\n  context: new RootContext()\n});\n\nexport const useContext = () => React.useContext(rootContext);\n","import { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { web3ContextNames } from 'provider/connectors';\nimport { useEagerConnect, useInactiveListener } from 'provider/providerHooks';\nimport { useContext } from '../../contexts';\nimport { useInterval } from 'utils';\n\nconst BLOKCHAIN_FETCH_INTERVAL = 10000;\n\nconst Web3ReactManager = ({ children }) => {\n  const {\n    context: { providerStore, blockchainStore, userStore, configStore },\n  } = useContext();\n\n  const web3ContextInjected = useWeb3React(web3ContextNames.injected);\n  const {\n    active: networkActive,\n    error: networkError\n  } = web3ContextInjected;\n  \n  if (!providerStore.activeChainId)\n    providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n\n  configStore.loadConfig();\n\n  console.debug('[Web3ReactManager] Start of render', {\n    injected: web3ContextInjected,\n    web3React: providerStore.getActiveWeb3React(),\n  });\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  \n  let walletInstalled = true;\n  try {\n    // @ts-ignore\n    ethereum.on('chainChanged', (chainId) => {\n      // Handle the new chain.\n      // Correctly handling chain changes can be complicated.\n      // We recommend reloading the page unless you have good reason not to.\n      // providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n      // blockchainStore.fetchData(providerStore.getActiveWeb3React(), true);\n      window.location.reload();\n    });\n    \n    // @ts-ignore\n    ethereum.on('accountsChanged', (accounts) => {\n      // Handle the new accounts, or lack thereof.\n      // \"accounts\" will always be an array, but it can be empty.\n      // blockchainStore.fetchData(web3React, false);\n      if (networkActive)\n        userStore.update(providerStore.getActiveWeb3React());\n    });\n    \n  } catch (error) {\n    console.error(error);\n    walletInstalled = false;\n  }\n  \n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager);\n\n  // Fetch user blockchain data on an interval using current params\n  useInterval(\n    async () => {\n      if (networkActive){\n        userStore.update(providerStore.getActiveWeb3React());\n        blockchainStore.fetchData(providerStore.getActiveWeb3React(), false)\n      }\n    }, BLOKCHAIN_FETCH_INTERVAL\n  );\n\n  const BlurWrapper = styled.div`\n      filter: blur(1px);\n  `;\n\n  const OverBlurModal = styled.div`\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n    \n    .connectModalContent {\n      background-color: #fefefe;\n      max-width: 350px;\n      text-align: center;\n      margin: 15% auto;\n      padding: 20px;\n      border-radius: 4px;\n    }\n  `;\n\n  // on page load, do nothing until we've tried to connect to the injected connector\n  if (!triedEager) {\n    console.debug('[Web3ReactManager] Render: Eager load not tried');\n    return null;\n  }\n\n  if (!walletInstalled) {\n    console.debug('[Web3ReactManager] Render: Metamask wallet not installed, showing modal error.');\n    return (\n      <div>\n        <OverBlurModal>\n          <div className=\"connectModalContent\">Metamask wallet not installed</div>\n        </OverBlurModal>\n        <BlurWrapper>\n          {children}\n        </BlurWrapper>\n      </div>\n    );\n  } else if (networkError) {\n    console.debug('[Web3ReactManager] Render: Network error, showing modal error.');\n    return (\n      <div>\n        <OverBlurModal>\n          <div className=\"connectModalContent\">Ups, something broke :(</div>\n        </OverBlurModal>\n        <BlurWrapper>\n          {children}\n        </BlurWrapper>\n      </div>\n    );\n  // If network is not active show blur content\n  } else if(!networkActive) {\n    console.debug('[Web3ReactManager] Render: No active network');\n    return children;\n  } else {\n    console.debug( '[Web3ReactManager] Render: Active network, render children', { networkActive } );\n    return children;\n  }\n\n};\n\nexport default Web3ReactManager;\n","import { useEffect, useState } from 'react';\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { isMobile } from 'react-device-detect';\nimport { injected, web3ContextNames } from 'provider/connectors';\n\n/*  Attempt to connect to & activate injected connector\n    If we're on mobile and have an injected connector, attempt even if not authorized (legacy support)\n    If we tried to connect, or it's active, return true;\n */\nexport function useActiveWeb3React() {\n    return useWeb3ReactCore(web3ContextNames.injected);\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3ReactCore(web3ContextNames.injected);\n\n    const [tried, setTried] = useState(false);\n\n    useEffect(() => {\n        console.debug('[Injected Eager Connect]', injected);\n        injected.isAuthorized().then((isAuthorized) => {\n            console.debug('[Eager Connect] Activate injected if authorized', {\n                isAuthorized,\n            });\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            } else {\n                if (isMobile && window.ethereum) {\n                    activate(injected, undefined, true).catch(() => {\n                        setTried(true);\n                    });\n                } else {\n                    setTried(true);\n                }\n            }\n        });\n    }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (active) {\n            setTried(true);\n        }\n    }, [active]);\n\n    return tried;\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network they're on\n */\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3ReactCore(\n        web3ContextNames.injected\n    );\n\n    useEffect(() => {\n        const { ethereum } = window;\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            const handleAccountsChanged = (accounts) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    activate(injected, undefined, true).catch(() => {});\n                }\n            };\n\n            const handleNetworkChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            ethereum.on('chainChanged', handleChainChanged);\n            ethereum.on('networkChanged', handleNetworkChanged);\n            ethereum.on('accountsChanged', handleAccountsChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('chainChanged', handleChainChanged);\n                    ethereum.removeListener(\n                        'networkChanged',\n                        handleNetworkChanged\n                    );\n                    ethereum.removeListener(\n                        'accountsChanged',\n                        handleAccountsChanged\n                    );\n                }\n            };\n        }\n\n        return () => {};\n    }, [active, error, suppress, activate]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker === null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType !== null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import { useEffect } from 'react';\nimport {\n    createGlobalStyle,\n    css,\n    ThemeProvider as StyledComponentsThemeProvider,\n} from 'styled-components';\nimport { useContext } from '../contexts';\n\nexport const SUPPORTED_THEMES = {\n    DARK: 'DARK',\n    LIGHT: 'LIGHT',\n};\n\nconst MEDIA_WIDTHS = {\n    upToSmall: 600,\n    upToMedium: 960,\n    upToLarge: 1280,\n};\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce(\n    (accumulator, size) => {\n        accumulator[size] = (...args) => css`\n            @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n                ${css(...args)}\n            }\n        `;\n        return accumulator;\n    },\n    {}\n);\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default function ThemeProvider({ children }) {\n    const {\n        context: { configStore },\n    } = useContext();\n\n    const darkMode = configStore.darkMode;\n\n    useEffect(() => {\n        configStore.setDarkMode(darkMode);\n    }, [configStore, darkMode]);\n    return (\n        <StyledComponentsThemeProvider theme={theme(darkMode)}>\n          {children}\n        </StyledComponentsThemeProvider>\n    );\n}\n\nconst theme = (darkMode) => ({\n    white,\n    black,\n    textColor: darkMode ? white : '#010101',\n    greyText: darkMode ? white : '#6C7284',\n\n    // for setting css on <html>\n    backgroundColor: darkMode ? '#333639' : white,\n    \n    activeButtonBackground: \"#536DFE\",\n\n    modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n    inputBackground: darkMode ? '#202124' : white,\n    placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n    shadowColor: darkMode ? '#000' : '#2F80ED',\n    \n    borderStyle: \"rgba(14, 0, 135, 0.1) 0px 2px 10px, rgba(14, 0, 135, 0.05) 0px 12px 32px\",\n\n    // grays\n    concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n    mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n    silverGray: darkMode ? '#737373' : '#C4C4C4',\n    chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n    doveGray: darkMode ? '#C4C4C4' : '#737373',\n    mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n    activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n    buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n    tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n\n    //blacks\n    charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n    // blues\n    zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\n    // TODO refactor; malibuBlue changed as quick hack to a different color JK 013120\n    malibuBlue: darkMode ? '#E67AEF' : '#4C5480',\n    // TODO refactor; royalBlue changed as quick hack to a different color JK 013120\n    royalBlue: darkMode ? '#DC6BE5' : '#fafafa',\n    loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\n\n    // purples\n    wisteriaPurple: '#DC6BE5',\n    // reds\n    salmonRed: '#FF6871',\n    // orange\n    pizazzOrange: '#FF8F05',\n    // yellows\n    warningYellow: '#FFE270',\n    // body text color\n    bodyText: '#90a4ae',\n    //green\n    connectedGreen: '#27AE60',\n\n    //branded\n    metaMaskOrange: '#E8831D',\n\n    //specific\n    textHover: darkMode ? '#90a4ae' : '#C4C4C4',\n\n    // connect button when loggedout\n    buttonFaded: darkMode ? '#DC6BE5' : '#737373',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n        display: flex;\n        flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n        display: flex;\n        flex-flow: row nowrap;\n    `,\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\nimport { DialogContent, DialogOverlay } from '@reach/dialog';\nimport { isMobile } from 'react-device-detect';\nimport '@reach/dialog/styles.css';\n// import { useGesture } from 'react-use-gesture';\n\nconst AnimatedDialogOverlay = animated(DialogOverlay);\nconst WrappedDialogOverlay = ({\n    suppressClassNameWarning,\n    mobile,\n    ...rest\n}) => <AnimatedDialogOverlay {...rest} />;\nconst StyledDialogOverlay = styled(WrappedDialogOverlay).attrs({\n    suppressClassNameWarning: true,\n})`\n    &[data-reach-dialog-overlay] {\n        z-index: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n\n        ${({ mobile }) =>\n            mobile &&\n            css`\n                align-items: flex-end;\n            `}\n\n        &::after {\n            content: '';\n            background-color: ${({ theme }) => theme.modalBackground};\n            opacity: 0.5;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            /* position: absolute; */\n            position: fixed;\n            z-index: -1;\n        }\n    }\n`;\n\nconst FilteredDialogContent = ({\n    minHeight,\n    maxHeight,\n    isOpen,\n    slideInAnimation,\n    mobile,\n    ...rest\n}) => <DialogContent aria-label=\"BCDappModal\" {...rest} />;\nconst StyledDialogContent = styled(FilteredDialogContent)`\n    &[data-reach-dialog-content] {\n        border: 1px solid var(--panel-border);\n        background-color: var(--panel-border);\n        padding: 0px;\n        width: 50vw;\n        max-width: 650px;\n        ${({ maxHeight }) =>\n            maxHeight &&\n            css`\n                max-height: ${maxHeight}vh;\n            `}\n        ${({ minHeight }) =>\n            minHeight &&\n            css`\n                min-height: ${minHeight}vh;\n            `}\n    display: flex;\n        overflow: hidden;\n        border-radius: 10px;\n        ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      max-height: 65vh;\n      margin: 0;\n    `}\n        ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      max-height: 66vh;\n      ${\n          mobile &&\n          css`\n              width: 100vw;\n              border-radius: 20px;\n              border-bottom-left-radius: 0;\n              border-bottom-right-radius: 0;\n          `\n      }\n    `}\n    }\n`;\n\nconst HiddenCloseButton = styled.button`\n    margin: 0;\n    padding: 0;\n    width: 0;\n    height: 0;\n    border: none;\n`;\n\nexport default function Modal({\n    isOpen,\n    onDismiss,\n    minHeight = false,\n    maxHeight = 50,\n    children,\n}) {\n  if (isOpen)\n    return (\n      <StyledDialogOverlay\n        onDismiss={onDismiss}\n        mobile={isMobile}\n      >\n        <StyledDialogContent\n          hidden={true}\n          minHeight={minHeight}\n          maxHeight={maxHeight}\n          isOpen={isOpen}\n          mobile={isMobile}\n        >\n          <HiddenCloseButton onClick={onDismiss} />\n          {children}\n          </StyledDialogContent>\n      </StyledDialogOverlay>\n    )\n  else\n    return <div/>\n}\n","import styled from 'styled-components';\n\nexport const Link = styled.a.attrs({\n    target: '_blank',\n    rel: 'noopener noreferrer',\n})`\n    text-decoration: none;\n    cursor: pointer;\n    color: var(--turquois-text);\n\n    :focus {\n        outline: none;\n        text-decoration: underline;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nexport default Link;\n","var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.33076876.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { useCopyClipboard } from '../../utils';\n\nimport Link from '../../components/common/Link';\nimport { FiCopy, FiCheckCircle } from \"react-icons/fi\";\n\nconst CopyIcon = styled(Link)`\n  color: ${({ theme }) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n      text-decoration: none;\n      color: ${({ theme }) => theme.doveGray};\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`;\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard();\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      <TransactionStatusText>\n        {isCopied ? (\n          <FiCheckCircle />\n        ) : (\n          <FiCopy />\n        )}\n      </TransactionStatusText>\n    </CopyIcon>\n  );\n}\n","import styled from 'styled-components';\nimport Copy from '../common/Copy';\nimport { injected } from 'provider/connectors';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { getBlockchainLink } from '../../utils';\n\nimport Link from '../../components/common/Link';\nimport { useContext } from '../../contexts';\n\nconst OptionButton = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    justify-content: center;\n    align-items: center;\n    border-radius: 4px;\n    border: 1px solid var(--active-button-border);\n    background-color: var(--blue-text);\n    color: #FFFFFF;\n    padding: 8px 24px;\n\n    &:hover {\n        cursor: pointer;\n        border: 1px solid var(--blue-onHover-border);\n        background-color: var(--blue-onHover);\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      font-size: 12px;\n    `};\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      padding: 1rem;\n    `};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst InfoCard = styled.div`\n    padding: 1rem;\n    border: 1px solid ${({ theme }) => theme.placeholderGray};\n    border-radius: 20px;\n`;\n\nconst AccountGroupingRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    justify-content: space-between;\n    align-items: center;\n    font-weight: 500;\n    color: ${({ theme }) => theme.textColor};\n\n    div {\n        ${({ theme }) => theme.flexRowNoWrap}\n        align-items: center;\n    }\n\n    &:first-of-type {\n        margin-bottom: 20px;\n    }\n`;\n\nconst AccountSection = styled.div`\n    background-color: var(--panel-background);\n    padding: 0rem 1.5rem;\n    ${({ theme }) =>\n        theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\n`;\n\nconst YourAccount = styled.div`\n    h5 {\n        margin: 0 0 1rem 0;\n        font-weight: 400;\n    }\n\n    h4 {\n        margin: 0;\n        font-weight: 500;\n    }\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-left: 12px;\n        margin-right: 2px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AccountControl = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    align-items: center;\n    min-width: 0;\n\n    font-weight: 500;\n    font-size: 1rem;\n\n    a:hover {\n        text-decoration: underline;\n    }\n\n    a {\n        min-width: 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n`;\n\nconst ConnectButtonRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin: 30px;\n`;\n\nconst StyledLink = styled(Link)`\n    color: var(--turquois-text);\n`;\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    right: 1rem;\n    top: 14px;\n    color: var(--header-text);\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\n\nconst WalletAction = styled.div`\n    color: ${({ theme }) => theme.chaliceGray};\n    margin-left: 16px;\n    font-weight: 400;\n    :hover {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`;\n\ninterface Props {\n    toggleWalletModal: any;\n    openOptions: any;\n}\n\nexport default function AccountDetails(props: Props) {\n    const {\n        toggleWalletModal,\n        openOptions,\n    } = props;\n    const {\n        context: { providerStore, configStore },\n    } = useContext();\n    const { account, connector } = providerStore.getActiveWeb3React();\n\n    const networkName = configStore.getActiveChainName();\n\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor alt={'close icon'} />\n        </CloseIcon>\n        <HeaderRow>Account</HeaderRow>\n        <AccountSection>\n          <YourAccount>\n            <InfoCard>\n              <AccountGroupingRow>\n                <div>\n                  {connector !== injected && (\n                    <WalletAction\n                      onClick={() => {\n                        //@ts-ignore\n                        connector.close();\n                      }}\n                    >\n                        Disconnect\n                    </WalletAction>\n                  )}\n                  <CircleWrapper> <GreenCircle/> </CircleWrapper>\n                </div>\n              </AccountGroupingRow>\n              <AccountGroupingRow>\n                <AccountControl>\n                  <StyledLink href={getBlockchainLink( account, networkName, 'address' )} >\n                    {account} ↗\n                  </StyledLink>\n                  <Copy toCopy={account} />\n                </AccountControl>\n              </AccountGroupingRow>\n            </InfoCard>\n          </YourAccount>\n\n          <ConnectButtonRow>\n            <OptionButton onClick={() => { openOptions(); }} >\n              Connect to a different wallet\n            </OptionButton>\n          </ConnectButtonRow>\n        </AccountSection>\n      </UpperSection>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","import styled from 'styled-components';\nimport { transparentize } from 'polished';\nimport Link from '../../components/common/Link';\nimport metamaskIcon from '../../assets/images/metamask.png';\n\nconst InfoCard = styled.button`\n  background-color: ${({ theme, active }) =>\n      active ? theme.activeGray : theme.backgroundColor};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  : 0 4px 8px 0 ${({ theme, clickable }) =>\n      clickable ? transparentize(0.95, theme.shadowColor) : 'none'};\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.royalBlue};\n  }\n  border-color: ${({ theme, active }) =>\n      active ? 'transparent' : theme.placeholderGray};\n`;\n\nconst OptionCard = styled(InfoCard)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 1rem;\n`;\n\nconst OptionCardLeft = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    justify-content: center;\n    height: 100%;\n`;\n\nconst OptionCardClickable = styled(OptionCard)`\n    margin-top: 0;\n    &:hover {\n        cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n        border: ${({ clickable, theme }) =>\n            clickable ? `1px solid ${theme.malibuBlue}` : ``};\n    }\n    opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-right: 8px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst HeaderText = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    color: ${(props) =>\n        props.color === 'blue'\n            ? ({ theme }) => theme.royalBlue\n            : ({ theme }) => theme.textColor};\n    font-size: 1rem;\n    font-weight: 500;\n`;\n\nconst SubHeader = styled.div`\n    color: ${({ theme }) => theme.textColor};\n    margin-top: 10px;\n    font-size: 12px;\n`;\n\nconst IconWrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    align-items: center;\n    justify-content: center;\n    & > img,\n    span {\n        height: ${({ size }) => (size ? size + 'px' : '24px')};\n        width: ${({ size }) => (size ? size + 'px' : '24px')};\n    }\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\n\nexport default function Option({\n    link = null,\n    clickable = true,\n    size = null,\n    onClick = null,\n    color,\n    header,\n    subheader = null,\n    active = false,\n}) {\n    const content = (\n        <OptionCardClickable\n            onClick={onClick}\n            clickable={clickable && !active}\n            active={active}\n        >\n            <OptionCardLeft>\n                <HeaderText color={color}>\n                    {' '}\n                    {active ? (\n                        <CircleWrapper>\n                            <GreenCircle>\n                                <div />\n                            </GreenCircle>\n                        </CircleWrapper>\n                    ) : (\n                        ''\n                    )}\n                    {header}\n                </HeaderText>\n                {subheader && <SubHeader>{subheader}</SubHeader>}\n            </OptionCardLeft>\n            <IconWrapper size={size} active={active}>\n                {<img src={metamaskIcon} alt={'Icon'} />}\n            </IconWrapper>\n        </OptionCardClickable>\n    );\n    if (link) {\n        return <Link href={link}>{content}</Link>;\n    }\n\n    return content;\n}\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { isMobile } from 'react-device-detect';\nimport { observer } from 'mobx-react';\n\nimport Modal from '../Modal';\nimport AccountDetails from '../AccountDetails';\nimport Option from './Option';\nimport { usePrevious } from 'utils';\nimport Link from '../../components/common/Link';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { injected, SUPPORTED_WALLETS } from 'provider/connectors';\nimport { useContext } from '../../contexts';\nimport { isChainIdSupported } from '../../provider/connectors';\nimport { useActiveWeb3React } from 'provider/providerHooks';\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    color: var(--header-text);\n    right: 1rem;\n    top: 14px;\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\nconst Wrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${({ theme }) => theme.backgroundColor};\n    border-radius: 10px;\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\n\nconst ContentWrapper = styled.div`\n    background-color: var(--panel-background);\n    color: var(--body-text);\n    padding: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst Blurb = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin-top: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\n\nconst OptionGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\n\nconst HoverText = styled.div`\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nconst WALLET_VIEWS = {\n    OPTIONS: 'options',\n    OPTIONS_SECONDARY: 'options_secondary',\n    ACCOUNT: 'account',\n    PENDING: 'pending',\n};\n\nconst WalletModal = observer(() => {\n  const {\n    context: { modalStore },\n  } = useContext();\n  const { active, connector, error, activate, account, chainId } = useActiveWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [connectionErrorMessage, setConnectionErrorMessage] = useState(false);\n\n  const walletModalOpen = modalStore.walletModalVisible;\n\n  const toggleWalletModal = () => {\n    modalStore.toggleWalletModal();\n  };\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setConnectionErrorMessage(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]);\n      \n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (\n      walletModalOpen &&\n      ((active && !activePrevious) ||\n        (connector && connector !== connectorPrevious && !error))\n    ) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [\n    setWalletView,\n    active,\n    error,\n    connector,\n    walletModalOpen,\n    activePrevious,\n    connectorPrevious,\n  ]);\n\n  const tryActivation = async (connector) => {\n    setWalletView(WALLET_VIEWS.PENDING);\n    activate(connector, undefined, true).catch((e) => {\n      setConnectionErrorMessage(e)\n      console.debug('[Activation Error]', e);\n    });\n  };\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key];\n      // check for mobile options\n      if (isMobile) {\n        if (!window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector &&\n                  !option.href &&\n                  tryActivation(option.connector);\n              }}\n              key={key}\n              active={\n                option.connector &&\n                option.connector === connector\n              }\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n            />\n          );\n        }\n        return null;\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n              />\n            );\n          } else {\n            return null; //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href &&\n                tryActivation(option.connector);\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n          />\n        )\n      );\n    });\n  }\n\n  function getModalContent() {\n    if (connectionErrorMessage) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n          <HeaderRow>\n            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0\n                ? 'Wrong Network'\n                : 'Error connecting'}\n          </HeaderRow>\n          <ContentWrapper>\n            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0 ? (\n              <h5> Please connect to a valid ethereum network. </h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      );\n    }\n    if (\n      account &&\n      !isChainIdSupported(chainId) &&\n      walletView === WALLET_VIEWS.ACCOUNT\n    ) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n          <HeaderRow>{'Wrong Network'}</HeaderRow>\n          <ContentWrapper>\n            <h5>\n              Please connect to a valid ethereum network.\n            </h5>\n          </ContentWrapper>\n        </UpperSection>\n      );\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      );\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor alt={'close icon'} />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                  setWalletView(WALLET_VIEWS.ACCOUNT);\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          <OptionGrid>{getOptions()}</OptionGrid>\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span style={{ color: '#90a4ae' }}>\n                New to Ethereum? &nbsp;\n              </span>{' '}\n              <Link href=\"https://ethereum.org/use/#3-what-is-a-wallet-and-which-one-should-i-use\">\n                Learn more about wallets\n              </Link>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={walletModalOpen}\n      onDismiss={toggleWalletModal}\n      minHeight={null}\n      maxHeight={90}\n    >\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  );\n});\n\nexport default WalletModal;\n","import styled from 'styled-components';\n\nexport const Box = styled.div\n`\n  border: 1px solid #E1E3E7;\n  padding: 10px 0px;\n  background: white;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  box-shadow: ${({ theme }) => theme.borderStyle};\n`\n\nexport default Box;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { shortenAddress, toCamelCaseString } from '../../utils';\nimport WalletModal from 'components/WalletModal';\nimport { isChainIdSupported } from 'provider/connectors';\nimport { useContext } from '../../contexts';\nimport Box from '../../components/common/Box';\n\nconst WrongNetworkButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--wrong-network);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst AccountButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n  cursor: pointer;\n`;\n\nconst ConnectButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--blue-text);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst Web3ConnectStatus = observer((props) => {\n    \n    const {\n        context: { modalStore, providerStore, configStore },\n    } = useContext();\n    const {\n        chainId,\n        account,\n        error,\n    } = providerStore.getActiveWeb3React();\n\n    const toggleWalletModal = () => {\n        modalStore.toggleWalletModal();\n    };\n\n    function getWeb3Status() {\n        console.debug('[GetWeb3Status]', {\n            account,\n            chainId: chainId,\n            error,\n        });\n        // Wrong network\n        if (account && chainId && !isChainIdSupported(chainId)) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else if (account) {\n            return (\n              <div style={{display: \"flex\"}}>\n                  <AccountButton onClick={toggleWalletModal}>\n                    {shortenAddress(account)}\n                  </AccountButton>\n                  <AccountButton onClick={toggleWalletModal} style={{fontSize: \"14px\"}}>\n                    {toCamelCaseString(configStore.getActiveChainName())}\n                  </AccountButton>\n              </div>\n            );\n        } else if (error) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else {\n            return (\n                <ConnectButton\n                    onClick={toggleWalletModal}\n                    active={true}\n                    >\n                    {props.text}\n                </ConnectButton>\n                \n            );\n        }\n    }\n\n    return (\n        <>\n            {getWeb3Status()}\n            <WalletModal\n            />\n        </>\n    );\n});\n\nexport default Web3ConnectStatus;\n","export default __webpack_public_path__ + \"static/media/DXdao.22782c18.svg\";","import { withRouter } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport Web3ConnectStatus from '../Web3ConnectStatus';\nimport { useContext } from '../../contexts';\nimport { FiSettings, FiUser, FiBarChart2 } from \"react-icons/fi\";\nimport dxdaoIcon from \"assets/images/DXdao.svg\"\nimport Web3 from 'web3';\nimport { bnum } from '../../utils';\nimport Box from '../../components/common/Box';\n\nconst NavWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px 0px 0px 0px;\n`;\n\nconst NavSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItem = styled.div`\n  display: flex;\n  align-items: center;\n  color: var(--nav-text-light);\n  font-size: 16px;\n  line-height: 19px;\n  cursor: pointer;\n`;\n\nconst ItemBox = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n`;\n\nconst Header = observer(() => {\n  const NavItem = withRouter(\n    ({ route, history, children}) => {\n      return ( <div style={{cursor: \"pointer\"}} onClick={() => { history.push(route); }} > {children} </div> );\n    }\n  );\n  \n  const {\n      context: { userStore, providerStore, blockchainStore, configStore, daoStore },\n  } = useContext();\n  \n  const { active, account } = providerStore.getActiveWeb3React();\n\n  if (!active) {\n    return (\n      <NavWrapper>\n        <NavSection>\n          <NavItem route={`/`}>\n            <MenuItem><img alt=\"dxdao\" src={dxdaoIcon}/></MenuItem>\n          </NavItem>\n        </NavSection>\n        <NavSection>\n          <Web3ConnectStatus text=\"Connect Wallet\" />\n          <NavItem route={`/config`}>\n            <a><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n          </NavItem>\n        </NavSection>\n      </NavWrapper>\n    );\n  } else {\n    const networkName = configStore.getActiveChainName();\n    const userInfo = userStore.getUserInfo();\n    const votingMachines = blockchainStore.initialLoadComplete \n      ? configStore.getNetworkContracts().votingMachines\n      : {};\n\n    const dxdBalance = active && userInfo.dxdBalance ?\n      parseFloat(Number(Web3.utils.fromWei(userInfo.dxdBalance.toString())).toFixed(2))\n      : 0;\n    const genBalance = active && userInfo.genBalance ?\n      parseFloat(Number(Web3.utils.fromWei(userInfo.genBalance.toString())).toFixed(2))\n      : 0;\n    const { userRep, totalSupply } = active && blockchainStore.initialLoadComplete ?\n      daoStore.getRepAt(account, providerStore.getCurrentBlockNumber())\n      : { userRep: bnum(0), totalSupply: bnum(0)};\n    const repPercentage = active ? userRep.times(100).div(totalSupply).toFixed(4) : bnum(0);\n\n    return (\n      <NavWrapper>\n        <NavSection>\n          <NavItem route={`/${networkName}/proposals`}>\n            <MenuItem><img alt=\"dxdao\" src={dxdaoIcon}/></MenuItem>\n          </NavItem>\n        </NavSection>\n        { blockchainStore.initialLoadComplete ?\n          <NavSection>\n            {votingMachines.dxd ? <ItemBox> {dxdBalance} DXD </ItemBox> : <div/> }\n            {votingMachines.gen ? <ItemBox> {genBalance} GEN </ItemBox> : <div/> }\n            <ItemBox> {repPercentage.toString()} % REP </ItemBox>\n            <Web3ConnectStatus text=\"Connect Wallet\" />\n            <NavItem route={`/${networkName}/info`}>\n              <a><FiBarChart2 style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n            <NavItem route={`/config`}>\n              <a><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n            <NavItem route={`/${networkName}/user/${account}`}>\n              <a><FiUser style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n          </NavSection>\n        : <NavSection>\n            <Web3ConnectStatus text=\"Connect Wallet\" />\n            <NavItem route={`/config`}>\n              <a><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n          </NavSection>\n        }\n      </NavWrapper>\n    );\n  }\n});\n\nexport default Header;\n","import styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 24px 0px 32px;\n  color: var(--footer-text-gray);\n  flex-grow: 1;\n`;\n\nconst LeftFooter = styled.div`\nmargin-top: auto;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FooterItem = styled.div`\n  a {\n    text-decoration: none;\n    color: var(--footer-text-gray);\n    cursor: pointer;\n  }\n  a:hover {\n    color: var(--text-gray-onHover);\n  }a\n    \n`;\n\nconst FooterDivider = styled.div`\n  background: var(--footer-text-gray);\n  width: 4px;\n  height: 4px;\n  border-radius: 2px;\n  line-height: 24px;\n  margin: 7px;\n`;\n\nconst Footer = () => {\n  let history = useHistory();\n\n  return (\n    <FooterWrapper>\n      <LeftFooter>\n        <FooterItem>\n          <a href=\"https://dxdao.eth.link/#/\" target=\"_blank\" > Website </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/forum')}}  target=\"_self\" > Forum </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote\" target=\"_blank\" > Source Code </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/faq')}} > FAQ </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote/issues/new/choose\" target=\"_blank\" > Submit Issue </a>\n        </FooterItem>\n      </LeftFooter>\n    </FooterWrapper>\n\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from './contexts';\nimport { FiZapOff, FiZap } from \"react-icons/fi\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport Box from './components/common/Box';\n\nconst PageRouterWrapper = styled.div`\n  margin-top: 20px;\n`\n\nconst LoadingBox = styled(Box)`\n  \n .loader {\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 18px;\n    color: var(--dark-text-gray);\n    padding: 25px 0px;\n      \n    .svg {\n      height: 30px;\n      width: 30px;\n      margin-bottom: 10px;\n    }\n  }\n`\n\nconst PageRouter = observer(({ children }) => {\n    \n    const {\n        context: { providerStore, blockchainStore, configStore, ipfsService, etherscanService, pinataService, coingeckoService },\n    } = useContext();\n    \n    const history = useHistory();\n    const location = useLocation();\n    const noLoading = ['/faq', '/config', '/forum'];\n    \n    // Start or auth services\n    ipfsService.start();\n    etherscanService.isAuthenticated();\n    pinataService.isAuthenticated();\n\n    const { active: providerActive } = providerStore.getActiveWeb3React();\n    \n    if (noLoading.indexOf(location.pathname) > -1) {\n      return <PageRouterWrapper> {children} </PageRouterWrapper>;\n\n    } else if (!providerActive)\n      return (\n        <PageRouterWrapper>\n          <LoadingBox>\n            <div className=\"loader\"> <FiZapOff/> <br/> Connect to metamask </div>\n          </LoadingBox>\n        </PageRouterWrapper>\n      );\n    else {\n      \n      const networkName = configStore.getActiveChainName();\n      if (location.pathname == \"/\"){\n        history.push(`/${networkName}/proposals`)\n      }\n      \n      if (location.pathname.split('/')[1] && location.pathname.split('/')[1] != networkName) {\n        history.push(`/${networkName}/proposals`)\n      }\n      \n      if (!blockchainStore.initialLoadComplete) {\n        return (\n          <PageRouterWrapper>\n            <LoadingBox>\n              <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n            </LoadingBox>\n          </PageRouterWrapper>\n        );\n      } else {\n        coingeckoService.loadPrices();\n        if (configStore.getLocalConfig().pinOnStart)\n          pinataService.updatePinList();\n        return <PageRouterWrapper> {children} </PageRouterWrapper>;\n      }\n    }\n});\n\nexport default PageRouter;\n","import styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst Button = styled.div`\n    background-color: ${({ theme }) => theme.activeButtonBackground};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 10px;\n    margin: 5px;\n`;\n\nconst ButtonWithRouter = withRouter(\n  ({ route, history, children }) => {\n    return (\n      <Button onClick={() => { history.push(route)}} >\n        {children}\n      </Button>\n    );\n  }\n);\nconst ActiveButton = ({ children, onClick = undefined, route = undefined }) => {\n    if (route) {\n      return <ButtonWithRouter route={route}>{children}</ButtonWithRouter>\n    } else {\n      return <Button onClick={onClick}>{children}</Button>;\n    }\n};\n\nexport default ActiveButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\nimport { ZERO_ADDRESS, formatPercentage, normalizeBalance, timeToTimestamp, formatNumberValue } from '../utils';\nimport { FiFeather, FiCheckCircle, FiCheckSquare } from \"react-icons/fi\";\n\nconst ProposalsTableWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst ProposalsFilter = styled.select`\n  background-color: ${(props) => props.color || '#536DFE'};\n  border-radius: 4px;\n  color: white;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 34px;\n  text-align: center;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n  border: 0px;\n`;\n\nconst ProposalsNameFilter = styled.input`\n  background-color: white;\n  border: 1px solid #536DFE;\n  border-radius: 4px;\n  color: #536DFE;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\nconst ProposalTableHeaderActions = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  \n  span {\n    font-size: 20px;\n    padding: 10px 5px 5px 5px;\n  }\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: var(--light-text-gray);\n  padding: 20px 24px 8px 24px;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst TableHeader = styled.div`\n  width: ${(props) => props.width || '25%'};\n  text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n  overflow-y: scroll;\n  height: 350px;\n  \n  h3 {\n    text-align: center;\n    margin-top: 30px;\n    color: var(--dark-text-gray);\n  }\n`;\n\nconst TableRow = styled.div`\n  font-size: 16px;\n  line-height: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--line-gray);\n  padding: 16px 24px;\n  color: var(--dark-text-gray);\n  text-align: right;\n  cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  color: ${(props) => props.color};\n  width: ${(props) => props.width || '25%'};\n  justify-content: ${(props) => props.align};\n  font-weight: ${(props) => props.weight};\n  white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n  overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n  text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst ProposalsPage = observer(() => {\n    const {\n        context: { daoStore, configStore, providerStore },\n    } = useContext();\n\n    const schemes = daoStore.getAllSchemes();\n    const votingMachines = configStore.getNetworkContracts().votingMachines;\n    const [stateFilter, setStateFilter] = React.useState(\"Any Status\");\n    const [schemeFilter, setSchemeFilter] = React.useState(\"All Schemes\");\n    const [titleFilter, setTitleFilter] = React.useState(\"\");\n    const networkName = configStore.getActiveChainName();\n    const { account } = providerStore.getActiveWeb3React();\n    const userEvents = daoStore.getUserEvents(account);\n    \n\n    const allProposals = daoStore.getAllProposals().map((cacheProposal) => {\n      return Object.assign(cacheProposal, daoStore.getProposalStatus(cacheProposal.id));\n    });\n    \n    // First show the proposals that still have an active status in teh boting machine and order them from lower \n    // to higher based on the finish time.\n    // Then show the proposals who finished based on the statte in the voting machine and order them from higher to \n    // lower in the finish time.\n    // This way we show the proposals that will finish soon first and the latest proposals that finished later\n    \n    const sortedProposals = allProposals.filter((proposal) => proposal.stateInVotingMachine  > 2)\n      .sort(function(a, b) { return a.finishTime - b.finishTime; })\n      .concat(\n        allProposals.filter((proposal) => proposal.stateInVotingMachine < 3)\n        .sort(function(a, b) { return b.finishTime - a.finishTime; })\n      );\n    function onStateFilterChange(newValue) { setStateFilter(newValue.target.value) }\n    function onTitleFilterChange(newValue) { setTitleFilter(newValue.target.value) }\n    function onSchemeFilterChange(newValue) { setSchemeFilter(newValue.target.value) }\n    \n    console.debug(\"All Proposals\", allProposals, allProposals.length, daoStore);\n\n    return (\n      <ProposalsTableWrapper>\n        <ProposalTableHeaderActions>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ProposalsNameFilter\n              type=\"text\"\n              placeholder=\"Search by proposal title\"\n              name=\"titleFilter\"\n              id=\"titleFilter\"\n              onChange={onTitleFilterChange}\n            ></ProposalsNameFilter>\n            <ProposalsFilter name=\"stateFilter\" id=\"stateSelector\" onChange={onStateFilterChange}>\n              <option value=\"Any Status\">Any Status</option>\n              <option value=\"Pending Boost\">Pending Boost</option>\n              <option value=\"Pre Boosted\">Pre Boosted</option>\n              <option value=\"Boosted\">Boosted</option>\n              <option value=\"In Queue\">Queue</option>\n              <option value=\"Quiet Ending Period\">Quiet Ending Period</option>\n              <option value=\"Passed\">Passed</option>\n              <option value=\"Pending Execution\">Pending Execution</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"Executed\">Executed</option>\n              <option value=\"Expired in Queue\">Expired</option>\n            </ProposalsFilter>\n            <ProposalsFilter name=\"schemeFilter\" id=\"schemeSelector\" onChange={onSchemeFilterChange}>\n              <option value=\"All Schemes\">All Schemes</option>\n              {schemes.map((scheme) => {\n                return <option key={scheme.address} value={scheme.address}>{scheme.name}</option>\n              })}\n            </ProposalsFilter>\n          </div>\n\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ActiveButton route={`/${networkName}/new`}>+ New Proposal</ActiveButton>\n          </div>\n        </ProposalTableHeaderActions>\n        <ProposalTableHeaderWrapper>\n          <TableHeader width=\"35%\" align=\"left\"> Title </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Scheme </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Status </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Stakes </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Votes  </TableHeader>\n        </ProposalTableHeaderWrapper>\n        { (sortedProposals.length === 0) ?\n          <TableRowsWrapper>\n            <h3>No Proposals Found</h3>\n          </TableRowsWrapper>\n          :\n          <TableRowsWrapper>\n            { sortedProposals.map((proposal, i) => {\n              if (\n                proposal \n                && ((stateFilter == 'Any Status') || (stateFilter != 'Any Status' && proposal.status == stateFilter))\n                && ((titleFilter.length == 0) || ((titleFilter.length > 0) && (proposal.title.indexOf(titleFilter) >= 0)))\n                && ((schemeFilter == 'All Schemes') || (proposal.scheme == schemeFilter))\n              ) {\n                const positiveStake = formatNumberValue(normalizeBalance(proposal.positiveStakes, 18), 1);\n                const negativeStake = formatNumberValue(normalizeBalance(proposal.negativeStakes, 18), 1);\n                const repAtCreation = daoStore.getRepAt(ZERO_ADDRESS, proposal.creationEvent.l1BlockNumber).totalSupply;\n                \n                const positiveVotesPercentage = formatPercentage(\n                  proposal.positiveVotes.div(repAtCreation), 2\n                );\n                const negativeVotesPercentage =  formatPercentage(\n                  proposal.negativeVotes.div(repAtCreation), 2\n                );\n                const timeToBoost = timeToTimestamp(proposal.boostTime);\n                const timeToFinish = timeToTimestamp(proposal.finishTime);\n                \n                const votingMachineTokenName = \n                (votingMachines.gen && daoStore.getVotingMachineOfProposal(proposal.id) == votingMachines.gen.address)\n                ? 'GEN' : 'DXD';\n                \n                const voted = userEvents.votes.findIndex((event) => event.proposalId == proposal.id) > -1;\n                const staked = userEvents.stakes.findIndex((event) => event.proposalId == proposal.id) > -1;\n                const created = userEvents.newProposal.findIndex((event) => event.proposalId == proposal.id) > -1;\n                return (\n                  <Link key={\"proposal\"+i} to={`/${networkName}/proposal/${proposal.id}`} style={{textDecoration: \"none\"}}>\n                    <TableRow>\n                      <TableCell width=\"35%\" align=\"left\" weight='500' wrapText=\"true\">\n                        {created && <FiFeather style={{ minWidth: \"15px\", margin: \"0px 2px\"}}/>}\n                        {voted && <FiCheckCircle style={{ minWidth: \"15px\", margin: \"0px 2px\"}}/>}\n                        {staked && <FiCheckSquare style={{ minWidth: \"15px\", margin: \"0px 2px\"}}/>}\n                        {proposal.title.length > 0 ? proposal.title : proposal.id}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        {daoStore.getCache().schemes[proposal.scheme].name}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        <span style={{textAlign:\"center\"}}>\n                          {proposal.status} <br/>\n                          {(timeToBoost != \"\") ? <small>Boost {timeToBoost} <br/></small> : <span></span>}\n                          {(timeToFinish != \"\") ? <small>Finish {timeToFinish} </small> : <span></span>}\n                          {(proposal.pendingAction == 3) ? <small> Pending Finish Execution </small> : <span></span>}\n                        </span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\" style={{ minWidth: \"15px\", margin: \"0px 2px\"}}> \n                        <span style={{color: \"green\", flex:\"5\", textAlign:\"right\"}}>{positiveStake.toString()} {votingMachineTokenName} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"5\", textAlign:\"left\"}}> {negativeStake.toString()} {votingMachineTokenName}</span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\"> \n                        <span style={{color: \"green\", flex:\"3\", textAlign:\"right\"}}>{positiveVotesPercentage} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"3\", textAlign:\"left\"}}> {negativeVotesPercentage}</span>\n                      </TableCell>\n                    </TableRow>\n                  </Link>);\n                } else {\n                  return null;\n                }\n              }\n            )}\n          </TableRowsWrapper>\n        }\n      </ProposalsTableWrapper>\n    );\n});\n\nexport default ProposalsPage;\n","import styled from 'styled-components';\nimport { FaQuestionCircle } from \"react-icons/fa\";\n\n\nconst QuestionLink = styled.a`\n\n  color: var(--dark-text-gray);\n  \n  svg {\n    height: 15px;\n  }\n  svg:hover {\n    color: var(--text-gray-onHover);\n  }\n`;\n\nconst QuestionIcon = ({ question }) => {\n  return (\n    <QuestionLink href={\"/#/faq?question=\"+question} target=\"_self\">\n      <FaQuestionCircle> </FaQuestionCircle>\n    </QuestionLink>\n  );\n}\n\nexport default QuestionIcon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport MDEditor, { commands } from '@uiw/react-md-editor';\nimport contentHash from 'content-hash';\nimport { NETWORK_ASSET_SYMBOL } from '../provider/connectors';\n\nimport {\n  ZERO_ADDRESS,\n  ANY_ADDRESS,\n  sleep,\n  bnum,\n  normalizeBalance,\n  TXEvents\n} from '../utils';\n\nconst NewProposalFormWrapper = styled(Box)`\n    width: cacl(100% -40px);\n    display: flex;\n    padding: 10px 10px;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst PlaceHolders = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n    padding-bottom: 0px;\n`\n\nconst TitleInput = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n\n    input {\n      margin-top: 5px;\n      width: 100%;\n      height: 32px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n      padding: 0px 5px;\n    }\n    \n    select {\n      margin-left: 5px;\n      background-color: white;\n      min-width: 150px;\n      height: 34px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n    }\n`;\n\nconst TextActions = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: column;\n    margin: 10px 0px;\n    line-height: 30px;\n    \n`;\n\nconst CallRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n    \n    span {\n      text-align: center;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      padding: 10px 10px;\n    }\n`;\n\nconst RemoveButton = styled.div`\n    background-color: grey;\n    border: 1px solid black;\n    border-radius: 10px;\n    color: white;\n    height: 25px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 25px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 5px;\n    margin: 5px;\n`;\n\nconst TextInput = styled.input`\n  width: ${(props) => props.width || '25%'};\n  height: 34px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n`;\n\nconst SelectInput = styled.select`\n  width: ${(props) => props.width || '25%'};\n  height: 38px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n  background-color: #FFF;\n`;\n\nconst NewProposalPage = observer(() => {\n    const {\n        context: { providerStore, daoStore, configStore, daoService, ipfsService, pinataService },\n    } = useContext();\n    \n    const networkTokens = configStore.getTokensOfNetwork()\n    const schemes = daoStore.getAllSchemes();\n    const networkContracts = configStore.getNetworkContracts();\n    const schemeInLocalStorage = localStorage.getItem('dxvote-newProposal-scheme');\n    const networkAssetSymbol = NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\n\n    const defaultSchemeToUse = schemeInLocalStorage\n      ? schemes.findIndex((scheme) => scheme.address == schemeInLocalStorage)\n      : schemes.findIndex((scheme) => scheme.name == \"MasterWalletScheme\");\n\n    const [schemeToUse, setSchemeToUse] =\n      React.useState(defaultSchemeToUse > -1 ? schemes[defaultSchemeToUse] : schemes[0]);\n    const [titleText, setTitleText] = React.useState(localStorage.getItem('dxvote-newProposal-title') || \"\");\n    const [ipfsHash, setIpfsHash] = React.useState(\"\");\n    const [descriptionText, setDescriptionText] = React.useState(localStorage.getItem('dxvote-newProposal-description') || \"\");\n\n    let callsInStorage = [];\n    try {\n      if (localStorage.getItem('dxvote-newProposal-calls')) {\n        callsInStorage = JSON.parse(localStorage.getItem('dxvote-newProposal-calls'));\n        if (callsInStorage.length > 0 && !callsInStorage[0].dataValues)\n        callsInStorage = callsInStorage\n          .map((callInStorage) => Object.assign(callInStorage, {dataValues: new Array(callInStorage.functionParams.length)}))\n      }\n    } catch (error) {\n      callsInStorage = [];\n    }\n    const [calls, setCalls] = React.useState(callsInStorage);\n    \n    const [contributionRewardCalls, setContributionRewardCalls] = React.useState({\n      beneficiary: \"ZERO_ADDRESS\",\n      repChange: \"0\",\n      ethValue: \"0\",\n      externalToken: ZERO_ADDRESS,\n      tokenValue: \"0\"\n    });\n    \n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n\n    const [submitionState, setSubmitionState] = React.useState(0);\n    // 0 = Proposal Description not uploaded\n    // 1 = Uploading proposal description\n    // 2 = Proposal description uploaded\n    // 3 = Submiting new proposal tx\n    // 4 = Proposal creation tx submited\n    // 5 = Proposal creation tx receipt received\n    \n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    const proposalTemplates = configStore.getProposalTemplates();\n    if (proposalTemplates[0].name != \"Custom\")\n      proposalTemplates.unshift({name: \"Custom\", title: \"\", description: \"\" });\n\n    const {\n      assetLimits: transferLimits, recommendedCalls\n    } = daoStore.getSchemeRecommendedCalls(schemeToUse.address);\n    console.debug(\"[PERMISSIONS]\",schemeToUse, transferLimits, recommendedCalls)\n    \n    let allowedToCall = [];\n    \n    recommendedCalls.map((recommendedCall) => {\n      if((recommendedCall.fromTime > 0)\n        && (allowedToCall.findIndex((allowedPermission) => allowedPermission.value == recommendedCall.to) < 0)\n      ) {\n        allowedToCall.push({ value: recommendedCall.to, name: recommendedCall.toName });\n      }\n    });\n    \n    const callPermissions = daoStore.getCache().callPermissions;\n    if (schemeToUse.type == \"WalletScheme\"\n      && callPermissions[ZERO_ADDRESS]\n      && callPermissions[ZERO_ADDRESS]\n      [schemeToUse.controllerAddress == networkContracts.controller ? networkContracts.avatar : schemeToUse.address]\n      && callPermissions[ZERO_ADDRESS]\n      [schemeToUse.controllerAddress == networkContracts.controller ? networkContracts.avatar : schemeToUse.address]\n      [ANY_ADDRESS]\n    )\n      allowedToCall.push({ value: ANY_ADDRESS, name: \"Custom\" });\n\n    const uploadToIPFS = async function() {\n      if (titleText.length < 10) {\n        setErrorMessage(\"Title has to be at mimimum 10 characters length\");\n      } else if (descriptionText.length == 0) {\n        setErrorMessage(\"Description has to be at mimimum 100 characters length\");\n      } else {\n        setSubmitionState(1);\n        setErrorMessage(\"\");\n        console.log(schemeToUse.type)\n        const bodyTextToUpload = (schemeToUse.type == \"WalletScheme\")\n          ? descriptionText\n          : JSON.stringify({\n              description: descriptionText,\n              title: titleText,\n              tags: [\"dxvote\"],\n              url: \"\"\n            });\n          \n        const hash = await ipfsService.add(bodyTextToUpload);\n        setIpfsHash(hash);\n        \n        if (pinataService.auth) {\n          const pinataPin = await pinataService.pin(hash);\n          console.debug('[PINATA PIN]', pinataPin.data)\n        }\n        const ipfsPin = await ipfsService.pin(hash);\n        console.debug('[IPFS PIN]', ipfsPin)\n        \n        let uploaded = false;\n        while (!uploaded) {\n          const ipfsContent = await ipfsService.getContent(hash);\n          console.debug('[IPFS CONTENT]', ipfsContent);\n          if (ipfsContent == bodyTextToUpload)\n            uploaded = true;\n          await sleep(1000);\n        }\n\n        setSubmitionState(2);\n      }\n    }\n    \n    const createProposal = async function() {\n      console.debug('[RAW PROPOSAL]', titleText, ipfsHash, calls);\n      setSubmitionState(3);\n\n      const { library } = providerStore.getActiveWeb3React();\n      \n      let to = [], data = [], value = [];\n      try {\n        \n        if ((schemeToUse.type != \"ContributionReward\")) {\n          const callToController = (schemeToUse.controllerAddress == networkContracts.controller);\n          \n          to = calls.map((call) => {\n            return callToController ? networkContracts.controller : call.to;\n          });\n\n          data = calls.map((call) => {\n            if (call.to == \"\")\n              return \"\";\n            \n            let callData;\n            \n            if (call.callType == \"simple\") {\n              let callDataFunctionSignature = \"0x0\";\n              let callDataFunctionParamsEncoded = \"\";\n              \n              if (call.functionName.length == 0) {\n                callDataFunctionSignature = \"0x0\";\n              } else {\n                callDataFunctionSignature = library.eth.abi.encodeFunctionSignature(call.functionName)\n              }\n              \n              if (call.dataValues.length > 0) {\n                callDataFunctionParamsEncoded = call.functionParams.length > 0 ? library.eth.abi.encodeParameters(\n                    call.functionParams.map((functionParam) => functionParam.type),\n                    call.dataValues\n                  ).substring(2)\n                  : \"\";\n              }\n              callData = callDataFunctionSignature + callDataFunctionParamsEncoded;\n            } else {\n              callData = call.dataValues[0];\n            }\n            if (callToController && call.to != networkContracts.controller) {\n              return daoService.encodeControllerGenericCall(\n                call.to,\n                callData,\n                call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n                : call.value\n              )\n            } else {\n              return callData;\n            }\n          });\n\n          value = calls.map((call) => {\n            return callToController ? \"0\"\n            : call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n              : call.value\n          });\n        }\n        \n        const proposalData = (schemeToUse.type == \"ContributionReward\")\n        ? {\n          beneficiary: contributionRewardCalls.beneficiary,\n          reputationChange: normalizeBalance(bnum(contributionRewardCalls.repChange)).toString(),\n          ethValue: contributionRewardCalls.ethValue,\n          externalToken: contributionRewardCalls.externalToken,\n          tokenValue: contributionRewardCalls.tokenValue,\n          descriptionHash: contentHash.fromIpfs(ipfsHash)\n        } : {\n          to, data, value, titleText, descriptionHash: contentHash.fromIpfs(ipfsHash) \n        };\n      \n        console.debug('[PROPOSAL]', schemeToUse.address, proposalData);\n      \n        daoService.createProposal(\n          schemeToUse.address,\n          schemeToUse.type,\n          proposalData,\n        ).on(TXEvents.TX_HASH, (hash) => {\n            console.debug(\"[TX_SUBMITTED]\", hash);\n            setSubmitionState(4);\n            setErrorMessage(\"\");\n          })\n          .on(TXEvents.RECEIPT, (hash) => {\n            console.debug(\"[TX_RECEIPT]\", hash);\n            setSubmitionState(5);\n          })\n          .on(TXEvents.TX_ERROR, (txerror) => {\n            console.error(\"[TX_ERROR]\", txerror);\n            setSubmitionState(2);\n            setErrorMessage(txerror.message);\n          })\n          .on(TXEvents.INVARIANT, (error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          })\n          .catch((error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          });\n      } catch (error) {\n        console.error('[PROPOSAL_ERROR]', error);\n        setSubmitionState(2);\n        setErrorMessage(error.message);\n      }\n      \n    }\n    \n    function onDescriptionChange(newValue) {\n      if (submitionState < 1) {\n        setDescriptionText(newValue);\n        localStorage.setItem('dxvote-newProposal-description', newValue);\n      }\n    }\n    \n    function onTitleChange(newValue) {\n      if (submitionState < 1) {\n        setTitleText(newValue.target.value);\n        localStorage.setItem('dxvote-newProposal-title', newValue.target.value);\n      }\n    }\n    \n    function setCallsInState(calls) {\n      localStorage.setItem('dxvote-newProposal-calls', JSON.stringify(calls));\n      setCalls(calls);\n      forceUpdate();\n    }\n    \n    function setContributionRewardCallsInState(contributionRewardCalls) {\n      setContributionRewardCalls(contributionRewardCalls);\n      forceUpdate();\n    }\n\n    function addCall() {\n      calls.push({\n        callType: schemeToUse.type == \"WalletScheme\" ? \"simple\" : \"advanced\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        dataValues: [],\n        value: \"\"\n      })\n      setCallsInState(calls);\n    };\n    \n    function removeCall(proposalIndex) {\n      calls.splice(proposalIndex, 1);\n      setCallsInState(calls);\n    };\n    \n    function changeCallType(callIndex) {\n      calls[callIndex] = {\n        callType: calls[callIndex].callType === \"simple\" ? \"advanced\" : \"simple\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        dataValues: [],\n        value: \"\"\n      }\n      setCallsInState(calls);\n    };\n    \n    function onToSelectChange(callIndex, event) {\n      const toAddress = event.target.value;\n\n      if (toAddress == ANY_ADDRESS) {\n        changeCallType(callIndex);\n      } else {\n        calls[callIndex].to = toAddress;\n        calls[callIndex].allowedFunctions = [];\n        calls[callIndex].functionName = \"\";\n        calls[callIndex].functionParams = [];\n        calls[callIndex].dataValues = [];\n        calls[callIndex].value = \"0\";\n        recommendedCalls.map((recommendedCall) => {\n          if (recommendedCall.to == toAddress && recommendedCall.fromTime > 0){\n            calls[callIndex].allowedFunctions.push(recommendedCall);\n          }\n        });\n        if (calls[callIndex].allowedFunctions.length > 0){\n          calls[callIndex].functionName = calls[callIndex].allowedFunctions[0].functionName;\n          calls[callIndex].functionParams = calls[callIndex].allowedFunctions[0].params;\n          calls[callIndex].dataValues = new Array(calls[callIndex].allowedFunctions[0].params.length);\n        }\n\n        setCallsInState(calls);\n      }\n    }\n    \n    function onFunctionSelectChange(callIndex, functionName, params) {\n      calls[callIndex].functionName = functionName;\n\n      if (calls[callIndex].callType == \"simple\"){\n        calls[callIndex].functionParams = params;\n        calls[callIndex].dataValues = [];\n        calls[callIndex].dataValues = params.map(() => {return \"\"});\n        calls[callIndex].value = \"0\";\n      } else {\n        calls[callIndex].functionParams = [];\n        calls[callIndex].dataValues = [\"\"];\n        calls[callIndex].value = \"0\";\n      }\n        \n      setCallsInState(calls);\n    }\n    \n    function onFunctionParamsChange(callIndex, event, paramIndex) {\n      calls[callIndex].dataValues[paramIndex] = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onValueChange(callIndex, event) {\n      calls[callIndex].value = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onContributionRewardValueChange(key, value) {\n      contributionRewardCalls[key] = value;\n      setContributionRewardCallsInState(contributionRewardCalls);\n    }\n    \n    function onSchemeChange(event) {\n      setSchemeToUse(schemes[event.target.value]);\n      localStorage.setItem('dxvote-newProposal-scheme', schemes[event.target.value].address);\n      calls.splice(0, calls.length);\n      setContributionRewardCalls({\n        beneficiary: \"\",\n        repChange: \"0\",\n        ethValue: \"0\",\n        externalToken: ZERO_ADDRESS,\n        tokenValue: \"0\"\n      })\n      setCallsInState(calls);\n    }\n    \n    function onProposalTemplate(event) {\n      if (proposalTemplates[event.target.value].name != 'Custom') {\n        setTitleText(proposalTemplates[event.target.value].title);\n        setDescriptionText(proposalTemplates[event.target.value].description);\n        calls.splice(0, calls.length);\n        setCallsInState(calls);\n      }\n    }\n\n    return (\n      <NewProposalFormWrapper>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}>\n          <PlaceHolders>\n            <span style={{width: \"100%\"}}>Title</span>\n            <span style={{minWidth: \"150px\"}}>Scheme <Question question=\"2\"/></span>\n            <span style={{minWidth: \"150px\"}}>Template</span>\n          </PlaceHolders>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <TitleInput>\n            <input type=\"text\" placeholder=\"Proposal Title\" onChange={onTitleChange} value={titleText}/>\n            <select name=\"scheme\" id=\"schemeSelector\" onChange={onSchemeChange} defaultValue={defaultSchemeToUse}>\n              {schemes.map((scheme, i) =>{\n                if (scheme.type == \"WalletScheme\" || scheme.type == \"ContributionReward\" ||scheme.type == \"GenericMulticall\")\n                  return <option key={scheme.address} value={i}>{scheme.name}</option>\n                else\n                  return null;\n              })}\n            </select>\n            <select name=\"proposalTemplate\" id=\"proposalTemplateSelector\" onChange={onProposalTemplate}>\n              {proposalTemplates.map((template, i) =>{\n                return <option key={\"proposalTemplate\"+i} value={i}>{template.name}</option>\n              })}\n            </select>\n          </TitleInput>\n        </div>\n        {(submitionState < 1) ?\n          <MDEditor\n            value={descriptionText}\n            onChange={onDescriptionChange}\n            preview=\"edit\"\n            height=\"300\"\n            minHeight={300}\n            maxHeight={1000}\n            commands={[\n              commands.bold,\n              commands.italic,\n              commands.strikethrough,\n              commands.hr,\n              commands.title,\n              commands.divider,\n              commands.link,\n              commands.quote,\n              commands.code,\n              commands.image,\n              commands.unorderedListCommand,\n              commands.orderedListCommand,\n              commands.checkedListCommand,\n            ]}\n          />\n          : <div/>\n        }\n        <h2>Description Preview</h2>\n        <MDEditor.Markdown source={descriptionText} style={{\n          backgroundColor: \"white\",\n          borderRadius: \"5px\",\n          border: \"1px solid gray\",\n          padding: \"20px 10px\"\n        }} />\n        {(schemeToUse.type == \"ContributionReward\" || schemeToUse.type == \"GenericMulticall\")\n          || (schemeToUse.type == \"WalletScheme\" && schemeToUse.controllerAddress == networkContracts.controller)\n          ? <h2>Calls executed from the avatar <Question question=\"9\"/></h2>\n          : <h2>Calls executed from the scheme <Question question=\"9\"/></h2>\n        }\n        {Object.keys(transferLimits).map((assetAddress) => {\n          if (assetAddress == ZERO_ADDRESS)\n            return <h3>Transfer limit of {normalizeBalance(transferLimits[assetAddress]).toString()} {networkAssetSymbol}</h3>;\n          else {\n            const token = networkTokens.find(networkToken => networkToken.address == assetAddress);\n            if (token)\n              return <h3>Transfer limit of {normalizeBalance(transferLimits[assetAddress], token.decimals).toString()} {token.symbol}</h3>;\n            else\n              return <h3>Transfer limit {transferLimits[assetAddress].toString()} of asset {assetAddress}</h3>;\n          }\n        })}\n      \n        {(schemeToUse.type == \"ContributionReward\")\n        ? \n        // If scheme to use is Contribution Reward display a different form with less fields\n        <div>\n          <CallRow>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Beneficiary Account</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>REP Change</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>{networkAssetSymbol} Value (in WEI)</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Address of Token</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Token Amount (in WEI)</span>\n          </CallRow>\n          <CallRow>\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"beneficiary\", event.target.value)}\n              value={contributionRewardCalls.beneficiary}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"repChange\", event.target.value)}\n              value={contributionRewardCalls.repChange}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"ethValue\", event.target.value)}\n              value={contributionRewardCalls.ethValue}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"externalToken\", event.target.value)}\n              value={contributionRewardCalls.externalToken}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"tokenValue\", event.target.value)}\n              value={contributionRewardCalls.tokenValue}\n              width=\"50%\"\n            />\n          </CallRow>\n        </div>\n        \n        : \n        // If the scheme is GenericMulticall allow only advanced encoded calls\n        // At last if the scheme used is a Wallet Scheme type allow a complete edition of the calls :)\n          <div>\n            {calls.map((call, i) => \n              <CallRow key={\"call\"+i}>\n                <span>#{i}</span>\n\n                {((schemeToUse.type == \"WalletScheme\") && (call.callType === \"simple\")) ?\n                  <SelectInput\n                    value={calls[i].to || \"\"}\n                    onChange={(value) => {onToSelectChange(i, value)}}\n                    width={\"20%\"}\n                  >\n                  {allowedToCall.map((allowedCall, allowedCallIndex) =>{\n                    return (\n                      <option key={\"toCall\"+allowedCallIndex} value={allowedCall.value || \"\"}>\n                        {allowedCall.name}\n                      </option>\n                    );\n                  })}\n                  </SelectInput>\n                  : (schemeToUse.type != \"ContributionReward\") &&\n                  <TextInput\n                    value={calls[i].to || \"\"}\n                    onChange={(value) => {onToSelectChange(i, value)}}\n                    width={\"20%\"}\n                  />\n                }\n                \n                { call.callType === \"simple\" ?\n                  \n                  <div style={{display: \"flex\", width: call.callType === \"simple\" ? \"60%\" : \"50%\"}}>\n                    <SelectInput\n                      value={calls[i].functionName || \"\"}\n                      onChange={(event) => {\n                        const selectedFunction = calls[i].allowedFunctions.find((allowedFunction) => {\n                          return allowedFunction.functionName == event.target.value\n                        });\n                        onFunctionSelectChange(\n                          i,\n                          event.target.value,\n                          selectedFunction ? selectedFunction.params : \"\"\n                        )\n                      }}\n                      width=\"40%\"\n                    >\n                      {calls[i].allowedFunctions.map((allowedFunc, allowedFuncIndex) =>{\n                        return (\n                          <option key={\"functionToCall\"+allowedFuncIndex} value={allowedFunc.functionName || \"\"}>\n                            {allowedFunc.functionName}\n                          </option>\n                        );\n                      })}\n                    </SelectInput>\n                    \n                    <div style={{display: \"flex\", width: \"100%\", flexDirection: \"column\", paddingRight: \"10px\"}}>\n                      {calls[i].functionParams.length == 0 ?\n                        <TextInput \n                          key={\"functionParam00\"}\n                          disabled\n                          type=\"text\"\n                          placeholder=\"Select address to call and function\"\n                          width=\"100%\"\n                          style={{marginTop: \"0px\"}}\n                        />\n                      : calls[i].functionParams.map((funcParam, funcParamIndex) => {\n                        return (\n                          <TextInput \n                            key={\"functionParam\"+funcParamIndex}\n                            type=\"text\"\n                            onChange={(value) => onFunctionParamsChange(i, value, funcParamIndex)}\n                            value={calls[i].dataValues[funcParamIndex] || \"\"}\n                            placeholder={funcParam.name}\n                            width=\"100%\"\n                            style={{marginTop: funcParamIndex > 0 ? \"5px\": \"0px\"}}\n                          />\n                        );\n                        \n                      })}\n                    </div>\n                  </div>\n                :\n                  <TextInput \n                    type=\"text\"\n                    onChange={(value) => onFunctionParamsChange(i, value, 0)}\n                    value={calls[i].dataValues[0] || \"\"}\n                    placeholder=\"0x...\"\n                    width=\"100%\"\n                  />\n                }\n                \n                <TextInput\n                  type=\"text\"\n                  onChange={(value) => onValueChange(i, value)}\n                  value={calls[i].value || \"\"}\n                  width=\"10%\"\n                  placeholder={calls[i].callType === \"advanced\" ? \"WEI\" : {networkAssetSymbol}}\n                />\n                \n                <RemoveButton onClick={() => {removeCall(i)}}>X</RemoveButton>\n                { schemeToUse.type == \"WalletScheme\"\n                  ? <RemoveButton onClick={() => {changeCallType(i)}}>\n                    {calls[i].callType === \"advanced\" ? \"Simple\" : \"Advanced\"}\n                    </RemoveButton>\n                  : <div/>\n                }\n              </CallRow>\n            )}\n            \n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n              <ActiveButton onClick={addCall}>Add Call</ActiveButton>\n            </div>\n            \n          </div>\n        }\n        \n        {\n          (errorMessage.length > 0) ?\n            <TextActions>\n              <span>\n                {errorMessage}\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        { (submitionState > 1) ?\n            <TextActions>\n              <span>\n                Uploaded to IPFS:\n                  <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\">https://ipfs.io/ipfs/{ipfsHash}</a>\n                <br/>\n                Check before submitting proposal\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        \n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n          {\n            (submitionState == 0) ?\n              <ActiveButton onClick={uploadToIPFS}> Upload to IPFS </ActiveButton>\n            : (submitionState == 1) ?\n              <ActiveButton> Uploading descritpion to IPFS.. </ActiveButton>\n            : (submitionState == 2) ?\n              <ActiveButton onClick={createProposal}>Submit Proposal</ActiveButton>\n            : (submitionState == 3) ?\n              <ActiveButton>Submiting TX...</ActiveButton>\n            : (submitionState == 4) ?\n              <ActiveButton>Waiting for TX...</ActiveButton>\n            :\n              <ActiveButton route=\"/\">Back to Proposals</ActiveButton>\n          }\n        </div>\n        \n      </NewProposalFormWrapper>\n    );\n});\n\nexport default NewProposalPage;\n","import styled from 'styled-components';\nimport Copy from './Copy';\nimport { getBlockchainLink } from '../../utils';\nimport { useContext } from '../../contexts';\nimport { FiExternalLink } from \"react-icons/fi\";\n\nconst AddressLink = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  a {\n    padding: 2px 5px;\n    font-family: var(--roboto);\n    line-height: 17px;\n    letter-spacing: 0.2px;\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst BlockchainLink = ({ text, size = 'default', type = 'default', toCopy = false, onlyIcon = false}) => {\n  \n    const {\n        context: { configStore },\n    } = useContext();\n    \n    const networkName = configStore.getActiveChainName();\n\n    function formarText(toFormat) {\n        const start = toFormat.slice(0, 6);\n        const end = toFormat.slice(-4);\n\n        switch (size) {\n          case \"short\":\n            return `${start}..`;\n          case \"long\":\n            return toFormat;\n          default:\n            return `${start}...${end}`;\n        }\n    }\n\n    return (\n        <AddressLink>\n          <a href={getBlockchainLink(text, networkName, type)} target=\"_blank\">{ onlyIcon ? <FiExternalLink/> : formarText(text)}</a>\n          {toCopy ? <Copy toCopy={text} /> : <div/> }\n        </AddressLink>\n    );\n};\n\nexport default BlockchainLink;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from '../contexts';\nimport { useLocation } from 'react-router-dom';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Box from '../components/common/Box';\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst UserPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        context: { daoStore, configStore },\n    } = useContext();\n    const userAddress = useLocation().pathname.split(\"/\")[3];\n    const userEvents = daoStore.getUserEvents(userAddress);\n    const userInfo = daoStore.getUser(userAddress);\n    const networkName = configStore.getActiveChainName();\n\n    let proposalsToRedeem = [];\n    \n    userEvents.votes.map((vote) => {\n      const proposal = daoStore.getProposal(vote.proposalId);\n      const voteParameters = daoStore.getVotingParametersOfProposal(vote.proposalId);\n      if ((\n        (proposal.stateInVotingMachine == 1) \n        ||\n        (\n          voteParameters.votersReputationLossRatio.toNumber() > 0\n          && vote.timestamp < proposal.boostedPhaseTime.toNumber()\n          && proposal.winningVote == vote.vote\n          && proposal.stateInVotingMachine < 3\n        )\n      ) && (proposalsToRedeem.indexOf(vote.proposalId) < 0)) {\n          proposalsToRedeem.push(vote.proposalId);\n      }\n    })\n    \n    userEvents.stakes.map((stake) => {\n      const proposal = daoStore.getProposal(stake.proposalId);\n      if (proposalsToRedeem.indexOf(stake.proposalId) < 0 && proposal.winningVote == stake.vote)\n        proposalsToRedeem.push(stake.proposalId);\n    });\n    \n    userEvents.redeems.map((redeem) => {\n      if (proposalsToRedeem.indexOf(redeem.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeem.proposalId) , 1);\n    });\n    \n    userEvents.redeemsRep.map((redeemRep) => {\n      if (proposalsToRedeem.indexOf(redeemRep.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeemRep.proposalId) , 1);\n    });\n\n    return (\n      <Box style={{padding: \"10px 20px\"}}>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <h2 style={{ display: \"flex\", alignItems:\"center\"}}>\n            User: <BlockchainLink size=\"long\" text={userAddress} toCopy/>\n          </h2>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n          </div>\n        </div>\n        \n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {userInfo.repPercentage} % REP\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 1).length} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 2).length} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.newProposal.length} Proposals\n          </InfoBox>\n        </div>\n        \n        <h2> Redeems Left </h2>\n        {proposalsToRedeem.length == 0 ? <span> No redeems left </span> : <div/>}\n        {proposalsToRedeem.map((proposalId, i) => {\n          return(\n            <span\n              key={\"proposalLink\"+i}\n              onClick={() => { history.push(`/${networkName}/proposal/${proposalId}`)}}\n              style={{  \n                padding: \"6px 0px\", cursor: \"pointer\"\n              }}\n            >\n              <span> Proposal {proposalId} </span>\n            </span>\n          );\n        })}\n        \n        <h2> History </h2>\n        {userEvents.history.map((historyEvent, i) => {\n          return(\n            <div key={\"userHistoryEvent\"+i} style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"6px 0px\",\n              borderBottom: i < userEvents.history.length - 1 ? \"1px solid\": \"\"\n            }}>\n              <span> {historyEvent.text} </span> \n              <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n            </div>\n          );\n        })}\n      </Box>\n    );\n});\n\nexport default UserPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport moment from 'moment';\nimport Countdown from 'react-countdown';\nimport { FiPlayCircle, FiFastForward } from \"react-icons/fi\";\nimport MDEditor from '@uiw/react-md-editor';\nimport { useHistory } from \"react-router-dom\";\nimport contentHash from 'content-hash';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\nimport {\n  WalletSchemeProposalState,\n  VotingMachineProposalState,\n  bnum,\n  calculateStakes,\n  formatBalance,\n  denormalizeBalance\n} from '../utils';\n\nconst ProposalInformationWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoSidebarBox = styled(Box)`\n  max-width: 400px;\n  min-width: 300px;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  padding: 10px 15px;\n`;\n\nconst ProposalInfoSection = styled.div`\n  max-width: 900px;\n  width: 100%;\n  flex-direction: column;\n  margin-right: 15px;\n`\n\nconst ProposalInfoBox = styled(Box)`\n  max-width: 900px;\n  overflow-wrap: break-word;\n  padding: 20px 15px 10px 15px;\n  justify-content: flex-start;\n  overflow: auto;\n`\n\nconst SidebarDivider = styled.div`\n  border-bottom: 1px solid gray;\n  margin: 5px 10px;\n`;\n\nconst SidebarRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 5px 0px;\n\n  .timeText {\n    font-size: 20;\n    margin-left: -10px;\n    width:100%;\n    text-align: center;\n    padding-top: 5px;\n  }\n  \n  span {\n    margin-bottom: 5px;\n  }\n`;\n\nconst AmountInput = styled.input`\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: 60px;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\n\nconst AmountBadge = styled.span`\n    background-color: ${(props) => props.color || 'inherit'};\n    border-radius: 50%;\n    color: white;\n    padding: 2px 6px;\n    text-align: center;\n    margin: 5px;\n`;\n\nconst ActionButton = styled.div`\n    background-color: ${(props) => props.color || '#536DFE'};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    width: max-content;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    padding: 0px 10px;\n    margin: 5px;\n    \n    display: flex;\n    align-items: center;\n    \n    svg {\n      margin-right: 4px;\n    }\n`;\n\nconst ProposalPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        context: { providerStore, daoStore, configStore, userStore, daoService, ipfsService },\n    } = useContext();\n\n    const networkContracts = configStore.getNetworkContracts();\n    const votingMachines = networkContracts.votingMachines;\n    const proposalId = useLocation().pathname.split(\"/\")[3];\n    const proposal = daoStore.getProposal(proposalId);\n\n    if (!proposal)\n      history.push('/')\n    \n    const votingMachineUsed = daoStore.getVotingMachineOfProposal(proposalId);\n    const scheme = daoStore.getScheme(proposal.scheme);\n    const { dxdApproved, genApproved } = userStore.getUserInfo(); \n    const { account } = providerStore.getActiveWeb3React();\n    const [stakeAmount, setStakeAmount] = React.useState(100);\n    const [votePercentage, setVotePercentage] = React.useState(0);\n    const [proposalDescription, setProposalDescription] = React.useState(\n      \"## Getting proposal description from IPFS...\"\n    );\n    const [proposalTitle, setProposalTitle] = React.useState(\n      proposal.title.length > 0 ? proposal.title : \"Getting proposal title from IPFS...\"\n    );\n    \n    const votingMachineTokenName = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? 'GEN' : 'DXD';\n    const votingMachineTokenApproved = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? genApproved : dxdApproved;\n      \n    const proposalEvents = daoStore.getProposalEvents(proposalId);\n    console.debug(\"[Scheme]\", scheme);\n    \n    let votedAmount = bnum(0);\n    let positiveVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"1\").length;\n    let negativeVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"2\").length;\n    let stakedAmount = bnum(0);\n    let positiveStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"1\").length;\n    let negativeStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"2\").length;\n    \n    const {\n      userRep: userRepAtProposalCreation, totalSupply: totalRepAtProposalCreation\n    } = configStore.getActiveChainName().indexOf('arbitrum') > -1 ?\n      daoStore.getRepAt(account, proposal.creationEvent.l2BlockNumber)\n      : daoStore.getRepAt(account, proposal.creationEvent.l1BlockNumber);\n\n    const repPercentageAtCreation = userRepAtProposalCreation.times(100).div(totalRepAtProposalCreation).toFixed(4);\n\n    const {status, boostTime, finishTime, pendingAction} = daoStore.getProposalStatus(proposalId);\n\n    // @ts-ignore\n    try {\n      if (proposalDescription == \"## Getting proposal description from IPFS...\")\n        ipfsService.getContent(contentHash.decode(proposal.descriptionHash)).then((data) => {\n          if (scheme.type == 'WalletScheme') {\n            setProposalDescription(data);\n          } else {\n            setProposalTitle(JSON.parse(data).title);\n            setProposalDescription(JSON.parse(data).description);\n          }\n        });\n    } catch (error) {\n      console.error(\"[IPFS ERROR]\",error);\n      setProposalTitle(\"Error getting proposal title from ipfs\");\n      setProposalDescription(\"Error getting proposal description from IPFS\");\n    }\n    \n    proposalEvents.votes.map((vote) => {\n      if (vote.voter === account) {\n        votedAmount = bnum(vote.amount);\n      };\n    });\n      \n    proposalEvents.stakes.map((stake) => {\n      if (stake.staker === account && stake.vote.toString() == \"1\") {\n        stakedAmount = stakedAmount.plus(stake.amount);\n      } else if (stake.staker === account && stake.vote.toString() == \"2\") {\n        stakedAmount = stakedAmount.minus(stake.amount);\n      }\n    });\n    \n    console.debug(\"[Proposal]\", proposal);\n    console.debug(\"[Proposal events]\", proposalEvents);\n    \n    const executionTimeoutTime = scheme.type == \"WalletScheme\"\n      ? proposal.submittedTime.plus(scheme.maxSecondsForExecution)\n      : bnum(0);\n    \n    let proposalCallTexts = new Array(proposal.to.length);\n    for (var p = 0; p < proposal.to.length; p++) {\n      proposalCallTexts[p] = daoService.decodeWalletSchemeCall(\n        (scheme.type == \"WalletScheme\" && scheme.controllerAddress != networkContracts.controller)\n          ? scheme.address : networkContracts.avatar,\n        proposal.to[p],\n        proposal.callData[p],\n        proposal.values[p]\n      );\n    }\n    \n    const votingParameters = daoStore.getVotingParametersOfProposal(proposalId);\n\n    const canRedeemToken = (proposalEvents.redeems.findIndex((redeem) => redeem.beneficiary === account) < 0)\n      && (stakedAmount.gt('0'));\n\n    const vote = proposalEvents.votes.find((vote) => vote.voter === account);\n    const canRedeemRep = vote\n      ? (proposalEvents.redeemsRep.findIndex((redeemRep) => redeemRep.beneficiary === account) < 0)\n        && (\n          ((votingParameters.votersReputationLossRatio.toNumber() > 0) && (vote.timestamp < proposal.boostedPhaseTime.toNumber()))\n          || (proposal.stateInVotingMachine == 1)\n        )\n      : false;\n\n    const [canRedeem, setCanRedeem] = React.useState(canRedeemToken || canRedeemRep);\n\n    const {recommendedStakeToBoost, recommendedStakeToUnBoost } = calculateStakes(\n      votingParameters.thresholdConst,\n      scheme.boostedProposals,\n      daoStore.getAmountOfProposalsPreBoostedInScheme(scheme.address),\n      proposal.positiveStakes,\n      proposal.negativeStakes,\n    )\n      \n    const boostedVoteRequiredPercentage = scheme.boostedVoteRequiredPercentage / 1000;\n    \n    function onStakeAmountChange(event) {\n      setStakeAmount(event.target.value);\n    }\n    \n    function onVoteValueChange(event) {\n      setVotePercentage(event.target.value < repPercentageAtCreation ? event.target.value : repPercentageAtCreation);\n    }\n    \n    if (Number(repPercentageAtCreation) > 0 && votePercentage === 0) {\n      setVotePercentage(Number(repPercentageAtCreation));\n    }\n    \n    const submitVote = function(decision) {\n      const repAmount = (totalRepAtProposalCreation.times(bnum(votePercentage))).div('100').toFixed(0);\n      daoService.vote(decision, repAmount, proposalId);\n    };\n    \n    const submitStake = function(decision) {\n      daoService.stake(decision, denormalizeBalance(bnum(stakeAmount)).toString(), proposalId);\n    };\n    \n    if (scheme.type == \"ContributionReward\" && networkContracts.daostack.contributionRewardRedeemer) {\n      daoService.redeemContributionRewardCall(\n        networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, account\n      ).then((toRedeemResponse) => {\n        const web3 = providerStore.getActiveWeb3React().library;\n        const toRedeem = web3.eth.abi.decodeParameters([\n          \"uint[3]\", \"uint[2]\", \"bool\", \"uint256\", \"int256\", \"uint256\", \"uint256\", \"uint256\"\n        ],toRedeemResponse)\n        console.debug(\"To Redeem:\",toRedeem);\n        if (\n          (toRedeem[0].findIndex(value => value != \"0\") > -1) || (toRedeem[1].findIndex(value => value != \"0\") > -1)\n          || (toRedeem[4] != 0) || (toRedeem[5] > 0) || (toRedeem[6] > 0) || (toRedeem[7] > 0)\n        ) {\n          setCanRedeem(true)\n        } else {\n          setCanRedeem(false)\n        }\n      });\n    }\n    \n    const redeem = function() {\n      if (scheme.type == \"ContributionReward\" && networkContracts.daostack.contributionRewardRedeemer) {\n        daoService.redeemContributionReward(\n          networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, account\n        );\n      } else {\n        daoService.redeem(proposalId, account);\n      }\n    }\n    \n    const approveVotingMachineToken = function() {\n      daoService.approveVotingMachineToken(votingMachineUsed);\n    };\n    \n    const executeProposal = function() {\n      daoService.execute(proposalId);\n    };\n    \n    const redeemBeneficiary = function() {\n      daoService.redeemContributionReward(\n        networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, proposal.to[0]\n      );\n    };\n\n    const finishTimeReached = finishTime.toNumber() < moment().unix();\n\n    return (\n      <ProposalInformationWrapper>\n        <ProposalInfoSection>\n          <ProposalInfoBox>\n            <h1 style={{margin: \"0px\"}}> {proposalTitle} </h1>\n            <MDEditor.Markdown source={ proposalDescription } style={{\n              padding: \"20px 10px\",\n              lineBreak: \"anywhere\",\n              whiteSpace: \"pre-line\"\n            }} />\n            {proposal.descriptionHash.length > 0 &&\n              <h3 style={{margin: \"0px\"}}>\n                <small>\n                  IPFS Document: <a target=\"_blank\" href={`https://ipfs.io/ipfs/${contentHash.decode(proposal.descriptionHash)}`}>\n                  ipfs://{contentHash.decode(proposal.descriptionHash)}\n                  </a>\n                </small>\n              </h3>\n            }\n            <h2> Calls  <Question question=\"9\"/></h2>\n            {proposalCallTexts.map((proposalCallText, i) => {\n              return(\n              <div key={\"proposalCallText\"+i}>\n                <span style={{whiteSpace: \"pre-line\"}} dangerouslySetInnerHTML={{ __html: proposalCallText }}/>\n                {i < proposalCallTexts.length - 1 ? <hr/> : <div/>}\n              </div>);\n            })}\n          </ProposalInfoBox>\n          <ProposalInfoBox style={{marginTop: \"15px\"}}>\n            <h1 style={{margin: \"0px\"}}> History </h1>\n            {proposalEvents.history.map((historyEvent, i) => {\n              return(\n                <div key={\"proposalHistoryEvent\"+i} style={{\n                  display: \"flex\", alignItems:\"center\", padding:\"4px 0px\",\n                  borderBottom: i < proposalEvents.history.length - 1 ? \" 1px --medium-gray\": \"\"\n                }}>\n                  <span> {historyEvent.text} </span> \n                  <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n                  {i < proposalEvents.history.length - 1 ? <hr/> : <div/>}\n                </div>\n              );\n            })}\n          </ProposalInfoBox>\n        </ProposalInfoSection>\n        <InfoSidebarBox>\n          <h2 style={{margin: \"10px 0px 0px 0px\", textAlign: \"center\"}}>{status} <Question question=\"3\"/></h2>\n          <SidebarRow style={{ margin: \"0px 10px\", flexDirection: \"column\" }}>\n            {(boostTime.toNumber() > moment().unix()) &&\n              <span className=\"timeText\">Boost in <Countdown date={boostTime.toNumber()*1000} /> </span> \n            }\n            {(finishTime.toNumber() > moment().unix()) &&\n              <span className=\"timeText\"> Finish in <Countdown date={finishTime.toNumber()*1000} /> </span>\n            }\n            {((status == \"Pending Execution\") && (executionTimeoutTime.toNumber() > 0)) &&\n              <span className=\"timeText\"> Execution timeout in <Countdown date={executionTimeoutTime.toNumber()*1000} /> </span>\n            }\n          </SidebarRow>\n          { proposal.stateInScheme < 3 ? \n            <SidebarRow style={{flexDirection:\"column\", alignItems:\"center\"}}>\n              {pendingAction == 1 ? \n                <ActionButton color=\"blue\" onClick={executeProposal}><FiFastForward/> Boost </ActionButton>\n              : pendingAction == 2 ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Execute </ActionButton>\n              : pendingAction == 3 ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Finish </ActionButton>\n              : pendingAction == 4 &&\n                <ActionButton color=\"blue\" onClick={redeemBeneficiary}><FiPlayCircle/> Redeem 4 Beneficiary </ActionButton>\n              }\n            </SidebarRow>\n            : <div/>\n          }\n          \n          <SidebarDivider/> \n\n          <SidebarRow style={{ margin: \"0px 10px\", padding: \"10px 0px\", flexDirection: \"column\" }}>\n            <span style={{ display: \"flex\", height: \"17px \"}}>\n              <strong>Proposer</strong> <small><BlockchainLink type=\"user\" text={proposal.proposer} toCopy/></small>\n            </span>\n            <span> <strong>Scheme</strong> <small>{scheme.name}</small></span>\n            <span><strong>State in Voting Machine </strong>\n              <small>{VotingMachineProposalState[proposal.stateInVotingMachine]}</small>\n            </span>\n            <span><strong>State in Scheme </strong>\n              <small>{WalletSchemeProposalState[proposal.stateInScheme]}</small>\n            </span>\n            <span> <strong>Submitted Date</strong> <small>{\n              moment.unix(proposal.submittedTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            <span> <strong>Boost Date</strong> <small>{\n              boostTime.toNumber() > 0 ?\n                moment.unix(boostTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n              : \"-\"\n            }</small> </span>\n            <span> <strong>Finish Date</strong> <small>{\n              moment.unix(finishTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            \n            { (boostedVoteRequiredPercentage > 0) ?\n              <span> <strong> Required Boosted Vote: </strong> <small>{boostedVoteRequiredPercentage}%</small> </span>\n              : <div/>\n            }\n          </SidebarRow>\n          \n          <SidebarDivider/> \n        \n          <SidebarRow>\n            <strong>Votes <Question question=\"4\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}> \n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveVotesCount}</AmountBadge>\n              {proposal.positiveVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <br/> \n              {proposalEvents.votes && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`voteUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n                    </small>\n                  );\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {proposal.negativeVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <AmountBadge color=\"red\">{negativeVotesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`voteDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toNumber().toFixed(2)} %\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {Number(repPercentageAtCreation) > 0\n            ? <small>{repPercentageAtCreation} % REP at proposal creation</small>\n            : <div/>\n          }\n          \n          { (\n              ((proposal.stateInVotingMachine == 3) || (proposal.stateInVotingMachine == 4))\n              && (votingParameters.votersReputationLossRatio.toNumber() > 0)\n              && (finishTime.toNumber() > 0)\n            ) ? <small>Voter REP Loss Ratio: {votingParameters.votersReputationLossRatio.toString()}%</small>\n            : <div/> \n          }\n          \n          {!finishTimeReached && votedAmount.toNumber() === 0 && Number(repPercentageAtCreation) > 0 && proposal.stateInVotingMachine >= 3 ?\n            <SidebarRow>\n              \n              <AmountInput\n                type=\"number\"\n                placeholder=\"REP\"\n                name=\"votePercentage\"\n                max={repPercentageAtCreation}\n                value={votePercentage}\n                min=\"0\"\n                step={votePercentage > 10 ? \"1\" : votePercentage > 1 ? \"0.01\" : votePercentage > 0.1 ? \"0.001\" : \"0.00001\"}\n                id=\"votePercentage\"\n                onChange={onVoteValueChange}\n                style={{flex: 2}}\n              />\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitVote(1)}><FiThumbsUp /></ActionButton>\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitVote(2)}><FiThumbsDown /></ActionButton>\n              \n            </SidebarRow>\n          : votedAmount.toNumber() !== 0 ?\n            <SidebarRow>\n              Already voted {(votedAmount.toNumber() > 0) ? \"for\" : \"against\"} with { (votedAmount.times(\"100\").div(totalRepAtProposalCreation)).toFixed(2)} % REP\n            </SidebarRow>\n          : <div/>\n          }\n          \n          <SidebarDivider/> \n          \n          <SidebarRow>\n            <strong>Stakes <Question question=\"5\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveStakesCount}</AmountBadge>\n              {formatBalance(proposal.positiveStakes).toString()} {votingMachineTokenName}\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`stakeUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(bnum(stakeEvent.amount)).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {formatBalance(proposal.negativeStakes).toString()} {votingMachineTokenName}\n              <AmountBadge color=\"red\">{negativeStakesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`stakeDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(bnum(stakeEvent.amount)).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {stakedAmount.toNumber() > 0\n            ? <SidebarRow>\n            Already staked {(stakedAmount.toNumber() > 0) ? \"for\" : \"against\"} with {formatBalance(stakedAmount).toString()} {votingMachineTokenName}\n            </SidebarRow>\n            : <div></div>\n          }\n\n          {!finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4) && votingMachineTokenApproved.toString() === \"0\" ?\n            <SidebarRow>\n              <small>Approve {votingMachineTokenName} to stake</small>\n              <ActionButton color=\"blue\" onClick={() => approveVotingMachineToken()}>Approve {votingMachineTokenName}</ActionButton>\n            </SidebarRow>\n            : !finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4)  ?\n              <div>\n                {Number(recommendedStakeToBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToBoost, 18, 1, false).toString()} {votingMachineTokenName} to boost</small> : <span/>}\n                {Number(recommendedStakeToUnBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToUnBoost, 18, 1, false).toString()} {votingMachineTokenName} to unboost</small> : <span/>}\n                <SidebarRow>\n                  <AmountInput\n                    type=\"number\"\n                    placeholder={votingMachineTokenName}\n                    name=\"stakeAmount\"\n                    id=\"stakeAmount\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    onChange={onStakeAmountChange}\n                    style={{flex: 2}}\n                  />\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitStake(1)}><FiThumbsUp /></ActionButton>\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitStake(2)}><FiThumbsDown /></ActionButton>\n                </SidebarRow>\n              </div>\n            : <div></div>\n          }\n          \n          {proposal.stateInVotingMachine < 3 && canRedeem\n            ? <SidebarRow style={{ borderTop: \"1px solid gray\",  margin: \"0px 10px\", justifyContent: \"center\" }}>\n              <ActionButton color=\"blue\" onClick={() => redeem()}>Redeem</ActionButton>\n            </SidebarRow>\n            : <div></div>\n          }\n          \n        </InfoSidebarBox>\n      </ProposalInformationWrapper>\n    );\n    \n});\n\nexport default ProposalPage;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { bnum, parseCamelCase, ZERO_ADDRESS, formatCurrency, formatBalance } from '../utils';\nimport { NETWORK_ASSET_SYMBOL } from '../provider/connectors';\n\nconst FinanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    color: var(--dark-text-gray);\n    flex-wrap: wrap;\n`;\n\nconst FinanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: ${(props) => props.align};;\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst FinanceInformation = observer(() => {\n    const {\n        context: { daoStore, configStore, coingeckoService },\n    } = useContext();\n\n    const daoInfo = daoStore.getDaoInfo();\n    const schemes = daoStore.getAllSchemes();\n    const prices = coingeckoService.getPrices();\n    const networkAssetSymbol = NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\n    \n    let assets = {\n      total: [{\n        address: ZERO_ADDRESS,\n        name: networkAssetSymbol,\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }],\n      avatar: [{\n        address: ZERO_ADDRESS,\n        name: networkAssetSymbol,\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }]\n    };\n    Object.keys(daoInfo.tokenBalances).map((tokenAddress) => {\n      const tokenData = configStore.getTokenData(tokenAddress);\n      assets.avatar.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n      assets.total.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n    });\n    \n    schemes.map((scheme) => {\n      if (scheme.controllerAddress != ZERO_ADDRESS)\n        return;\n        \n      const tokenBalances = scheme.tokenBalances;\n      if (!assets[scheme.name])\n        assets[scheme.name] = [{\n          address: ZERO_ADDRESS,\n          name: networkAssetSymbol,\n          amount: bnum(scheme.ethBalance),\n          decimals: 18\n        }]\n      \n      Object.keys(tokenBalances).map((tokenAddress) => {\n        const tokenData = configStore.getTokenData(tokenAddress);\n\n        assets[scheme.name].push({\n          address: tokenAddress,\n          name: tokenData.name,\n          amount: bnum(tokenBalances[tokenAddress]),\n          decimals: tokenData.decimals\n        })\n        const indexOfAssetInTotal = assets.total.findIndex((asset) => asset.address == tokenAddress);\n        if (indexOfAssetInTotal > -1) {\n          assets.total[indexOfAssetInTotal].amount = assets.total[indexOfAssetInTotal].amount.plus(\n            bnum(tokenBalances[tokenAddress])\n          );\n        } else {\n          assets.total.push({\n            address: tokenAddress,\n            name: tokenData.name,\n            amount: bnum(tokenBalances[tokenAddress]),\n            decimals: tokenData.decimals,\n          })\n        }\n        \n      });\n    });\n    \n    return (\n      <FinanceInfoWrapper>\n        { Object.keys(assets).map((assetHolder, i) => {\n          const assetsOfHolder = assets[assetHolder];\n          return (\n            <div style={{width: i > 0 ? \"50%\" : \"100%\"}}>\n              <h2 style={{textAlign: \"center\"}}>{parseCamelCase(assetHolder)}</h2>\n              <FinanceTableHeaderWrapper>\n              <TableHeader width=\"33%\" align=\"center\"> Asset </TableHeader>\n              <TableHeader width=\"34%\" align=\"center\"> Balance </TableHeader>\n              <TableHeader width=\"33%\" align=\"center\"> USD Value </TableHeader>\n\n              </FinanceTableHeaderWrapper>\n              <TableRowsWrapper>\n              {assetsOfHolder.map((asset, i) => {\n                if (asset && Number(formatBalance(asset.amount, asset.decimals, 2)) > 0) {\n                  return (\n                    <TableRow key={`asset${i}`}>\n                      <TableCell width=\"33%\" align=\"center\" weight='500'>\n                        {asset.name} <BlockchainLink size=\"long\" type=\"address\" text={asset.address} onlyIcon toCopy/>\n                      </TableCell>\n                      <TableCell width=\"34%\" align=\"center\"> \n                        {formatBalance(asset.amount, asset.decimals, 2).toString()}\n                      </TableCell>\n                      <TableCell width=\"33%\" align=\"center\"> \n                        {(prices[asset.address] && prices[asset.address].usd) ?\n                          formatCurrency(\n                            bnum(\n                              Number(formatBalance(asset.amount, asset.decimals, 2)) * prices[asset.address].usd\n                            )\n                          )\n                          : \"-\"\n                        }\n                      </TableCell>\n                    </TableRow>);\n                } else {\n                  return <div key={`asset${i}`} />\n                }\n              })}\n              </TableRowsWrapper>\n            </div>\n          );\n        })}\n      </FinanceInfoWrapper>\n    );\n});\n\nexport default FinanceInformation;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport { bnum } from '../utils';\nimport moment from 'moment';\n\nconst SchemesInformationWrapper = styled.div`\n  width: 100%;\n  background: white;\n  font-weight: 400;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--dark-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 16px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    align-items: center;\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n`;\n\nconst TableCell = styled.div`\n    a {\n        text-decoration: none;\n        width: 100%;\n\n        &:hover{\n            color: var(--turquois-text-onHover);\n        }\n    }\n    color: ${(props) => props.color};\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst SchemesInformation = observer(() => {\n    const {\n        context: { providerStore, daoStore },\n    } = useContext();\n    const { library } = providerStore.getActiveWeb3React();\n    \n    const schemes = daoStore.getAllSchemes();\n    return (\n      <SchemesInformationWrapper>\n        <ProposalTableHeaderWrapper>\n            <TableHeader width=\"15%\" align=\"left\"> Name </TableHeader>\n            <TableHeader width=\"40%\" align=\"center\"> Configuration <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"25%\" align=\"center\"> Permissions <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <span>Boosted</span> - <span>Active</span> - <span>Total</span>\n            </TableHeader>\n        </ProposalTableHeaderWrapper>\n        <TableRowsWrapper>\n        {schemes.map((scheme, i) => {\n          const schemeProposals = daoStore.getSchemeProposals(scheme.address);\n          const votingMachineParameters = daoStore.getVotingParametersOfScheme(scheme.address);\n          if (votingMachineParameters)\n            return (\n              <div key={\"scheme\"+i}>\n                <TableRow>\n                  <TableCell width=\"15%\" align=\"left\" weight='500' wrapText=\"true\">\n                    {scheme.name}<br/>\n                    <BlockchainLink size=\"short\" text={scheme.address} toCopy/>\n                  </TableCell>\n                  <TableCell width=\"40%\" align=\"center\">\n                    <small>Params Hash: {scheme.paramsHash}</small><br/>\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max time for execution: {\n                          moment.duration(scheme.maxSecondsForExecution.toString(), 'seconds').humanize()\n                        }<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max REP % to change in proposal: {scheme.maxRepPercentageChange.toString()} %<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Required Percentage for boosted approval: {bnum(scheme.boostedVoteRequiredPercentage).div(\"1000\").toString()} %<br/></small>\n                      : <div/>\n                    }\n                    \n                    <small>Required Percentage for queue approval: {votingMachineParameters.queuedVoteRequiredPercentage.toString()} %</small><br/>\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Rep Proposing Reward: {\n                      Number(library.utils.fromWei(votingMachineParameters.proposingRepReward.toString())).toFixed(2)\n                    } REP</small><br/>\n                    <small>Reputation Loss Ratio: {votingMachineParameters.votersReputationLossRatio.toString()} %</small><br/>\n                    <small>Minimum Dao Boost: {\n                      Number(library.utils.fromWei(votingMachineParameters.minimumDaoBounty.toString())).toFixed(2)\n                    } DXD</small><br/>\n                    <small>Proposal Boost Bounty Const: {votingMachineParameters.daoBountyConst.toString()}</small><br/>\n                    <small>Boost Threshold Constant: {votingMachineParameters.thresholdConst.div(10**12).toString()}</small><br/>\n                    <small>Boost Limit Exponent Value: {votingMachineParameters.limitExponentValue.toString()}</small>\n                    \n                  </TableCell>\n                  <TableCell width=\"25%\" align=\"center\" wrapText>\n                    <strong>Controller Permissions</strong><br/>\n                    <small>{scheme.permissions.canGenericCall ? 'Can' : 'Cant'} make generic call</small><br/>\n                    <small>{scheme.permissions.canUpgrade ? 'Can' : 'Cant'} upgrade controller</small><br/>\n                    <small>{scheme.permissions.canChangeConstraints ? 'Can' : 'Cant'} change constraints</small><br/>\n                    <small>{scheme.permissions.canRegisterSchemes ? 'Can' : 'Cant'} register schemes</small>\n\n                  </TableCell>\n\n                  <TableCell width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-around\"}}> \n                    <span>{scheme.boostedProposals}</span>\n                    -\n                    <span>{schemeProposals.filter((proposal) => {\n                      return (proposal.stateInVotingMachine > 2)\n                    }).length}</span>\n                    -\n                    <span>{scheme.proposalIds ? scheme.proposalIds.length : 0}</span>\n                  </TableCell>\n                </TableRow>\n              </div>\n            );\n          else return <div/>;\n          }\n        )}\n        </TableRowsWrapper>\n      </SchemesInformationWrapper>\n    );\n});\n\nexport default SchemesInformation;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { FaTrophy, FaMedal } from \"react-icons/fa\";\nimport { bnum } from '../utils';\nimport { Chart } from \"react-google-charts\";\n\nconst GovernanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    color: var(--dark-text-gray);\n`;\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst GovernanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst GovernanceInformation = observer(() => {\n    const {\n        context: { daoStore },\n    } = useContext();\n\n    const daoInfo = daoStore.getDaoInfo();\n    const governanceInfo = daoStore.getGovernanceInfo();\n    console.log(governanceInfo);\n    function toNumber(weiNumber) {\n      return bnum(weiNumber).div(10**18).toFixed(0)\n    }\n    return (\n      <GovernanceInfoWrapper>\n        <h1 style={{textAlign: \"center\"}}>Stats</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {toNumber(daoInfo.totalRep)} REP\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalPositiveVotes} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalNegativeVotes} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalProposalsCreated} Proposals\n          </InfoBox>\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Reputation Charts</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n          <Chart\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.rep}\n            options={{\n              legend: 'none',\n              pieSliceText: 'none',\n              pieStartAngle: 100,\n              title: \"Reputation Distribution\",\n              sliceVisibilityThreshold: 0.001, // 0.1%\n            }}\n          />\n          <Chart\n            width=\"100%\"\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.repEvents}\n            options={{\n              hAxis: { title: 'Block Number', },\n              vAxis: { title: 'Reputation', },\n              title: \"Reputation over Time\",\n              legend: 'none'\n            }}\n          />\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Governance Ranking</h1>\n\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            Create Proposal<br/>\n            <strong>1 to 30 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Winning Option<br/>\n            <strong>3 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Losing Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n          <InfoBox>\n            Stake Winning Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n        </div>\n        <GovernanceTableHeaderWrapper>\n          <TableHeader width=\"5%\" align=\"center\"> # </TableHeader>\n          <TableHeader width=\"35%\" align=\"center\"> Address </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Proposals Created </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Voted </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Staked </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Score </TableHeader>\n        </GovernanceTableHeaderWrapper>\n        <TableRowsWrapper>\n        {governanceInfo.ranking.map((user, i) => {\n          return (\n            <TableRow key={`user${i}`}>\n              <TableCell width=\"5%\" align=\"center\" weight='500'> {i + 1}\n              {i == 0 ? <FaTrophy style={{color:\"gold\"}}/> :\n              i == 1 ? <FaTrophy style={{color:\"silver\"}}/> :\n              i == 2 ? <FaTrophy style={{color:\"#CD7F32\"}}/> :\n              i < 6 ? <FaMedal style={{color:\"gold\"}}/> :\n              i < 9 ? <FaMedal style={{color:\"silver\"}}/> :\n              i < 12 ? <FaMedal style={{color:\"#CD7F32\"}}/> :\n              <div/>}\n              </TableCell>\n              <TableCell width=\"35%\" align=\"center\" weight='500'>\n                <BlockchainLink size=\"long\" type=\"address\" text={user.address} toCopy/>\n              </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.proposals} </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctVotes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongVotes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctStakes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongStakes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.score.toFixed(0)} </TableCell>\n            </TableRow>\n          );\n        })}\n        </TableRowsWrapper>\n      </GovernanceInfoWrapper>\n    );\n});\n\nexport default GovernanceInformation;\n","import styled from 'styled-components'; \nimport { useLocation } from 'react-router-dom';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\n\nimport FinanceInformation from '../components/FinanceInformation';\nimport SchemesInformation from '../components/SchemesInformation';\nimport GovernanceInformation from '../components/GovernanceInformation';\n\nconst InfoPageWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst InfoNavigation = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n`;\nconst InfoPage = () => {\n  const {\n    context: { configStore },\n  } = useContext();\n  const networkName = configStore.getActiveChainName();\n  const searchPath = useLocation().search;\n  return (\n    <InfoPageWrapper>\n      <InfoNavigation>\n        <ActiveButton route={`/${networkName}/info?view=governance`}>Governance</ActiveButton>\n        <ActiveButton route={`/${networkName}/info?view=finance`}>Finance</ActiveButton>\n        <ActiveButton route={`/${networkName}/info?view=schemes`}>Schemes</ActiveButton>\n      </InfoNavigation>\n      <div>\n        { searchPath === `?view=schemes` ?\n          <SchemesInformation/>\n        : searchPath === `?view=governance` ?\n          <GovernanceInformation/>\n        : <FinanceInformation/>\n        }\n      </div>\n    </InfoPageWrapper>\n  );\n};\n\nexport default InfoPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport { FiCheckCircle, FiX } from \"react-icons/fi\";\nimport Box from '../components/common/Box';\n\nconst Row = styled.div`\n  flex-direction: row;\n  flex: auto;\n  display: flex;\n  padding-top: 15px;\n  justify-content: space-around;\n`\n\nconst InputBox = styled.input`\n  background-color: white;\n  border: 1px solid var(--medium-gray );\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  padding: 0px 10px;\n  margin: 5px;\n`;\n\nconst ConfigPage = observer(() => {\n    const {\n        context: { configStore, pinataService, etherscanService },\n    } = useContext();\n    \n    const [etherscanApiStatus, setEtherscanApiStatus] = React.useState(etherscanService.auth);\n    const [pinataKeyStatus, setPinataKeyStatus] = React.useState(pinataService.auth);\n\n    const [localConfig, setLocalConfig] = React.useState(configStore.getLocalConfig());\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n    \n    function onApiKeyValueChange(value, key) {\n      localConfig[key] = value;\n      setLocalConfig(localConfig)\n      forceUpdate();\n    }\n    \n    function saveConfig() {\n      configStore.setLocalConfig(localConfig);\n    }\n    \n    async function testApis() {\n      await pinataService.isAuthenticated();\n      await etherscanService.isAuthenticated();\n      setPinataKeyStatus(pinataService.auth);  \n      setEtherscanApiStatus(etherscanService.auth);\n    }\n    \n    async function pinDXvoteHashes() {\n      pinataService.updatePinList();\n    }\n    \n    async function clearCache() {\n      localStorage.clear();\n    }\n  \n    return (\n      <Box style={{alignItems: \"center\"}}>\n        <h2>API Keys <Question question=\"8\"/></h2>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Etherscan:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"etherscan\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"etherscan\")}\n            value={localConfig.etherscan}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {etherscanApiStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Pinata:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"pinata\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"pinata\")}\n            value={localConfig.pinata}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {pinataKeyStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{height: \"34px\", padding:\"10px 10px\"}}>Pin DXdao hashes on start</span>\n          <InputBox\n            type=\"checkbox\"\n            checked={localConfig.pinOnStart}\n            onChange={(event) => onApiKeyValueChange(event.target.checked, \"pinOnStart\")}\n            style={{width: \"20px\"}}\n          ></InputBox>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <ActiveButton onClick={saveConfig}>Save</ActiveButton>\n          <ActiveButton onClick={testApis}>Test Apis</ActiveButton>\n          <ActiveButton onClick={clearCache}>Clear Cache</ActiveButton>\n          <ActiveButton onClick={pinDXvoteHashes}>Pin DXVote Hashes</ActiveButton>\n        </Row>\n      </Box>\n    );\n});\n\nexport default ConfigPage;\n","import { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { toCamelCaseString } from '../utils';\nimport { observer } from 'mobx-react';\nimport Box from '../components/common/Box';\nimport { useContext } from '../contexts';\nimport { useLocation } from 'react-router-dom';\nimport MDEditor from '@uiw/react-md-editor';\n\nconst FAQPage = observer(() => {\n  \n  const {\n      context: { configStore },\n  } = useContext();\n  \n  const questionId = useLocation().search.indexOf(\"=\") > -1 ? useLocation().search.split(\"=\")[1] : 0;\n  \n  const FAQBox = styled(Box)`\n    padding: 20px 30px;\n    p {\n      line-height: 28px;\n      font-size: 20px;\n    }\n    h2 {\n      margin:10px 0px;\n    }\n    h3 {\n      margin: 5px 0px;\n    }\n    h4 {\n      margin: 0px;\n    }\n  `\n  useEffect(() => {\n    if (questionId > 0)\n      document.querySelectorAll(\"#FAQBody div h1\")[questionId].scrollIntoView();\n  }, []);\n   \n  let daoAddresses = \"\";\n  const networkContracts = configStore.getNetworkContracts();\n  for (let n = 0; n < Object.keys(networkContracts).length; n++) {\n    daoAddresses += \"### \" + toCamelCaseString(Object.keys(networkContracts)[n]) + \" Network\\n\";\n    daoAddresses += \"- Avatar: \" + networkContracts.avatar+\"\\n\";\n    daoAddresses += \"- Controller: \" + networkContracts.controller+\"\\n\";\n    daoAddresses += \"- Reputation: \" + networkContracts.reputation+\"\\n\";\n    daoAddresses += \"- Permission Registry: \" + networkContracts.permissionRegistry+\"\\n\";\n    daoAddresses += \"- Reputation: \" + networkContracts.reputation+\"\\n\";\n  \n  }\n\n   const FAQBody = \n`# Where are the dao funds held?\n\nMost of the ETH and tokens are held in the DXdao avatar address, this is the safest place for the funds to be, the access to this funds is usually slow and it take day for a proposal to move funds from this address. The Wallet Schemes can also hold funds too, but only the ones that dont make calls from the avatar.\n\n## DXdao Addresses\n\n${daoAddresses}\n\n# What is a Wallet Scheme?\n\nA wallet scheme is a smart contract that manage the access to DXdao funds, in order to make transfers or calls from the DXdao avatar or the scheme itself the scheme needs to execute a proposal. The proposals are executed after it reaches a certain amount of votes or stakes over time, the amount of votes, staked and time that has to passed depends on the scheme configuration. An scheme who will have access to the DXdao avatar funds will usually take more votes, stakes and time than a scheme who make calls form itself, this means that funds can be allocated in the schemes as well, but this schemes will have only access to the funds held by themselves.\n\n# Proposal States\n\n## In Queue\n\nA proposal that needs the queuedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Pre Boosted\n\nA proposal that has enough stakes to pass be boosted state but cant be boosted just yet.\n\n## Pending Boost\n\nA proposal that has enough stakes to pass to boosted state.\n\n## Boosted\n\nA proposal that needs the boostedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Quiet Ending Period\n\nA proposal that changed the winning option in the amount of seconds specified as quietEndingPeriod before finishing, this will extend the proposal time for quietEndingPeriod seconds. The quietEndingPeriod is specified in the scheme configuration where the proposal was submitted.\n\n## Pending Execution\n\nA proposal that got enough votes and is ready to be executed.\n\n## Execution Failed\n\nA proposal that was executed after it passed but it execution failed.\n\n## Execution Succeded\n\nA proposal that was executed after it passed but it execution succeeded.\n\n## Expired in Queue\n\nA proposal that spent too much time in Queue state and didnt get enough votes to pass.\n\n# How does voting works?\n\nA proposal needs a minimum amount of votes to pass, and that depends on the state of the proposal at the moment of execution. If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed. If a proposal reaches the queuedVoteRequiredPercentage percentage amount of votes it gets executed instantly. This means that any proposal in Queued state will need that amount of votes to pass.\n\n# How does staking works?\n\nA proposal can receives a financial stake in DXD to speed up the voting process. If a proposal receives enough positive stakes to boost it will enter pre-boosted state, once the pre-boosted state finish if the proposal still has enough DXD staked to boost it will be boosted in the next voting machine action (vote, stake, or voting machine execution). If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed.\n\n# How do I get DXD?\n\nYou can get rinkeby DXD buying DXD in dxtrust rinkeby here: https://levelkdev.github.io/dxtrust/\n\n# How are proposals created?\n\nEach proposal has a title, description and calls to be exected by the wallet scheme where it is proposed. The description of the proposal is stored in IPFS, and we save the hash of the IPFS description in the blokchain next to the proposal title and calls. When creating a proposal you first need to submit the description to IPFS and once you get the IPFS hash of the description the proposal can be submited by sending a transaction to the wallet scheme smart contract.\n\n# External APIs\n\nThe app allows you to add external API services. Use Pinata to help DXdao by pinning the proposal description and important documents in you pinata account. Use Etherscan to decode proposal calls and know what the proposal will execute.\n\n# Schemes Configuration\n## Scheme Parameters\n\n### name\n\nThe name of the scheme, this will be used to identify the scheme by name in DXvote dapp.\n\n### callToController\n\nIf the scheme make calls to the controller or not. A Scheme that makes calls to a controller will make calls from the dxdao avatar (which gives access to the dxdao funds) and a scheme that do not call the controller will make call directly from itself, which means that it will have access only to the funds held in the scheme address.\n\n### maxSecondsForExecution\n\nThis is the amount of time that a proposal has to be executed in the scheme, this is useful to \"clean\" proposals that weren't successful or weren't able to be executed for some reason. This means that if a proposal passes in 3 days in the voting machine and the maxSecondsForExecution are 6 days it will have 3 days to be executed, after that it will be marked in ExecutionTimeout state and wont be able to be executed again, reaching a state of termination.\n\n### maxRepPercentageToMint\n\nThis is the maximum amount of rep in percentage allowed to be minted by proposal, the value can be between 0-100, if a proposal execution mints 5% of REP and the maxRepPercentageToMint equals 3, it will fail.\n\n## Controller Permissions\n\nThis are four values that determine what the scheme can do in the dxdao controller contract, the most powerful contract in the stack, the only two values that we use from it are canRegisterSchemes and canGenericCall. canRegisterSchemes allows the addition/removal of schemes and the canGenericCall allows the execution of calls in the avatar contract.\n\n## Permission Registry Permissions\n\nThe permissions are set by asset, specifying the sender and receiver addresses (from and to) and the signature of the function to be used and the value to be transferred.\n\nThis permissions are checked before a proposal execution, checking that the total value transferred by asset and the functions to be called are allowed.\n\nThe asset address will be address 0x0 for ethereum calls (this would be used for ethereum smart contract calls), and if the permission is for an ERC20 address the asset would be the address of the ERC20 token.\n\nIf a scheme make calls to the controller the permissions are checked avatar address as sender (from field in the permission regsitry).\n\nIf a scheme does not make calls to the controller the permissions are checked scheme address as sender (from field in the permission regsitry).\n\nIt allows the use of \"wildcard\" permissions by using 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa for any address and 0xaaaaaaaa for any signature.\nIt also allows the use of global transfer limits, by setting the limit by asset using the scheme as receiver address, any value recorded here will be used as global transfer limit in the proposal check.\n\nConstant 0x0 address used as \"zero address\": \\`0x0000000000000000000000000000000000000000\\`\n\nConstant address used as \"any address\": \\`0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\\`\n\nConstant function signature used as \"any function\": \\`0xaaaaaaaa\\`\n\nConstant Max uint256 to be used: \\`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\`\n\n## Voting Machine Params\n\n### queuedVoteRequiredPercentage\n\nThe percentage of votes required to execute a proposal in queued state.\n\n### boostedVoteRequiredPercentage\n\nThe percentage of votes required to execute a proposal in boosted state.\n\n### queuedVotePeriodLimit\n\nThe amount of time that a proposal will be in queue state (not boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### boostedVotePeriodLimit\n\nThe amount of time that a proposal will be in boost state (after pre-boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### preBoostedVotePeriodLimit\n\nThe amount of time that a proposal will be in pre-boosted state. A proposal gets into pre-boosted state when it has enough.\n\n### thresholdConst\n\nThe constant used to calculate the needed upstakes in a proposal to reach boosted state, where the upstakes needed equal to downStakes * (thresholdConst ** (numberOfBoostedProposals)) taking in count the number of boosted proposals at the moment of the pre-boost to boosted state change.\n\n### quietEndingPeriod\n\nThe amount of time a proposal has to have the same winning option before it finish, if the winning option change during that time the proposal finish time will be extended till the winning option doesn't change during that time.\n\nproposingRepReward\nThe fixed amount of REP that will be minted to the address who created the proposal.\n\n### votersReputationLossRatio\n\nThe percentage of REP a voter will loose if the voter voted a proposal in queue state for the loosing option.\n\n### minimumDaoBounty\n\nThe minimum amount to be set as downstake when a proposal is created.\n\n### daoBountyConst\n\nThe downstake for proposal is calculated when the proposal is created, by using the formula: (daoBountyConst * averageBoostDownstakes) / 100. If the value calculated is higher than minimumDaoBounty then this value will be used, if not the start downstake of the proposal will be minimumDaoBounty.\n\n# Useful Apps\n\n- Unit Converter Etherscan: https://rinkeby.etherscan.io/unitconverter\n- ETH Converter: https://eth-converter.com\n- UNIX Timestamp Converter: https://www.unixtimestamp.com\n- Hashhex ABI Encoder/Decoder: https://abi.hashex.org\n- Abidas ABI Encoder/Decoder: https://adibas03.github.io/online-ethereum-abi-encoder-decoder\n`\n\n  return (\n    <FAQBox id=\"FAQBody\">\n      <MDEditor.Markdown source={ FAQBody } style={{\n        padding: \"20px 10px\"\n      }} />\n    </FAQBox>\n  );\n});\n\nexport default FAQPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../components/common/Box';\nimport { FiZap } from \"react-icons/fi\";\n\nconst ForumPage = () => {\n  \n  const LoadingBox = styled.div`\n   .loader {\n      text-align: center;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      color: var(--dark-text-gray);\n      padding: 25px 0px;\n        \n      .svg {\n        height: 30px;\n        width: 30px;\n        margin-bottom: 10px;\n      }\n    }\n  `\n    \n  const [loading, setLoading] = React.useState(true);\n\n  function postMessageReceived(e) {\n    if (!e) {\n      return;\n    }\n  \n    if (loading){\n      setLoading(false);\n    }\n  }\n  window.addEventListener(\"message\", postMessageReceived, false);\n\n  var lists = document.querySelectorAll(\"d-topics-list\");\n  for (var i = 0; i < lists.length; i++) {\n    var list = lists[i];\n    var url = list.getAttribute(\"discourse-url\");\n    if (!url || url.length === 0) {\n      console.error(\"Error, `discourse-url` was not found\");\n      continue;\n    }\n    var frameId = \"de-\" + Math.random().toString(36).substr(2, 9);\n    var params = [\"discourse_embed_id=\" + frameId];\n    list.removeAttribute(\"discourse-url\");\n\n    for (var j = 0; j < list.attributes.length; j++) {\n      var attr = list.attributes[j];\n      params.push(attr.name.replace(\"-\", \"_\") + \"=\" + attr.value);\n    }\n\n    var iframe = document.createElement(\"iframe\");\n    iframe.src = url + \"/embed/topics?\" + params.join(\"&\");\n    iframe.id = frameId;\n    iframe.width = \"100%\";\n    iframe.frameBorder = \"0\";\n    iframe.scrolling = \"no\";\n    console.log(iframe)\n    list.appendChild(iframe);\n  }\n\n  return (\n    <Box style={{padding: \"0px\"}}>\n      { loading ?\n        <LoadingBox>\n        <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n        </LoadingBox>\n      :\n        // @ts-ignore\n        <d-topics-list discourse-url=\"https://daotalk.org/\" category=\"15\" per-page=\"10000\" template=\"complete\"></d-topics-list>\n      }\n    </Box>\n  );\n};\n\nexport default ForumPage;\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { createWeb3ReactRoot } from '@web3-react/core';\nimport Web3ReactManager from 'components/Web3ReactManager';\nimport Web3 from 'web3';\nimport moment from 'moment';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'index.css';\nimport ThemeProvider, { GlobalStyle } from './theme';\n\nimport { web3ContextNames } from 'provider/connectors';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PageRouter from './PageRouter';\n\nimport ProposalsPage from './pages/Proposals';\nimport NewProposalPage from './pages/NewProposal';\nimport UserPage from './pages/User';\nimport ProposalPage from './pages/Proposal';\nimport InfoPage from './pages/Info';\nimport ConfigPage from './pages/Configuration';\nimport FAQPage from './pages/FAQ';\nimport ForumPage from './pages/Forum';\n\nmoment.updateLocale('en', {\n  relativeTime : {\n    s: \"1 second\",\n    m: \"1 minute\",\n    h: \"1 hour\",\n    d:  \"1 day\",\n  }\n});\n\nconst Web3ProviderInjected = createWeb3ReactRoot(web3ContextNames.injected);\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nconst Root = (\n  <Web3ProviderInjected getLibrary={getLibrary}>\n    <ThemeProvider>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Web3ReactManager>\n            <Header />\n            <PageRouter>\n              <Route exact path=\"/\"> <ProposalsPage /> </Route>\n              <Route exact path=\"/config\"> <ConfigPage /> </Route>\n              <Route exact path=\"/forum\"> <ForumPage /> </Route>\n              <Route exact path=\"/faq\"> <FAQPage /> </Route>\n              <Route exact path=\"/:network/proposals\"> <ProposalsPage /> </Route>\n              <Route exact path=\"/:network/new\"> <NewProposalPage /> </Route>\n              <Route exact path=\"/:network/info\"> <InfoPage /> </Route>\n              <Route exact path=\"/:network/user/:address\"> <UserPage /> </Route>\n              <Route exact path=\"/:network/proposal/:proposalId\"> <ProposalPage /> </Route>\n            </PageRouter>\n            <Footer />\n          </Web3ReactManager>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  </Web3ProviderInjected>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ethers, utils } from 'ethers';\n\nexport function shortenAddress(address, digits = 4) {\n  if (!isAddress(address)) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n  return `${address.substring(0, digits + 2)}...${address.substring(\n    42 - digits\n  )}`;\n}\n\nexport function isAddress(value) {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase());\n  } catch {\n    return false;\n  }\n}\n\nexport function toChecksum(address) {\n  return utils.getAddress(address);\n}\n\nexport function toAddressStub(address) {\n  const start = address.slice(0, 5);\n  const end = address.slice(-3);\n  return `${start}...${end}`;\n}\n","import { BigNumber } from 'bignumber.js';\n\nBigNumber.config({\n  EXPONENTIAL_AT: [-100, 100],\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  DECIMAL_PLACES: 18,\n  FORMAT: {\n    groupSize: 3,\n    groupSeparator: ' ',\n    decimalSeparator: '.'\n  }\n});\n\nexport { BigNumber };\n","export enum Web3Errors {\n  UNKNOWN_ERROR,\n  SIGNATURE_REJECTED,\n}\nexport enum TXEvents {\n  TX_HASH = 'txhash',\n  RECEIPT = 'receipt',\n  CONFIRMATION = 'confirmation',\n  TX_ERROR = 'txerror',\n  FINALLY = 'finally',\n  INVARIANT = 'invariant',\n}\n\nexport enum VoteDecision { None, YES, NO }\n\nexport enum WalletSchemeProposalState { None, Submitted, Rejected, ExecutionSucceded, ExecutionTimeout }\n\nexport enum VotingMachineProposalState { \n  None, ExpiredInQueue, Executed, Queued, PreBoosted, Boosted, QuietEndingPeriod\n}\n","export const MAX_UINT = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\nexport const ZERO_HASH = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const ANY_ADDRESS = \"0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\";\nexport const ANY_FUNC_SIGNATURE = \"0xaaaaaaaa\";\nexport const ERC20_TRANSFER_SIGNATURE = \"0xa9059cbb\";\nexport const ERC20_APPROVE_SIGNATURE = \"0x095ea7b3\";\nexport const DEFAULT_TOKEN_DECIMALS = 18;\n","import moment from 'moment';\nimport { BigNumber } from './bignumber';\n\nexport const formatDate = (date: Date) => {\n  return moment(date).format('DD.MM - HH:mm');\n};\n\nexport const timeToTimestamp = (timestamp: BigNumber) => {\n  if (timestamp.toNumber() > moment().unix())\n    return moment().to( moment.unix(timestamp.toNumber()) ).toString();\n  else\n    return \"\";\n};\n\nexport const addZero = (value) => {\n  return value > 9 ? value : `0${value}`;\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport copy from 'copy-to-clipboard';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      // @ts-ignore\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    } else {\n      return null;\n    }\n  }, [delay]);\n}\n// @ts-ignore\nexport function useCopyClipboard(timeout = 500): [S, Dispatch<SetStateAction<S>>] {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text);\n    setIsCopied(didCopy);\n  }, []);\n  // @ts-ignore\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false);\n      }, timeout);\n\n      return () => {\n        clearTimeout(hide);\n      };\n    }\n  }, [isCopied, setIsCopied, timeout]);\n\n  return [isCopied, staticCopy];\n}\n\n// modified from https://usehooks.com/usePrevious/\nexport function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef();\n\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\n","import { utils } from 'ethers';\nimport { BigNumber } from './bignumber';\nimport { MAX_UINT } from './constants';\n\nexport function toCamelCaseString(text: string): string {\n  if (text.length > 0)\n    return text.replace(/^./, text[0].toUpperCase())\n  else return \"\";\n}\n\nexport function bnum(\n    val: string | number | utils.BigNumber | BigNumber\n): BigNumber {\n    return new BigNumber(val.toString());\n}\n\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\n  const scalePow = new BigNumber(decimalPlaces.toString());\n  const scaleMul = new BigNumber(10).pow(scalePow);\n  return input.times(scaleMul);\n}\n\nexport function setPropertyToMaxUintIfEmpty(value?): string {\n  if (!value || value === 0 || value === '') {\n    value = MAX_UINT.toString();\n  }\n  return value;\n}\n\nexport function setPropertyToZeroIfEmpty(value?): string {\n  if (!value || value === '') {\n    value = '0';\n  }\n  return value;\n}\n\nexport function hasMaxApproval(amount: BigNumber): boolean {\n  return amount.gte(bnum(bnum(MAX_UINT).div(2).toString()));\n}\n\nexport function isEmpty(str: string): boolean {\n    return !str || 0 === str.length;\n}\n\nexport function roundValue(value, decimals = 4): string {\n  const decimalPoint = value.indexOf('.');\n  if (decimalPoint === -1) {\n    return value;\n  }\n  return value.slice(0, decimalPoint + decimals + 1);\n}\n\nexport function str(value: any): string {\n  return value.toString();\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function parseCamelCase(text)\n{\n  const parsed = text.replace(/([a-z])([A-Z])/g, '$1 $2');\n  return parsed[0].toUpperCase() + parsed.substring(1);\n}\n\nexport function getBlockchainLink(text, networkName, type) {\n  switch (type) {\n    case \"user\":\n      return `${window.location.pathname}#/user/${text}`;\n    case \"address\":\n      if (networkName == 'arbitrum')\n        return `https://explorer.arbitrum.io/#/address/${text}`\n      else if (networkName == 'arbitrumTestnet')\n        return `https://rinkeby-explorer.arbitrum.io/#/address/${text}`\n      else if (networkName == 'mainnet')\n        return `https://etherscan.io/address/${text}`\n      else if (networkName == 'xdai')\n        return `https://blockscout.com/xdai/mainnet/address/${text}`\n      else\n        return `https://${networkName}.etherscan.io/address/${text}`\n    default:\n      if (networkName == 'arbitrum')\n        return `https://explorer.arbitrum.io/#/tx/${text}`\n      else if (networkName == 'arbitrumTestnet')\n        return `https://rinkeby-explorer.arbitrum.io/#/tx/${text}`\n      else if (networkName == 'mainnet')\n        return `https://etherscan.io/tx/${text}`\n      else if (networkName == 'xdai')\n        return `https://blockscout.com/xdai/mainnet/tx/${text}`\n      else\n        return `https://${networkName}.etherscan.io/tx/${text}`\n  }\n}\n","import { BigNumber } from './bignumber';\nimport { bnum, DEFAULT_TOKEN_DECIMALS, scale } from './index';\n\nexport function formatFee(fee: BigNumber) {\n  return fee.times(100).toString() + '%';\n}\n\nexport function formatPercentage(\n  value: BigNumber,\n  decimals: number,\n  useLowerLimit = true\n): string {\n  if (value.times(100).decimalPlaces(decimals).lte(0.1) && value.gt(0) && useLowerLimit) {\n    return '<0.1%';\n  }\n  return `${value.times(100).decimalPlaces(decimals).toString()}%`;\n}\n\nexport function fromPercentage(value: BigNumber | string): BigNumber {\n  const bn = bnum(value.toString());\n  return bn.div(100);\n}\n\nexport function toPercentage(value: BigNumber | string): BigNumber {\n  const bn = bnum(value.toString());\n  return bn.times(100);\n}\n\nexport const normalizePriceValues = (\n  inputValue: BigNumber,\n  outputValue: BigNumber\n): {\n  normalizedInput: BigNumber;\n  normalizedOutput: BigNumber;\n} => {\n  const multiplier = bnum(1).div(inputValue);\n  return {\n    normalizedInput: bnum(1),\n    normalizedOutput: outputValue.times(multiplier),\n  };\n};\n\nexport const formatCurrency = (balance: BigNumber): string => {\n  const fmt = {\n  groupSize: 3,\n  groupSeparator: ' ',\n  decimalSeparator: '.'\n  };\n  return balance.toFormat(2, BigNumber.ROUND_DOWN, fmt);\n};\n\nexport const numDigits = (value: BigNumber): number => {\n  return value.toString().length;\n};\n\nexport const roundUpToScale = (\n  value: BigNumber\n): BigNumber => {\n  const placesValue = numDigits(value.integerValue())-1;\n  const scaledValue = value\n    .shiftedBy(-placesValue);\n  return scaledValue.integerValue(BigNumber.ROUND_UP).shiftedBy(placesValue);\n};\n\n\nexport const denormalizeBalance = (\n  normalizedBalance: string | BigNumber,\n  decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n  return scale(bnum(normalizedBalance), decimals);\n};\n\nexport const normalizeBalance = (\n  amount: BigNumber,\n  decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n  return scale(bnum(amount), -decimals);\n};\n\nexport const formatNumberValue = (\n  normalizedBalance: BigNumber,\n  displayPrecision: number = 4,\n  truncateAt?: number,\n  roundDown: boolean = true\n): string => {\n  if (normalizedBalance.eq(0)) {\n    return bnum(0).toFixed(displayPrecision);\n  }\n\n  let result = bnum(normalizedBalance)\n    .decimalPlaces(displayPrecision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n    .toString();\n\n  result = padToDecimalPlaces(result, displayPrecision);\n\n  if (truncateAt && result.length > truncateAt) {\n    return result.substring(0, 20) + '...';\n  } else {\n    return result;\n  }\n};\n\nexport const formatBalance = (\n  balance: BigNumber,\n  decimals: number = 18,\n  precision: number = 4,\n  roundDown: boolean = true\n): string => {\n  if (balance.eq(0)) {\n    return bnum(0).toFixed(precision);\n  }\n\n  const result = scale(balance, -decimals)\n    .decimalPlaces(precision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n    .toString();\n\n  return padToDecimalPlaces(result, precision);\n};\n\nexport const padToDecimalPlaces = (\n  value: string,\n  minDecimals: number\n): string => {\n  const split = value.split('.');\n  const zerosToPad = split[1] ? minDecimals - split[1].length : minDecimals;\n\n  if (zerosToPad > 0) {\n    let pad = '';\n\n    // Add decimal point if no decimal portion in original number\n    if (zerosToPad === minDecimals) {\n      pad += '.';\n    }\n    for (let i = 0; i < zerosToPad; i++) {\n      pad += '0';\n    }\n    return value + pad;\n  }\n  return value;\n};\n","\nconst binaryToHex = function(binaryString) {\n  const lookup = {\n    \"0000\": \"0\",\n    \"0001\": \"1\",\n    \"0010\": \"2\",\n    \"0011\": \"3\",\n    \"0100\": \"4\",\n    \"0101\": \"5\",\n    \"0110\": \"6\",\n    \"0111\": \"7\",\n    \"1000\": \"8\",\n    \"1001\": \"9\",\n    \"1010\": \"A\",\n    \"1011\": \"B\",\n    \"1100\": \"C\",\n    \"1101\": \"D\",\n    \"1110\": \"E\",\n    \"1111\": \"F\"\n  };\n  var ret = \"\";\n  binaryString = binaryString.split(\" \");\n  for (var i = 0; i < binaryString.length; i++) {\n    ret += lookup[ binaryString[ i ] ];\n  }\n  return ret;\n};\n\nconst hexToBinary = function(hexString) {\n  hexString = hexString.replace(/^0x+/, '');\n  const lookup = {\n    \"0\": \"0000\",\n    \"1\": \"0001\",\n    \"2\": \"0010\",\n    \"3\": \"0011\",\n    \"4\": \"0100\",\n    \"5\": \"0101\",\n    \"6\": \"0110\",\n    \"7\": \"0111\",\n    \"8\": \"1000\",\n    \"9\": \"1001\",\n    \"a\": \"1010\",\n    \"b\": \"1011\",\n    \"c\": \"1100\",\n    \"d\": \"1101\",\n    \"e\": \"1110\",\n    \"f\": \"1111\",\n    \"A\": \"1010\",\n    \"B\": \"1011\",\n    \"C\": \"1100\",\n    \"D\": \"1101\",\n    \"E\": \"1110\",\n    \"F\": \"1111\"\n  };\n\n  var ret = \"\";\n  for (var i = 0, len = hexString.length; i < len; i++) {\n    if (hexString[ i ] != \"0\")\n      ret += lookup[ hexString[ i ] ];\n  }\n  return ret;\n};\n\n// All 0: Not registered,\n// 1st bit: Flag if the scheme is registered,\n// 2nd bit: Scheme can register other schemes\n// 3rd bit: Scheme can add/remove global constraints\n// 4th bit: Scheme can upgrade the controller\n// 5th bit: Scheme can call genericCall on behalf of the organization avatar\nexport const encodePermission = function(permissions) {\n  const canGenericCall = permissions.canGenericCall || false;\n  const canUpgrade = permissions.canUpgrade || false;\n  const canChangeConstraints = permissions.canChangeConstraints || false;\n  const canRegisterSchemes = permissions.canRegisterSchemes || false;\n  const permissionBytes = `000${canGenericCall ? 1 : 0} ${canUpgrade ? 1 : 0}${canChangeConstraints ? 1 : 0}${canRegisterSchemes ? 1 : 0}1`;\n  return \"0x000000\" + binaryToHex(permissionBytes);\n}\nexport const decodePermission = function(permission) {\n  permission = hexToBinary(permission);\n  return {\n    canRegisterSchemes: permission.length > 3 && permission[ 4 ] == \"1\",\n    canChangeConstraints: permission.length > 3 && permission[ 5 ] == \"1\",\n    canUpgrade: permission.length > 3 && permission[ 6 ] == \"1\",\n    canGenericCall: permission.length > 3 && permission[ 7 ] == \"1\"\n  };\n}\n","import { bnum, WalletSchemeProposalState, VotingMachineProposalState } from './index';\nimport moment from 'moment';\n\nexport const calculateStakes = function(thresholdConst, boostedProposals, preBoostedProposals, upstakes, downstakes ) {\n\n  // No idea why but the estimation of staking token by diving the thresholdConst get on chain by 0.90...\n  // I think it might be due to the precision magic used in the real number library used in teh GenensisProtocol\n  thresholdConst = thresholdConst.times(0.90949470177);\n  let threshold = thresholdConst.div(10**12).pow(boostedProposals);\n  if (threshold.lt(1.0001))\n    threshold = bnum(\"1.0001\");\n    \n  let recommendedThreshold = thresholdConst.div(10**12).pow(Number(boostedProposals) + Number(preBoostedProposals));\n  if (recommendedThreshold.lt(1.0001))\n    recommendedThreshold = bnum(\"1.0001\");\n  \n  return {\n    stakeToBoost: downstakes.times(threshold).minus(upstakes),\n    stakeToUnBoost: upstakes.div(threshold).minus(downstakes),\n    recommendedStakeToBoost: downstakes.times(recommendedThreshold).minus(upstakes),\n    recommendedStakeToUnBoost: upstakes.div(recommendedThreshold).minus(downstakes)\n  }\n\n}\n// @ts-ignore\nexport const decodeProposalStatus = function(\n  proposal, proposalStateChangeEvents, votingMachineParams, maxSecondsForExecution, autoBoost, schemeType\n) {\n  const timeNow = bnum(moment().unix());\n  const queuedVotePeriodLimit = votingMachineParams.queuedVotePeriodLimit;\n  const boostedVotePeriodLimit = votingMachineParams.boostedVotePeriodLimit;\n  const preBoostedVotePeriodLimit = votingMachineParams.preBoostedVotePeriodLimit;\n  const quietEndingPeriod = votingMachineParams.quietEndingPeriod;\n  const boostedPhaseTime = proposal.boostedPhaseTime;\n  const submittedTime = proposal.submittedTime;\n  const preBoostedPhaseTime = proposal.preBoostedPhaseTime;\n\n  switch (proposal.stateInVotingMachine) {\n    case VotingMachineProposalState.ExpiredInQueue:\n      return { \n        status: \"Expired in Queue\", \n        boostTime: bnum(0), \n        finishTime: submittedTime.plus(queuedVotePeriodLimit),\n        pendingAction: 0\n      };\n    case VotingMachineProposalState.Executed:\n      if (proposal.stateInScheme == WalletSchemeProposalState.Rejected)\n        return { \n          status: \"Proposal Rejected\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: 0\n        };\n      else if (proposal.stateInScheme == WalletSchemeProposalState.ExecutionSucceded)\n        return { \n          status: \"Execution Succeded\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: 0\n        };\n      else if (proposal.stateInScheme == WalletSchemeProposalState.ExecutionTimeout)\n        return { \n          status: \"Execution Timeout\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed) \n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: 0\n        };\n      else if (proposal.stateInScheme == WalletSchemeProposalState.Submitted)\n        return {\n          status: \"Passed\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: schemeType == \"ContributionReward\" ? 4 : 0\n        };\n      else return { \n        status: \"Passed\", \n        boostTime: boostedPhaseTime,\n        finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n        ? bnum(\n          proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n        ) : bnum(0),\n        pendingAction: 0\n      };\n    case VotingMachineProposalState.Queued:\n      if (timeNow > submittedTime.plus(queuedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Expired in Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 3\n        };\n      } else {\n        return { \n          status: \"In Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 0\n        };\n      }\n    case VotingMachineProposalState.PreBoosted:\n      if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).plus(maxSecondsForExecution).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Execution Timeout\",\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 3\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 0\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Boost\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 1\n        };\n      } else if (autoBoost && timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\",\n          boostTime: boostedPhaseTime,\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 2\n        };\n      } else if (timeNow > submittedTime.plus(queuedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 2\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"In Queue\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 0\n        };\n      } else {\n        return { \n          status: \"Pre Boosted\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 0\n        };\n      }\n    case VotingMachineProposalState.Boosted:\n      if (timeNow > boostedPhaseTime.plus(boostedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit),\n          pendingAction: 2\n        };\n      } else {\n        return { \n          status: \"Boosted\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit),\n          pendingAction: 0\n        };\n      }\n    case VotingMachineProposalState.QuietEndingPeriod:\n      return { \n        status: \"Quiet Ending Period\", \n        boostTime: boostedPhaseTime,\n        finishTime: proposalStateChangeEvents .find(event => event.state == VotingMachineProposalState.QuietEndingPeriod)\n        ? bnum(\n          proposalStateChangeEvents .find(event => event.state == VotingMachineProposalState.QuietEndingPeriod).timestamp\n        ).plus(quietEndingPeriod)\n        : bnum(0),\n        pendingAction: 0\n      };\n  }\n}\n","import { bnum } from './helpers';\n\nexport const decodeSchemeParameters = function(rawParameters) {\n  return {\n    queuedVoteRequiredPercentage: bnum(rawParameters.queuedVoteRequiredPercentage.toString()),\n    queuedVotePeriodLimit: bnum(rawParameters.queuedVotePeriodLimit.toString()),\n    boostedVotePeriodLimit: bnum(rawParameters.boostedVotePeriodLimit.toString()),\n    preBoostedVotePeriodLimit: bnum(rawParameters.preBoostedVotePeriodLimit.toString()),\n    thresholdConst: bnum(rawParameters.thresholdConst.toString()),\n    limitExponentValue: bnum(rawParameters.limitExponentValue.toString()),\n    quietEndingPeriod: bnum(rawParameters.quietEndingPeriod.toString()),\n    proposingRepReward: bnum(rawParameters.proposingRepReward.toString()),\n    votersReputationLossRatio: bnum(rawParameters.votersReputationLossRatio.toString()),\n    minimumDaoBounty: bnum(rawParameters.minimumDaoBounty.toString()),\n    daoBountyConst: bnum(rawParameters.daoBountyConst.toString()),\n    activationTime: bnum(rawParameters.activationTime.toString())\n  };\n}\n","import contentHash from 'content-hash';\nimport _ from \"lodash\";\nimport axios from 'axios';\nimport { ZERO_ADDRESS } from './index';\n\nconst Web3 = require('web3');\nconst web3 = new Web3();\n\nconst MAX_BLOCKS_PER_EVENTS_FETCH : number = Number(process.env.MAX_BLOCKS_PER_EVENTS_FETCH) || 1000000;\n\nexport const getEvents = async function(\n  web3, contract, fromBlock, toBlock, eventsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching events of ${contract._address} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await contract.getPastEvents(eventsToGet, {fromBlock: from, toBlock: to});\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message);\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getRawEvents = async function(\n  web3, contractAddress, fromBlock, toBlock, topicsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching logs of ${contractAddress} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await web3.eth.getPastLogs({\n        address: contractAddress,\n        fromBlock: from,\n        toBlock: to,\n        topics: topicsToGet\n      });\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message)\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getTimestampOfEvents = async function(web3, events) {\n  \n  //// TODO:  See how can we bacth requests can be implemented\n  \n  // async function batchRequest(blocks) {\n  //   const batch = new web3.BatchRequest();\n  //   let requests = [];\n  //   for (let i = 0; i < blocks.length; i++) {\n  //     const request = new Promise((resolve, reject) => {\n  //       batch.add(web3.eth.getBlock.request(blocks[i], (err, data) => {\n  //         console.log(1)\n  //         if (err) return reject(err);\n  //         resolve(data);\n  //       }));\n  //     });\n  //     requests.push(request);\n  //   }\n  //   batch.execute();\n  //   console.log(batch)\n  //   await Promise.all(requests);\n  //   return batch;\n  // };\n\n  let blocksToFetch = [];\n  let timestamps = [];\n  events.map((event) => {\n    if (blocksToFetch.indexOf(event.blockNumber) < 0)\n      blocksToFetch.push(event.blockNumber);\n  })\n  const totalLength = blocksToFetch.length;\n  while (blocksToFetch.length > 0 && totalLength > timestamps.length){\n    // timestamps = (await batchRequest(blocksToFetch)).map((blockResult) => {\n    //   return blockResult.timestamp;\n    // });\n    const blocksToFetchBatch = blocksToFetch.splice(0, 500)\n    await Promise.all(blocksToFetchBatch.map(async (block) => {\n      const blockInfo = (await web3.eth.getBlock(block));\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].blockNumber == blockInfo.number)\n          events[i].timestamp = blockInfo.timestamp;\n        if (blockInfo.l1BlockNumber)\n          events[i].l1BlockNumber = Number(blockInfo.l1BlockNumber);\n      }\n    }));\n  }\n\n  for (let i = 0; i < events.length; i++) {\n    if (events[i].l1BlockNumber){\n      events[i].l2BlockNumber = events[i].blockNumber;\n    } else {\n      events[i].l1BlockNumber = events[i].blockNumber;\n      events[i].l2BlockNumber = 0;\n    }\n  }\n  return events;\n};\n\nexport const sortEvents = function(events) {\n  return _.orderBy( events , [\"l1BlockNumber\", \"l2BlockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\",\"asc\"]);\n};\n\nexport const executeMulticall = async function(web3, multicall, calls) {\n  const rawCalls = calls.map((call) => {\n    return [call[0]._address, web3.eth.abi.encodeFunctionCall(\n      call[0]._jsonInterface.find(method => method.name == call[1]), call[2]\n    )];\n  });\n  \n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\n\n  return {\n    returnData,\n    decodedReturnData:returnData.map((callResult, i) => {\n      return web3.eth.abi.decodeParameters(\n        calls[i][0]._jsonInterface.find(method => method.name == calls[i][1]).outputs,\n        callResult\n      )[\"0\"];\n    })\n  };\n}\n\nexport const executeRawMulticall = async function(multicall, calls) {\n  const rawCalls = calls.map((call) => {\n    return [call[0], call[1]];\n  });\n  \n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\n\n  return {\n    returnData\n  };\n}\n\nexport const isNode = function () {\n  return (typeof module !== 'undefined' && module.exports);\n}\n\nexport const descriptionHashToIPFSHash = function (descriptionHash) {\n  try {\n    if (contentHash.getCodec(descriptionHash) == \"ipfs-ns\")\n      return contentHash.decode(descriptionHash);\n    else if (descriptionHash.length > 1 && descriptionHash.substring(0,2) != \"Qm\")\n      return descriptionHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error decoding descriptionHash', descriptionHash);\n    return \"\";\n  }\n}\n\nexport const ipfsHashToDescriptionHash = function (ipfsHash) {\n  try {\n    if (ipfsHash.length > 1 && ipfsHash.substring(0,2) == \"Qm\")\n      return contentHash.fromIpfs(ipfsHash);\n    else if (contentHash.getCodec(ipfsHash) == \"ipfs-ns\")\n      return ipfsHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error encoding ipfsHash', ipfsHash);\n    return \"\";\n  }\n}\n\nexport const getNetworkConfig = async function(networkName) {\n  if (networkName === 'localhost') {\n    return {\n      fromBlock: 1,\n      avatar: process.env.REACT_APP_AVATAR_ADDRESS.replace(/[\"']/g, \"\"),\n      controller: process.env.REACT_APP_CONTROLLER_ADDRESS.replace(/[\"']/g, \"\"),\n      reputation: process.env.REACT_APP_REPUTATION_ADDRESS.replace(/[\"']/g, \"\"),\n      permissionRegistry: process.env.REACT_APP_PERMISSION_REGISTRY_ADDRESS.replace(/[\"']/g, \"\"),\n      utils: {\n        multicall: process.env.REACT_APP_MULTICALL_ADDRESS.replace(/[\"']/g, \"\"),\n      },\n      votingMachines: {\n        dxd: {\n          address: process.env.REACT_APP_VOTING_MACHINE_ADDRESS.replace(/[\"']/g, \"\"),\n          token: process.env.REACT_APP_VOTING_MACHINE_TOKEN_ADDRESS.replace(/[\"']/g, \"\")\n        }\n      },\n    };\n  } else {\n    return (await axios({\n      method: \"GET\",\n      url: \"https://gateway.pinata.cloud/ipfs/Qmc8fPUPDD3yrCxAu5iLuurwdiujRhoSaMyczjWj8P9A51\"\n    })).data[networkName];\n  }\n}\n\nexport const getSchemeTypeData = function(networkConfig, schemeAddress) {\n  console.log(networkConfig)\n  if (networkConfig.daostack) {\n    if (networkConfig.daostack.schemeRegistrar && networkConfig.daostack.schemeRegistrar.address == schemeAddress) {\n      return {\n        type: \"SchemeRegistrar\",\n        name: \"SchemeRegistrar\",\n        contractToCall: networkConfig.daostack.schemeRegistrar.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.schemeRegistrar.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.schemeRegistrar.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.contributionReward && networkConfig.daostack.contributionReward.address == schemeAddress) {\n      return {\n        type: \"ContributionReward\",\n        name: \"ContributionReward\",\n        contractToCall: networkConfig.daostack.contributionReward.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.contributionReward.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.contributionReward.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.competitionScheme && networkConfig.daostack.competitionScheme.address == schemeAddress) {\n      return {\n        type: \"CompetitionScheme\",\n        name: \"CompetitionScheme\",\n        contractToCall: networkConfig.daostack.competitionScheme.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.competitionScheme.newProposalTopics,\n        creationLogEncoding: networkConfig.daostack.competitionScheme.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.multicallSchemes && Object.keys(networkConfig.daostack.multicallSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericMulticall\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.multicallSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.multicallSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.genericSchemes && Object.keys(networkConfig.daostack.genericSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericScheme\",\n        votingMachine: networkConfig.daostack.genericSchemes.addresses[schemeAddress].votingMachine,\n        contractToCall: networkConfig.daostack.genericSchemes.addresses[schemeAddress].contractToCall,\n        name: networkConfig.daostack.genericSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.genericSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.genericSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.genericSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.dxSchemes && Object.keys(networkConfig.daostack.dxSchemes).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"OldDxScheme\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.dxSchemes[schemeAddress],\n        newProposalTopics: [],\n        creationLogEncoding: []\n      };\n    }\n  }\n  return {\n    type: \"WalletScheme\",\n    votingMachine: networkConfig.votingMachines.dxd.address,\n    name: \"WalletScheme\",\n    newProposalTopics: [[\n      web3.utils.soliditySha3(\"ProposalStateChange(bytes32,uint256)\"),\n      null,\n      '0x0000000000000000000000000000000000000000000000000000000000000001']\n    ],\n    creationLogEncoding: []\n  }\n}\n"],"sourceRoot":""}