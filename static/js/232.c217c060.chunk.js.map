{"version":3,"sources":["../node_modules/prismjs/components/prism-lisp.js"],"names":["Prism","simple_form","name","RegExp","primitive","pattern","symbol","marker","par","endpar","space","language","heading","alias","comment","string","greedy","inside","argument","splice","keyword","lookbehind","declare","interactive","boolean","number","defvar","variable","defun","arguments","function","punctuation","lambda","car","arg","rest","varform","forms","arglist","keys","util","clone","sublist","languages","lisp","elisp","emacs"],"mappings":"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","file":"static/js/232.c217c060.chunk.js","sourcesContent":["(function (Prism) {\n\t// Functions to construct regular expressions\n\t// simple form\n\t// e.g. (interactive ... or (interactive)\n\tfunction simple_form(name) {\n\t\treturn RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])');\n\t}\n\t// booleans and numbers\n\tfunction primitive(pattern) {\n\t\treturn RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])');\n\t}\n\n\t// Patterns in regular expressions\n\n\t// Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n\t// & and : are excluded as they are usually used for special purposes\n\tvar symbol = '[-+*/_~!@$%^=<>{}\\\\w]+';\n\t// symbol starting with & used in function arguments\n\tvar marker = '&' + symbol;\n\t// Open parenthesis for look-behind\n\tvar par = '(\\\\()';\n\tvar endpar = '(?=\\\\))';\n\t// End the pattern with look-ahead space\n\tvar space = '(?=\\\\s)';\n\n\tvar language = {\n\t\t// Three or four semicolons are considered a heading.\n\t\t// See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n\t\theading: {\n\t\t\tpattern: /;;;.*/,\n\t\t\talias: ['comment', 'title']\n\t\t},\n\t\tcomment: /;.*/,\n\t\tstring: {\n\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\targument: /[-A-Z]+(?=[.,\\s])/,\n\t\t\t\tsymbol: RegExp('`' + symbol + \"'\")\n\t\t\t}\n\t\t},\n\t\t'quoted-symbol': {\n\t\t\tpattern: RegExp(\"#?'\" + symbol),\n\t\t\talias: ['variable', 'symbol']\n\t\t},\n\t\t'lisp-property': {\n\t\t\tpattern: RegExp(':' + symbol),\n\t\t\talias: 'property'\n\t\t},\n\t\tsplice: {\n\t\t\tpattern: RegExp(',@?' + symbol),\n\t\t\talias: ['symbol', 'variable']\n\t\t},\n\t\tkeyword: [\n\t\t\t{\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\tpar +\n\t\t\t\t\t\t'(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' +\n\t\t\t\t\t\tspace\n\t\t\t\t),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(\n\t\t\t\t\tpar + '(?:for|do|collect|return|finally|append|concat|in|by)' + space\n\t\t\t\t),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t],\n\t\tdeclare: {\n\t\t\tpattern: simple_form('declare'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\tinteractive: {\n\t\t\tpattern: simple_form('interactive'),\n\t\t\tlookbehind: true,\n\t\t\talias: 'keyword'\n\t\t},\n\t\tboolean: {\n\t\t\tpattern: primitive('(?:t|nil)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\tnumber: {\n\t\t\tpattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n\t\t\tlookbehind: true\n\t\t},\n\t\tdefvar: {\n\t\t\tpattern: RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^def[a-z]+/,\n\t\t\t\tvariable: RegExp(symbol)\n\t\t\t}\n\t\t},\n\t\tdefun: {\n\t\t\tpattern: RegExp(\n\t\t\t\tpar +\n\t\t\t\t\t'(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' +\n\t\t\t\t\tsymbol +\n\t\t\t\t\t'\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^(?:cl-)?def\\S+/,\n\t\t\t\t// See below, this property needs to be defined later so that it can\n\t\t\t\t// reference the language object.\n\t\t\t\targuments: null,\n\t\t\t\tfunction: {\n\t\t\t\t\tpattern: RegExp('(^\\\\s)' + symbol),\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tpunctuation: /[()]/\n\t\t\t}\n\t\t},\n\t\tlambda: {\n\t\t\tpattern: RegExp(par + 'lambda\\\\s+\\\\((?:&?' + symbol + '\\\\s*)*\\\\)'),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^lambda/,\n\t\t\t\t// See below, this property needs to be defined later so that it can\n\t\t\t\t// reference the language object.\n\t\t\t\targuments: null,\n\t\t\t\tpunctuation: /[()]/\n\t\t\t}\n\t\t},\n\t\tcar: {\n\t\t\tpattern: RegExp(par + symbol),\n\t\t\tlookbehind: true\n\t\t},\n\t\tpunctuation: [\n\t\t\t// open paren, brackets, and close paren\n\t\t\t/(?:['`,]?\\(|[)\\[\\]])/,\n\t\t\t// cons\n\t\t\t{\n\t\t\t\tpattern: /(\\s)\\.(?=\\s)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t]\n\t};\n\n\tvar arg = {\n\t\t'lisp-marker': RegExp(marker),\n\t\trest: {\n\t\t\targument: {\n\t\t\t\tpattern: RegExp(symbol),\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\tvarform: {\n\t\t\t\tpattern: RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\tstring: language.string,\n\t\t\t\t\tboolean: language.boolean,\n\t\t\t\t\tnumber: language.number,\n\t\t\t\t\tsymbol: language.symbol,\n\t\t\t\t\tpunctuation: /[()]/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar forms = '\\\\S+(?:\\\\s+\\\\S+)*';\n\n\tvar arglist = {\n\t\tpattern: RegExp(par + '[\\\\s\\\\S]*' + endpar),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'rest-vars': {\n\t\t\t\tpattern: RegExp('&(?:rest|body)\\\\s+' + forms),\n\t\t\t\tinside: arg\n\t\t\t},\n\t\t\t'other-marker-vars': {\n\t\t\t\tpattern: RegExp('&(?:optional|aux)\\\\s+' + forms),\n\t\t\t\tinside: arg\n\t\t\t},\n\t\t\tkeys: {\n\t\t\t\tpattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n\t\t\t\tinside: arg\n\t\t\t},\n\t\t\targument: {\n\t\t\t\tpattern: RegExp(symbol),\n\t\t\t\talias: 'variable'\n\t\t\t},\n\t\t\tpunctuation: /[()]/\n\t\t}\n\t};\n\n\tlanguage['lambda'].inside.arguments = arglist;\n\tlanguage['defun'].inside.arguments = Prism.util.clone(arglist);\n\tlanguage['defun'].inside.arguments.inside.sublist = arglist;\n\n\tPrism.languages.lisp = language;\n\tPrism.languages.elisp = language;\n\tPrism.languages.emacs = language;\n\tPrism.languages['emacs-lisp'] = language;\n}(Prism));\n"],"sourceRoot":""}