{"version":3,"sources":["../node_modules/prismjs/components/prism-dhall.js"],"names":["Prism","languages","dhall","pattern","greedy","inside","lookbehind","alias","string","interpolation","expression"],"mappings":";;;;;AAAA;AACA;AAEAA,KAAK,CAACC,SAAN,CAAgBC,KAAhB,GAAwB;AACvB;AACA;AACA;AACA,aAAW,wEAJY;AAKvB,YAAU;AACTC,WAAO,EAAE,2DADA;AAETC,UAAM,EAAE,IAFC;AAGTC,UAAM,EAAE;AACP,uBAAiB;AAChBF,eAAO,EAAE,cADO;AAEhBE,cAAM,EAAE;AACP,wBAAc;AACbF,mBAAO,EAAE,uBADI;AAEbG,sBAAU,EAAE,IAFC;AAGbC,iBAAK,EAAE,gBAHM;AAIbF,kBAAM,EAAE,IAJK,CAIA;;AAJA,WADP;AAOP,yBAAe;AAPR;AAFQ;AADV;AAHC,GALa;AAuBvB,WAAS;AACRF,WAAO,EAAE,SADD;AAERC,UAAM,EAAE;AAFA,GAvBc;AA2BvB,SAAO;AACN;AACAD,WAAO,EAAE,wFAFH;AAGNC,UAAM,EAAE;AAHF,GA3BgB;AAgCvB,SAAO;AACN;AACAD,WAAO,EAAE,wCAFH;AAGNC,UAAM,EAAE,IAHF;AAINC,UAAM,EAAE;AACP,kBAAY,MADL;AAEP,kBAAY,IAFL;AAGP,kBAAY;AAHL;AAJF,GAhCgB;AA0CvB,UAAQ;AACP;AACAF,WAAO,EAAE,2BAFF;AAGPE,UAAM,EAAE;AACP,kBAAY,QADL;AAEP,kBAAY,GAFL;AAGP,gBAAU;AAHH;AAHD,GA1Ce;AAoDvB;AACA,aAAW,oFArDY;AAsDvB,aAAW,mBAtDY;AAwDvB,aAAW,oBAxDY;AAyDvB,YAAU,+EAzDa;AA0DvB,cAAY,oGA1DW;AA2DvB,iBAAe,oBA3DQ;AA6DvB;AACA,gBAAc;AA9DS,CAAxB;AAiEAL,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBM,MAAtB,CAA6BH,MAA7B,CAAoCI,aAApC,CAAkDJ,MAAlD,CAAyDK,UAAzD,CAAoEL,MAApE,GAA6EL,KAAK,CAACC,SAAN,CAAgBC,KAA7F,C","file":"static/js/90.c217c060.chunk.js","sourcesContent":["// ABNF grammar:\n// https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n\nPrism.languages.dhall = {\n\t// Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n\t// The multi-line pattern is essentially this:\n\t//   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n\t'comment': /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n\t'string': {\n\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^{}]*\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'expression': {\n\t\t\t\t\t\tpattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\talias: 'language-dhall',\n\t\t\t\t\t\tinside: null // see blow\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /\\$\\{|\\}/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t'label': {\n\t\tpattern: /`[^`]*`/,\n\t\tgreedy: true\n\t},\n\t'url': {\n\t\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n\t\tpattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n\t\tgreedy: true\n\t},\n\t'env': {\n\t\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n\t\tpattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'function': /^env/,\n\t\t\t'operator': /^:/,\n\t\t\t'variable': /[\\s\\S]+/\n\t\t}\n\t},\n\t'hash': {\n\t\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n\t\tpattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n\t\tinside: {\n\t\t\t'function': /sha256/,\n\t\t\t'operator': /:/,\n\t\t\t'number': /[\\da-fA-F]{64}/\n\t\t}\n\t},\n\n\t// https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n\t'keyword': /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n\t'builtin': /\\b(?:Some|None)\\b/,\n\n\t'boolean': /\\b(?:False|True)\\b/,\n\t'number': /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n\t'operator': /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||[!=]=|===|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n\t'punctuation': /\\.\\.|[{}\\[\\](),./]/,\n\n\t// we'll just assume that every capital word left is a type name\n\t'class-name': /\\b[A-Z]\\w*\\b/\n};\n\nPrism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;\n"],"sourceRoot":""}