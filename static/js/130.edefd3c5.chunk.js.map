{"version":3,"sources":["../node_modules/prismjs/components/prism-ftl.js"],"names":["Prism","FTL_EXPR","source","i","replace","ftl","pattern","greedy","RegExp","inside","lookbehind","alias","rest","string","interpolation","languages","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"mappings":"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","file":"static/js/130.edefd3c5.chunk.js","sourcesContent":["(function (Prism) {\n\n\t// https://freemarker.apache.org/docs/dgui_template_exp.html\n\n\t// FTL expression with 4 levels of nesting supported\n\tvar FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n\tfor (var i = 0; i < 2; i++) {\n\t\tFTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () { return FTL_EXPR; });\n\t}\n\tFTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n\n\tvar ftl = {\n\t\t'comment': /<#--[\\s\\S]*?-->/,\n\t\t'string': [\n\t\t\t{\n\t\t\t\t// raw string\n\t\t\t\tpattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:<expr>)*?\\})*\\1/.source.replace(/<expr>/g, function () { return FTL_EXPR; })),\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': {\n\t\t\t\t\t\tpattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () { return FTL_EXPR; })),\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trest: null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'keyword': /\\b(?:as)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'builtin-function': {\n\t\t\tpattern: /((?:^|[^?])\\?\\s*)\\w+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t},\n\t\t'function': /\\w+(?=\\s*\\()/,\n\t\t'number': /\\d+(?:\\.\\d+)?/,\n\t\t'operator': /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n\t\t'punctuation': /[,;.:()[\\]{}]/\n\t};\n\n\tftl.string[1].inside.interpolation.inside.rest = ftl;\n\n\tPrism.languages.ftl = {\n\t\t'ftl-comment': {\n\t\t\t// the pattern is shortened to be more efficient\n\t\t\tpattern: /^<#--[\\s\\S]*/,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'ftl-directive': {\n\t\t\tpattern: /^<[\\s\\S]+>$/,\n\t\t\tinside: {\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(^<\\/?)[#@][a-z]\\w*/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\t'punctuation': /^<\\/?|\\/?>$/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /[\\s\\S]*\\S[\\s\\S]*/,\n\t\t\t\t\talias: 'ftl',\n\t\t\t\t\tinside: ftl\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'ftl-interpolation': {\n\t\t\tpattern: /^\\$\\{[\\s\\S]*\\}$/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\$\\{|\\}$/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /[\\s\\S]*\\S[\\s\\S]*/,\n\t\t\t\t\talias: 'ftl',\n\t\t\t\t\tinside: ftl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function () { return FTL_EXPR; }), 'gi');\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'ftl', pattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl');\n\t});\n\n}(Prism));\n"],"sourceRoot":""}