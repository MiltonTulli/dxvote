{"version":3,"sources":["../node_modules/prismjs/components/prism-coffeescript.js"],"names":["Prism","comment","interpolation","pattern","alias","languages","coffeescript","extend","greedy","inside","insertBefore","rest","javascript","coffee"],"mappings":";;;;;AAAC,WAASA,KAAT,EAAgB;AAEjB;AACA,MAAIC,OAAO,GAAG,WAAd;AAAA,MACIC,aAAa,GAAG;AACfC,WAAO,EAAE,YADM;AAEfC,SAAK,EAAE;AAFQ,GADpB;AAMAJ,OAAK,CAACK,SAAN,CAAgBC,YAAhB,GAA+BN,KAAK,CAACK,SAAN,CAAgBE,MAAhB,CAAuB,YAAvB,EAAqC;AACnE,eAAWN,OADwD;AAEnE,cAAU,CAET;AACA;AACCE,aAAO,EAAE,wBADV;AAECK,YAAM,EAAE;AAFT,KAHS,EAQT;AACC;AACAL,aAAO,EAAE,wBAFV;AAGCK,YAAM,EAAE,IAHT;AAICC,YAAM,EAAE;AACP,yBAAiBP;AADV;AAJT,KARS,CAFyD;AAmBnE,eAAW,kSAnBwD;AAoBnE,oBAAgB;AACfC,aAAO,EAAE,YADM;AAEfC,WAAK,EAAE;AAFQ;AApBmD,GAArC,CAA/B;AA0BAJ,OAAK,CAACK,SAAN,CAAgBK,YAAhB,CAA6B,cAA7B,EAA6C,SAA7C,EAAwD;AACvD,yBAAqB;AACpBP,aAAO,EAAE,gBADW;AAEpBC,WAAK,EAAE;AAFa,KADkC;AAMvD;AACA,mBAAe;AACdD,aAAO,EAAE,oBADK;AAEdC,WAAK,EAAE,OAFO;AAGdK,YAAM,EAAE;AACP,mBAAWR,OADJ;AAEP,yBAAiBC;AAFV;AAHM;AAPwC,GAAxD;AAiBAF,OAAK,CAACK,SAAN,CAAgBK,YAAhB,CAA6B,cAA7B,EAA6C,QAA7C,EAAuD;AACtD,yBAAqB;AACpBP,aAAO,EAAE,wBADW;AAEpBM,YAAM,EAAE;AACP,qBAAa;AACZN,iBAAO,EAAE,OADG;AAEZC,eAAK,EAAE;AAFK,SADN;AAKPO,YAAI,EAAEX,KAAK,CAACK,SAAN,CAAgBO;AALf;AAFY,KADiC;AAYtD;AACA,wBAAoB,CACnB;AACCT,aAAO,EAAE,gBADV;AAECK,YAAM,EAAE,IAFT;AAGCJ,WAAK,EAAE;AAHR,KADmB,EAMnB;AACCD,aAAO,EAAE,gBADV;AAECK,YAAM,EAAE,IAFT;AAGCJ,WAAK,EAAE,QAHR;AAICK,YAAM,EAAE;AACPP,qBAAa,EAAEA;AADR;AAJT,KANmB;AAbkC,GAAvD;AA+BAF,OAAK,CAACK,SAAN,CAAgBK,YAAhB,CAA6B,cAA7B,EAA6C,SAA7C,EAAwD;AACvD;AACA,gBAAY;AAF2C,GAAxD;AAKA,SAAOV,KAAK,CAACK,SAAN,CAAgBC,YAAhB,CAA6B,iBAA7B,CAAP;AAEAN,OAAK,CAACK,SAAN,CAAgBQ,MAAhB,GAAyBb,KAAK,CAACK,SAAN,CAAgBC,YAAzC;AACC,CA3FA,EA2FCN,KA3FD,CAAD,C","file":"static/js/64.c217c060.chunk.js","sourcesContent":["(function(Prism) {\n\n// Ignore comments starting with { to privilege string interpolation highlighting\nvar comment = /#(?!\\{).+/,\n    interpolation = {\n    \tpattern: /#\\{[^}]+\\}/,\n    \talias: 'variable'\n    };\n\nPrism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t'comment': comment,\n\t'string': [\n\n\t\t// Strings are multiline\n\t\t{\n\t\t\tpattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t{\n\t\t\t// Strings are multiline\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t],\n\t'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t'class-member': {\n\t\tpattern: /@(?!\\d)\\w+/,\n\t\talias: 'variable'\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'comment', {\n\t'multiline-comment': {\n\t\tpattern: /###[\\s\\S]+?###/,\n\t\talias: 'comment'\n\t},\n\n\t// Block regexp can contain comments and interpolation\n\t'block-regex': {\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\talias: 'regex',\n\t\tinside: {\n\t\t\t'comment': comment,\n\t\t\t'interpolation': interpolation\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'string', {\n\t'inline-javascript': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.javascript\n\t\t}\n\t},\n\n\t// Block strings\n\t'multiline-string': [\n\t\t{\n\t\t\tpattern: /'''[\\s\\S]*?'''/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t{\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\tinterpolation: interpolation\n\t\t\t}\n\t\t}\n\t]\n\n});\n\nPrism.languages.insertBefore('coffeescript', 'keyword', {\n\t// Object property\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n});\n\ndelete Prism.languages.coffeescript['template-string'];\n\nPrism.languages.coffee = Prism.languages.coffeescript;\n}(Prism));"],"sourceRoot":""}