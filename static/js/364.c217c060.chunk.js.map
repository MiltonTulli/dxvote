{"version":3,"sources":["../node_modules/prismjs/components/prism-scss.js"],"names":["Prism","languages","scss","extend","pattern","lookbehind","inside","alias","insertBefore","rest"],"mappings":";;;;;AAAAA,KAAK,CAACC,SAAN,CAAgBC,IAAhB,GAAuBF,KAAK,CAACC,SAAN,CAAgBE,MAAhB,CAAuB,KAAvB,EAA8B;AACpD,aAAW;AACVC,WAAO,EAAE,sCADC;AAEVC,cAAU,EAAE;AAFF,GADyC;AAKpD,YAAU;AACTD,WAAO,EAAE,yCADA;AAETE,UAAM,EAAE;AACP,cAAQ,SADD,CAEP;;AAFO;AAFC,GAL0C;AAYpD;AACA,SAAO,yBAb6C;AAcpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAY;AACX;AACAF,WAAO,EAAE,gFAFE;AAGXE,UAAM,EAAE;AACP,gBAAU;AACTF,eAAO,EAAE,GADA;AAETG,aAAK,EAAE;AAFE,OADH;AAKP,qBAAe,SALR;AAMP,kBAAY;AANL;AAHG,GArBwC;AAiCpD,cAAY;AACXH,WAAO,EAAE,2CADE;AAEXE,UAAM,EAAE;AACP,kBAAY;AADL;AAFG;AAjCwC,CAA9B,CAAvB;AAyCAN,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;AAC9C,aAAW,CACV,qGADU,EAEV;AACCJ,WAAO,EAAE,2BADV;AAECC,cAAU,EAAE;AAFb,GAFU;AADmC,CAA/C;AAUAL,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,WAArC,EAAkD;AACjD;AACA,cAAY;AAFqC,CAAlD;AAKAR,KAAK,CAACC,SAAN,CAAgBO,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;AAChD,iBAAe;AACdJ,WAAO,EAAE,SADK;AAEdG,SAAK,EAAE;AAFO,GADiC;AAKhD,eAAa;AACZH,WAAO,EAAE,4BADG;AAEZG,SAAK,EAAE;AAFK,GALmC;AAShD,aAAW,oBATqC;AAUhD,UAAQ;AACPH,WAAO,EAAE,UADF;AAEPG,SAAK,EAAE;AAFA,GAVwC;AAchD,cAAY;AACXH,WAAO,EAAE,iDADE;AAEXC,cAAU,EAAE;AAFD;AAdoC,CAAjD;AAoBAL,KAAK,CAACC,SAAN,CAAgBC,IAAhB,CAAqB,QAArB,EAA+BI,MAA/B,CAAsCG,IAAtC,GAA6CT,KAAK,CAACC,SAAN,CAAgBC,IAA7D,C","file":"static/js/364.c217c060.chunk.js","sourcesContent":["Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n\t\t{\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n"],"sourceRoot":""}