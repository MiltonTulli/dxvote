{"version":3,"sources":["../node_modules/prismjs/components/prism-soy.js"],"names":["Prism","stringPattern","numberPattern","languages","soy","pattern","lookbehind","greedy","alias","inside","hooks","add","env","soyPattern","soyLitteralStart","soyLitteralEnd","soyLitteralMode","buildPlaceholders","match","tokenizePlaceholders"],"mappings":";;;;;AAAC,WAAUA,KAAV,EAAiB;AACjB,MAAIC,aAAa,GAAG,gDAApB;AACA,MAAIC,aAAa,GAAG,mDAApB;AAEAF,OAAK,CAACG,SAAN,CAAgBC,GAAhB,GAAsB;AACrB,eAAW,CACV,kBADU,EAEV;AACCC,aAAO,EAAE,YADV;AAECC,gBAAU,EAAE,IAFb;AAGCC,YAAM,EAAE;AAHT,KAFU,CADU;AASrB,mBAAe;AACdF,aAAO,EAAE,wFADK;AAEdC,gBAAU,EAAE,IAFE;AAGdE,WAAK,EAAE,QAHO;AAIdC,YAAM,EAAE;AACP,uBAAe;AADR;AAJM,KATM;AAiBrB,iBAAa;AACZJ,aAAO,EAAE,kCADG;AAEZC,gBAAU,EAAE,IAFA;AAGZE,WAAK,EAAE;AAHK,KAjBQ;AAsBrB,eAAW,CACV;AACCH,aAAO,EAAE,iNADV;AAECC,gBAAU,EAAE;AAFb,KADU,EAKV,yFALU,CAtBU;AA6BrB,iBAAa;AACZD,aAAO,EAAE,eADG;AAEZG,WAAK,EAAE;AAFK,KA7BQ;AAiCrB,gBAAY,UAjCS;AAkCrB,gBAAY;AACXH,aAAO,EAAE,yCADE;AAEXI,YAAM,EAAE;AACP,kBAAU;AACTJ,iBAAO,EAAEJ,aADA;AAETM,gBAAM,EAAE;AAFC,SADH;AAKP,kBAAUL,aALH;AAMP,uBAAe;AANR;AAFG,KAlCS;AA6CrB,cAAU;AACTG,aAAO,EAAEJ,aADA;AAETM,YAAM,EAAE;AAFC,KA7CW;AAiDrB,gBAAY,CACX,WADW,EAEX;AACCF,aAAO,EAAE,mBADV;AAECC,gBAAU,EAAE;AAFb,KAFW,CAjDS;AAwDrB,eAAW,oBAxDU;AAyDrB,cAAUJ,aAzDW;AA0DrB,gBAAY,gDA1DS;AA2DrB,mBAAe;AA3DM,GAAtB,CAJiB,CAkEjB;;AACAF,OAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;AACjD,QAAIC,UAAU,GAAG,0CAAjB;AACA,QAAIC,gBAAgB,GAAG,WAAvB;AACA,QAAIC,cAAc,GAAG,YAArB;AACA,QAAIC,eAAe,GAAG,KAAtB;AAEAhB,SAAK,CAACG,SAAN,CAAgB,mBAAhB,EAAqCc,iBAArC,CAAuDL,GAAvD,EAA4D,KAA5D,EAAmEC,UAAnE,EAA+E,UAAUK,KAAV,EAAiB;AAC/F;AACA,UAAIA,KAAK,KAAKH,cAAd,EAA8B;AAC7BC,uBAAe,GAAG,KAAlB;AACA;;AAED,UAAI,CAACA,eAAL,EAAsB;AACrB,YAAIE,KAAK,KAAKJ,gBAAd,EAAgC;AAC/BE,yBAAe,GAAG,IAAlB;AACA;;AAED,eAAO,IAAP;AACA;;AACD,aAAO,KAAP;AACA,KAdD;AAeA,GArBD,EAnEiB,CA0FjB;;AACAhB,OAAK,CAACU,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAChDZ,SAAK,CAACG,SAAN,CAAgB,mBAAhB,EAAqCgB,oBAArC,CAA0DP,GAA1D,EAA+D,KAA/D;AACA,GAFD;AAIA,CA/FA,EA+FCZ,KA/FD,CAAD,C","file":"static/js/378.edefd3c5.chunk.js","sourcesContent":["(function (Prism) {\n\tvar stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\tvar numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n\n\tPrism.languages.soy = {\n\t\t'comment': [\n\t\t\t/\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\t{\n\t\t\t\tpattern: /(\\s)\\/\\/.*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true\n\t\t\t}\n\t\t],\n\t\t'command-arg': {\n\t\t\tpattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'parameter': {\n\t\t\tpattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable'\n\t\t},\n\t\t'keyword': [\n\t\t\t{\n\t\t\t\tpattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n\t\t],\n\t\t'delimiter': {\n\t\t\tpattern: /^{+\\/?|\\/?}+$/,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'property': /\\w+(?==)/,\n\t\t'variable': {\n\t\t\tpattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n\t\t\tinside: {\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: stringPattern,\n\t\t\t\t\tgreedy: true\n\t\t\t\t},\n\t\t\t\t'number': numberPattern,\n\t\t\t\t'punctuation': /[\\[\\].?]/\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: stringPattern,\n\t\t\tgreedy: true\n\t\t},\n\t\t'function': [\n\t\t\t/\\w+(?=\\()/,\n\t\t\t{\n\t\t\t\tpattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'number': numberPattern,\n\t\t'operator': /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n\t\t'punctuation': /[{}()\\[\\]|.,:]/\n\t};\n\n\t// Tokenize all inline Soy expressions\n\tPrism.hooks.add('before-tokenize', function (env) {\n\t\tvar soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n\t\tvar soyLitteralStart = '{literal}';\n\t\tvar soyLitteralEnd = '{/literal}';\n\t\tvar soyLitteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'soy', soyPattern, function (match) {\n\t\t\t// Soy tags inside {literal} block are ignored\n\t\t\tif (match === soyLitteralEnd) {\n\t\t\t\tsoyLitteralMode = false;\n\t\t\t}\n\n\t\t\tif (!soyLitteralMode) {\n\t\t\t\tif (match === soyLitteralStart) {\n\t\t\t\t\tsoyLitteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'soy');\n\t});\n\n}(Prism));"],"sourceRoot":""}