{"version":3,"sources":["../node_modules/prismjs/components/prism-puppet.js"],"names":["Prism","languages","puppet","pattern","lookbehind","alias","inside","greedy","interpolation","rest"],"mappings":"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","file":"static/js/320.edefd3c5.chunk.js","sourcesContent":["(function (Prism) {\n\tPrism.languages.puppet = {\n\t\t'heredoc': [\n\t\t\t// Matches the content of a quoted heredoc string (subject to interpolation)\n\t\t\t{\n\t\t\t\tpattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t// Matches the end tag\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\n\t\t\t\t\t// See interpolation below\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Matches the content of an unquoted heredoc string (no interpolation)\n\t\t\t{\n\t\t\t\tpattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t// Matches the end tag\n\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Matches the start tag of heredoc strings\n\t\t\t{\n\t\t\t\tpattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': {\n\t\t\t\t\t\tpattern: /(\\().+?(?=\\))/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'multiline-comment': {\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'regex': {\n\t\t\t// Must be prefixed with the keyword \"node\" or a non-word char\n\t\t\tpattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t// Extended regexes must have the x flag. They can contain single-line comments.\n\t\t\t\t'extended-regex': {\n\t\t\t\t\tpattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'comment': /#.*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t},\n\t\t'string': {\n\t\t\t// Allow for one nested level of double quotes inside interpolation\n\t\t\tpattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'double-quoted': {\n\t\t\t\t\tpattern: /^\"[\\s\\S]*\"$/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t// See interpolation below\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'variable': {\n\t\t\tpattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t},\n\t\t'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(\\.)(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n\t\t],\n\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t// Includes words reserved for future use\n\t\t'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n\t\t'datatype': {\n\t\t\tpattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n\t\t\talias: 'symbol'\n\t\t},\n\t\t'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n\t\t'punctuation': /[\\[\\]{}().,;]|:+/\n\t};\n\n\tvar interpolation = [\n\t\t{\n\t\t\t// Allow for one nested level of braces inside interpolation\n\t\t\tpattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'short-variable': {\n\t\t\t\t\t// Negative look-ahead prevent wrong highlighting of functions\n\t\t\t\t\tpattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'variable',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /::/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^\\$/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.puppet\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'variable',\n\t\t\tinside: {\n\t\t\t\t'punctuation': /::/\n\t\t\t}\n\t\t}\n\t];\n\tPrism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;\n\tPrism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;\n}(Prism));"],"sourceRoot":""}