{"version":3,"sources":["../node_modules/prismjs/components/prism-perl.js"],"names":["Prism","languages","perl","pattern","lookbehind","greedy","alias","inside","keyword"],"mappings":"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","file":"static/js/296.c217c060.chunk.js","sourcesContent":["Prism.languages.perl = {\n\t'comment': [\n\t\t{\n\t\t\t// POD\n\t\t\tpattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\$])#.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t// TODO Could be nice to handle Heredoc too.\n\t'string': [\n\t\t// q/.../\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// q a...a\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// q(...)\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// q{...}\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// q[...]\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// q<...>\n\t\t{\n\t\t\tpattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// \"...\", `...`\n\t\t{\n\t\t\tpattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// '...'\n\t\t// FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n\t\t{\n\t\t\tpattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'regex': [\n\t\t// m/.../\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// m a...a\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// m(...)\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// m{...}\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// m[...]\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// m<...>\n\t\t{\n\t\t\tpattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// The lookbehinds prevent -s from breaking\n\t\t// FIXME We don't handle change of separator like s(...)[...]\n\t\t// s/.../.../\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// s a...a...a\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// s(...)(...)\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// s{...}{...}\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// s[...][...]\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// s<...><...>\n\t\t{\n\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\n\t\t// /.../\n\t\t// The look-ahead tries to prevent two divisions on\n\t\t// the same line from being highlighted as regex.\n\t\t// This does not support multi-line regex.\n\t\t{\n\t\t\tpattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\n\t// FIXME Not sure about the handling of ::, ', and #\n\t'variable': [\n\t\t// ${^POSTMATCH}\n\t\t/[&*$@%]\\{\\^[A-Z]+\\}/,\n\t\t// $^V\n\t\t/[&*$@%]\\^[A-Z_]/,\n\t\t// ${...}\n\t\t/[&*$@%]#?(?=\\{)/,\n\t\t// $foo\n\t\t/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,\n\t\t// $1\n\t\t/[&*$@%]\\d+/,\n\t\t// $_, @_, %!\n\t\t// The negative lookahead prevents from breaking the %= operator\n\t\t/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n\t],\n\t'filehandle': {\n\t\t// <>, <FOO>, _\n\t\tpattern: /<(?![<=])\\S*>|\\b_\\b/,\n\t\talias: 'symbol'\n\t},\n\t'vstring': {\n\t\t// v1.2, 1.2.3\n\t\tpattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n\t\talias: 'string'\n\t},\n\t'function': {\n\t\tpattern: /sub [a-z0-9_]+/i,\n\t\tinside: {\n\t\t\tkeyword: /sub/\n\t\t}\n\t},\n\t'keyword': /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n\t'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n\t'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n\t'punctuation': /[{}[\\];(),:]/\n};\n"],"sourceRoot":""}