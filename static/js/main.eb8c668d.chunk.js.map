{"version":3,"sources":["utils/bignumber.ts","../node_modules/prismjs/components lazy /^/.//prism/-.*$/ groupOptions: {} namespace object","provider/connectors.ts","enums.ts","provider/UncheckedJsonRpcSigner.ts","stores/actions/error.ts","stores/Provider.ts","stores/actions/actions.ts","services/ABIService.ts","stores/Transaction.ts","stores/Modal.ts","stores/ConfigStore.ts","config/recommendedCalls.ts","stores/DaoStore.ts","utils/proposals.ts","stores/UserStore.ts","stores/BlockchainStore.ts","services/MulticallService.ts","utils/token.ts","services/DaoService.ts","services/EventsService.ts","services/IPFSService.ts","services/PinataService.ts","services/EtherscanService.ts","services/CoingeckoService.ts","contexts/storesContext.tsx","stores/index.ts","utils/helperHooks.js","components/Web3ReactManager/index.tsx","provider/providerHooks.js","serviceWorker.ts","theme/index.tsx","utils/address.ts","components/Modal/index.tsx","components/common/Link.tsx","assets/images/x.svg","components/common/Copy.tsx","utils/etherscan.tsx","components/AccountDetails/index.tsx","components/WalletModal/Option.tsx","components/WalletModal/PendingView.js","components/WalletModal/index.js","components/common/Box.tsx","components/Web3ConnectStatus/index.tsx","assets/images/DXdao.svg","components/Header/index.tsx","components/Footer/index.tsx","PageRouter.tsx","components/common/ActiveButton.tsx","utils/date.ts","utils/number.ts","pages/Proposals.tsx","components/common/Question.tsx","config/proposalTemplates.ts","pages/NewProposal.tsx","components/common/BlockchainLink.tsx","pages/User.tsx","pages/Proposal.tsx","components/FinanceInformation.tsx","components/SchemesInformation.tsx","components/GovernanceInformation.tsx","pages/Info.tsx","pages/Configuration.tsx","pages/FAQ.tsx","pages/Forum.tsx","index.tsx","utils/scheme.ts","contracts/index.ts","cache/index.ts","utils/permissions.ts","assets/images/metamask.png","utils/helpers.ts","cache/helpers.ts","config/index.ts"],"names":["BigNumber","config","EXPONENTIAL_AT","ROUNDING_MODE","ROUND_DOWN","DECIMAL_PLACES","FORMAT","groupSize","groupSeparator","decimalSeparator","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","ETH_NETWORKS","process","split","NETWORK_NAMES","NETWORK_IDS","ETH_NETWORKS_IDS","network","web3ContextNames","isChainIdSupported","chainId","indexOf","injected","InjectedConnector","supportedChainIds","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","require","Web3Errors","TXEvents","VoteDecision","WalletSchemeProposalState","VotingMachineProposalState","UncheckedJsonRpcSigner","signer","ethers","defineReadOnly","provider","this","getAddress","transaction","sendUncheckedTransaction","hash","nonce","gasLimit","gasPrice","data","value","confirmations","from","wait","waitForTransaction","message","signMessage","ContractType","ERRORS","errorCodeMapping","SIGNATURE_REJECTED","isKnownErrorCode","codeStr","toString","getErrorByCode","UNKNOWN_ERROR","sendAction","params","contract","action","sender","overrides","console","debug","preLog","promiEvent","PromiEvent","methods","send","once","emit","TX_HASH","receipt","RECEIPT","confNumber","CONFIRMATION","on","error","TX_ERROR","INVARIANT","FINALLY","catch","schema","Avatar","abi","Controller","VotingMachine","DXDVotingMachine","Reputation","WalletScheme","ERC20","PermissionRegistry","Multicall","ABIService","root","contractType","library","providerStore","getActiveWeb3React","contractInterface","Interface","getAbi","functionSignature","substring","functionName","functions","sighash","function","args","eth","decodeParameters","inputs","input","type","FetchCode","ProviderStore","rootStore","accounts","defaultAccount","web3Contexts","supportedNetworks","chainData","activeChainId","activeFetchLoop","activeAccount","fetchUserBlockchainData","web3React","account","a","transactionStore","checkPendingTransactions","currentBlockNumber","makeObservable","observable","setCurrentBlockNumber","setActiveAccount","blocknumber","getCurrentBlockNumber","newBlockNumber","oldBlockNumber","getSigner","address","signerAccount","Contract","context","getBlock","blockData","date","Date","timestamp","moment","format","ContextNotFound","contractAddress","BlockchainActionNoAccount","BlockchainActionNoChainId","getContract","addTransactionRecord","to","log","sendTransaction","TransactionStore","txRecords","filter","isTxPending","currentBlock","forEach","isStale","getTransactionReceipt","blockNumberChecked","SUCCESS","txHash","record","undefined","records","find","push","txRecord","ModalStore","walletModalVisible","toggleWalletModal","setWalletModalVisible","visible","ConfigStore","darkMode","toggleDarkMode","activeWeb3","localStorage","getItem","JSON","parse","etherscan","pinata","pinOnStart","setItem","stringify","getNetworkConfig","getActiveChainName","CACHE","DaoStore","daoCache","updateNetworkCache","createProposal","vote","approveVotingMachineToken","stake","execute","redeem","unparsedCache","daoInfo","totalRep","bnum","ethBalance","repEvents","repEvent","i","amount","schemes","schemeAddress","callPermissions","asset","proposals","proposalId","values","stateInScheme","stateInVotingMachine","repAtCreation","currentBoostedVotePeriodLimit","daoBountyRemain","daoBounty","totalStakes","confidenceThreshold","secondsFromTimeOutTillExecuteBoosted","submittedTime","preBoostedPhaseTime","boostedPhaseTime","positiveVotes","negativeVotes","preBoostedPositiveVotes","preBoostedNegativeVotes","positiveStakes","negativeStakes","votingMachines","votingMachineAddress","votingParameters","paramsHash","unparsedParams","queuedVoteRequiredPercentage","queuedVotePeriodLimit","boostedVotePeriodLimit","preBoostedVotePeriodLimit","thresholdConst","limitExponentValue","quietEndingPeriod","proposingRepReward","votersReputationLossRatio","minimumDaoBounty","daoBountyConst","activationTime","configStore","newNetworkCache","networkName","parseCache","getCache","_schemeName","_schemeAddress","scheme","getProposal","schemeInfo","getSchemeProposals","proposal","length","users","totalPositiveVotes","totalPositiveVotesAmount","totalNegativeVotes","totalNegativeVotesAmount","totalPositiveStakes","totalPositiveStakesAmount","totalNegativeStakes","totalNegativeStakesAmount","totalProposalsCreated","cache","rep","userAddress","repBalance","div","toNumber","_","sortBy","unshift","repTotalSupply","blockNumber","event","plus","minus","l1BlockNumber","events","votes","voter","correctVotes","wrongVotes","correctStakes","wrongStakes","totalVoted","totalStaked","score","winningVote","stakes","staker","proposalCreator","proposer","times","toFixed","Math","min","creationEvent","tx","ranking","orderBy","key","assign","allProposals","votingMachine","getVotingMachineOfProposal","proposalEvents","getVotesOfProposal","getStakesOfProposal","redeems","getRedeemsOfProposal","redeemsRep","getRedeemsRepOfProposal","stateChanges","getProposalStateChanges","history","text","block","transactionIndex","logIndex","concat","web3","utils","fromWei","beneficiary","state","user","repPercentage","gen","redeemRep","dxd","newProposalEvents","proposalsCreated","proposalStateChangeEvents","votingMachineOfProposal","networkConfig","votingMachineParams","autoBoost","maxSecondsForExecution","timeNow","unix","status","boostTime","finishTime","shouldBoost","decodeProposalStatus","proposalStateChanges","proposalStateChange","getScheme","assetLimits","controllerAddress","controller","avatar","recommendedCalls","ZERO_ADDRESS","toName","defaultValue","permissionRegistry","ANY_FUNC_SIGNATURE","ANY_ADDRESS","getCalls","assetAddress","callAllowance","getCallAllowance","fromTime","schemeType","proposalData","sendRawTransaction","encodeFunctionCall","contentHash","decode","descriptionHash","reputationChange","ethValue","tokenValue","externalToken","titleText","decision","blockchainStore","token","bigNumberify","constants","MaxUint256","UserStore","userInfo","dxdBalance","dxdApproved","genBalance","genApproved","update","getCachedValue","reputation","method","multicall","BlockchainStore","initialLoadComplete","contractStorage","eventsStorage","updateStore","fetchData","calls","results","multicallService","call","index","decodeCall","response","lastFetched","executeCalls","multicallResponse","reduceMulticall","resetActiveCalls","entry","has","get","eventName","emitions","entries","oldEntry","reset","active","daoStore","userStore","networkCache","getBlockNumber","lastCheckedBlockNumber","fromBlock","toBlock","tokensBalancesCalls","getTokensToFetchPrice","tokenAddress","tokenBalances","addCalls","executeAndUpdateMulticall","tokensBalancesCall","accountCalls","MulticallService","activeCalls","activeCallsRaw","rawCalls","multi","aggregate","returnData","addCall","addContractCall","abiService","iface","encoded","encode","result","normalizeBalance","decimals","DEFAULT_TOKEN_DECIMALS","scale","formatBalance","balance","precision","roundDown","eq","decimalPlaces","ROUND_UP","padToDecimalPlaces","minDecimals","zerosToPad","pad","DaoService","callData","avatarAddress","genericCall","encodeABI","callDecoded","genericCallData","ERC20_TRANSFER_SIGNATURE","transferParams","atBlock","l2BlockNumber","userRep","totalSupply","EventsService","activeEventsCalls","getPastEvents","activeEventCall","getEvents","addEventCall","CID","IPFSService","ipfs","started","IPFS","create","content","add","cid","string","pin","file","path","chunk","PinataService","auth","getPinList","pinList","ipfsHashes","rows","pinataApiKey","getLocalConfig","axios","url","headers","Authorization","hashToPin","pinataMetadata","fromIpfs","keyValues","EtherscanService","etherscanAPIKey","CoingeckoService","prices","tokens","tokenAddresses","pricesResponse","toChecksumAddress","storesContext","React","createContext","modalStore","daoService","eventsService","ipfsService","pinataService","etherscanService","coingeckoService","useStores","useContext","usePrevious","ref","useRef","useEffect","current","Web3ReactManager","children","web3ContextInjected","useWeb3React","networkActive","networkError","setWeb3Context","triedEager","useWeb3ReactCore","activate","useState","tried","setTried","isAuthorized","isMobile","window","ethereum","useEagerConnect","location","reload","suppress","handleChainChanged","handleAccountsChanged","handleNetworkChanged","removeListener","useInactiveListener","callback","delay","savedCallback","setInterval","clearInterval","useInterval","BlurWrapper","styled","OverBlurModal","className","Boolean","hostname","match","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","reduce","accumulator","size","css","white","ThemeProvider","setDarkMode","theme","black","textColor","greyText","backgroundColor","activeButtonBackground","modalBackground","inputBackground","placeholderGray","shadowColor","borderStyle","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","bodyText","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle","createGlobalStyle","shortenAddress","digits","isAddress","toLowerCase","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","suppressClassNameWarning","mobile","rest","attrs","StyledDialogContent","minHeight","maxHeight","isOpen","slideInAnimation","aria-label","HiddenCloseButton","button","Modal","onDismiss","initialFocusRef","transitions","useTransition","duration","opacity","enter","leave","item","props","style","transform","hidden","onClick","_line","_line2","Link","target","rel","CopyIcon","TransactionStatusText","span","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","useCallback","didCopy","copy","hide","setTimeout","clearTimeout","useCopyClipboard","setCopied","_extends","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","title","titleId","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","ForwardRef","ETHERSCAN_PREFIXES","1","3","4","5","42","getEtherscanLink","networkId","prefix","OptionButton","HeaderRow","UpperSection","InfoCard","AccountGroupingRow","AccountSection","YourAccount","GreenCircle","CircleWrapper","AccountControl","hasENS","isENS","ConnectButtonRow","StyledLink","CloseIcon","CloseColor","Close","WalletAction","AccountDetails","ENSName","openOptions","alt","close","clickable","transparentize","OptionCard","OptionCardLeft","OptionCardClickable","disabled","HeaderText","SubHeader","IconWrapper","Option","link","header","subheader","icon","src","metamaskIcon","PendingSection","LoadingMessage","ErrorGroup","ErrorButton","darken","LoadingWrapper","PendingView","uri","setPendingError","tryActivation","isMetamask","isMetaMask","option","Wrapper","ContentWrapper","Blurb","OptionGrid","HoverText","WALLET_VIEWS","WalletModal","observer","pendingTransactions","confirmedTransactions","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","connectionErrorMessage","setConnectionErrorMessage","walletModalOpen","activePrevious","connectorPrevious","getOptions","mobileOnly","userSelect","Box","WrongNetworkButton","AccountButton","ConnectButton","Web3ConnectStatus","pending","confirmed","getPendingTransactions","getConfirmedTransactions","display","fontSize","replace","toUpperCase","NavWrapper","NavSection","MenuItem","ItemBox","Header","NavItem","withRouter","route","getUserInfo","parseFloat","Number","Web3","getDaoInfo","dxdaoIcon","pathname","margin","FooterWrapper","LeftFooter","FooterItem","FooterDivider","Footer","useHistory","PageRouterWrapper","LoadingBox","PageRouter","useLocation","start","isAuthenticated","loadPrices","updatePinList","Button","ButtonWithRouter","ActiveButton","timeToTimestamp","formatPercentage","useLowerLimit","lte","gt","ProposalsTableWrapper","ProposalsFilter","select","ProposalsNameFilter","ProposalTableHeaderActions","ProposalTableHeaderWrapper","TableHeader","align","TableRowsWrapper","TableRow","TableCell","weight","wrapText","ProposalsPage","getAllSchemes","stateFilter","setStateFilter","schemeFilter","setSchemeFilter","titleFilter","setTitleFilter","getAllProposals","cacheProposal","getProposalStatus","sort","b","flexDirection","justifyContent","placeholder","onChange","newValue","positiveStake","negativeStake","positiveVotesPercentage","negativeVotesPercentage","timeToBoost","timeToFinish","votingMachineTokenName","textDecoration","textAlign","flex","QuestionLink","QuestionIcon","question","ProposalTemplates","NewProposalFormWrapper","PlaceHolders","TitleInput","TextActions","CallRow","RemoveButton","TextInput","SelectInput","NewProposalPage","schemeInLocalStorage","defaultSchemeToUse","findIndex","schemeToUse","setSchemeToUse","setTitleText","ipfsHash","setIpfsHash","descriptionText","setDescriptionText","setCalls","repChange","contributionRewardCalls","setContributionRewardCalls","useReducer","x","forceUpdate","submitionState","setSubmitionState","errorMessage","setErrorMessage","getSchemeRecommendedCalls","transferLimits","allowedToCall","recommendedCall","allowedPermission","uploadToIPFS","bodyTextToUpload","pinataPin","ipfsPin","uploaded","getContent","ipfsContent","sleep","callToController","callType","callDataFunctionSignature","callDataFunctionParamsEncoded","encodeFunctionSignature","dataValues","parameters","lastIndexOf","encodeParameters","encodeControllerGenericCall","toWei","txerror","setCallsInState","changeCallType","callIndex","allowedFunctions","functionParams","onToSelectChange","toAddress","Array","onFunctionParamsChange","paramIndex","onContributionRewardValueChange","setContributionRewardCallsInState","minWidth","Question","splice","template","preview","minheights","maxheights","commands","bold","italic","strikethrough","hr","divider","quote","image","unorderedListCommand","orderedListCommand","checkedListCommand","Markdown","borderRadius","border","padding","allowedCall","allowedCallIndex","selectedFunction","allowedFunction","allowedFunc","allowedFuncIndex","paddingRight","marginTop","funcParam","funcParamIndex","proposalIndex","alignItems","AddressLink","BlockchainLink","onlyIcon","toFormat","end","formarText","InfoBox","UserPage","userEvents","getUserEvents","getUser","proposalsToRedeem","getGovernanceInfo","voteParameters","getVotingParametersOfProposal","cursor","historyEvent","borderBottom","ProposalInformationWrapper","InfoSidebarBox","ProposalInfoSection","ProposalInfoBox","SidebarDivider","SidebarRow","AmountInput","AmountBadge","ActionButton","ProposalPage","Slider","maxWidth","votingMachineUsed","stakeAmount","setStakeAmount","votePercentage","setVotePercentage","proposalDescription","setProposalDescription","proposalTitle","setProposalTitle","votingMachineTokenApproved","getProposalEvents","votedAmount","positiveVotesCount","negativeVotesCount","stakedAmount","positiveStakesCount","negativeStakesCount","userRepAtProposalCreation","getRepAt","totalRepAtProposalCreation","executionTimeoutTime","proposalCallTexts","p","decodedGenericCall","decodeControllerCall","canRedeemToken","canRedeemRep","canRedeem","boostedProposals","preBoostedProposals","upstakes","downstakes","threshold","pow","lt","recommendedThreshold","stakeToBoost","stakeToUnBoost","recommendedStakeToBoost","recommendedStakeToUnBoost","calculateStakes","getAmountOfProposalsPreBoostedInScheme","boostedVoteRequiredPercentage","repPercentageAtCreation","submitVote","repAmount","submitStake","executeProposal","finishTimeReached","lineBreak","whiteSpace","proposalCallText","voteEvent","max","step","stakeEvent","borderTop","FinanceInfoWrapper","FinanceTableHeaderWrapper","FinanceInformation","getPrices","assets","total","tokenData","getTokenData","indexOfAssetInTotal","assetHolder","assetsOfHolder","parseCamelCase","usd","SchemesInformationWrapper","SchemesInformation","schemeProposals","votingMachineParameters","getVotingParametersOfScheme","humanize","maxRepPercentageChange","permissions","canGenericCall","canUpgrade","canChangeConstraints","canRegisterSchemes","proposalIds","GovernanceInfoWrapper","GovernanceTableHeaderWrapper","GovernanceInformation","weiNumber","governanceInfo","chartType","loader","options","legend","pieSliceText","pieStartAngle","sliceVisibilityThreshold","hAxis","vAxis","InfoPageWrapper","InfoNavigation","InfoPage","searchPath","search","Row","InputBox","ConfigPage","etherscanApiStatus","setEtherscanApiStatus","pinataKeyStatus","setPinataKeyStatus","localConfig","setLocalConfig","onApiKeyValueChange","serviceName","checked","FAQPage","questionId","FAQBox","document","querySelectorAll","scrollIntoView","schemeAddresses","FAQBody","ForumPage","loading","setLoading","addEventListener","embedId","elem","getElementById","lists","list","getAttribute","frameId","random","substr","removeAttribute","j","attributes","attr","iframe","createElement","join","frameBorder","scrolling","appendChild","discourse-url","category","per-page","updateLocale","relativeTime","s","m","h","d","Web3ProviderInjected","createWeb3ReactRoot","Root","getLibrary","exact","Proposals","NewProposal","Info","FAQ","Forum","User","Proposal","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","decodeSchemeParameters","rawParameters","DxController","DxAvatar","DxReputation","GenesisProtocol","getContracts","gen2","networkContracts","updateDaoInfo","updateReputationEvents","networkCacheUpdated","newProposal","_address","updateVotingMachine","updateSchemes","updatePermissionRegistry","updateProposals","allContracts","callsToExecute","executeMulticall","callsResponse","decodedReturnData","sortEvents","reputationEvent","signature","returnValues","_to","_amount","transactionHash","_from","newVotingMachineEvents","votingMachineEventsInCache","votingMachineParamsHash","votingMachineEvent","proposalCreated","newProposalEvent","_proposalId","_organization","_proposer","paramHash","_paramsHash","_proposalState","preBoosted","_voter","_vote","_reputation","_staker","amount4Bounty","_beneficiary","permissionRegistryEvent","eventValues","controllerEvents","controllerEventsIndex","controllerEvent","_scheme","schemeTypeData","getSchemeTypeData","WalletSchemeJSON","walletSchemeContract","callsResponse1","permission","hexString","lookup","ret","len","hexToBinary","voteParams","schemeName","ZERO_HASH","callsResponse2","registered","_sender","soliditySha3","avatarAddressEncoded","encodeParameter","schemeEvents","newProposalTopics","getRawEvents","schemeEventsBatchs","schemeEventsBatchsIndex","schemeEvent","topics","decodeParameter","votingMachineProposalInfo","proposalStatusWithVotes","proposalTimes","schemeProposalInfo","transactionReceipt","newProposalTopic","logs","decodedProposer","creationLogDecoded","creationLogEncoding","_descriptionHash","ipfsHashToDescriptionHash","contractToCall","_parametersHash","_permissions","_reputationChange","_rewards","_externalToken","_data","_value","_contractsToCall","_callsData","_values","getTransaction","totalSupplyAt","daoRedeemItsWinnings","creationEventSender","descriptionHashToIPFSHash","retryIntent","isNode","request","proposalShouldBoost","val","scalePow","scaleMul","ms","parsed","MAX_BLOCKS_PER_EVENTS_FETCH","eventsToGet","maxBlocksPerFetch","eventsFetched","getTimestampOfEvents","trunc","blocksToLower","topicsToGet","getPastLogs","blocksToFetch","timestamps","totalLength","blocksToFetchBatch","blockInfo","number","_jsonInterface","callResult","outputs","getCodec","contractsFile","tokensToFetchPriceFile","tokensFile","REACT_APP_AVATAR_ADDRESS","REACT_APP_CONTROLLER_ADDRESS","REACT_APP_REPUTATION_ADDRESS","REACT_APP_PERMISSION_REGISTRY_ADDRESS","REACT_APP_MULTICALL_ADDRESS","REACT_APP_VOTING_MACHINE_ADDRESS","REACT_APP_VOTING_MACHINE_TOKEN_ADDRESS","daostack","schemeRegistrar","contributionReward","competitionScheme","multicallSchemes","addresses","genericSchemes","dxSchemes","tokenInFile"],"mappings":"oGAAA,wDAEAA,YAAUC,OAAO,CACbC,eAAgB,EAAE,IAAK,KACvBC,cAAeH,YAAUI,WACzBC,eAAgB,GAChBC,OAAQ,CACNC,UAAW,EACXC,eAAgB,IAChBC,iBAAkB,Q,6m10UCTxB,IAAIC,EAAM,CACT,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,cAAe,CACd,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,mCAAoC,CACnC,IACA,KAED,sCAAuC,CACtC,IACA,KAED,uCAAwC,CACvC,IACA,KAED,0CAA2C,CAC1C,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,YAAa,CACZ,IACA,KAED,eAAgB,CACf,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,mBAAoB,CACnB,KAED,sBAAuB,CACtB,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,KAED,4BAA6B,CAC5B,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,oBAAqB,CACpB,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,0BAA2B,CAC1B,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,iCAAkC,CACjC,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,aAAc,CACb,KACA,KAED,gBAAiB,CAChB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,gCAAiC,CAChC,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB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","file":"static/js/main.eb8c668d.chunk.js","sourcesContent":["import { BigNumber } from 'bignumber.js';\n\nBigNumber.config({\n    EXPONENTIAL_AT: [-100, 100],\n    ROUNDING_MODE: BigNumber.ROUND_DOWN,\n    DECIMAL_PLACES: 18,\n    FORMAT: {\n      groupSize: 3,\n      groupSeparator: ' ',\n      decimalSeparator: '.'\n    }\n});\n\nexport { BigNumber };\n","var map = {\n\t\"./prism-abap\": [\n\t\t739,\n\t\t0\n\t],\n\t\"./prism-abap.js\": [\n\t\t739,\n\t\t0\n\t],\n\t\"./prism-abap.min\": [\n\t\t740,\n\t\t1\n\t],\n\t\"./prism-abap.min.js\": [\n\t\t740,\n\t\t1\n\t],\n\t\"./prism-abnf\": [\n\t\t741,\n\t\t2\n\t],\n\t\"./prism-abnf.js\": [\n\t\t741,\n\t\t2\n\t],\n\t\"./prism-abnf.min\": [\n\t\t742,\n\t\t3\n\t],\n\t\"./prism-abnf.min.js\": [\n\t\t742,\n\t\t3\n\t],\n\t\"./prism-actionscript\": [\n\t\t743,\n\t\t4\n\t],\n\t\"./prism-actionscript.js\": [\n\t\t743,\n\t\t4\n\t],\n\t\"./prism-actionscript.min\": [\n\t\t744,\n\t\t5\n\t],\n\t\"./prism-actionscript.min.js\": [\n\t\t744,\n\t\t5\n\t],\n\t\"./prism-ada\": [\n\t\t745,\n\t\t6\n\t],\n\t\"./prism-ada.js\": [\n\t\t745,\n\t\t6\n\t],\n\t\"./prism-ada.min\": [\n\t\t746,\n\t\t7\n\t],\n\t\"./prism-ada.min.js\": [\n\t\t746,\n\t\t7\n\t],\n\t\"./prism-agda\": [\n\t\t747,\n\t\t8\n\t],\n\t\"./prism-agda.js\": [\n\t\t747,\n\t\t8\n\t],\n\t\"./prism-agda.min\": [\n\t\t748,\n\t\t9\n\t],\n\t\"./prism-agda.min.js\": [\n\t\t748,\n\t\t9\n\t],\n\t\"./prism-al\": [\n\t\t749,\n\t\t10\n\t],\n\t\"./prism-al.js\": [\n\t\t749,\n\t\t10\n\t],\n\t\"./prism-al.min\": [\n\t\t750,\n\t\t11\n\t],\n\t\"./prism-al.min.js\": [\n\t\t750,\n\t\t11\n\t],\n\t\"./prism-antlr4\": [\n\t\t751,\n\t\t12\n\t],\n\t\"./prism-antlr4.js\": [\n\t\t751,\n\t\t12\n\t],\n\t\"./prism-antlr4.min\": [\n\t\t752,\n\t\t13\n\t],\n\t\"./prism-antlr4.min.js\": [\n\t\t752,\n\t\t13\n\t],\n\t\"./prism-apacheconf\": [\n\t\t753,\n\t\t14\n\t],\n\t\"./prism-apacheconf.js\": [\n\t\t753,\n\t\t14\n\t],\n\t\"./prism-apacheconf.min\": [\n\t\t754,\n\t\t15\n\t],\n\t\"./prism-apacheconf.min.js\": [\n\t\t754,\n\t\t15\n\t],\n\t\"./prism-apl\": [\n\t\t755,\n\t\t16\n\t],\n\t\"./prism-apl.js\": [\n\t\t755,\n\t\t16\n\t],\n\t\"./prism-apl.min\": [\n\t\t756,\n\t\t17\n\t],\n\t\"./prism-apl.min.js\": [\n\t\t756,\n\t\t17\n\t],\n\t\"./prism-applescript\": [\n\t\t757,\n\t\t18\n\t],\n\t\"./prism-applescript.js\": [\n\t\t757,\n\t\t18\n\t],\n\t\"./prism-applescript.min\": [\n\t\t758,\n\t\t19\n\t],\n\t\"./prism-applescript.min.js\": [\n\t\t758,\n\t\t19\n\t],\n\t\"./prism-aql\": [\n\t\t759,\n\t\t20\n\t],\n\t\"./prism-aql.js\": [\n\t\t759,\n\t\t20\n\t],\n\t\"./prism-aql.min\": [\n\t\t760,\n\t\t21\n\t],\n\t\"./prism-aql.min.js\": [\n\t\t760,\n\t\t21\n\t],\n\t\"./prism-arduino\": [\n\t\t761,\n\t\t22\n\t],\n\t\"./prism-arduino.js\": [\n\t\t761,\n\t\t22\n\t],\n\t\"./prism-arduino.min\": [\n\t\t762,\n\t\t23\n\t],\n\t\"./prism-arduino.min.js\": [\n\t\t762,\n\t\t23\n\t],\n\t\"./prism-arff\": [\n\t\t763,\n\t\t24\n\t],\n\t\"./prism-arff.js\": [\n\t\t763,\n\t\t24\n\t],\n\t\"./prism-arff.min\": [\n\t\t764,\n\t\t25\n\t],\n\t\"./prism-arff.min.js\": [\n\t\t764,\n\t\t25\n\t],\n\t\"./prism-asciidoc\": [\n\t\t765,\n\t\t26\n\t],\n\t\"./prism-asciidoc.js\": [\n\t\t765,\n\t\t26\n\t],\n\t\"./prism-asciidoc.min\": [\n\t\t766,\n\t\t27\n\t],\n\t\"./prism-asciidoc.min.js\": [\n\t\t766,\n\t\t27\n\t],\n\t\"./prism-asm6502\": [\n\t\t767,\n\t\t28\n\t],\n\t\"./prism-asm6502.js\": [\n\t\t767,\n\t\t28\n\t],\n\t\"./prism-asm6502.min\": [\n\t\t768,\n\t\t29\n\t],\n\t\"./prism-asm6502.min.js\": [\n\t\t768,\n\t\t29\n\t],\n\t\"./prism-aspnet\": [\n\t\t769,\n\t\t30\n\t],\n\t\"./prism-aspnet.js\": [\n\t\t769,\n\t\t30\n\t],\n\t\"./prism-aspnet.min\": [\n\t\t770,\n\t\t31\n\t],\n\t\"./prism-aspnet.min.js\": [\n\t\t770,\n\t\t31\n\t],\n\t\"./prism-autohotkey\": [\n\t\t771,\n\t\t32\n\t],\n\t\"./prism-autohotkey.js\": [\n\t\t771,\n\t\t32\n\t],\n\t\"./prism-autohotkey.min\": [\n\t\t772,\n\t\t33\n\t],\n\t\"./prism-autohotkey.min.js\": [\n\t\t772,\n\t\t33\n\t],\n\t\"./prism-autoit\": [\n\t\t773,\n\t\t34\n\t],\n\t\"./prism-autoit.js\": [\n\t\t773,\n\t\t34\n\t],\n\t\"./prism-autoit.min\": [\n\t\t774,\n\t\t35\n\t],\n\t\"./prism-autoit.min.js\": [\n\t\t774,\n\t\t35\n\t],\n\t\"./prism-bash\": [\n\t\t775,\n\t\t36\n\t],\n\t\"./prism-bash.js\": [\n\t\t775,\n\t\t36\n\t],\n\t\"./prism-bash.min\": [\n\t\t776,\n\t\t37\n\t],\n\t\"./prism-bash.min.js\": [\n\t\t776,\n\t\t37\n\t],\n\t\"./prism-basic\": [\n\t\t777,\n\t\t38\n\t],\n\t\"./prism-basic.js\": [\n\t\t777,\n\t\t38\n\t],\n\t\"./prism-basic.min\": [\n\t\t778,\n\t\t39\n\t],\n\t\"./prism-basic.min.js\": [\n\t\t778,\n\t\t39\n\t],\n\t\"./prism-batch\": [\n\t\t779,\n\t\t40\n\t],\n\t\"./prism-batch.js\": [\n\t\t779,\n\t\t40\n\t],\n\t\"./prism-batch.min\": [\n\t\t780,\n\t\t41\n\t],\n\t\"./prism-batch.min.js\": [\n\t\t780,\n\t\t41\n\t],\n\t\"./prism-bbcode\": [\n\t\t781,\n\t\t42\n\t],\n\t\"./prism-bbcode.js\": [\n\t\t781,\n\t\t42\n\t],\n\t\"./prism-bbcode.min\": [\n\t\t782,\n\t\t43\n\t],\n\t\"./prism-bbcode.min.js\": [\n\t\t782,\n\t\t43\n\t],\n\t\"./prism-bison\": [\n\t\t783,\n\t\t44\n\t],\n\t\"./prism-bison.js\": [\n\t\t783,\n\t\t44\n\t],\n\t\"./prism-bison.min\": [\n\t\t784,\n\t\t45\n\t],\n\t\"./prism-bison.min.js\": [\n\t\t784,\n\t\t45\n\t],\n\t\"./prism-bnf\": [\n\t\t785,\n\t\t46\n\t],\n\t\"./prism-bnf.js\": [\n\t\t785,\n\t\t46\n\t],\n\t\"./prism-bnf.min\": [\n\t\t786,\n\t\t47\n\t],\n\t\"./prism-bnf.min.js\": [\n\t\t786,\n\t\t47\n\t],\n\t\"./prism-brainfuck\": [\n\t\t787,\n\t\t48\n\t],\n\t\"./prism-brainfuck.js\": [\n\t\t787,\n\t\t48\n\t],\n\t\"./prism-brainfuck.min\": [\n\t\t788,\n\t\t49\n\t],\n\t\"./prism-brainfuck.min.js\": [\n\t\t788,\n\t\t49\n\t],\n\t\"./prism-brightscript\": [\n\t\t789,\n\t\t50\n\t],\n\t\"./prism-brightscript.js\": [\n\t\t789,\n\t\t50\n\t],\n\t\"./prism-brightscript.min\": [\n\t\t790,\n\t\t51\n\t],\n\t\"./prism-brightscript.min.js\": [\n\t\t790,\n\t\t51\n\t],\n\t\"./prism-bro\": [\n\t\t791,\n\t\t52\n\t],\n\t\"./prism-bro.js\": [\n\t\t791,\n\t\t52\n\t],\n\t\"./prism-bro.min\": [\n\t\t792,\n\t\t53\n\t],\n\t\"./prism-bro.min.js\": [\n\t\t792,\n\t\t53\n\t],\n\t\"./prism-c\": [\n\t\t793,\n\t\t54\n\t],\n\t\"./prism-c.js\": [\n\t\t793,\n\t\t54\n\t],\n\t\"./prism-c.min\": [\n\t\t794,\n\t\t55\n\t],\n\t\"./prism-c.min.js\": [\n\t\t794,\n\t\t55\n\t],\n\t\"./prism-cil\": [\n\t\t795,\n\t\t56\n\t],\n\t\"./prism-cil.js\": [\n\t\t795,\n\t\t56\n\t],\n\t\"./prism-cil.min\": [\n\t\t796,\n\t\t57\n\t],\n\t\"./prism-cil.min.js\": [\n\t\t796,\n\t\t57\n\t],\n\t\"./prism-clike\": [\n\t\t797,\n\t\t58\n\t],\n\t\"./prism-clike.js\": [\n\t\t797,\n\t\t58\n\t],\n\t\"./prism-clike.min\": [\n\t\t798,\n\t\t59\n\t],\n\t\"./prism-clike.min.js\": [\n\t\t798,\n\t\t59\n\t],\n\t\"./prism-clojure\": [\n\t\t799,\n\t\t60\n\t],\n\t\"./prism-clojure.js\": [\n\t\t799,\n\t\t60\n\t],\n\t\"./prism-clojure.min\": [\n\t\t800,\n\t\t61\n\t],\n\t\"./prism-clojure.min.js\": [\n\t\t800,\n\t\t61\n\t],\n\t\"./prism-cmake\": [\n\t\t801,\n\t\t62\n\t],\n\t\"./prism-cmake.js\": [\n\t\t801,\n\t\t62\n\t],\n\t\"./prism-cmake.min\": [\n\t\t802,\n\t\t63\n\t],\n\t\"./prism-cmake.min.js\": [\n\t\t802,\n\t\t63\n\t],\n\t\"./prism-coffeescript\": [\n\t\t803,\n\t\t64\n\t],\n\t\"./prism-coffeescript.js\": [\n\t\t803,\n\t\t64\n\t],\n\t\"./prism-coffeescript.min\": [\n\t\t804,\n\t\t65\n\t],\n\t\"./prism-coffeescript.min.js\": [\n\t\t804,\n\t\t65\n\t],\n\t\"./prism-concurnas\": [\n\t\t805,\n\t\t66\n\t],\n\t\"./prism-concurnas.js\": [\n\t\t805,\n\t\t66\n\t],\n\t\"./prism-concurnas.min\": [\n\t\t806,\n\t\t67\n\t],\n\t\"./prism-concurnas.min.js\": [\n\t\t806,\n\t\t67\n\t],\n\t\"./prism-core\": [\n\t\t807,\n\t\t68\n\t],\n\t\"./prism-core.js\": [\n\t\t807,\n\t\t68\n\t],\n\t\"./prism-core.min\": [\n\t\t808,\n\t\t69\n\t],\n\t\"./prism-core.min.js\": [\n\t\t808,\n\t\t69\n\t],\n\t\"./prism-cpp\": [\n\t\t809,\n\t\t70\n\t],\n\t\"./prism-cpp.js\": [\n\t\t809,\n\t\t70\n\t],\n\t\"./prism-cpp.min\": [\n\t\t810,\n\t\t71\n\t],\n\t\"./prism-cpp.min.js\": [\n\t\t810,\n\t\t71\n\t],\n\t\"./prism-crystal\": [\n\t\t811,\n\t\t72\n\t],\n\t\"./prism-crystal.js\": [\n\t\t811,\n\t\t72\n\t],\n\t\"./prism-crystal.min\": [\n\t\t812,\n\t\t73\n\t],\n\t\"./prism-crystal.min.js\": [\n\t\t812,\n\t\t73\n\t],\n\t\"./prism-csharp\": [\n\t\t813,\n\t\t74\n\t],\n\t\"./prism-csharp.js\": [\n\t\t813,\n\t\t74\n\t],\n\t\"./prism-csharp.min\": [\n\t\t814,\n\t\t75\n\t],\n\t\"./prism-csharp.min.js\": [\n\t\t814,\n\t\t75\n\t],\n\t\"./prism-csp\": [\n\t\t815,\n\t\t76\n\t],\n\t\"./prism-csp.js\": [\n\t\t815,\n\t\t76\n\t],\n\t\"./prism-csp.min\": [\n\t\t816,\n\t\t77\n\t],\n\t\"./prism-csp.min.js\": [\n\t\t816,\n\t\t77\n\t],\n\t\"./prism-css\": [\n\t\t819,\n\t\t80\n\t],\n\t\"./prism-css-extras\": [\n\t\t817,\n\t\t78\n\t],\n\t\"./prism-css-extras.js\": [\n\t\t817,\n\t\t78\n\t],\n\t\"./prism-css-extras.min\": [\n\t\t818,\n\t\t79\n\t],\n\t\"./prism-css-extras.min.js\": [\n\t\t818,\n\t\t79\n\t],\n\t\"./prism-css.js\": [\n\t\t819,\n\t\t80\n\t],\n\t\"./prism-css.min\": [\n\t\t820,\n\t\t81\n\t],\n\t\"./prism-css.min.js\": [\n\t\t820,\n\t\t81\n\t],\n\t\"./prism-cypher\": [\n\t\t821,\n\t\t82\n\t],\n\t\"./prism-cypher.js\": [\n\t\t821,\n\t\t82\n\t],\n\t\"./prism-cypher.min\": [\n\t\t822,\n\t\t83\n\t],\n\t\"./prism-cypher.min.js\": [\n\t\t822,\n\t\t83\n\t],\n\t\"./prism-d\": [\n\t\t823,\n\t\t84\n\t],\n\t\"./prism-d.js\": [\n\t\t823,\n\t\t84\n\t],\n\t\"./prism-d.min\": [\n\t\t824,\n\t\t85\n\t],\n\t\"./prism-d.min.js\": [\n\t\t824,\n\t\t85\n\t],\n\t\"./prism-dart\": [\n\t\t825,\n\t\t86\n\t],\n\t\"./prism-dart.js\": [\n\t\t825,\n\t\t86\n\t],\n\t\"./prism-dart.min\": [\n\t\t826,\n\t\t87\n\t],\n\t\"./prism-dart.min.js\": [\n\t\t826,\n\t\t87\n\t],\n\t\"./prism-dax\": [\n\t\t827,\n\t\t88\n\t],\n\t\"./prism-dax.js\": [\n\t\t827,\n\t\t88\n\t],\n\t\"./prism-dax.min\": [\n\t\t828,\n\t\t89\n\t],\n\t\"./prism-dax.min.js\": [\n\t\t828,\n\t\t89\n\t],\n\t\"./prism-dhall\": [\n\t\t829,\n\t\t90\n\t],\n\t\"./prism-dhall.js\": [\n\t\t829,\n\t\t90\n\t],\n\t\"./prism-dhall.min\": [\n\t\t830,\n\t\t91\n\t],\n\t\"./prism-dhall.min.js\": [\n\t\t830,\n\t\t91\n\t],\n\t\"./prism-diff\": [\n\t\t831,\n\t\t92\n\t],\n\t\"./prism-diff.js\": [\n\t\t831,\n\t\t92\n\t],\n\t\"./prism-diff.min\": [\n\t\t832,\n\t\t93\n\t],\n\t\"./prism-diff.min.js\": [\n\t\t832,\n\t\t93\n\t],\n\t\"./prism-django\": [\n\t\t833,\n\t\t94\n\t],\n\t\"./prism-django.js\": [\n\t\t833,\n\t\t94\n\t],\n\t\"./prism-django.min\": [\n\t\t834,\n\t\t95\n\t],\n\t\"./prism-django.min.js\": [\n\t\t834,\n\t\t95\n\t],\n\t\"./prism-dns-zone-file\": [\n\t\t835,\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.js\": [\n\t\t835,\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.min\": [\n\t\t836,\n\t\t97\n\t],\n\t\"./prism-dns-zone-file.min.js\": [\n\t\t836,\n\t\t97\n\t],\n\t\"./prism-docker\": [\n\t\t837,\n\t\t98\n\t],\n\t\"./prism-docker.js\": [\n\t\t837,\n\t\t98\n\t],\n\t\"./prism-docker.min\": [\n\t\t838,\n\t\t99\n\t],\n\t\"./prism-docker.min.js\": [\n\t\t838,\n\t\t99\n\t],\n\t\"./prism-ebnf\": [\n\t\t839,\n\t\t100\n\t],\n\t\"./prism-ebnf.js\": [\n\t\t839,\n\t\t100\n\t],\n\t\"./prism-ebnf.min\": [\n\t\t840,\n\t\t101\n\t],\n\t\"./prism-ebnf.min.js\": [\n\t\t840,\n\t\t101\n\t],\n\t\"./prism-editorconfig\": [\n\t\t841,\n\t\t102\n\t],\n\t\"./prism-editorconfig.js\": [\n\t\t841,\n\t\t102\n\t],\n\t\"./prism-editorconfig.min\": [\n\t\t842,\n\t\t103\n\t],\n\t\"./prism-editorconfig.min.js\": [\n\t\t842,\n\t\t103\n\t],\n\t\"./prism-eiffel\": [\n\t\t843,\n\t\t104\n\t],\n\t\"./prism-eiffel.js\": [\n\t\t843,\n\t\t104\n\t],\n\t\"./prism-eiffel.min\": [\n\t\t844,\n\t\t105\n\t],\n\t\"./prism-eiffel.min.js\": [\n\t\t844,\n\t\t105\n\t],\n\t\"./prism-ejs\": [\n\t\t845,\n\t\t106\n\t],\n\t\"./prism-ejs.js\": [\n\t\t845,\n\t\t106\n\t],\n\t\"./prism-ejs.min\": [\n\t\t846,\n\t\t107\n\t],\n\t\"./prism-ejs.min.js\": [\n\t\t846,\n\t\t107\n\t],\n\t\"./prism-elixir\": [\n\t\t847,\n\t\t108\n\t],\n\t\"./prism-elixir.js\": [\n\t\t847,\n\t\t108\n\t],\n\t\"./prism-elixir.min\": [\n\t\t848,\n\t\t109\n\t],\n\t\"./prism-elixir.min.js\": [\n\t\t848,\n\t\t109\n\t],\n\t\"./prism-elm\": [\n\t\t849,\n\t\t110\n\t],\n\t\"./prism-elm.js\": [\n\t\t849,\n\t\t110\n\t],\n\t\"./prism-elm.min\": [\n\t\t850,\n\t\t111\n\t],\n\t\"./prism-elm.min.js\": [\n\t\t850,\n\t\t111\n\t],\n\t\"./prism-erb\": [\n\t\t851,\n\t\t112\n\t],\n\t\"./prism-erb.js\": [\n\t\t851,\n\t\t112\n\t],\n\t\"./prism-erb.min\": [\n\t\t852,\n\t\t113\n\t],\n\t\"./prism-erb.min.js\": [\n\t\t852,\n\t\t113\n\t],\n\t\"./prism-erlang\": [\n\t\t853,\n\t\t114\n\t],\n\t\"./prism-erlang.js\": [\n\t\t853,\n\t\t114\n\t],\n\t\"./prism-erlang.min\": [\n\t\t854,\n\t\t115\n\t],\n\t\"./prism-erlang.min.js\": [\n\t\t854,\n\t\t115\n\t],\n\t\"./prism-etlua\": [\n\t\t855,\n\t\t116\n\t],\n\t\"./prism-etlua.js\": [\n\t\t855,\n\t\t116\n\t],\n\t\"./prism-etlua.min\": [\n\t\t856,\n\t\t117\n\t],\n\t\"./prism-etlua.min.js\": [\n\t\t856,\n\t\t117\n\t],\n\t\"./prism-excel-formula\": [\n\t\t857,\n\t\t118\n\t],\n\t\"./prism-excel-formula.js\": [\n\t\t857,\n\t\t118\n\t],\n\t\"./prism-excel-formula.min\": [\n\t\t858,\n\t\t119\n\t],\n\t\"./prism-excel-formula.min.js\": [\n\t\t858,\n\t\t119\n\t],\n\t\"./prism-factor\": [\n\t\t859,\n\t\t120\n\t],\n\t\"./prism-factor.js\": [\n\t\t859,\n\t\t120\n\t],\n\t\"./prism-factor.min\": [\n\t\t860,\n\t\t121\n\t],\n\t\"./prism-factor.min.js\": [\n\t\t860,\n\t\t121\n\t],\n\t\"./prism-firestore-security-rules\": [\n\t\t861,\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.js\": [\n\t\t861,\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.min\": [\n\t\t862,\n\t\t123\n\t],\n\t\"./prism-firestore-security-rules.min.js\": [\n\t\t862,\n\t\t123\n\t],\n\t\"./prism-flow\": [\n\t\t863,\n\t\t124\n\t],\n\t\"./prism-flow.js\": [\n\t\t863,\n\t\t124\n\t],\n\t\"./prism-flow.min\": [\n\t\t864,\n\t\t125\n\t],\n\t\"./prism-flow.min.js\": [\n\t\t864,\n\t\t125\n\t],\n\t\"./prism-fortran\": [\n\t\t865,\n\t\t126\n\t],\n\t\"./prism-fortran.js\": [\n\t\t865,\n\t\t126\n\t],\n\t\"./prism-fortran.min\": [\n\t\t866,\n\t\t127\n\t],\n\t\"./prism-fortran.min.js\": [\n\t\t866,\n\t\t127\n\t],\n\t\"./prism-fsharp\": [\n\t\t867,\n\t\t128\n\t],\n\t\"./prism-fsharp.js\": [\n\t\t867,\n\t\t128\n\t],\n\t\"./prism-fsharp.min\": [\n\t\t868,\n\t\t129\n\t],\n\t\"./prism-fsharp.min.js\": [\n\t\t868,\n\t\t129\n\t],\n\t\"./prism-ftl\": [\n\t\t869,\n\t\t130\n\t],\n\t\"./prism-ftl.js\": [\n\t\t869,\n\t\t130\n\t],\n\t\"./prism-ftl.min\": [\n\t\t870,\n\t\t131\n\t],\n\t\"./prism-ftl.min.js\": [\n\t\t870,\n\t\t131\n\t],\n\t\"./prism-gcode\": [\n\t\t871,\n\t\t132\n\t],\n\t\"./prism-gcode.js\": [\n\t\t871,\n\t\t132\n\t],\n\t\"./prism-gcode.min\": [\n\t\t872,\n\t\t133\n\t],\n\t\"./prism-gcode.min.js\": [\n\t\t872,\n\t\t133\n\t],\n\t\"./prism-gdscript\": [\n\t\t873,\n\t\t134\n\t],\n\t\"./prism-gdscript.js\": [\n\t\t873,\n\t\t134\n\t],\n\t\"./prism-gdscript.min\": [\n\t\t874,\n\t\t135\n\t],\n\t\"./prism-gdscript.min.js\": [\n\t\t874,\n\t\t135\n\t],\n\t\"./prism-gedcom\": [\n\t\t875,\n\t\t136\n\t],\n\t\"./prism-gedcom.js\": [\n\t\t875,\n\t\t136\n\t],\n\t\"./prism-gedcom.min\": [\n\t\t876,\n\t\t137\n\t],\n\t\"./prism-gedcom.min.js\": [\n\t\t876,\n\t\t137\n\t],\n\t\"./prism-gherkin\": [\n\t\t877,\n\t\t138\n\t],\n\t\"./prism-gherkin.js\": [\n\t\t877,\n\t\t138\n\t],\n\t\"./prism-gherkin.min\": [\n\t\t878,\n\t\t139\n\t],\n\t\"./prism-gherkin.min.js\": [\n\t\t878,\n\t\t139\n\t],\n\t\"./prism-git\": [\n\t\t879,\n\t\t140\n\t],\n\t\"./prism-git.js\": [\n\t\t879,\n\t\t140\n\t],\n\t\"./prism-git.min\": [\n\t\t880,\n\t\t141\n\t],\n\t\"./prism-git.min.js\": [\n\t\t880,\n\t\t141\n\t],\n\t\"./prism-glsl\": [\n\t\t881,\n\t\t142\n\t],\n\t\"./prism-glsl.js\": [\n\t\t881,\n\t\t142\n\t],\n\t\"./prism-glsl.min\": [\n\t\t882,\n\t\t143\n\t],\n\t\"./prism-glsl.min.js\": [\n\t\t882,\n\t\t143\n\t],\n\t\"./prism-gml\": [\n\t\t883,\n\t\t144\n\t],\n\t\"./prism-gml.js\": [\n\t\t883,\n\t\t144\n\t],\n\t\"./prism-gml.min\": [\n\t\t884,\n\t\t145\n\t],\n\t\"./prism-gml.min.js\": [\n\t\t884,\n\t\t145\n\t],\n\t\"./prism-go\": [\n\t\t885,\n\t\t146\n\t],\n\t\"./prism-go.js\": [\n\t\t885,\n\t\t146\n\t],\n\t\"./prism-go.min\": [\n\t\t886,\n\t\t147\n\t],\n\t\"./prism-go.min.js\": [\n\t\t886,\n\t\t147\n\t],\n\t\"./prism-graphql\": [\n\t\t887,\n\t\t148\n\t],\n\t\"./prism-graphql.js\": [\n\t\t887,\n\t\t148\n\t],\n\t\"./prism-graphql.min\": [\n\t\t888,\n\t\t149\n\t],\n\t\"./prism-graphql.min.js\": [\n\t\t888,\n\t\t149\n\t],\n\t\"./prism-groovy\": [\n\t\t889,\n\t\t150\n\t],\n\t\"./prism-groovy.js\": [\n\t\t889,\n\t\t150\n\t],\n\t\"./prism-groovy.min\": [\n\t\t890,\n\t\t151\n\t],\n\t\"./prism-groovy.min.js\": [\n\t\t890,\n\t\t151\n\t],\n\t\"./prism-haml\": [\n\t\t891,\n\t\t152\n\t],\n\t\"./prism-haml.js\": [\n\t\t891,\n\t\t152\n\t],\n\t\"./prism-haml.min\": [\n\t\t892,\n\t\t153\n\t],\n\t\"./prism-haml.min.js\": [\n\t\t892,\n\t\t153\n\t],\n\t\"./prism-handlebars\": [\n\t\t893,\n\t\t154\n\t],\n\t\"./prism-handlebars.js\": [\n\t\t893,\n\t\t154\n\t],\n\t\"./prism-handlebars.min\": [\n\t\t894,\n\t\t155\n\t],\n\t\"./prism-handlebars.min.js\": [\n\t\t894,\n\t\t155\n\t],\n\t\"./prism-haskell\": [\n\t\t895,\n\t\t156\n\t],\n\t\"./prism-haskell.js\": [\n\t\t895,\n\t\t156\n\t],\n\t\"./prism-haskell.min\": [\n\t\t896,\n\t\t157\n\t],\n\t\"./prism-haskell.min.js\": [\n\t\t896,\n\t\t157\n\t],\n\t\"./prism-haxe\": [\n\t\t897,\n\t\t158\n\t],\n\t\"./prism-haxe.js\": [\n\t\t897,\n\t\t158\n\t],\n\t\"./prism-haxe.min\": [\n\t\t898,\n\t\t159\n\t],\n\t\"./prism-haxe.min.js\": [\n\t\t898,\n\t\t159\n\t],\n\t\"./prism-hcl\": [\n\t\t899,\n\t\t160\n\t],\n\t\"./prism-hcl.js\": [\n\t\t899,\n\t\t160\n\t],\n\t\"./prism-hcl.min\": [\n\t\t900,\n\t\t161\n\t],\n\t\"./prism-hcl.min.js\": [\n\t\t900,\n\t\t161\n\t],\n\t\"./prism-hlsl\": [\n\t\t901,\n\t\t162\n\t],\n\t\"./prism-hlsl.js\": [\n\t\t901,\n\t\t162\n\t],\n\t\"./prism-hlsl.min\": [\n\t\t902,\n\t\t163\n\t],\n\t\"./prism-hlsl.min.js\": [\n\t\t902,\n\t\t163\n\t],\n\t\"./prism-hpkp\": [\n\t\t903,\n\t\t164\n\t],\n\t\"./prism-hpkp.js\": [\n\t\t903,\n\t\t164\n\t],\n\t\"./prism-hpkp.min\": [\n\t\t904,\n\t\t165\n\t],\n\t\"./prism-hpkp.min.js\": [\n\t\t904,\n\t\t165\n\t],\n\t\"./prism-hsts\": [\n\t\t905,\n\t\t166\n\t],\n\t\"./prism-hsts.js\": [\n\t\t905,\n\t\t166\n\t],\n\t\"./prism-hsts.min\": [\n\t\t906,\n\t\t167\n\t],\n\t\"./prism-hsts.min.js\": [\n\t\t906,\n\t\t167\n\t],\n\t\"./prism-http\": [\n\t\t907,\n\t\t168\n\t],\n\t\"./prism-http.js\": [\n\t\t907,\n\t\t168\n\t],\n\t\"./prism-http.min\": [\n\t\t908,\n\t\t169\n\t],\n\t\"./prism-http.min.js\": [\n\t\t908,\n\t\t169\n\t],\n\t\"./prism-ichigojam\": [\n\t\t909,\n\t\t170\n\t],\n\t\"./prism-ichigojam.js\": [\n\t\t909,\n\t\t170\n\t],\n\t\"./prism-ichigojam.min\": [\n\t\t910,\n\t\t171\n\t],\n\t\"./prism-ichigojam.min.js\": [\n\t\t910,\n\t\t171\n\t],\n\t\"./prism-icon\": [\n\t\t911,\n\t\t172\n\t],\n\t\"./prism-icon.js\": [\n\t\t911,\n\t\t172\n\t],\n\t\"./prism-icon.min\": [\n\t\t912,\n\t\t173\n\t],\n\t\"./prism-icon.min.js\": [\n\t\t912,\n\t\t173\n\t],\n\t\"./prism-iecst\": [\n\t\t913,\n\t\t174\n\t],\n\t\"./prism-iecst.js\": [\n\t\t913,\n\t\t174\n\t],\n\t\"./prism-iecst.min\": [\n\t\t914,\n\t\t175\n\t],\n\t\"./prism-iecst.min.js\": [\n\t\t914,\n\t\t175\n\t],\n\t\"./prism-ignore\": [\n\t\t915,\n\t\t176\n\t],\n\t\"./prism-ignore.js\": [\n\t\t915,\n\t\t176\n\t],\n\t\"./prism-ignore.min\": [\n\t\t916,\n\t\t177\n\t],\n\t\"./prism-ignore.min.js\": [\n\t\t916,\n\t\t177\n\t],\n\t\"./prism-inform7\": [\n\t\t917,\n\t\t178\n\t],\n\t\"./prism-inform7.js\": [\n\t\t917,\n\t\t178\n\t],\n\t\"./prism-inform7.min\": [\n\t\t918,\n\t\t179\n\t],\n\t\"./prism-inform7.min.js\": [\n\t\t918,\n\t\t179\n\t],\n\t\"./prism-ini\": [\n\t\t919,\n\t\t180\n\t],\n\t\"./prism-ini.js\": [\n\t\t919,\n\t\t180\n\t],\n\t\"./prism-ini.min\": [\n\t\t920,\n\t\t181\n\t],\n\t\"./prism-ini.min.js\": [\n\t\t920,\n\t\t181\n\t],\n\t\"./prism-io\": [\n\t\t921,\n\t\t182\n\t],\n\t\"./prism-io.js\": [\n\t\t921,\n\t\t182\n\t],\n\t\"./prism-io.min\": [\n\t\t922,\n\t\t183\n\t],\n\t\"./prism-io.min.js\": [\n\t\t922,\n\t\t183\n\t],\n\t\"./prism-j\": [\n\t\t923,\n\t\t184\n\t],\n\t\"./prism-j.js\": [\n\t\t923,\n\t\t184\n\t],\n\t\"./prism-j.min\": [\n\t\t924,\n\t\t185\n\t],\n\t\"./prism-j.min.js\": [\n\t\t924,\n\t\t185\n\t],\n\t\"./prism-java\": [\n\t\t925,\n\t\t186\n\t],\n\t\"./prism-java.js\": [\n\t\t925,\n\t\t186\n\t],\n\t\"./prism-java.min\": [\n\t\t926,\n\t\t187\n\t],\n\t\"./prism-java.min.js\": [\n\t\t926,\n\t\t187\n\t],\n\t\"./prism-javadoc\": [\n\t\t927,\n\t\t188\n\t],\n\t\"./prism-javadoc.js\": [\n\t\t927,\n\t\t188\n\t],\n\t\"./prism-javadoc.min\": [\n\t\t928,\n\t\t189\n\t],\n\t\"./prism-javadoc.min.js\": [\n\t\t928,\n\t\t189\n\t],\n\t\"./prism-javadoclike\": [\n\t\t929,\n\t\t190\n\t],\n\t\"./prism-javadoclike.js\": [\n\t\t929,\n\t\t190\n\t],\n\t\"./prism-javadoclike.min\": [\n\t\t930,\n\t\t191\n\t],\n\t\"./prism-javadoclike.min.js\": [\n\t\t930,\n\t\t191\n\t],\n\t\"./prism-javascript\": [\n\t\t931,\n\t\t192\n\t],\n\t\"./prism-javascript.js\": [\n\t\t931,\n\t\t192\n\t],\n\t\"./prism-javascript.min\": [\n\t\t932,\n\t\t193\n\t],\n\t\"./prism-javascript.min.js\": [\n\t\t932,\n\t\t193\n\t],\n\t\"./prism-javastacktrace\": [\n\t\t933,\n\t\t194\n\t],\n\t\"./prism-javastacktrace.js\": [\n\t\t933,\n\t\t194\n\t],\n\t\"./prism-javastacktrace.min\": [\n\t\t934,\n\t\t195\n\t],\n\t\"./prism-javastacktrace.min.js\": [\n\t\t934,\n\t\t195\n\t],\n\t\"./prism-jolie\": [\n\t\t935,\n\t\t196\n\t],\n\t\"./prism-jolie.js\": [\n\t\t935,\n\t\t196\n\t],\n\t\"./prism-jolie.min\": [\n\t\t936,\n\t\t197\n\t],\n\t\"./prism-jolie.min.js\": [\n\t\t936,\n\t\t197\n\t],\n\t\"./prism-jq\": [\n\t\t937,\n\t\t198\n\t],\n\t\"./prism-jq.js\": [\n\t\t937,\n\t\t198\n\t],\n\t\"./prism-jq.min\": [\n\t\t938,\n\t\t199\n\t],\n\t\"./prism-jq.min.js\": [\n\t\t938,\n\t\t199\n\t],\n\t\"./prism-js-extras\": [\n\t\t939,\n\t\t200\n\t],\n\t\"./prism-js-extras.js\": [\n\t\t939,\n\t\t200\n\t],\n\t\"./prism-js-extras.min\": [\n\t\t940,\n\t\t201\n\t],\n\t\"./prism-js-extras.min.js\": [\n\t\t940,\n\t\t201\n\t],\n\t\"./prism-js-templates\": [\n\t\t941,\n\t\t202\n\t],\n\t\"./prism-js-templates.js\": [\n\t\t941,\n\t\t202\n\t],\n\t\"./prism-js-templates.min\": [\n\t\t942,\n\t\t203\n\t],\n\t\"./prism-js-templates.min.js\": [\n\t\t942,\n\t\t203\n\t],\n\t\"./prism-jsdoc\": [\n\t\t943,\n\t\t204\n\t],\n\t\"./prism-jsdoc.js\": [\n\t\t943,\n\t\t204\n\t],\n\t\"./prism-jsdoc.min\": [\n\t\t944,\n\t\t205\n\t],\n\t\"./prism-jsdoc.min.js\": [\n\t\t944,\n\t\t205\n\t],\n\t\"./prism-json\": [\n\t\t945,\n\t\t206\n\t],\n\t\"./prism-json.js\": [\n\t\t945,\n\t\t206\n\t],\n\t\"./prism-json.min\": [\n\t\t946,\n\t\t207\n\t],\n\t\"./prism-json.min.js\": [\n\t\t946,\n\t\t207\n\t],\n\t\"./prism-json5\": [\n\t\t947,\n\t\t208\n\t],\n\t\"./prism-json5.js\": [\n\t\t947,\n\t\t208\n\t],\n\t\"./prism-json5.min\": [\n\t\t948,\n\t\t209\n\t],\n\t\"./prism-json5.min.js\": [\n\t\t948,\n\t\t209\n\t],\n\t\"./prism-jsonp\": [\n\t\t949,\n\t\t210\n\t],\n\t\"./prism-jsonp.js\": [\n\t\t949,\n\t\t210\n\t],\n\t\"./prism-jsonp.min\": [\n\t\t950,\n\t\t211\n\t],\n\t\"./prism-jsonp.min.js\": [\n\t\t950,\n\t\t211\n\t],\n\t\"./prism-jsstacktrace\": [\n\t\t951,\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.js\": [\n\t\t951,\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.min\": [\n\t\t952,\n\t\t213\n\t],\n\t\"./prism-jsstacktrace.min.js\": [\n\t\t952,\n\t\t213\n\t],\n\t\"./prism-jsx\": [\n\t\t953,\n\t\t214\n\t],\n\t\"./prism-jsx.js\": [\n\t\t953,\n\t\t214\n\t],\n\t\"./prism-jsx.min\": [\n\t\t954,\n\t\t215\n\t],\n\t\"./prism-jsx.min.js\": [\n\t\t954,\n\t\t215\n\t],\n\t\"./prism-julia\": [\n\t\t955,\n\t\t216\n\t],\n\t\"./prism-julia.js\": [\n\t\t955,\n\t\t216\n\t],\n\t\"./prism-julia.min\": [\n\t\t956,\n\t\t217\n\t],\n\t\"./prism-julia.min.js\": [\n\t\t956,\n\t\t217\n\t],\n\t\"./prism-keyman\": [\n\t\t957,\n\t\t218\n\t],\n\t\"./prism-keyman.js\": [\n\t\t957,\n\t\t218\n\t],\n\t\"./prism-keyman.min\": [\n\t\t958,\n\t\t219\n\t],\n\t\"./prism-keyman.min.js\": [\n\t\t958,\n\t\t219\n\t],\n\t\"./prism-kotlin\": [\n\t\t959,\n\t\t220\n\t],\n\t\"./prism-kotlin.js\": [\n\t\t959,\n\t\t220\n\t],\n\t\"./prism-kotlin.min\": [\n\t\t960,\n\t\t221\n\t],\n\t\"./prism-kotlin.min.js\": [\n\t\t960,\n\t\t221\n\t],\n\t\"./prism-latex\": [\n\t\t961,\n\t\t222\n\t],\n\t\"./prism-latex.js\": [\n\t\t961,\n\t\t222\n\t],\n\t\"./prism-latex.min\": [\n\t\t962,\n\t\t223\n\t],\n\t\"./prism-latex.min.js\": [\n\t\t962,\n\t\t223\n\t],\n\t\"./prism-latte\": [\n\t\t963,\n\t\t224\n\t],\n\t\"./prism-latte.js\": [\n\t\t963,\n\t\t224\n\t],\n\t\"./prism-latte.min\": [\n\t\t964,\n\t\t225\n\t],\n\t\"./prism-latte.min.js\": [\n\t\t964,\n\t\t225\n\t],\n\t\"./prism-less\": [\n\t\t965,\n\t\t226\n\t],\n\t\"./prism-less.js\": [\n\t\t965,\n\t\t226\n\t],\n\t\"./prism-less.min\": [\n\t\t966,\n\t\t227\n\t],\n\t\"./prism-less.min.js\": [\n\t\t966,\n\t\t227\n\t],\n\t\"./prism-lilypond\": [\n\t\t967,\n\t\t228\n\t],\n\t\"./prism-lilypond.js\": [\n\t\t967,\n\t\t228\n\t],\n\t\"./prism-lilypond.min\": [\n\t\t968,\n\t\t229\n\t],\n\t\"./prism-lilypond.min.js\": [\n\t\t968,\n\t\t229\n\t],\n\t\"./prism-liquid\": [\n\t\t969,\n\t\t230\n\t],\n\t\"./prism-liquid.js\": [\n\t\t969,\n\t\t230\n\t],\n\t\"./prism-liquid.min\": [\n\t\t970,\n\t\t231\n\t],\n\t\"./prism-liquid.min.js\": [\n\t\t970,\n\t\t231\n\t],\n\t\"./prism-lisp\": [\n\t\t971,\n\t\t232\n\t],\n\t\"./prism-lisp.js\": [\n\t\t971,\n\t\t232\n\t],\n\t\"./prism-lisp.min\": [\n\t\t972,\n\t\t233\n\t],\n\t\"./prism-lisp.min.js\": [\n\t\t972,\n\t\t233\n\t],\n\t\"./prism-livescript\": [\n\t\t973,\n\t\t234\n\t],\n\t\"./prism-livescript.js\": [\n\t\t973,\n\t\t234\n\t],\n\t\"./prism-livescript.min\": [\n\t\t974,\n\t\t235\n\t],\n\t\"./prism-livescript.min.js\": [\n\t\t974,\n\t\t235\n\t],\n\t\"./prism-llvm\": [\n\t\t975,\n\t\t236\n\t],\n\t\"./prism-llvm.js\": [\n\t\t975,\n\t\t236\n\t],\n\t\"./prism-llvm.min\": [\n\t\t976,\n\t\t237\n\t],\n\t\"./prism-llvm.min.js\": [\n\t\t976,\n\t\t237\n\t],\n\t\"./prism-lolcode\": [\n\t\t977,\n\t\t238\n\t],\n\t\"./prism-lolcode.js\": [\n\t\t977,\n\t\t238\n\t],\n\t\"./prism-lolcode.min\": [\n\t\t978,\n\t\t239\n\t],\n\t\"./prism-lolcode.min.js\": [\n\t\t978,\n\t\t239\n\t],\n\t\"./prism-lua\": [\n\t\t979,\n\t\t240\n\t],\n\t\"./prism-lua.js\": [\n\t\t979,\n\t\t240\n\t],\n\t\"./prism-lua.min\": [\n\t\t980,\n\t\t241\n\t],\n\t\"./prism-lua.min.js\": [\n\t\t980,\n\t\t241\n\t],\n\t\"./prism-makefile\": [\n\t\t981,\n\t\t242\n\t],\n\t\"./prism-makefile.js\": [\n\t\t981,\n\t\t242\n\t],\n\t\"./prism-makefile.min\": [\n\t\t982,\n\t\t243\n\t],\n\t\"./prism-makefile.min.js\": [\n\t\t982,\n\t\t243\n\t],\n\t\"./prism-markdown\": [\n\t\t432\n\t],\n\t\"./prism-markdown.js\": [\n\t\t432\n\t],\n\t\"./prism-markdown.min\": [\n\t\t983,\n\t\t244\n\t],\n\t\"./prism-markdown.min.js\": [\n\t\t983,\n\t\t244\n\t],\n\t\"./prism-markup\": [\n\t\t426\n\t],\n\t\"./prism-markup-templating\": [\n\t\t984,\n\t\t245\n\t],\n\t\"./prism-markup-templating.js\": [\n\t\t984,\n\t\t245\n\t],\n\t\"./prism-markup-templating.min\": [\n\t\t985,\n\t\t246\n\t],\n\t\"./prism-markup-templating.min.js\": [\n\t\t985,\n\t\t246\n\t],\n\t\"./prism-markup.js\": [\n\t\t426\n\t],\n\t\"./prism-markup.min\": [\n\t\t986,\n\t\t247\n\t],\n\t\"./prism-markup.min.js\": [\n\t\t986,\n\t\t247\n\t],\n\t\"./prism-matlab\": [\n\t\t987,\n\t\t248\n\t],\n\t\"./prism-matlab.js\": [\n\t\t987,\n\t\t248\n\t],\n\t\"./prism-matlab.min\": [\n\t\t988,\n\t\t249\n\t],\n\t\"./prism-matlab.min.js\": [\n\t\t988,\n\t\t249\n\t],\n\t\"./prism-mel\": [\n\t\t989,\n\t\t250\n\t],\n\t\"./prism-mel.js\": [\n\t\t989,\n\t\t250\n\t],\n\t\"./prism-mel.min\": [\n\t\t990,\n\t\t251\n\t],\n\t\"./prism-mel.min.js\": [\n\t\t990,\n\t\t251\n\t],\n\t\"./prism-mizar\": [\n\t\t991,\n\t\t252\n\t],\n\t\"./prism-mizar.js\": [\n\t\t991,\n\t\t252\n\t],\n\t\"./prism-mizar.min\": [\n\t\t992,\n\t\t253\n\t],\n\t\"./prism-mizar.min.js\": [\n\t\t992,\n\t\t253\n\t],\n\t\"./prism-monkey\": [\n\t\t993,\n\t\t254\n\t],\n\t\"./prism-monkey.js\": [\n\t\t993,\n\t\t254\n\t],\n\t\"./prism-monkey.min\": [\n\t\t994,\n\t\t255\n\t],\n\t\"./prism-monkey.min.js\": [\n\t\t994,\n\t\t255\n\t],\n\t\"./prism-moonscript\": [\n\t\t995,\n\t\t256\n\t],\n\t\"./prism-moonscript.js\": [\n\t\t995,\n\t\t256\n\t],\n\t\"./prism-moonscript.min\": [\n\t\t996,\n\t\t257\n\t],\n\t\"./prism-moonscript.min.js\": [\n\t\t996,\n\t\t257\n\t],\n\t\"./prism-n1ql\": [\n\t\t997,\n\t\t258\n\t],\n\t\"./prism-n1ql.js\": [\n\t\t997,\n\t\t258\n\t],\n\t\"./prism-n1ql.min\": [\n\t\t998,\n\t\t259\n\t],\n\t\"./prism-n1ql.min.js\": [\n\t\t998,\n\t\t259\n\t],\n\t\"./prism-n4js\": [\n\t\t999,\n\t\t260\n\t],\n\t\"./prism-n4js.js\": [\n\t\t999,\n\t\t260\n\t],\n\t\"./prism-n4js.min\": [\n\t\t1000,\n\t\t261\n\t],\n\t\"./prism-n4js.min.js\": [\n\t\t1000,\n\t\t261\n\t],\n\t\"./prism-nand2tetris-hdl\": [\n\t\t1001,\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.js\": [\n\t\t1001,\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.min\": [\n\t\t1002,\n\t\t263\n\t],\n\t\"./prism-nand2tetris-hdl.min.js\": [\n\t\t1002,\n\t\t263\n\t],\n\t\"./prism-nasm\": [\n\t\t1003,\n\t\t264\n\t],\n\t\"./prism-nasm.js\": [\n\t\t1003,\n\t\t264\n\t],\n\t\"./prism-nasm.min\": [\n\t\t1004,\n\t\t265\n\t],\n\t\"./prism-nasm.min.js\": [\n\t\t1004,\n\t\t265\n\t],\n\t\"./prism-neon\": [\n\t\t1005,\n\t\t266\n\t],\n\t\"./prism-neon.js\": [\n\t\t1005,\n\t\t266\n\t],\n\t\"./prism-neon.min\": [\n\t\t1006,\n\t\t267\n\t],\n\t\"./prism-neon.min.js\": [\n\t\t1006,\n\t\t267\n\t],\n\t\"./prism-nginx\": [\n\t\t1007,\n\t\t268\n\t],\n\t\"./prism-nginx.js\": [\n\t\t1007,\n\t\t268\n\t],\n\t\"./prism-nginx.min\": [\n\t\t1008,\n\t\t269\n\t],\n\t\"./prism-nginx.min.js\": [\n\t\t1008,\n\t\t269\n\t],\n\t\"./prism-nim\": [\n\t\t1009,\n\t\t270\n\t],\n\t\"./prism-nim.js\": [\n\t\t1009,\n\t\t270\n\t],\n\t\"./prism-nim.min\": [\n\t\t1010,\n\t\t271\n\t],\n\t\"./prism-nim.min.js\": [\n\t\t1010,\n\t\t271\n\t],\n\t\"./prism-nix\": [\n\t\t1011,\n\t\t272\n\t],\n\t\"./prism-nix.js\": [\n\t\t1011,\n\t\t272\n\t],\n\t\"./prism-nix.min\": [\n\t\t1012,\n\t\t273\n\t],\n\t\"./prism-nix.min.js\": [\n\t\t1012,\n\t\t273\n\t],\n\t\"./prism-nsis\": [\n\t\t1013,\n\t\t274\n\t],\n\t\"./prism-nsis.js\": [\n\t\t1013,\n\t\t274\n\t],\n\t\"./prism-nsis.min\": [\n\t\t1014,\n\t\t275\n\t],\n\t\"./prism-nsis.min.js\": [\n\t\t1014,\n\t\t275\n\t],\n\t\"./prism-objectivec\": [\n\t\t1015,\n\t\t276\n\t],\n\t\"./prism-objectivec.js\": [\n\t\t1015,\n\t\t276\n\t],\n\t\"./prism-objectivec.min\": [\n\t\t1016,\n\t\t277\n\t],\n\t\"./prism-objectivec.min.js\": [\n\t\t1016,\n\t\t277\n\t],\n\t\"./prism-ocaml\": [\n\t\t1017,\n\t\t278\n\t],\n\t\"./prism-ocaml.js\": [\n\t\t1017,\n\t\t278\n\t],\n\t\"./prism-ocaml.min\": [\n\t\t1018,\n\t\t279\n\t],\n\t\"./prism-ocaml.min.js\": [\n\t\t1018,\n\t\t279\n\t],\n\t\"./prism-opencl\": [\n\t\t1019,\n\t\t280\n\t],\n\t\"./prism-opencl.js\": [\n\t\t1019,\n\t\t280\n\t],\n\t\"./prism-opencl.min\": [\n\t\t1020,\n\t\t281\n\t],\n\t\"./prism-opencl.min.js\": [\n\t\t1020,\n\t\t281\n\t],\n\t\"./prism-oz\": [\n\t\t1021,\n\t\t282\n\t],\n\t\"./prism-oz.js\": [\n\t\t1021,\n\t\t282\n\t],\n\t\"./prism-oz.min\": [\n\t\t1022,\n\t\t283\n\t],\n\t\"./prism-oz.min.js\": [\n\t\t1022,\n\t\t283\n\t],\n\t\"./prism-parigp\": [\n\t\t1023,\n\t\t284\n\t],\n\t\"./prism-parigp.js\": [\n\t\t1023,\n\t\t284\n\t],\n\t\"./prism-parigp.min\": [\n\t\t1024,\n\t\t285\n\t],\n\t\"./prism-parigp.min.js\": [\n\t\t1024,\n\t\t285\n\t],\n\t\"./prism-parser\": [\n\t\t1025,\n\t\t286\n\t],\n\t\"./prism-parser.js\": [\n\t\t1025,\n\t\t286\n\t],\n\t\"./prism-parser.min\": [\n\t\t1026,\n\t\t287\n\t],\n\t\"./prism-parser.min.js\": [\n\t\t1026,\n\t\t287\n\t],\n\t\"./prism-pascal\": [\n\t\t1027,\n\t\t288\n\t],\n\t\"./prism-pascal.js\": [\n\t\t1027,\n\t\t288\n\t],\n\t\"./prism-pascal.min\": [\n\t\t1028,\n\t\t289\n\t],\n\t\"./prism-pascal.min.js\": [\n\t\t1028,\n\t\t289\n\t],\n\t\"./prism-pascaligo\": [\n\t\t1029,\n\t\t290\n\t],\n\t\"./prism-pascaligo.js\": [\n\t\t1029,\n\t\t290\n\t],\n\t\"./prism-pascaligo.min\": [\n\t\t1030,\n\t\t291\n\t],\n\t\"./prism-pascaligo.min.js\": [\n\t\t1030,\n\t\t291\n\t],\n\t\"./prism-pcaxis\": [\n\t\t1031,\n\t\t292\n\t],\n\t\"./prism-pcaxis.js\": [\n\t\t1031,\n\t\t292\n\t],\n\t\"./prism-pcaxis.min\": [\n\t\t1032,\n\t\t293\n\t],\n\t\"./prism-pcaxis.min.js\": [\n\t\t1032,\n\t\t293\n\t],\n\t\"./prism-peoplecode\": [\n\t\t1033,\n\t\t294\n\t],\n\t\"./prism-peoplecode.js\": [\n\t\t1033,\n\t\t294\n\t],\n\t\"./prism-peoplecode.min\": [\n\t\t1034,\n\t\t295\n\t],\n\t\"./prism-peoplecode.min.js\": [\n\t\t1034,\n\t\t295\n\t],\n\t\"./prism-perl\": [\n\t\t1035,\n\t\t296\n\t],\n\t\"./prism-perl.js\": [\n\t\t1035,\n\t\t296\n\t],\n\t\"./prism-perl.min\": [\n\t\t1036,\n\t\t297\n\t],\n\t\"./prism-perl.min.js\": [\n\t\t1036,\n\t\t297\n\t],\n\t\"./prism-php\": [\n\t\t1039,\n\t\t300\n\t],\n\t\"./prism-php-extras\": [\n\t\t1037,\n\t\t298\n\t],\n\t\"./prism-php-extras.js\": [\n\t\t1037,\n\t\t298\n\t],\n\t\"./prism-php-extras.min\": [\n\t\t1038,\n\t\t299\n\t],\n\t\"./prism-php-extras.min.js\": [\n\t\t1038,\n\t\t299\n\t],\n\t\"./prism-php.js\": [\n\t\t1039,\n\t\t300\n\t],\n\t\"./prism-php.min\": [\n\t\t1040,\n\t\t301\n\t],\n\t\"./prism-php.min.js\": [\n\t\t1040,\n\t\t301\n\t],\n\t\"./prism-phpdoc\": [\n\t\t1041,\n\t\t302\n\t],\n\t\"./prism-phpdoc.js\": [\n\t\t1041,\n\t\t302\n\t],\n\t\"./prism-phpdoc.min\": [\n\t\t1042,\n\t\t303\n\t],\n\t\"./prism-phpdoc.min.js\": [\n\t\t1042,\n\t\t303\n\t],\n\t\"./prism-plsql\": [\n\t\t1043,\n\t\t304\n\t],\n\t\"./prism-plsql.js\": [\n\t\t1043,\n\t\t304\n\t],\n\t\"./prism-plsql.min\": [\n\t\t1044,\n\t\t305\n\t],\n\t\"./prism-plsql.min.js\": [\n\t\t1044,\n\t\t305\n\t],\n\t\"./prism-powerquery\": [\n\t\t1045,\n\t\t306\n\t],\n\t\"./prism-powerquery.js\": [\n\t\t1045,\n\t\t306\n\t],\n\t\"./prism-powerquery.min\": [\n\t\t1046,\n\t\t307\n\t],\n\t\"./prism-powerquery.min.js\": [\n\t\t1046,\n\t\t307\n\t],\n\t\"./prism-powershell\": [\n\t\t1047,\n\t\t308\n\t],\n\t\"./prism-powershell.js\": [\n\t\t1047,\n\t\t308\n\t],\n\t\"./prism-powershell.min\": [\n\t\t1048,\n\t\t309\n\t],\n\t\"./prism-powershell.min.js\": [\n\t\t1048,\n\t\t309\n\t],\n\t\"./prism-processing\": [\n\t\t1049,\n\t\t310\n\t],\n\t\"./prism-processing.js\": [\n\t\t1049,\n\t\t310\n\t],\n\t\"./prism-processing.min\": [\n\t\t1050,\n\t\t311\n\t],\n\t\"./prism-processing.min.js\": [\n\t\t1050,\n\t\t311\n\t],\n\t\"./prism-prolog\": [\n\t\t1051,\n\t\t312\n\t],\n\t\"./prism-prolog.js\": [\n\t\t1051,\n\t\t312\n\t],\n\t\"./prism-prolog.min\": [\n\t\t1052,\n\t\t313\n\t],\n\t\"./prism-prolog.min.js\": [\n\t\t1052,\n\t\t313\n\t],\n\t\"./prism-properties\": [\n\t\t1053,\n\t\t314\n\t],\n\t\"./prism-properties.js\": [\n\t\t1053,\n\t\t314\n\t],\n\t\"./prism-properties.min\": [\n\t\t1054,\n\t\t315\n\t],\n\t\"./prism-properties.min.js\": [\n\t\t1054,\n\t\t315\n\t],\n\t\"./prism-protobuf\": [\n\t\t1055,\n\t\t316\n\t],\n\t\"./prism-protobuf.js\": [\n\t\t1055,\n\t\t316\n\t],\n\t\"./prism-protobuf.min\": [\n\t\t1056,\n\t\t317\n\t],\n\t\"./prism-protobuf.min.js\": [\n\t\t1056,\n\t\t317\n\t],\n\t\"./prism-pug\": [\n\t\t1057,\n\t\t318\n\t],\n\t\"./prism-pug.js\": [\n\t\t1057,\n\t\t318\n\t],\n\t\"./prism-pug.min\": [\n\t\t1058,\n\t\t319\n\t],\n\t\"./prism-pug.min.js\": [\n\t\t1058,\n\t\t319\n\t],\n\t\"./prism-puppet\": [\n\t\t1059,\n\t\t320\n\t],\n\t\"./prism-puppet.js\": [\n\t\t1059,\n\t\t320\n\t],\n\t\"./prism-puppet.min\": [\n\t\t1060,\n\t\t321\n\t],\n\t\"./prism-puppet.min.js\": [\n\t\t1060,\n\t\t321\n\t],\n\t\"./prism-pure\": [\n\t\t1061,\n\t\t322\n\t],\n\t\"./prism-pure.js\": [\n\t\t1061,\n\t\t322\n\t],\n\t\"./prism-pure.min\": [\n\t\t1062,\n\t\t323\n\t],\n\t\"./prism-pure.min.js\": [\n\t\t1062,\n\t\t323\n\t],\n\t\"./prism-purebasic\": [\n\t\t1063,\n\t\t324\n\t],\n\t\"./prism-purebasic.js\": [\n\t\t1063,\n\t\t324\n\t],\n\t\"./prism-purebasic.min\": [\n\t\t1064,\n\t\t325\n\t],\n\t\"./prism-purebasic.min.js\": [\n\t\t1064,\n\t\t325\n\t],\n\t\"./prism-python\": [\n\t\t1065,\n\t\t326\n\t],\n\t\"./prism-python.js\": [\n\t\t1065,\n\t\t326\n\t],\n\t\"./prism-python.min\": [\n\t\t1066,\n\t\t327\n\t],\n\t\"./prism-python.min.js\": [\n\t\t1066,\n\t\t327\n\t],\n\t\"./prism-q\": [\n\t\t1067,\n\t\t328\n\t],\n\t\"./prism-q.js\": [\n\t\t1067,\n\t\t328\n\t],\n\t\"./prism-q.min\": [\n\t\t1068,\n\t\t329\n\t],\n\t\"./prism-q.min.js\": [\n\t\t1068,\n\t\t329\n\t],\n\t\"./prism-qml\": [\n\t\t1069,\n\t\t330\n\t],\n\t\"./prism-qml.js\": [\n\t\t1069,\n\t\t330\n\t],\n\t\"./prism-qml.min\": [\n\t\t1070,\n\t\t331\n\t],\n\t\"./prism-qml.min.js\": [\n\t\t1070,\n\t\t331\n\t],\n\t\"./prism-qore\": [\n\t\t1071,\n\t\t332\n\t],\n\t\"./prism-qore.js\": [\n\t\t1071,\n\t\t332\n\t],\n\t\"./prism-qore.min\": [\n\t\t1072,\n\t\t333\n\t],\n\t\"./prism-qore.min.js\": [\n\t\t1072,\n\t\t333\n\t],\n\t\"./prism-r\": [\n\t\t1073,\n\t\t334\n\t],\n\t\"./prism-r.js\": [\n\t\t1073,\n\t\t334\n\t],\n\t\"./prism-r.min\": [\n\t\t1074,\n\t\t335\n\t],\n\t\"./prism-r.min.js\": [\n\t\t1074,\n\t\t335\n\t],\n\t\"./prism-racket\": [\n\t\t1075,\n\t\t336\n\t],\n\t\"./prism-racket.js\": [\n\t\t1075,\n\t\t336\n\t],\n\t\"./prism-racket.min\": [\n\t\t1076,\n\t\t337\n\t],\n\t\"./prism-racket.min.js\": [\n\t\t1076,\n\t\t337\n\t],\n\t\"./prism-reason\": [\n\t\t1077,\n\t\t338\n\t],\n\t\"./prism-reason.js\": [\n\t\t1077,\n\t\t338\n\t],\n\t\"./prism-reason.min\": [\n\t\t1078,\n\t\t339\n\t],\n\t\"./prism-reason.min.js\": [\n\t\t1078,\n\t\t339\n\t],\n\t\"./prism-regex\": [\n\t\t1079,\n\t\t340\n\t],\n\t\"./prism-regex.js\": [\n\t\t1079,\n\t\t340\n\t],\n\t\"./prism-regex.min\": [\n\t\t1080,\n\t\t341\n\t],\n\t\"./prism-regex.min.js\": [\n\t\t1080,\n\t\t341\n\t],\n\t\"./prism-renpy\": [\n\t\t1081,\n\t\t342\n\t],\n\t\"./prism-renpy.js\": [\n\t\t1081,\n\t\t342\n\t],\n\t\"./prism-renpy.min\": [\n\t\t1082,\n\t\t343\n\t],\n\t\"./prism-renpy.min.js\": [\n\t\t1082,\n\t\t343\n\t],\n\t\"./prism-rest\": [\n\t\t1083,\n\t\t344\n\t],\n\t\"./prism-rest.js\": [\n\t\t1083,\n\t\t344\n\t],\n\t\"./prism-rest.min\": [\n\t\t1084,\n\t\t345\n\t],\n\t\"./prism-rest.min.js\": [\n\t\t1084,\n\t\t345\n\t],\n\t\"./prism-rip\": [\n\t\t1085,\n\t\t346\n\t],\n\t\"./prism-rip.js\": [\n\t\t1085,\n\t\t346\n\t],\n\t\"./prism-rip.min\": [\n\t\t1086,\n\t\t347\n\t],\n\t\"./prism-rip.min.js\": [\n\t\t1086,\n\t\t347\n\t],\n\t\"./prism-roboconf\": [\n\t\t1087,\n\t\t348\n\t],\n\t\"./prism-roboconf.js\": [\n\t\t1087,\n\t\t348\n\t],\n\t\"./prism-roboconf.min\": [\n\t\t1088,\n\t\t349\n\t],\n\t\"./prism-roboconf.min.js\": [\n\t\t1088,\n\t\t349\n\t],\n\t\"./prism-robotframework\": [\n\t\t1089,\n\t\t350\n\t],\n\t\"./prism-robotframework.js\": [\n\t\t1089,\n\t\t350\n\t],\n\t\"./prism-robotframework.min\": [\n\t\t1090,\n\t\t351\n\t],\n\t\"./prism-robotframework.min.js\": [\n\t\t1090,\n\t\t351\n\t],\n\t\"./prism-ruby\": [\n\t\t1091,\n\t\t352\n\t],\n\t\"./prism-ruby.js\": [\n\t\t1091,\n\t\t352\n\t],\n\t\"./prism-ruby.min\": [\n\t\t1092,\n\t\t353\n\t],\n\t\"./prism-ruby.min.js\": [\n\t\t1092,\n\t\t353\n\t],\n\t\"./prism-rust\": [\n\t\t1093,\n\t\t354\n\t],\n\t\"./prism-rust.js\": [\n\t\t1093,\n\t\t354\n\t],\n\t\"./prism-rust.min\": [\n\t\t1094,\n\t\t355\n\t],\n\t\"./prism-rust.min.js\": [\n\t\t1094,\n\t\t355\n\t],\n\t\"./prism-sas\": [\n\t\t1095,\n\t\t356\n\t],\n\t\"./prism-sas.js\": [\n\t\t1095,\n\t\t356\n\t],\n\t\"./prism-sas.min\": [\n\t\t1096,\n\t\t357\n\t],\n\t\"./prism-sas.min.js\": [\n\t\t1096,\n\t\t357\n\t],\n\t\"./prism-sass\": [\n\t\t1097,\n\t\t358\n\t],\n\t\"./prism-sass.js\": [\n\t\t1097,\n\t\t358\n\t],\n\t\"./prism-sass.min\": [\n\t\t1098,\n\t\t359\n\t],\n\t\"./prism-sass.min.js\": [\n\t\t1098,\n\t\t359\n\t],\n\t\"./prism-scala\": [\n\t\t1099,\n\t\t360\n\t],\n\t\"./prism-scala.js\": [\n\t\t1099,\n\t\t360\n\t],\n\t\"./prism-scala.min\": [\n\t\t1100,\n\t\t361\n\t],\n\t\"./prism-scala.min.js\": [\n\t\t1100,\n\t\t361\n\t],\n\t\"./prism-scheme\": [\n\t\t1101,\n\t\t362\n\t],\n\t\"./prism-scheme.js\": [\n\t\t1101,\n\t\t362\n\t],\n\t\"./prism-scheme.min\": [\n\t\t1102,\n\t\t363\n\t],\n\t\"./prism-scheme.min.js\": [\n\t\t1102,\n\t\t363\n\t],\n\t\"./prism-scss\": [\n\t\t1103,\n\t\t364\n\t],\n\t\"./prism-scss.js\": [\n\t\t1103,\n\t\t364\n\t],\n\t\"./prism-scss.min\": [\n\t\t1104,\n\t\t365\n\t],\n\t\"./prism-scss.min.js\": [\n\t\t1104,\n\t\t365\n\t],\n\t\"./prism-shell-session\": [\n\t\t1105,\n\t\t366\n\t],\n\t\"./prism-shell-session.js\": [\n\t\t1105,\n\t\t366\n\t],\n\t\"./prism-shell-session.min\": [\n\t\t1106,\n\t\t367\n\t],\n\t\"./prism-shell-session.min.js\": [\n\t\t1106,\n\t\t367\n\t],\n\t\"./prism-smali\": [\n\t\t1107,\n\t\t368\n\t],\n\t\"./prism-smali.js\": [\n\t\t1107,\n\t\t368\n\t],\n\t\"./prism-smali.min\": [\n\t\t1108,\n\t\t369\n\t],\n\t\"./prism-smali.min.js\": [\n\t\t1108,\n\t\t369\n\t],\n\t\"./prism-smalltalk\": [\n\t\t1109,\n\t\t370\n\t],\n\t\"./prism-smalltalk.js\": [\n\t\t1109,\n\t\t370\n\t],\n\t\"./prism-smalltalk.min\": [\n\t\t1110,\n\t\t371\n\t],\n\t\"./prism-smalltalk.min.js\": [\n\t\t1110,\n\t\t371\n\t],\n\t\"./prism-smarty\": [\n\t\t1111,\n\t\t372\n\t],\n\t\"./prism-smarty.js\": [\n\t\t1111,\n\t\t372\n\t],\n\t\"./prism-smarty.min\": [\n\t\t1112,\n\t\t373\n\t],\n\t\"./prism-smarty.min.js\": [\n\t\t1112,\n\t\t373\n\t],\n\t\"./prism-solidity\": [\n\t\t1113,\n\t\t374\n\t],\n\t\"./prism-solidity.js\": [\n\t\t1113,\n\t\t374\n\t],\n\t\"./prism-solidity.min\": [\n\t\t1114,\n\t\t375\n\t],\n\t\"./prism-solidity.min.js\": [\n\t\t1114,\n\t\t375\n\t],\n\t\"./prism-solution-file\": [\n\t\t1115,\n\t\t376\n\t],\n\t\"./prism-solution-file.js\": [\n\t\t1115,\n\t\t376\n\t],\n\t\"./prism-solution-file.min\": [\n\t\t1116,\n\t\t377\n\t],\n\t\"./prism-solution-file.min.js\": [\n\t\t1116,\n\t\t377\n\t],\n\t\"./prism-soy\": [\n\t\t1117,\n\t\t378\n\t],\n\t\"./prism-soy.js\": [\n\t\t1117,\n\t\t378\n\t],\n\t\"./prism-soy.min\": [\n\t\t1118,\n\t\t379\n\t],\n\t\"./prism-soy.min.js\": [\n\t\t1118,\n\t\t379\n\t],\n\t\"./prism-sparql\": [\n\t\t1119,\n\t\t380\n\t],\n\t\"./prism-sparql.js\": [\n\t\t1119,\n\t\t380\n\t],\n\t\"./prism-sparql.min\": [\n\t\t1120,\n\t\t381\n\t],\n\t\"./prism-sparql.min.js\": [\n\t\t1120,\n\t\t381\n\t],\n\t\"./prism-splunk-spl\": [\n\t\t1121,\n\t\t382\n\t],\n\t\"./prism-splunk-spl.js\": [\n\t\t1121,\n\t\t382\n\t],\n\t\"./prism-splunk-spl.min\": [\n\t\t1122,\n\t\t383\n\t],\n\t\"./prism-splunk-spl.min.js\": [\n\t\t1122,\n\t\t383\n\t],\n\t\"./prism-sqf\": [\n\t\t1123,\n\t\t384\n\t],\n\t\"./prism-sqf.js\": [\n\t\t1123,\n\t\t384\n\t],\n\t\"./prism-sqf.min\": [\n\t\t1124,\n\t\t385\n\t],\n\t\"./prism-sqf.min.js\": [\n\t\t1124,\n\t\t385\n\t],\n\t\"./prism-sql\": [\n\t\t1125,\n\t\t386\n\t],\n\t\"./prism-sql.js\": [\n\t\t1125,\n\t\t386\n\t],\n\t\"./prism-sql.min\": [\n\t\t1126,\n\t\t387\n\t],\n\t\"./prism-sql.min.js\": [\n\t\t1126,\n\t\t387\n\t],\n\t\"./prism-stylus\": [\n\t\t1127,\n\t\t388\n\t],\n\t\"./prism-stylus.js\": [\n\t\t1127,\n\t\t388\n\t],\n\t\"./prism-stylus.min\": [\n\t\t1128,\n\t\t389\n\t],\n\t\"./prism-stylus.min.js\": [\n\t\t1128,\n\t\t389\n\t],\n\t\"./prism-swift\": [\n\t\t1129,\n\t\t390\n\t],\n\t\"./prism-swift.js\": [\n\t\t1129,\n\t\t390\n\t],\n\t\"./prism-swift.min\": [\n\t\t1130,\n\t\t391\n\t],\n\t\"./prism-swift.min.js\": [\n\t\t1130,\n\t\t391\n\t],\n\t\"./prism-t4-cs\": [\n\t\t1131,\n\t\t392\n\t],\n\t\"./prism-t4-cs.js\": [\n\t\t1131,\n\t\t392\n\t],\n\t\"./prism-t4-cs.min\": [\n\t\t1132,\n\t\t393\n\t],\n\t\"./prism-t4-cs.min.js\": [\n\t\t1132,\n\t\t393\n\t],\n\t\"./prism-t4-templating\": [\n\t\t1133,\n\t\t394\n\t],\n\t\"./prism-t4-templating.js\": [\n\t\t1133,\n\t\t394\n\t],\n\t\"./prism-t4-templating.min\": [\n\t\t1134,\n\t\t395\n\t],\n\t\"./prism-t4-templating.min.js\": [\n\t\t1134,\n\t\t395\n\t],\n\t\"./prism-t4-vb\": [\n\t\t1135,\n\t\t396\n\t],\n\t\"./prism-t4-vb.js\": [\n\t\t1135,\n\t\t396\n\t],\n\t\"./prism-t4-vb.min\": [\n\t\t1136,\n\t\t397\n\t],\n\t\"./prism-t4-vb.min.js\": [\n\t\t1136,\n\t\t397\n\t],\n\t\"./prism-tap\": [\n\t\t1137,\n\t\t398\n\t],\n\t\"./prism-tap.js\": [\n\t\t1137,\n\t\t398\n\t],\n\t\"./prism-tap.min\": [\n\t\t1138,\n\t\t399\n\t],\n\t\"./prism-tap.min.js\": [\n\t\t1138,\n\t\t399\n\t],\n\t\"./prism-tcl\": [\n\t\t1139,\n\t\t400\n\t],\n\t\"./prism-tcl.js\": [\n\t\t1139,\n\t\t400\n\t],\n\t\"./prism-tcl.min\": [\n\t\t1140,\n\t\t401\n\t],\n\t\"./prism-tcl.min.js\": [\n\t\t1140,\n\t\t401\n\t],\n\t\"./prism-textile\": [\n\t\t1141,\n\t\t402\n\t],\n\t\"./prism-textile.js\": [\n\t\t1141,\n\t\t402\n\t],\n\t\"./prism-textile.min\": [\n\t\t1142,\n\t\t403\n\t],\n\t\"./prism-textile.min.js\": [\n\t\t1142,\n\t\t403\n\t],\n\t\"./prism-toml\": [\n\t\t1143,\n\t\t404\n\t],\n\t\"./prism-toml.js\": [\n\t\t1143,\n\t\t404\n\t],\n\t\"./prism-toml.min\": [\n\t\t1144,\n\t\t405\n\t],\n\t\"./prism-toml.min.js\": [\n\t\t1144,\n\t\t405\n\t],\n\t\"./prism-tsx\": [\n\t\t1145,\n\t\t406\n\t],\n\t\"./prism-tsx.js\": [\n\t\t1145,\n\t\t406\n\t],\n\t\"./prism-tsx.min\": [\n\t\t1146,\n\t\t407\n\t],\n\t\"./prism-tsx.min.js\": [\n\t\t1146,\n\t\t407\n\t],\n\t\"./prism-tt2\": [\n\t\t1147,\n\t\t408\n\t],\n\t\"./prism-tt2.js\": [\n\t\t1147,\n\t\t408\n\t],\n\t\"./prism-tt2.min\": [\n\t\t1148,\n\t\t409\n\t],\n\t\"./prism-tt2.min.js\": [\n\t\t1148,\n\t\t409\n\t],\n\t\"./prism-turtle\": [\n\t\t1149,\n\t\t410\n\t],\n\t\"./prism-turtle.js\": [\n\t\t1149,\n\t\t410\n\t],\n\t\"./prism-turtle.min\": [\n\t\t1150,\n\t\t411\n\t],\n\t\"./prism-turtle.min.js\": [\n\t\t1150,\n\t\t411\n\t],\n\t\"./prism-twig\": [\n\t\t1151,\n\t\t412\n\t],\n\t\"./prism-twig.js\": [\n\t\t1151,\n\t\t412\n\t],\n\t\"./prism-twig.min\": [\n\t\t1152,\n\t\t413\n\t],\n\t\"./prism-twig.min.js\": [\n\t\t1152,\n\t\t413\n\t],\n\t\"./prism-typescript\": [\n\t\t1153,\n\t\t414\n\t],\n\t\"./prism-typescript.js\": [\n\t\t1153,\n\t\t414\n\t],\n\t\"./prism-typescript.min\": [\n\t\t1154,\n\t\t415\n\t],\n\t\"./prism-typescript.min.js\": [\n\t\t1154,\n\t\t415\n\t],\n\t\"./prism-unrealscript\": [\n\t\t1155,\n\t\t416\n\t],\n\t\"./prism-unrealscript.js\": [\n\t\t1155,\n\t\t416\n\t],\n\t\"./prism-unrealscript.min\": [\n\t\t1156,\n\t\t417\n\t],\n\t\"./prism-unrealscript.min.js\": [\n\t\t1156,\n\t\t417\n\t],\n\t\"./prism-vala\": [\n\t\t1157,\n\t\t418\n\t],\n\t\"./prism-vala.js\": [\n\t\t1157,\n\t\t418\n\t],\n\t\"./prism-vala.min\": [\n\t\t1158,\n\t\t419\n\t],\n\t\"./prism-vala.min.js\": [\n\t\t1158,\n\t\t419\n\t],\n\t\"./prism-vbnet\": [\n\t\t1159,\n\t\t420\n\t],\n\t\"./prism-vbnet.js\": [\n\t\t1159,\n\t\t420\n\t],\n\t\"./prism-vbnet.min\": [\n\t\t1160,\n\t\t421\n\t],\n\t\"./prism-vbnet.min.js\": [\n\t\t1160,\n\t\t421\n\t],\n\t\"./prism-velocity\": [\n\t\t1161,\n\t\t422\n\t],\n\t\"./prism-velocity.js\": [\n\t\t1161,\n\t\t422\n\t],\n\t\"./prism-velocity.min\": [\n\t\t1162,\n\t\t423\n\t],\n\t\"./prism-velocity.min.js\": [\n\t\t1162,\n\t\t423\n\t],\n\t\"./prism-verilog\": [\n\t\t1163,\n\t\t424\n\t],\n\t\"./prism-verilog.js\": [\n\t\t1163,\n\t\t424\n\t],\n\t\"./prism-verilog.min\": [\n\t\t1164,\n\t\t425\n\t],\n\t\"./prism-verilog.min.js\": [\n\t\t1164,\n\t\t425\n\t],\n\t\"./prism-vhdl\": [\n\t\t1165,\n\t\t426\n\t],\n\t\"./prism-vhdl.js\": [\n\t\t1165,\n\t\t426\n\t],\n\t\"./prism-vhdl.min\": [\n\t\t1166,\n\t\t427\n\t],\n\t\"./prism-vhdl.min.js\": [\n\t\t1166,\n\t\t427\n\t],\n\t\"./prism-vim\": [\n\t\t1167,\n\t\t428\n\t],\n\t\"./prism-vim.js\": [\n\t\t1167,\n\t\t428\n\t],\n\t\"./prism-vim.min\": [\n\t\t1168,\n\t\t429\n\t],\n\t\"./prism-vim.min.js\": [\n\t\t1168,\n\t\t429\n\t],\n\t\"./prism-visual-basic\": [\n\t\t1169,\n\t\t430\n\t],\n\t\"./prism-visual-basic.js\": [\n\t\t1169,\n\t\t430\n\t],\n\t\"./prism-visual-basic.min\": [\n\t\t1170,\n\t\t431\n\t],\n\t\"./prism-visual-basic.min.js\": [\n\t\t1170,\n\t\t431\n\t],\n\t\"./prism-warpscript\": [\n\t\t1171,\n\t\t432\n\t],\n\t\"./prism-warpscript.js\": [\n\t\t1171,\n\t\t432\n\t],\n\t\"./prism-warpscript.min\": [\n\t\t1172,\n\t\t433\n\t],\n\t\"./prism-warpscript.min.js\": [\n\t\t1172,\n\t\t433\n\t],\n\t\"./prism-wasm\": [\n\t\t1173,\n\t\t434\n\t],\n\t\"./prism-wasm.js\": [\n\t\t1173,\n\t\t434\n\t],\n\t\"./prism-wasm.min\": [\n\t\t1174,\n\t\t435\n\t],\n\t\"./prism-wasm.min.js\": [\n\t\t1174,\n\t\t435\n\t],\n\t\"./prism-wiki\": [\n\t\t1175,\n\t\t436\n\t],\n\t\"./prism-wiki.js\": [\n\t\t1175,\n\t\t436\n\t],\n\t\"./prism-wiki.min\": [\n\t\t1176,\n\t\t437\n\t],\n\t\"./prism-wiki.min.js\": [\n\t\t1176,\n\t\t437\n\t],\n\t\"./prism-xeora\": [\n\t\t1177,\n\t\t438\n\t],\n\t\"./prism-xeora.js\": [\n\t\t1177,\n\t\t438\n\t],\n\t\"./prism-xeora.min\": [\n\t\t1178,\n\t\t439\n\t],\n\t\"./prism-xeora.min.js\": [\n\t\t1178,\n\t\t439\n\t],\n\t\"./prism-xml-doc\": [\n\t\t1179,\n\t\t440\n\t],\n\t\"./prism-xml-doc.js\": [\n\t\t1179,\n\t\t440\n\t],\n\t\"./prism-xml-doc.min\": [\n\t\t1180,\n\t\t441\n\t],\n\t\"./prism-xml-doc.min.js\": [\n\t\t1180,\n\t\t441\n\t],\n\t\"./prism-xojo\": [\n\t\t1181,\n\t\t442\n\t],\n\t\"./prism-xojo.js\": [\n\t\t1181,\n\t\t442\n\t],\n\t\"./prism-xojo.min\": [\n\t\t1182,\n\t\t443\n\t],\n\t\"./prism-xojo.min.js\": [\n\t\t1182,\n\t\t443\n\t],\n\t\"./prism-xquery\": [\n\t\t1183,\n\t\t444\n\t],\n\t\"./prism-xquery.js\": [\n\t\t1183,\n\t\t444\n\t],\n\t\"./prism-xquery.min\": [\n\t\t1184,\n\t\t445\n\t],\n\t\"./prism-xquery.min.js\": [\n\t\t1184,\n\t\t445\n\t],\n\t\"./prism-yaml\": [\n\t\t1185,\n\t\t446\n\t],\n\t\"./prism-yaml.js\": [\n\t\t1185,\n\t\t446\n\t],\n\t\"./prism-yaml.min\": [\n\t\t1186,\n\t\t447\n\t],\n\t\"./prism-yaml.min.js\": [\n\t\t1186,\n\t\t447\n\t],\n\t\"./prism-yang\": [\n\t\t1187,\n\t\t448\n\t],\n\t\"./prism-yang.js\": [\n\t\t1187,\n\t\t448\n\t],\n\t\"./prism-yang.min\": [\n\t\t1188,\n\t\t449\n\t],\n\t\"./prism-yang.min.js\": [\n\t\t1188,\n\t\t449\n\t],\n\t\"./prism-zig\": [\n\t\t1189,\n\t\t450\n\t],\n\t\"./prism-zig.js\": [\n\t\t1189,\n\t\t450\n\t],\n\t\"./prism-zig.min\": [\n\t\t1190,\n\t\t451\n\t],\n\t\"./prism-zig.min.js\": [\n\t\t1190,\n\t\t451\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 2321;\nmodule.exports = webpackAsyncContext;","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\n\nexport const ETH_NETWORKS = process.env.REACT_APP_ETH_NETWORKS.split(',');\n\nexport const NETWORK_NAMES = {\n  '1': 'mainnet',\n  '3': 'ropsten',\n  '4': 'rinkeby',\n  '42': 'kovan',\n  '100': 'xdai',\n  '42161': 'arbitrum',\n  '421611': 'arbitrumTestnet',\n  '1337': 'localhost',\n};\n\nexport const NETWORK_IDS = {\n  'mainnet': 1,\n  'ropsten': 3,\n  'rinkeby': 4,\n  'kovan': 42,\n  'xdai': 100,\n  'arbitrum': 42161,\n  'arbitrumTestnet': 421611,\n  'localhost': 1337,\n};\n\nexport const ETH_NETWORKS_IDS = ETH_NETWORKS.map((network) => {return NETWORK_IDS[network]});\nexport const DEFAULT_ETH_CHAIN_ID = NETWORK_IDS[ETH_NETWORKS[0]];\n\nexport const web3ContextNames = {\n  injected: 'INJECTED',\n  metamask: 'METAMASK',\n};\n\nexport const isChainIdSupported = (chainId: number): boolean => {\n  return ETH_NETWORKS_IDS ? ETH_NETWORKS_IDS.indexOf(chainId) >= 0 : false;\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: ETH_NETWORKS_IDS,\n});\n\nexport const SUPPORTED_WALLETS = {\n    INJECTED: {\n        connector: injected,\n        name: 'Injected',\n        iconName: 'arrow-right.svg',\n        description: 'Injected web3 provider.',\n        href: null,\n        color: '#010101',\n        primary: true,\n    },\n    METAMASK: {\n        connector: injected,\n        name: 'MetaMask',\n        iconName: require('assets/images/metamask.png'),\n        description: 'Easy-to-use browser extension.',\n        href: null,\n        color: '#E8831D',\n    }\n};\n\nexport default {\n  injected\n};\n","export enum Web3Errors {\n  UNKNOWN_ERROR,\n  SIGNATURE_REJECTED,\n}\nexport enum TXEvents {\n  TX_HASH = 'txhash',\n  RECEIPT = 'receipt',\n  CONFIRMATION = 'confirmation',\n  TX_ERROR = 'txerror',\n  FINALLY = 'finally',\n  INVARIANT = 'invariant',\n}\n\nexport enum VoteDecision {\n  None,\n  YES,\n  NO\n}\n\nexport enum WalletSchemeProposalState { None, Submitted, Rejected, ExecutionSucceded, ExecutionTimeout }\n\nexport enum VotingMachineProposalState { \n  None, ExpiredInQueue, Executed, Queued, PreBoosted, Boosted, QuietEndingPeriod\n}\n","import * as ethers from 'ethers';\n\nclass UncheckedJsonRpcSigner extends ethers.Signer {\n    signer: any;\n\n    constructor(signer) {\n        super();\n        ethers.utils.defineReadOnly(this, 'signer', signer);\n        ethers.utils.defineReadOnly(this, 'provider', signer.provider);\n    }\n\n    getAddress() {\n        return this.signer.getAddress();\n    }\n\n    sendTransaction(transaction) {\n        return this.signer\n            .sendUncheckedTransaction(transaction)\n            .then((hash) => {\n                return {\n                    hash: hash,\n                    nonce: null,\n                    gasLimit: null,\n                    gasPrice: null,\n                    data: null,\n                    value: null,\n                    chainId: null,\n                    confirmations: 0,\n                    from: null,\n                    wait: (confirmations) => {\n                        return this.signer.provider.waitForTransaction(\n                            hash,\n                            confirmations\n                        );\n                    },\n                };\n            });\n    }\n\n    signMessage(message) {\n        return this.signer.signMessage(message);\n    }\n}\n\nexport default UncheckedJsonRpcSigner;\n","import { Web3Errors } from '../../enums';\n\nconst errorCodeMapping = {\n    '4001': Web3Errors.SIGNATURE_REJECTED,\n};\n\nexport const isKnownErrorCode = (code: number): boolean => {\n    const codeStr = code.toString();\n    return !!errorCodeMapping[codeStr];\n};\n\nexport const getErrorByCode = (code: number): Web3Errors => {\n    const codeStr = code.toString();\n    if (isKnownErrorCode(code)) {\n        return errorCodeMapping[codeStr];\n    } else {\n        return Web3Errors.UNKNOWN_ERROR;\n    }\n};\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { ethers } from 'ethers';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport UncheckedJsonRpcSigner from 'provider/UncheckedJsonRpcSigner';\nimport { sendAction } from './actions/actions';\nimport { web3ContextNames } from '../provider/connectors';\nimport PromiEvent from 'promievent';\nimport { TXEvents } from '../enums';\nimport moment from 'moment';\nimport { schema } from '../services/ABIService';\n\nexport enum ContractType {\n    ERC20 = 'ERC20',\n    Avatar = 'Avatar',\n    Controller = 'Controller',\n    Reputation = 'Reputation',\n    PermissionRegistry = 'PermissionRegistry',\n    VotingMachine = 'VotingMachine',\n    DXDVotingMachine = 'DXDVotingMachine',\n    WalletScheme = 'WalletScheme',\n    Multicall = 'Multicall'\n}\n\nexport interface ChainData {\n    currentBlockNumber: number;\n}\n\nenum ERRORS {\n    UntrackedChainId = 'Attempting to access data for untracked chainId',\n    ContextNotFound = 'Specified context name note stored',\n    BlockchainActionNoAccount = 'Attempting to do blockchain transaction with no account',\n    BlockchainActionNoChainId = 'Attempting to do blockchain transaction with no chainId',\n    BlockchainActionNoResponse = 'No error or response received from blockchain action',\n}\n\nexport default class ProviderStore {\n    provider: any;\n    accounts: string[];\n    defaultAccount: string | null;\n    web3Contexts: object;\n    supportedNetworks: number[];\n    chainData: ChainData;\n    activeChainId: number;\n    activeFetchLoop: any;\n    activeAccount: string;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n      this.rootStore = rootStore;\n      this.web3Contexts = {};\n      this.chainData = { currentBlockNumber: -1 };\n      makeObservable(this, {\n          provider: observable,\n          accounts: observable,\n          defaultAccount: observable,\n          web3Contexts: observable,\n          chainData: observable, \n          activeChainId: observable, \n          activeFetchLoop: observable, \n          activeAccount: observable,\n          setCurrentBlockNumber: action,\n          setActiveAccount: action,\n          fetchUserBlockchainData: action\n        }\n      );\n    }\n\n    isFresh(blocknumber: number): boolean {\n        return blocknumber === this.getCurrentBlockNumber();\n    }\n\n    isFresher(newBlockNumber: number, oldBlockNumber: number): boolean {\n        return newBlockNumber > oldBlockNumber;\n    }\n\n    isBlockStale(blocknumber: number) {\n        return blocknumber < this.chainData.currentBlockNumber;\n    }\n\n    getCurrentBlockNumber(): number {\n        return this.chainData.currentBlockNumber;\n    }\n\n    setCurrentBlockNumber(blocknumber): void {\n        this.chainData.currentBlockNumber = blocknumber;\n    }\n\n    setActiveAccount(account: string) {\n        this.activeAccount = account;\n    }\n\n    fetchUserBlockchainData = async (\n        web3React: Web3ReactContextInterface,\n        account: string\n    ) => {\n        const { transactionStore } = this.rootStore;\n\n        console.debug('[Fetch Start - User Blockchain Data]', {\n            account,\n        });\n\n        transactionStore.checkPendingTransactions(web3React, account);\n    };\n\n    // account is optional\n    getProviderOrSigner(library, account) {\n        console.debug('[getProviderOrSigner', {\n            library,\n            account,\n            signer: library.getSigner(account),\n        });\n\n        return account\n            ? new UncheckedJsonRpcSigner(library.getSigner(account))\n            : library;\n    }\n\n    getContract(\n        web3React: Web3ReactContextInterface,\n        type: ContractType,\n        address: string,\n        signerAccount?: string\n    ): ethers.Contract {\n        const { library } = web3React;\n\n        if (signerAccount) {\n            return new library.eth.Contract(schema[type], address, {\n                from: signerAccount,\n            });\n        }\n\n        return new library.eth.Contract(schema[type], address);\n    }\n\n    // get blockTime from blocknumber\n    async getBlockTime(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        const date = new Date(blockData.timestamp * 1000);\n        return moment(date).format('DD.MM - HH:mm');\n    }\n\n\n    // get blockHash from blocknumber\n    async getBlockHash(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        return blockData.hash;\n    }\n\n    getActiveWeb3React(): Web3ReactContextInterface {\n        const contextInjected = this.web3Contexts[web3ContextNames.injected];\n        return contextInjected;\n    }\n\n    getWeb3React(name): Web3ReactContextInterface {\n        if (!this.web3Contexts[name]) {\n            throw new Error(ERRORS.ContextNotFound);\n        }\n        return this.web3Contexts[name];\n    }\n\n    @action setWeb3Context(name, context: Web3ReactContextInterface) {\n        console.debug('[setWeb3Context]', name, context);\n        this.web3Contexts[name] = context;\n    }\n\n    @action sendTransaction = (\n        web3React: Web3ReactContextInterface,\n        contractType: ContractType,\n        contractAddress: string,\n        action: string,\n        params: any[],\n        overrides?: any\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.rootStore;\n        const { chainId, account } = web3React;\n\n        overrides = overrides ? overrides : {};\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n\n        const contract = this.getContract(\n            web3React,\n            contractType,\n            contractAddress,\n            account\n        );\n\n        const response = sendAction({\n            contract,\n            action,\n            sender: account,\n            data: params,\n            overrides,\n        }).on(TXEvents.TX_HASH, (hash) => {\n            transactionStore.addTransactionRecord(account, hash);\n        });\n\n        return response;\n    };\n    \n    @action sendRawTransaction = (\n        web3React: Web3ReactContextInterface,\n        to: string,\n        data: string,\n        value: string\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.rootStore;\n        const { chainId, account } = web3React;\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n        console.log(value)\n        const promiEvent = new PromiEvent<any>(() => {\n            web3React.library.eth.sendTransaction({ from: account, to: to, data: data, value: value })\n                .once('transactionHash', (hash) => {\n                    transactionStore.addTransactionRecord(account, hash);\n                    promiEvent.emit(TXEvents.TX_HASH, hash);\n                    console.debug(TXEvents.TX_HASH, hash);\n                })\n                .once('receipt', (receipt) => {\n                    promiEvent.emit(TXEvents.RECEIPT, receipt);\n                    console.debug(TXEvents.RECEIPT, receipt);\n                })\n                .once('confirmation', (confNumber, receipt) => {\n                    promiEvent.emit(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                    console.debug(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                })\n                .on('error', (error) => {\n                    console.debug(error.code);\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                })\n                .then((receipt) => {\n                    promiEvent.emit(TXEvents.FINALLY, receipt);\n                    console.debug(TXEvents.FINALLY, receipt);\n                })\n                .catch((e) => {\n                    console.debug('rejected', e);\n                });\n        });\n\n        return promiEvent;\n    };\n}\n","import { Contract } from 'ethers';\nimport { TXEvents } from '../../enums';\nimport { getErrorByCode, isKnownErrorCode } from './error';\nimport PromiEvent from 'promievent';\n\ninterface ActionRequest {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: any[];\n    overrides: any;\n}\n\nexport interface ActionResponse {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: object;\n    txResponse: any | undefined;\n    error: any | undefined;\n}\n\nconst preLog = (params: ActionRequest) => {\n    console.debug(`[@action start: ${params.action}]`, {\n        contract: params.contract,\n        action: params.action,\n        sender: params.sender,\n        data: params.data,\n        overrides: params.overrides,\n    });\n};\n\nexport const sendAction = (params: ActionRequest): PromiEvent<any> => {\n    const { contract, action, sender, data, overrides } = params;\n    preLog(params);\n\n    const promiEvent = new PromiEvent<any>(() => {\n        contract.methods[action](...data)\n            .send({ from: sender, ...overrides })\n            .once('transactionHash', (hash) => {\n                promiEvent.emit(TXEvents.TX_HASH, hash);\n                console.debug(TXEvents.TX_HASH, hash);\n            })\n            .once('receipt', (receipt) => {\n                promiEvent.emit(TXEvents.RECEIPT, receipt);\n                console.debug(TXEvents.RECEIPT, receipt);\n            })\n            .once('confirmation', (confNumber, receipt) => {\n                promiEvent.emit(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n                console.debug(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n            })\n            .on('error', (error) => {\n                console.debug(error.code);\n                if (error.code && isKnownErrorCode(error.code)) {\n                    promiEvent.emit(\n                        TXEvents.TX_ERROR,\n                        getErrorByCode(error.code)\n                    );\n                    console.debug(TXEvents.TX_ERROR, getErrorByCode(error.code));\n                } else {\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                }\n            })\n            .then((receipt) => {\n                promiEvent.emit(TXEvents.FINALLY, receipt);\n                console.debug(TXEvents.FINALLY, receipt);\n            })\n            .catch((e) => {\n                console.debug('rejected', e);\n            });\n    });\n\n    return promiEvent;\n};\n","import { Interface } from 'ethers/utils';\nimport RootStore from '../stores';\n\nexport const schema = {\n  Avatar: require('../contracts/DxAvatar').abi,\n  Controller: require('../contracts/DxController').abi,\n  VotingMachine: require('../contracts/GenesisProtocol').abi,\n  DXDVotingMachine: require('../contracts/DXDVotingMachine').abi,\n  Reputation: require('../contracts/DxReputation').abi,\n  WalletScheme: require('../contracts/WalletScheme').abi,\n  ERC20: require('../contracts/ERC20').abi,\n  PermissionRegistry: require('../contracts/PermissionRegistry').abi,\n  Multicall: require('../contracts/Multicall').abi,\n};\n\nexport default class ABIService {\n  root: RootStore;\n\n  constructor(root: RootStore) {\n    this.root = root;\n  }\n  \n  getAbi(contractType: string) {\n    return schema[contractType];\n  }\n  \n  decodeCall(contractType: string, data: string) {\n    const { providerStore } = this.root;\n\n    const { library } = providerStore.getActiveWeb3React();\n\n    const contractInterface = new Interface(this.getAbi(contractType));\n    const functionSignature = data.substring(0,10);\n    for (const functionName in contractInterface.functions) {\n      if (contractInterface.functions[functionName].sighash === functionSignature){\n        return {\n          function: contractInterface.functions[functionName],\n          args: library.eth.abi.decodeParameters(\n            contractInterface.functions[functionName].inputs.map((input) => {return input.type}), data.substring(10)\n          )\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { TransactionReceipt } from 'web3-core';\n\nexport interface TransactionRecord {\n    hash: string;\n    blockNumberChecked: number;\n    receipt: TransactionReceipt | undefined;\n}\n\nconst ERRORS = {\n    unknownTxHash: 'Transaction hash is not stored',\n    unknownNetworkId: 'NetworkID specified is not tracked',\n    txHashAlreadyExists: 'Transaction hash already exists for network',\n    txHasNoHash: 'Attempting to add transaction record without hash',\n};\n\nexport enum FetchCode {\n    SUCCESS,\n    FAILURE,\n    STALE,\n}\n\nexport interface TransactionRecordMap {\n    [index: string]: TransactionRecord[];\n}\n\nexport default class TransactionStore {\n    txRecords: TransactionRecordMap;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.txRecords = {};\n        makeObservable(this, {\n            txRecords: observable,\n            checkPendingTransactions: action,\n            addTransactionRecord: action,\n          }\n        );\n    }\n\n    // @dev Transactions are pending if we haven't seen their receipt yet\n    getPendingTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    getConfirmedTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return !this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    async checkPendingTransactions(\n        web3React: Web3ReactContextInterface,\n        account\n    ): Promise<FetchCode> {\n        const { providerStore } = this.rootStore;\n        const currentBlock = providerStore.getCurrentBlockNumber();\n\n        const { library } = web3React;\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            records.forEach((value) => {\n                if (\n                    this.isTxPending(value) &&\n                    this.isStale(value, currentBlock)\n                ) {\n                    library.eth\n                        .getTransactionReceipt(value.hash)\n                        .then((receipt) => {\n                            value.blockNumberChecked = currentBlock;\n                            if (receipt) {\n                                value.receipt = receipt;\n                            }\n                        })\n                        .catch(() => {\n                            value.blockNumberChecked = currentBlock;\n                        });\n                }\n            });\n        }\n\n        return FetchCode.SUCCESS;\n    }\n\n    // @dev Add transaction record. It's in a pending state until mined.\n    addTransactionRecord(account: string, txHash: string) {\n        const record: TransactionRecord = {\n            hash: txHash,\n            blockNumberChecked: 0,\n            receipt: undefined,\n        };\n\n        if (!txHash) {\n            throw new Error(\n                'Attempting to add transaction record without hash'\n            );\n        }\n\n        let records = this.txRecords[account];\n\n        if (records) {\n            const duplicate = records.find((value) => value.hash === txHash);\n            if (!!duplicate) {\n                throw new Error(ERRORS.txHashAlreadyExists);\n            }\n            this.txRecords[account].push(record);\n        } else {\n            this.txRecords[account] = [];\n            this.txRecords[account].push(record);\n        }\n    }\n\n    isTxPending(txRecord: TransactionRecord): boolean {\n        return !txRecord.receipt;\n    }\n\n    isStale(txRecord: TransactionRecord, currentBlock: number) {\n        return txRecord.blockNumberChecked < currentBlock;\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\n\nexport default class ModalStore {\n    walletModalVisible: boolean;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.walletModalVisible = false;\n        makeObservable(this, {\n            walletModalVisible: observable,\n            toggleWalletModal: action,\n            setWalletModalVisible: action\n          }\n        );\n    }\n\n    @action toggleWalletModal() {\n        this.walletModalVisible = !this.walletModalVisible;\n    }\n\n    @action setWalletModalVisible(visible: boolean) {\n        this.walletModalVisible = visible;\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { getTokens, getNetworkConfig } from '../config';\nimport { _ } from 'lodash';\nimport { NETWORK_NAMES } from '../provider/connectors';\n\nexport default class ConfigStore {\n    darkMode: boolean;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n      this.rootStore = rootStore;\n      this.darkMode = false;\n      makeObservable(this, {\n          darkMode: observable,\n          toggleDarkMode: action\n        }\n      );\n    }\n    \n    getActiveChainName() {\n      const activeWeb3 = this.rootStore.providerStore.getActiveWeb3React();\n      return activeWeb3 ? NETWORK_NAMES[activeWeb3.chainId] : 'none';\n    }\n    \n    getLocalConfig() {\n      if (localStorage.getItem('dxvote-config'))\n        return JSON.parse(localStorage.getItem('dxvote-config'));\n      else return {\n        etherscan: '',\n        pinata: '',\n        pinOnStart: false\n      };\n    }\n    \n    setLocalConfig(config) {\n      localStorage.setItem('dxvote-config', JSON.stringify(config));\n    }\n    \n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n    }\n\n    @action setDarkMode(visible: boolean) {\n      this.darkMode = visible;\n    }\n    \n    getNetworkConfig() {\n      return getNetworkConfig(this.getActiveChainName());\n    }\n}\n","const { getNetworkConfig } = require('./index');\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE } from '../utils/helpers';\n\nexport const getCalls = function(network) {\n  let networkConfig = getNetworkConfig(network);\n  let recommendedCalls = [\n    {\n      asset: ZERO_ADDRESS,\n      from: networkConfig.avatar,\n      to: networkConfig.controller,\n      toName: \"DXdao Controller\",\n      functionName: \"mintReputation(uint256,address,address)\",\n      functionSignature: \"0xeaf994b2\",\n      params: [\n        {type: \"uint256\", name: \"_amount\", defaultValue: \"\"},\n        {type: \"address\", name: \"_to\", defaultValue: \"\"},\n        {type: \"address\", name: \"_avatar\", defaultValue: networkConfig.avatar}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: networkConfig.avatar,\n      to: networkConfig.controller,\n      toName: \"DXdao Controller\",\n      functionName: \"burnReputation(uint256,address,address)\",\n      functionSignature: \"0x6e94d278\",\n      params: [\n        {type: \"uint256\", name: \"_amount\", defaultValue: \"\"},\n        {type: \"address\", name: \"_from\", defaultValue: \"\"},\n        {type: \"address\", name: \"_avatar\", defaultValue: networkConfig.avatar}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: networkConfig.avatar,\n      to: networkConfig.controller,\n      toName: \"DXdao Controller\",\n      functionName: \"registerScheme(address,bytes32,bytes4,address)\",\n      functionSignature: \"0xe869d45f\",\n      params: [\n        {type: \"address\", name: \"_scheme\", defaultValue: \"\"},\n        {type: \"bytes32\", name: \"_paramsHash\", defaultValue: \"\"},\n        {type: \"bytes4\", name: \"_permissions\", defaultValue: \"\"},\n        {type: \"address\", name: \"_avatar\", defaultValue: networkConfig.avatar}\n      ]\n    }, {\n      from: networkConfig.avatar,\n      to: networkConfig.controller,\n      toName: \"DXdao Controller\",\n      functionName: \"unregisterScheme(address,address)\",\n      functionSignature: \"0x039de01d\",\n      params: [\n        {type: \"address\", name: \"_scheme\", defaultValue: \"\"},\n        {type: \"address\", name: \"_avatar\", defaultValue: networkConfig.avatar}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: networkConfig.avatar,\n      to: networkConfig.controller,\n      toName: \"DXdao Controller\",\n      functionName: \"genericCall(address,bytes,addres,uint256)\",\n      functionSignature: \"0x92641aaa\",\n      params: [\n        {type: \"address\", name: \"_contract\", defaultValue: \"\"},\n        {type: \"bytes\", name: \"_data\", defaultValue: \"\"},\n        {type: \"address\", name: \"_avatar\", defaultValue: networkConfig.avatar},\n        {type: \"uint256\", name: \"_value\", defaultValue: \"\"}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: networkConfig.avatar,\n      to: networkConfig.permissionRegistry,\n      toName: \"Permission Registry\",\n      functionName: \"setTimeDelay(uint256)\",\n      functionSignature: \"0x39af6ba9\",\n      params: [\n        {type: \"uint256\", name: \"newTimeDelay\", defaultValue: \"\"},\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: networkConfig.avatar,\n      to: networkConfig.permissionRegistry,\n      toName: \"Permission Registry\",\n      functionName: \"setAdminPermission(address,address,address,bytes4,uint256,bool)\",\n      functionSignature: \"0x969e6fbd\",\n      params: [\n        {type: \"address\", name: \"asset\", defaultValue: ZERO_ADDRESS},\n        {type: \"address\", name: \"from\", defaultValue: \"\"},\n        {type: \"address\", name: \"to\", defaultValue: \"\"},\n        {type: \"bytes4\", name: \"functionSignature\", defaultValue: ANY_FUNC_SIGNATURE},\n        {type: \"uint256\", name: \"valueAllowed\", defaultValue: \"0\"},\n        {type: \"bool\", name: \"allowed\", defaultValue: \"true\"},\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: networkConfig.permissionRegistry,\n      toName: \"Permission Registry\",\n      functionName: \"setPermission(address,address,bytes4,uint256,bool)\",\n      functionSignature: \"0x9b2dccdd\",\n      params: [\n        {type: \"address\", name: \"asset\", defaultValue: ZERO_ADDRESS},\n        {type: \"address\", name: \"to\", defaultValue: \"\"},\n        {type: \"bytes4\", name: \"functionSignature\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"valueAllowed\", defaultValue: \"\"},\n        {type: \"bool\", name: \"allowed\", defaultValue: \"\"},\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: \"0x317113D2593e3efF1FfAE0ba2fF7A61861Df7ae5\",\n      toName: \"Swpr Fee Setter\",\n      functionName: \"transferPairOwnership(address pair, address newOwner)\",\n      functionSignature: \"0xa6dab93f\",\n      params: [\n        {type: \"address\", name: \"pair\", defaultValue: \"\"},\n        {type: \"address\", name: \"newOwner\", defaultValue: \"\"},\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: \"0x317113D2593e3efF1FfAE0ba2fF7A61861Df7ae5\",\n      toName: \"Swpr Fee Setter\",\n      functionName: \"setProtocolFee(uint8 protocolFeeDenominator)\",\n      functionSignature: \"0x4e91f811\",\n      params: [\n        {type: \"uint8\", name: \"protocolFeeDenominator\", defaultValue: \"\"}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: \"0x317113D2593e3efF1FfAE0ba2fF7A61861Df7ae5\",\n      toName: \"Swpr Fee Setter\",\n      functionName: \"setSwapFee(address pair, uint32 swapFee)\",\n      functionSignature: \"0x9e68ceb8\",\n      params: [\n        {type: \"address\", name: \"pair\", defaultValue: \"\"},\n        {type: \"uint32\", name: \"swapFee\", defaultValue: \"\"}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: \"0xaE909196e549587b8Dc0D26cdbf05B754BB580B3\",\n      toName: \"Swpr Fee Receiver\",\n      functionName: \"takeProtocolFee(address[] calldata pairs)\",\n      functionSignature: \"0x5cb9c4ec\",\n      params: [\n        {type: \"address[]\", name: \"pairs\", defaultValue: \"\"},\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: \"0x8EEaea23686c319133a7cC110b840d1591d9AeE0\",\n      toName: \"Swpr Router\",\n      functionName: \"addLiquidity(address tokenA, address tokenB, uint256 amountADesired, uint256 amountBDesired, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline)\",\n      functionSignature: \"0xe8e33700\",\n      params: [\n        {type: \"address\", name: \"tokenA\", defaultValue: \"\"},\n        {type: \"address\", name: \"tokenB\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"amountADesired\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"amountBDesired\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"amountAMin\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"amountBMin\", defaultValue: \"\"},\n        {type: \"address\", name: \"to\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"deadline\", defaultValue: \"\"}\n      ]\n    }, {\n      asset: ZERO_ADDRESS,\n      from: ANY_ADDRESS,\n      to: \"0x8EEaea23686c319133a7cC110b840d1591d9AeE0\",\n      toName: \"Swpr Router\",\n      functionName: \"removeLiquidity(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline)\",\n      functionSignature: \"0xbaa2abde\",\n      params: [\n        {type: \"address\", name: \"tokenA\", defaultValue: \"\"},\n        {type: \"address\", name: \"tokenB\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"liquidity\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"amountAMin\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"amountBMin\", defaultValue: \"\"},\n        {type: \"address\", name: \"to\", defaultValue: \"\"},\n        {type: \"uint256\", name: \"deadline\", defaultValue: \"\"}\n      ]\n    }\n  ];\n  \n  \n  \n  // permissions[callPermission.asset].calls.push({\n  //   name: \"transfer(address,uint256)\",\n  //   signature: \"0xa9059cbb\",\n  //   params: [\n  //     {type: \"address\", name: \"to\", defaultValue: callPermission.to},\n  //     {type: \"uint256\", name: \"value\", defaultValue: `Max ${bnum(callPermission.value).toString()}`}\n  //   ],\n  //   value: bnum(0),\n  //   fromTime: callPermission.fromTime\n  // });\n  // permissions[callPermission.asset].calls.push({\n  //   name: \"approve(address,uint256)\",\n  //   signature: \"0x095ea7b3\",\n  //   params: [\n  //     {type: \"address\", name: \"to\", defaultValue: callPermission.to},\n  //     {type: \"uint256\", name: \"value\", defaultValue: `Max ${bnum(callPermission.value).toString()}`}\n  //   ],\n  //   value: bnum(0),\n  //   fromTime: callPermission.fromTime\n  // })\n  return recommendedCalls;\n}\n","import RootStore from 'stores';\nimport { BigNumber } from '../utils/bignumber';\nimport { ContractType } from './Provider';\nimport { getCalls } from '../config/recommendedCalls';\nimport { action, makeObservable, observable } from 'mobx';\nimport web3 from 'web3';\nimport _ from 'lodash';\nimport contentHash from 'content-hash';\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE, bnum } from '../utils/helpers';\nimport { decodeProposalStatus } from '../utils/proposals';\nimport { ethers, utils } from 'ethers';\nimport PromiEvent from 'promievent';\nimport {\n  VoteDecision,\n  WalletSchemeProposalState,\n  VotingMachineProposalState\n} from '../enums';\n\nconst CACHE = require('../cache/data.json');\n\nexport default class DaoStore {\n  daoCache: DaoCache;\n  rootStore: RootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.daoCache = CACHE;\n    makeObservable(this, {\n      updateNetworkCache: action,\n      createProposal: action,\n      vote: action,\n      approveVotingMachineToken: action,\n      stake: action,\n      execute: action,\n      redeem: action\n    });\n  }\n  \n  // Parse bignnumbers\n  parseCache(unparsedCache: DaoNetworkCache): DaoNetworkCache {\n    unparsedCache.daoInfo.totalRep = bnum(unparsedCache.daoInfo.totalRep);\n    unparsedCache.daoInfo.ethBalance = bnum(unparsedCache.daoInfo.ethBalance);\n    unparsedCache.daoInfo.repEvents.map((repEvent, i) => {\n      unparsedCache.daoInfo.repEvents[i].amount = bnum(repEvent.amount)\n    })\n    Object.keys(unparsedCache.schemes).map((schemeAddress) => {\n      unparsedCache.schemes[schemeAddress].ethBalance = bnum(unparsedCache.schemes[schemeAddress].ethBalance)\n    })\n    Object.keys(unparsedCache.callPermissions).map((asset) => {\n      Object.keys(unparsedCache.callPermissions[asset]).map((from) => {\n        Object.keys(unparsedCache.callPermissions[asset][from]).map((to) => {\n          Object.keys(unparsedCache.callPermissions[asset][from][to]).map((functionSignature) => {\n            unparsedCache.callPermissions[asset][from][to][functionSignature].value =\n              bnum(unparsedCache.callPermissions[asset][from][to][functionSignature].value);\n          })\n        })\n      })\n    })\n    Object.keys(unparsedCache.proposals).map((proposalId) => {\n      unparsedCache.proposals[proposalId].values = unparsedCache.proposals[proposalId].values.map((value) => {\n        return bnum(value);\n      })\n\n      unparsedCache.proposals[proposalId].stateInScheme = unparsedCache.proposals[proposalId].stateInScheme;\n      unparsedCache.proposals[proposalId].stateInVotingMachine = unparsedCache.proposals[proposalId].stateInVotingMachine;\n      unparsedCache.proposals[proposalId].repAtCreation = bnum(unparsedCache.proposals[proposalId].repAtCreation);\n      unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit = bnum(unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit);\n      unparsedCache.proposals[proposalId].daoBountyRemain = bnum(unparsedCache.proposals[proposalId].daoBountyRemain);\n      unparsedCache.proposals[proposalId].daoBounty = bnum(unparsedCache.proposals[proposalId].daoBounty);\n      unparsedCache.proposals[proposalId].totalStakes = bnum(unparsedCache.proposals[proposalId].totalStakes);\n      unparsedCache.proposals[proposalId].confidenceThreshold = bnum(unparsedCache.proposals[proposalId].confidenceThreshold);\n      unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = bnum(unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted);\n      unparsedCache.proposals[proposalId].submittedTime = bnum(unparsedCache.proposals[proposalId].submittedTime);\n      unparsedCache.proposals[proposalId].preBoostedPhaseTime = bnum(unparsedCache.proposals[proposalId].preBoostedPhaseTime);\n      unparsedCache.proposals[proposalId].boostedPhaseTime = bnum(unparsedCache.proposals[proposalId].boostedPhaseTime);\n      unparsedCache.proposals[proposalId].positiveVotes = bnum(unparsedCache.proposals[proposalId].positiveVotes);\n      unparsedCache.proposals[proposalId].negativeVotes = bnum(unparsedCache.proposals[proposalId].negativeVotes);\n      unparsedCache.proposals[proposalId].preBoostedPositiveVotes = bnum(unparsedCache.proposals[proposalId].preBoostedPositiveVotes);\n      unparsedCache.proposals[proposalId].preBoostedNegativeVotes = bnum(unparsedCache.proposals[proposalId].preBoostedNegativeVotes);\n      unparsedCache.proposals[proposalId].positiveStakes = bnum(unparsedCache.proposals[proposalId].positiveStakes);\n      unparsedCache.proposals[proposalId].negativeStakes = bnum(unparsedCache.proposals[proposalId].negativeStakes);\n    });\n    \n    Object.keys(unparsedCache.votingMachines).map((votingMachineAddress) => {\n      Object.keys(unparsedCache.votingMachines[votingMachineAddress].votingParameters)\n        .map((paramsHash) => {\n          const unparsedParams = unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash];\n        unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash] = {\n          queuedVoteRequiredPercentage: bnum(unparsedParams.queuedVoteRequiredPercentage),\n          queuedVotePeriodLimit: bnum(unparsedParams.queuedVotePeriodLimit),\n          boostedVotePeriodLimit: bnum(unparsedParams.boostedVotePeriodLimit),\n          preBoostedVotePeriodLimit: bnum(unparsedParams.preBoostedVotePeriodLimit),\n          thresholdConst: bnum(unparsedParams.thresholdConst),\n          limitExponentValue: bnum(unparsedParams.limitExponentValue),\n          quietEndingPeriod: bnum(unparsedParams.quietEndingPeriod),\n          proposingRepReward: bnum(unparsedParams.proposingRepReward),\n          votersReputationLossRatio: bnum(unparsedParams.votersReputationLossRatio),\n          minimumDaoBounty: bnum(unparsedParams.minimumDaoBounty),\n          daoBountyConst: bnum(unparsedParams.daoBountyConst),\n          activationTime: bnum(unparsedParams.activationTime)\n        };\n      })\n    })\n    return unparsedCache;\n  }\n  \n  getCache(): DaoNetworkCache {\n    return this.daoCache[this.rootStore.configStore.getActiveChainName()];\n  }\n  \n  updateNetworkCache(newNetworkCache: DaoNetworkCache, networkName: string) {\n    this.daoCache[networkName] = this.parseCache(newNetworkCache);\n    console.debug('Cache Updated]', this.daoCache[networkName]);\n  }\n\n  getDaoInfo(): DaoInfo {\n    return this.getCache().daoInfo;\n  }\n  \n  getSchemeProposalsByName(_schemeName: string): Proposal[] {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getSchemeByName(_schemeName: string): Scheme {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let schemeInfo;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeInfo = this.getCache().schemes[schemeAddress];\n        break;\n      }\n    }\n    return schemeInfo;\n  }\n  \n  getSchemeProposals(schemeAddress: string): Proposal[] {\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getAmountOfProposalsPreBoostedInScheme(schemeAddress: string): number {\n    return this.getSchemeProposals(schemeAddress).filter((proposal) => {\n      return (proposal.stateInVotingMachine== 4)\n    }).length;\n  }\n  \n  getGovernanceInfo(): any {\n    let users = {},\n    totalPositiveVotes = 0,\n    totalPositiveVotesAmount = bnum(0),\n    totalNegativeVotes = 0,\n    totalNegativeVotesAmount = bnum(0),\n    totalPositiveStakes = 0,\n    totalPositiveStakesAmount = bnum(0),\n    totalNegativeStakes = 0,\n    totalNegativeStakesAmount = bnum(0),\n    totalProposalsCreated = 0;\n    const cache = this.getCache();\n    let rep = [];\n    Object.keys(cache.users).map((userAddress) => {\n      if (cache.users[userAddress].repBalance > 0)\n        rep.push([userAddress, bnum(cache.users[userAddress].repBalance).div(10**18).toNumber()])\n    })\n    rep = _.sortBy(rep, [function(o) { return o[1]; }]);\n    rep.unshift([\"User Address\", \"REP %\"]);\n    \n    let repEvents = [];\n    let repTotalSupply = bnum(0);\n    let blockNumber = 0;\n    for (let i = 0; i < cache.daoInfo.repEvents.length; i++) {\n\n      if (cache.daoInfo.repEvents[i].event == \"Mint\")\n        repTotalSupply = repTotalSupply.plus(cache.daoInfo.repEvents[i].amount);\n      else if (cache.daoInfo.repEvents[i].event == \"Burn\")\n        repTotalSupply = repTotalSupply.minus(cache.daoInfo.repEvents[i].amount);\n      \n      if (cache.daoInfo.repEvents[i].l1BlockNumber > blockNumber){\n        blockNumber = cache.daoInfo.repEvents[i].l1BlockNumber;\n        repEvents.push([blockNumber, bnum(repTotalSupply).div(10**18).toNumber()])\n      }\n    }\n    repEvents.unshift([\"Block\", \"Total Rep\"]);\n\n    Object.keys(cache.votingMachines).map((votingMachineAddress) => {\n      cache.votingMachines[votingMachineAddress].events.votes.map((vote) => {\n        if (!users[vote.voter])\n          users[vote.voter] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[vote.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", vote.proposalId);\n        } else {\n          if (vote.vote == 1){\n            totalPositiveVotes ++;\n            totalPositiveVotesAmount = totalPositiveVotesAmount.plus(bnum(vote.amount));\n          } else {\n            totalNegativeVotes ++;\n            totalNegativeVotesAmount = totalNegativeVotesAmount.plus(bnum(vote.amount));\n          }\n          if (cache.proposals[vote.proposalId].winningVote == vote.vote){\n            users[vote.voter].correctVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 3;\n            \n          } else {\n            users[vote.voter].wrongVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 1;\n          }\n        }\n      })\n      cache.votingMachines[votingMachineAddress].events.stakes.map((stake) => {\n        if (!users[stake.staker])\n          users[stake.staker] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[stake.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", stake.proposalId);\n        } else {\n          if (stake.vote == 1){\n            totalPositiveStakes ++;\n            totalPositiveStakesAmount = totalPositiveStakesAmount.plus(bnum(stake.amount));\n          } else {\n            totalNegativeStakes ++;\n            totalNegativeStakesAmount = totalNegativeStakesAmount.plus(bnum(stake.amount));\n          }\n          \n          if (cache.proposals[stake.proposalId].winningVote == stake.vote){\n            users[stake.staker].correctStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n            users[stake.staker].score += 1;\n          } else {\n            users[stake.staker].wrongStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n          }\n        }\n      });\n    })\n\n\n    Object.keys(cache.proposals).map( (proposalId) => {\n      \n      const proposalCreator = cache.proposals[proposalId].proposer;\n      \n      if (proposalCreator != \"0x0000000000000000000000000000000000000000\") {\n        if (!users[proposalCreator])\n          users[proposalCreator] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n          \n        const score = cache.proposals[proposalId].positiveVotes.plus(cache.proposals[proposalId].negativeVotes)\n          .div(cache.proposals[proposalId].repAtCreation).div(\"0.20\").times(\"10\").toFixed(2);\n        users[proposalCreator].score += Math.min(Math.min(score, 1), 30);\n        users[proposalCreator].proposals ++;\n      } else {\n        console.debug(\n          \"Couldnt get proposer for proposal\", proposalId, \"in scheme\",\n          cache.schemes[cache.proposals[proposalId].scheme].name,\n          \"in transaction\", cache.proposals[proposalId].creationEvent.tx\n        )\n      }\n      totalProposalsCreated ++;\n\n    });\n    \n    return {\n      totalPositiveVotes,\n      totalPositiveVotesAmount,\n      totalNegativeVotes,\n      totalNegativeVotesAmount,\n      totalPositiveStakes,\n      totalPositiveStakesAmount,\n      totalNegativeStakes,\n      totalNegativeStakesAmount,\n      totalProposalsCreated,\n      rep,\n      repEvents,\n      ranking: _.orderBy(\n        Object.keys(users).map(key => ( Object.assign({ address: key }, users[key]) )), [\"score\"], [\"desc\"]\n      )\n    }\n  }\n  \n  getAllProposals(): Proposal[] {\n    const allProposals = Object.keys(this.getCache().proposals)\n      .map( (proposalId) => {return this.getCache().proposals[proposalId] } );\n    return _.orderBy(\n      allProposals ,\n      [\"creationEvent.l1BlockNumber\", \"creationEvent.l2BlockNumber\", \"creationEvent.transactionIndex\", \"creationEvent.logIndex\"],\n      [\"asc\",\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  getAllSchemes(): Scheme[] {\n    const schemeAddresses = Object.keys(this.getCache().schemes);\n    return schemeAddresses.map( (schemeAddress) => {return this.getCache().schemes[schemeAddress] } );\n  }\n  \n  getProposal(proposalId): Proposal {\n    return this.getCache().proposals[proposalId];\n  }\n  \n  getScheme(schemeAddress): Scheme {\n    return this.getCache().schemes[schemeAddress];\n  }\n  \n  getVotingMachineOfProposal(proposalId): String {\n    return this.getCache().schemes[\n      this.getCache().proposals[proposalId].scheme\n    ].votingMachine;\n  }\n  \n  getVotingParametersOfProposal(proposalId): VotingMachineParameters {\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)].votingParameters[\n      this.getCache().proposals[proposalId].paramsHash\n    ];\n  }\n  \n  getVotingParametersOfScheme(schemeAddress): VotingMachineParameters {\n    const scheme = this.getCache().schemes[schemeAddress];\n    return this.getCache().votingMachines[scheme.votingMachine].votingParameters[ scheme.paramsHash ];\n  }\n  \n  getProposalEvents(proposalId): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    stateChanges: ProposalStateChange[],\n    history: {\n      text: string,\n      event: ProposalEvent\n    }[]\n  }{\n    const proposalEvents = {\n      votes: this.getVotesOfProposal(proposalId),\n      stakes: this.getStakesOfProposal(proposalId),\n      redeems: this.getRedeemsOfProposal(proposalId),\n      redeemsRep: this.getRedeemsRepOfProposal(proposalId),\n      stateChanges: this.getProposalStateChanges(proposalId)\n    }\n    \n    const proposal = this.getProposal(proposalId);\n      \n    let history : {\n      text: string,\n      event: ProposalEvent\n    }[] = proposalEvents.votes.map((event) => {\n      return {\n        text: `Vote from ${event.voter} of ${(bnum(event.amount)).times('100').div(proposal.repAtCreation).toFixed(4)} % REP on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Stake from ${event.staker} of ${web3.utils.fromWei(event.amount).toString()} DXD on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stateChanges.map((event) => {\n      return {\n        text: `Proposal change to state ${VotingMachineProposalState[event.state]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history.push({\n      text: `Proposal created by ${proposal.proposer}`,\n      event: proposal.creationEvent\n    });\n    \n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      stateChanges: proposalEvents.stateChanges,\n      history: history\n    }\n  }\n  \n  getUser(userAddress): {\n    repBalance: BigNumber,\n    repPercentage: Number\n  } {\n    const user = this.getCache().users[userAddress];\n\n    return {\n      repBalance: user ? bnum(user.repBalance) : bnum(0),\n      repPercentage: user && user.repBalance ? bnum(user.repBalance).times('100').div(this.getCache().daoInfo.totalRep).toNumber() : 0\n    }\n  }\n  \n  getUserEvents(userAddress): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    newProposal: ProposalEvent[],\n    history: {\n      text: string,\n      event: ProposalEvent\n    }[]\n  }{\n    \n    let history : {\n      text: string,\n      event: ProposalEvent\n    } = [];\n    \n    const cache = this.getCache();\n    const votingMachines = this.rootStore.configStore.getNetworkConfig().votingMachines;\n    let proposalEvents = {\n      votes: [],\n      stakes: [],\n      redeems: [],\n      redeemsRep: []\n    };\n    if (votingMachines.gen) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.gen.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.gen.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.gen.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.gen.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n\n    if (votingMachines.dxd) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.dxd.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.dxd.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.dxd.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.dxd.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n    \n    const newProposalEvents = cache.users[userAddress]\n      ? cache.users[userAddress].proposalsCreated.map((proposalId) => {\n        history.push({\n          text: `Proposal ${proposalId} created`,\n          event: {\n            proposalId: cache.proposals[proposalId].creationEvent.proposalId,\n            tx: cache.proposals[proposalId].creationEvent.tx,\n            block: cache.proposals[proposalId].creationEvent.block,\n            transactionIndex: cache.proposals[proposalId].creationEvent.transactionIndex,\n            logIndex: cache.proposals[proposalId].creationEvent.logIndex,\n            timestamp: cache.proposals[proposalId].creationEvent.timestamp\n          }\n        })\n        return cache.proposals[proposalId].creationEvent;\n      })\n      : [];\n\n    history = history.concat(proposalEvents.votes.map((event) => {\n      return {\n        text: `Voted with ${event.amount} REP for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Staked ${event.amount} DXD for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      newProposalEvents: newProposalEvents,\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      history: history\n    }\n  }\n  \n  getProposalStatus(proposalId: string): any {\n    const proposal = this.getCache().proposals[proposalId];\n    const proposalStateChangeEvents = this.getProposalStateChanges(proposalId);\n    const scheme = this.getCache().schemes[proposal.scheme];\n    const votingMachineOfProposal = this.getVotingMachineOfProposal(proposalId);\n    const networkConfig = this.rootStore.configStore.getNetworkConfig();\n    const votingMachineParams = \n    (proposal.paramsHash == \"0x0000000000000000000000000000000000000000000000000000000000000000\")\n    ? this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[scheme.paramsHash]\n    : this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[proposal.paramsHash];\n    \n    const autoBoost = (networkConfig.votingMachines.dxd && networkConfig.votingMachines.dxd.address == votingMachineOfProposal)\n    return decodeProposalStatus(\n      proposal, proposalStateChangeEvents, votingMachineParams, scheme.maxSecondsForExecution, autoBoost\n    );\n  }\n  \n  getVotesOfProposal(proposalId: string): Vote[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.votes\n      .filter((vote) => {return (proposalId === vote.proposalId)});\n  }\n  \n  getStakesOfProposal(proposalId: string): Stake[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.stakes\n      .filter((stake) => {return (proposalId === stake.proposalId)});\n  }\n  \n  getRedeemsOfProposal(proposalId: string): Redeem[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeems\n      .filter((redeem) => {return (proposalId === redeem.proposalId)});\n  }\n  \n  getRedeemsRepOfProposal(proposalId: string): RedeemRep[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeemsRep\n      .filter((redeemRep) => {return (proposalId === redeemRep.proposalId)});\n  }\n  \n  getProposalStateChanges(proposalId: string): ProposalStateChange[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.proposalStateChanges\n      .filter((proposalStateChange) => {return (proposalId === proposalStateChange.proposalId)});\n  }\n\n  getSchemeRecommendedCalls(schemeAddress): Any {\n    const networkConfig = this.rootStore.configStore.getNetworkConfig();\n    const scheme = this.getScheme(schemeAddress);\n    const callPermissions = this.getCache().callPermissions;\n    let assetLimits = {};\n    const from = scheme.controllerAddress == networkConfig.controller ? networkConfig.avatar : schemeAddress;\n    const recommendedCalls = getCalls(this.rootStore.configStore.getActiveChainName());\n    \n    Object.keys(callPermissions).map((assetAddress) => {\n      const callAllowance = this.getCallAllowance(assetAddress, from, schemeAddress, ANY_FUNC_SIGNATURE);\n      if (callAllowance.fromTime > 0)\n        assetLimits[assetAddress] = callAllowance.value;\n    })\n\n    for (let i = 0; i < recommendedCalls.length; i++) {\n      const callAllowance = this.getCallAllowance(\n        recommendedCalls[i].asset,\n        from,\n        recommendedCalls[i].to,\n        recommendedCalls[i].functionSignature\n      );\n      recommendedCalls[i].value = callAllowance.value;\n      recommendedCalls[i].fromTime = callAllowance.fromTime;\n    }\n    \n    return { assetLimits, recommendedCalls };\n  }\n  \n  getCallAllowance(asset, from, to, functionSignature): Any {\n    const networkConfig = this.rootStore.configStore.getNetworkConfig();\n    const callPermissions = this.getCache().callPermissions;\n  \n    if (to == networkConfig.controller && from != networkConfig.avatar) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (\n      to == networkConfig.permissionRegistry\n      && from == networkConfig.avatar\n      && (functionSignature == \"0x969e6fbd\" || functionSignature == \"0x39af6ba9\")\n    ) {\n      return {\n        value: bnum(0),\n        fromTime: 1\n      };\n    } else if (\n      to == networkConfig.permissionRegistry\n      && from != networkConfig.avatar\n      && (functionSignature == \"0x969e6fbd\" || functionSignature == \"0x39af6ba9\")\n    ) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (!callPermissions[asset] || !callPermissions[asset][from]) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (callPermissions[asset][from][to] && callPermissions[asset][from][to][functionSignature]) {\n      return {\n        value: callPermissions[asset][from][to][functionSignature].value,\n        fromTime: callPermissions[asset][from][to][functionSignature].fromTime\n      };\n    } else if (callPermissions[asset][from][to] && callPermissions[asset][from][to][ANY_FUNC_SIGNATURE]) {\n      return {\n        value: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].value,\n        fromTime: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].fromTime\n      };\n    } else if (callPermissions[asset][from][ANY_ADDRESS] && callPermissions[asset][from][ANY_ADDRESS][functionSignature]) {\n      return {\n        value: callPermissions[asset][from][ANY_ADDRESS][functionSignature].value,\n        fromTime: callPermissions[asset][from][ANY_ADDRESS][functionSignature].fromTime\n      };\n    } else if (callPermissions[asset][from][ANY_ADDRESS] && callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE]) {\n      return {\n        value: callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].value,\n        fromTime: callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].fromTime\n      };\n    } else {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    }\n  }\n  \n  createProposal(\n    scheme: string,\n    schemeType: string,\n    proposalData: any\n  ): PromiEvent<any> {\n    const networkConfig = this.rootStore.configStore.getNetworkConfig();\n    const { providerStore } = this.rootStore;\n    const { library } = providerStore.getActiveWeb3React();\n\n    if (schemeType == \"ContributionReward\") {\n      // function proposeContributionReward(\n      //   Avatar _avatar,\n      //   string memory _descriptionHash,\n      //   int256 _reputationChange,\n      //   uint256[5] memory _rewards,\n      //   IERC20 _externalToken,\n      //   address payable _beneficiary\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeContributionReward',\n            type: 'function',\n            inputs: [\n              { type: 'address', name: '_avatar' },\n              { type: 'string', name: '_descriptionHash' },\n              { type: 'int256', name: '_reputationChange' },\n              { type: 'uint256[5]', name: '_rewards' },\n              { type: 'address', name: '_externalToken' },\n              { type: 'address', name: '_beneficiary' }\n            ]\n        },[\n          networkConfig.avatar,\n          contentHash.decode(proposalData.descriptionHash),\n          proposalData.reputationChange,\n          [0, proposalData.ethValue, proposalData.tokenValue, 0, 1],\n          proposalData.externalToken,\n          proposalData.beneficiary,\n        ]),\n        \"0\"\n      );\n    } else if (schemeType == \"GenericMulticall\") {\n      // function proposeCalls(\n      //   address[] memory _contractsToCall,\n      //   bytes[] memory _callsData,\n      //   uint256[] memory _values,\n      //   string memory _descriptionHash\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeCalls',\n            type: 'function',\n            inputs: [\n              { type: 'address[]', name: '_contractsToCall' },\n              { type: 'bytes[]', name: '_callsData' },\n              { type: 'uint256[]', name: '_values' },\n              { type: 'string', name: '_descriptionHash' }\n            ]\n        },[\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          contentHash.decode(proposalData.descriptionHash)\n        ]),\n        \"0\"\n      );\n    } else {\n      return providerStore.sendTransaction(\n        providerStore.getActiveWeb3React(),\n        ContractType.WalletScheme,\n        scheme,\n        'proposeCalls',\n        [\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          proposalData.titleText,\n          proposalData.descriptionHash\n        ],\n        {}\n      );\n    }\n  }\n  \n  vote(\n    decision: Number,\n    amount: Number,\n    proposalId: String,\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    const { account } = providerStore.getActiveWeb3React();\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'vote',\n      [proposalId, decision, amount.toString(), account],\n      {}\n    );\n  }\n  \n  approveVotingMachineToken(votingMachineAddress): PromiEvent<any> {\n    const { providerStore, configStore, blockchainStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.ERC20,\n      this.getCache().votingMachines[votingMachineAddress].token.address,\n      'approve',\n      [votingMachineAddress, utils.bigNumberify(ethers.constants.MaxUint256)],\n      {}\n    );\n  }\n  \n  stake(\n    decision: Number,\n    amount: Number,\n    proposalId: String,\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'stake',\n      [proposalId, decision, amount.toString()],\n      {}\n    );\n  }\n  \n  execute(\n    proposalId: String,\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'execute',\n      [proposalId],\n      {}\n    );\n  }\n  \n  redeem(\n    proposalId: String, account: string\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'redeem',\n      [proposalId, account],\n      {}\n    );\n  }\n}\n","import { bnum } from './helpers';\nimport moment from 'moment';\nimport { BigNumber } from 'bignumber.js';\n\nexport const calculateStakes = function(thresholdConst, boostedProposals, preBoostedProposals, upstakes, downstakes ) {\n\n  // No idea why but the estimation of staking token by diving the thresholdConst get on chain by 0.90...\n  // I think it might be due to the precision magic used in the real number library used in teh GenensisProtocol\n  thresholdConst = thresholdConst.times(0.90949470177);\n  let threshold = thresholdConst.div(10**12).pow(boostedProposals);\n  if (threshold.lt(1.0001))\n    threshold = bnum(\"1.0001\");\n    \n  let recommendedThreshold = thresholdConst.div(10**12).pow(Number(boostedProposals) + Number(preBoostedProposals));\n  if (recommendedThreshold.lt(1.0001))\n    recommendedThreshold = bnum(\"1.0001\");\n    \n  // console.log(\"--\", boostedProposals, preBoostedProposals);\n  // console.log(\"thresholdConst\", thresholdConst.div(10**12).toString());\n  // console.log(\"score\", upstakes.div(downstakes).toString())\n  // console.log(\"threshold\", threshold.toString());\n  // console.log(\n  //   downstakes.times(threshold).minus(upstakes).div(10**18).toString(),\n  //   upstakes.div(threshold).minus(downstakes).div(10**18).toString()\n  // )\n  // console.log(\"recommendedThreshold\", recommendedThreshold.toString());\n  // console.log(\n  //   downstakes.times(recommendedThreshold).minus(upstakes).div(10**18).toString(),\n  //   upstakes.div(recommendedThreshold).minus(downstakes).div(10**18).toString()\n  // )\n  \n  return {\n    stakeToBoost: downstakes.times(threshold).minus(upstakes),\n    stakeToUnBoost: upstakes.div(threshold).minus(downstakes),\n    recommendedStakeToBoost: downstakes.times(recommendedThreshold).minus(upstakes),\n    recommendedStakeToUnBoost: upstakes.div(recommendedThreshold).minus(downstakes)\n  }\n\n}\n\nexport const decodeProposalStatus = function(\n  proposal, proposalStateChangeEvents, votingMachineParams, maxSecondsForExecution, autoBoost\n) {\n  const timeNow = bnum(moment().unix());\n  const queuedVotePeriodLimit = votingMachineParams.queuedVotePeriodLimit;\n  const boostedVotePeriodLimit = votingMachineParams.boostedVotePeriodLimit;\n  const preBoostedVotePeriodLimit = votingMachineParams.preBoostedVotePeriodLimit;\n  const quietEndingPeriod = votingMachineParams.quietEndingPeriod;\n  const boostedPhaseTime = proposal.boostedPhaseTime;\n  const submittedTime = proposal.submittedTime;\n  const preBoostedPhaseTime = proposal.preBoostedPhaseTime;\n\n  // TODO: take in count that gen voting machine dont boost automatically\n  switch (proposal.stateInVotingMachine) {\n    case \"1\":\n      return { \n        status: \"Expired in Queue\", \n        boostTime: bnum(0), \n        finishTime: submittedTime.plus(queuedVotePeriodLimit)\n      };\n    case \"2\":\n      if (proposal.stateInScheme == \"2\")\n        return { \n          status: \"Proposal Rejected\", \n          boostTime: boostedPhaseTime,\n          finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n        };\n      else if (proposal.stateInScheme == \"3\")\n        return { \n          status: \"Execution Succeded\", \n          boostTime: boostedPhaseTime,\n          finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n        };\n      else if (proposal.stateInScheme == \"4\")\n        return { \n          status: \"Execution Timeout\", \n          boostTime: boostedPhaseTime,\n          finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n        };\n      else return { \n        status: \"Passed\", \n        boostTime: boostedPhaseTime,\n        finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n      };\n    case \"3\":\n      if (timeNow > submittedTime.plus(queuedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Expired in Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      } else {\n        return { \n          status: \"In Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      }\n    case \"4\":\n      if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).plus(maxSecondsForExecution).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Execution Timeout\",\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Boost\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (autoBoost && timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\",\n          boostTime: boostedPhaseTime,\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (timeNow > submittedTime.plus(queuedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"In Queue\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      } else {\n        return { \n          status: \"Pre Boosted\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      }\n    case \"5\":\n      if (timeNow > boostedPhaseTime.plus(boostedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit)\n        };\n      } else {\n        return { \n          status: \"Boosted\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit)\n        };\n      }\n    case \"6\":\n      return { \n        status: \"Quiet Ending Period\", \n        boostTime: boostedPhaseTime,\n        finishTime: boostedPhaseTime.plus(quietEndingPeriod)\n      };\n  }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { ContractType } from './Provider';\nimport { bnum } from '../utils/helpers';\n\nexport default class UserStore {\n  userInfo: UserInfo;\n  rootStore: RootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.userInfo = {\n      address: rootStore.providerStore.getActiveWeb3React(),\n      ethBalance: bnum(0),\n      repBalance: bnum(0),\n      dxdBalance: bnum(0),\n      dxdApproved: bnum(0),\n      genBalance: bnum(0),\n      genApproved: bnum(0)\n    };\n    makeObservable(this, {\n        userInfo: observable,\n        update: action\n      }\n    );\n  }\n  \n  getUserInfo() {\n    return this.userInfo;\n  }\n\n  update() {\n    const { configStore, providerStore, blockchainStore } = this.rootStore;\n    const { account } = providerStore.getActiveWeb3React();\n    \n    const repBalance = account ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.Reputation,\n      address: configStore.getNetworkConfig().reputation,\n      method: 'balanceOf',\n      params: [account]\n    }) : bnum(0);\n    \n    const ethBalance = account ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.Multicall,\n      address: configStore.getNetworkConfig().multicall,\n      method: 'getEthBalance',\n      params: [account]\n    }) : bnum(0);\n    \n    const dxdBalance = account && configStore.getNetworkConfig().votingMachines.dxd \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.dxd.token,\n      method: 'balanceOf',\n      params: [account]\n    }) : bnum(0);\n    \n    const dxdApproved = account && configStore.getNetworkConfig().votingMachines.dxd \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.dxd.token,\n      method: 'allowance',\n      params: [account, configStore.getNetworkConfig().votingMachines.dxd.address]\n    }) : bnum(0);\n    \n    const genBalance = account && configStore.getNetworkConfig().votingMachines.gen \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.gen.token,\n      method: 'balanceOf',\n      params: [account]\n    }) : bnum(0);\n    \n    const genApproved = account && configStore.getNetworkConfig().votingMachines.gen \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.gen.token,\n      method: 'allowance',\n      params: [account, configStore.getNetworkConfig().votingMachines.gen.address]\n    }) : bnum(0);\n    \n    this.userInfo = {\n      address: account,\n      ethBalance,\n      repBalance,\n      dxdBalance,\n      dxdApproved,\n      genBalance,\n      genApproved\n    };\n  }\n  \n}\n","import RootStore from 'stores';\nimport { makeObservable, observable, action } from 'mobx';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { isChainIdSupported } from '../provider/connectors';\nimport { ContractType } from './Provider';\nimport { decodeSchemeParameters } from '../utils/scheme';\nimport { decodePermission } from '../utils/permissions';\nimport { bnum } from '../utils/helpers';\nconst { updateNetworkCache } = require('../cache');\nimport { getTokensToFetchPrice } from '../config';\n\nexport default class BlockchainStore {\n  activeFetchLoop: boolean = false;\n  initialLoadComplete: boolean;\n  contractStorage: ContractStorage = {};\n  eventsStorage: EventStorage = {};\n  rootStore: RootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    makeObservable(this, {\n        activeFetchLoop: observable,\n        initialLoadComplete: observable,\n        updateStore: action,\n        fetchData: action\n      }\n    );\n  }\n\n  reduceMulticall(calls: Call[], results: any, blockNumber: number): CallEntry[] {\n    const { multicallService } = this.rootStore;\n    return calls.map((call, index) => {\n      const value = multicallService.decodeCall(call, results[index]);\n      return {\n        contractType: call.contractType,\n        address: call.address,\n        method: call.method,\n        params: call.params,\n        response: {\n          value: value,\n          lastFetched: blockNumber\n        }\n      };\n    });\n  }\n  \n  async executeAndUpdateMulticall(multicallService){\n    const multicallResponse = await multicallService.executeCalls();\n    this.updateStore(\n      this.reduceMulticall(\n        multicallResponse.calls, multicallResponse.results, multicallResponse.blockNumber\n      ),\n      multicallResponse.blockNumber\n    );\n    multicallService.resetActiveCalls();\n  }\n\n  has(entry: Call): boolean {\n    const params = entry.params ? entry.params : [];\n    return (\n      !!this.contractStorage[entry.contractType] &&\n      !!this.contractStorage[entry.contractType][entry.address] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ]\n    );\n  }\n\n  getCachedValue(entry: Call) {\n    if (this.has(entry)) {\n      return this.get(entry).value.toString();\n    } else {\n      return undefined;\n    }\n  }\n  \n  getCachedEvents(address: string, eventName: string) {\n    if (this.eventsStorage[address] && this.eventsStorage[address][eventName])\n      return this.eventsStorage[address][eventName].emitions;\n    else\n      return [];\n  }\n\n  get(entry: Call): CallValue | undefined {\n    if (this.has(entry)) {\n      const params = entry.params ? entry.params : [];\n      return this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n    } else {\n      return undefined;\n    }\n  }\n\n  updateStore(entries: CallEntry[], blockNumber: number) {\n    entries.forEach((entry) => {\n      const params = entry.params ? entry.params : [];\n      if (!this.contractStorage[entry.contractType]) {\n        this.contractStorage[entry.contractType] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address]) {\n        this.contractStorage[entry.contractType][entry.address] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address][entry.method]) {\n        this.contractStorage[entry.contractType][entry.address][entry.method] = {};\n      }\n\n      if (\n        !this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ]\n      ) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n\n      const oldEntry = this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n\n      // Set if never fetched, or if the new data isn't stale\n      if (!oldEntry.lastFetched || (oldEntry.lastFetched && oldEntry.lastFetched <= blockNumber)) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n    });\n  }\n    \n  async fetchData(web3React: Web3ReactContextInterface, reset: boolean) {\n    if (!this.activeFetchLoop || reset\n      && web3React\n      && web3React.active\n      && isChainIdSupported(web3React.chainId)\n    ) {\n      this.initialLoadComplete = (reset) ? false : this.initialLoadComplete;\n      this.activeFetchLoop = true;\n      const { library, account, chainId } = web3React;\n      const {\n        providerStore,\n        configStore,\n        multicallService,\n        transactionStore,\n        daoStore,\n        userStore\n      } = this.rootStore;\n\n      let networkCache = daoStore.getCache();\n      const blockNumber = await library.eth.getBlockNumber();\n      const lastCheckedBlockNumber = networkCache.l1BlockNumber;\n\n      if (blockNumber > lastCheckedBlockNumber) {\n        console.debug('[Fetch Loop] Fetch Blockchain Data', { blockNumber, account, chainId });\n        \n        const fromBlock = lastCheckedBlockNumber + 1;\n        const toBlock = blockNumber;\n        const networkName = configStore.getActiveChainName();\n        const networkConfig = configStore.getNetworkConfig();\n        networkCache = await updateNetworkCache(networkCache, networkName, fromBlock, toBlock, library);\n        \n        let tokensBalancesCalls = [];\n        const tokens = getTokensToFetchPrice(this.rootStore.configStore.getActiveChainName());\n        tokens.map((tokenAddress) => {\n          if (!networkCache.daoInfo.tokenBalances[tokenAddress])\n            tokensBalancesCalls.push({\n              contractType: ContractType.ERC20,\n              address: tokenAddress,\n              method: 'balanceOf',\n              params: [networkConfig.avatar],\n            });\n          Object.keys(networkCache.schemes).map((schemeAddress) => {\n            if (networkCache.schemes[schemeAddress].controllerAddress != networkConfig.controller)\n              tokensBalancesCalls.push({\n                contractType: ContractType.ERC20,\n                address: tokenAddress,\n                method: 'balanceOf',\n                params: [schemeAddress],\n              });\n          })\n        });\n\n        if (tokensBalancesCalls.length > 0)\n          multicallService.addCalls(tokensBalancesCalls);\n        await this.executeAndUpdateMulticall(multicallService);\n        \n        tokensBalancesCalls.map((tokensBalancesCall) => {\n          if (tokensBalancesCall.params[0] == networkConfig.avatar) {\n            networkCache.daoInfo.tokenBalances[tokensBalancesCall.address] =\n              this.rootStore.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          } else {\n            networkCache.schemes[tokensBalancesCall.params[0]].tokenBalances[tokensBalancesCall.address] =\n              this.rootStore.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          }\n        });\n        \n        // Get user-specific blockchain data\n        if (account) {\n          transactionStore.checkPendingTransactions(web3React, account);\n          let accountCalls = [{\n            contractType: ContractType.Multicall,\n            address: networkConfig.utils.multicall,\n            method: 'getEthBalance',\n            params: [account],\n          },{\n            contractType: ContractType.Reputation,\n            address: networkConfig.reputation,\n            method: 'balanceOf',\n            params: [account],\n          }];\n          \n          if (networkConfig.votingMachines.gen) {\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.gen.token,\n              method: 'balanceOf',\n              params: [account],\n            });\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.gen.token,\n              method: 'allowance',\n              params: [account, networkConfig.votingMachines.gen.address],\n            });\n          }\n          if (networkConfig.votingMachines.dxd) {\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.dxd.token,\n              method: 'balanceOf',\n              params: [account],\n            });\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.dxd.token,\n              method: 'allowance',\n              params: [account, networkConfig.votingMachines.dxd.address],\n            });\n          }\n          \n          multicallService.addCalls(accountCalls);\n          await this.executeAndUpdateMulticall(multicallService);\n          userStore.update();\n        };\n        \n        networkCache.l1BlockNumber = toBlock;\n        providerStore.setCurrentBlockNumber(toBlock);\n      }\n      daoStore.updateNetworkCache(networkCache, configStore.getActiveChainName());\n\n      this.initialLoadComplete = true;\n      this.activeFetchLoop = false;\n    }\n  }\n}\n","import { Interface } from 'ethers/utils';\nimport RootStore from '../stores';\nimport { ContractType } from '../stores/Provider';\nimport { Call } from '../types';\n\n\nexport default class MulticallService {\n  root: RootStore;\n\n  activeCalls: Call[];\n  activeCallsRaw: any[];\n\n  constructor(root: RootStore) {\n    this.root = root;\n    this.resetActiveCalls();\n  }\n\n  // Add call additions and removals\n  async executeCalls(calls?: Call[], rawCalls?: any[]) {\n    const { providerStore, configStore } = this.root;\n\n    const multi = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Multicall,\n      configStore.getNetworkConfig().utils.multicall\n    );\n\n    const response = await multi.methods.aggregate(rawCalls || this.activeCallsRaw).call();\n    return {\n      calls: calls || this.activeCalls,\n      results: response.returnData,\n      blockNumber: response.blockNumber,\n    };\n  }\n\n  addCalls(calls: Call[]) {\n    calls.forEach(call => this.addCall(call));\n  }\n\n  addCall(call: Call) {\n    this.addContractCall(call);\n  }\n\n  addContractCall(call: Call) {\n    const { abiService } = this.root;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    call.params = call.params ? call.params : [];\n    const encoded = iface.functions[call.method].encode(call.params);\n    this.activeCallsRaw.push([call.address, encoded]);\n    this.activeCalls.push(call);\n  }\n\n  decodeCall(call: Call, result: any) {\n    const { abiService } = this.root;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    return iface.functions[call.method].decode(result);\n  }\n\n  resetActiveCalls() {\n    this.activeCalls = [];\n    this.activeCallsRaw = [];\n  }\n}\n","// Token Scale -> Wei Scale\nimport { BigNumber } from './bignumber';\nimport { bnum, DEFAULT_TOKEN_DECIMALS, scale } from './helpers';\n\nexport const denormalizeBalance = (\n    normalizedBalance: string | BigNumber,\n    decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n    return scale(bnum(normalizedBalance), decimals);\n};\n\n// Wei Scale -> Token Scale\nexport const normalizeBalance = (\n    amount: BigNumber,\n    decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n    return scale(bnum(amount), -decimals);\n};\n\nexport const formatNumberValue = (\n    normalizedBalance: BigNumber,\n    displayPrecision: number = 4,\n    truncateAt?: number,\n    roundDown: boolean = true\n): string => {\n    if (normalizedBalance.eq(0)) {\n        return bnum(0).toFixed(displayPrecision);\n    }\n\n    let result = bnum(normalizedBalance)\n        .decimalPlaces(displayPrecision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n        .toString();\n\n    result = padToDecimalPlaces(result, displayPrecision);\n\n    if (truncateAt && result.length > truncateAt) {\n        return result.substring(0, 20) + '...';\n    } else {\n        return result;\n    }\n};\n\nexport const formatBalance = (\n    balance: BigNumber,\n    decimals: number = 18,\n    precision: number = 4,\n    roundDown: boolean = true\n): string => {\n    if (balance.eq(0)) {\n        return bnum(0).toFixed(precision);\n    }\n\n    const result = scale(balance, -decimals)\n        .decimalPlaces(precision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n        .toString();\n\n    return padToDecimalPlaces(result, precision);\n};\n\nexport const padToDecimalPlaces = (\n    value: string,\n    minDecimals: number\n): string => {\n    const split = value.split('.');\n    const zerosToPad = split[1] ? minDecimals - split[1].length : minDecimals;\n\n    if (zerosToPad > 0) {\n        let pad = '';\n\n        // Add decimal point if no decimal portion in original number\n        if (zerosToPad === minDecimals) {\n            pad += '.';\n        }\n        for (let i = 0; i < zerosToPad; i++) {\n            pad += '0';\n        }\n        return value + pad;\n    }\n    return value;\n};\n","import RootStore from '../stores';\nimport { ContractType } from '../stores/Provider';\nimport { BigNumber } from '../utils/bignumber';\nimport { bnum, ERC20_TRANSFER_SIGNATURE } from '../utils/helpers';\nimport { normalizeBalance } from '../utils/token';\n\nexport default class DaoService {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  encodeControllerGenericCall(\n    to: string,\n    callData: string,\n    value: BigNumber\n  ){\n    const { providerStore, configStore } = this.rootStore;\n    const controller = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Controller,\n      configStore.getNetworkConfig().controller\n    )\n    const avatarAddress = configStore.getNetworkConfig().avatar;\n    return controller.methods.genericCall(to, callData, avatarAddress, value).encodeABI();\n  }\n  \n  decodeControllerCall(callData: string){\n    const { abiService, providerStore } = this.rootStore;\n    const { library } = providerStore.getActiveWeb3React();\n    const callDecoded = abiService.decodeCall(ContractType.Controller, callData);\n    if (!callDecoded) {\n      return \"Couldnt decode call\";\n    } else {\n      switch (callDecoded.function.name) {\n        case \"registerScheme\":\n          return \"Register scheme \"+callDecoded.args[0]+\" with params hash \"+callDecoded.args[1]+\" and permissions \"+callDecoded.args[2];\n        case \"unregisterScheme\":\n          return \"Unregister scheme \"+callDecoded.args[0];\n        case \"externalTokenTransfer\":\n          return \"Send \"+callDecoded.args[2]+\" tokens of contract \"+callDecoded.args[0]+\" to \"+callDecoded.args[1];\n        case \"sendEther\":\n          return \"Send \"+normalizeBalance(callDecoded.args[0], 18)+\" ETH to \"+callDecoded.args[1];\n        case \"mintReputation\":\n          return \"Mint \"+normalizeBalance(callDecoded.args[0], 18)+\" REP to \"+callDecoded.args[1];\n        case \"burnReputation\":\n          return \"Burn \"+normalizeBalance(callDecoded.args[0], 18)+\" REP of \"+callDecoded.args[1];\n        case \"genericCall\":\n          const genericCallData = callDecoded.args[1];\n          \n          // TO DO: Decode more functions here \n          if (genericCallData.substring(0,10) == ERC20_TRANSFER_SIGNATURE) {\n            const transferParams = library.eth.abi.decodeParameters(['address', 'uint256'], \"0x\"+genericCallData.substring(10));\n            return \"Token \"+callDecoded.args[0]+\" transfer to \"+transferParams[0]+\" of \"+transferParams[1];\n          } else {\n            return \"Generic Call to \"+callDecoded.args[0]+\" with data of \"+genericCallData+\" using a value of \"+library.utils.fromWei(callDecoded.args[3]);\n          }\n      }\n    }\n  }\n  \n  getRepAt(atBlock: number, l2BlockNumber: boolean = false): {\n    userRep: BigNumber,\n    totalSupply: BigNumber\n  } {\n    const { daoStore, providerStore } = this.rootStore;\n    const { account } = providerStore.getActiveWeb3React();\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\n    let userRep = bnum(0), totalSupply = bnum(0);\n\n    for (let i = 0; i < repEvents.length; i++) {\n      if (repEvents[i][l2BlockNumber ? 'l2BlockNumber' : 'l1BlockNumber'] <= atBlock) {\n        if (repEvents[i].event === 'Mint') {\n          totalSupply = totalSupply.plus(repEvents[i].amount)\n          if (repEvents[i].account == account)\n            userRep = userRep.plus(repEvents[i].amount)\n        } else if (repEvents[i].event === 'Burn') {\n          totalSupply = totalSupply.minus(repEvents[i].amount)\n          if (repEvents[i].account == account)\n            userRep = userRep.minus(repEvents[i].amount)\n        }\n      }\n    }\n\n\n    return { userRep, totalSupply };\n  }\n}\n","import RootStore from '../stores';\nimport _ from 'lodash';\nimport { ContractType } from '../stores/Provider';\n\nexport interface EventCall {\n  contractType: ContractType;\n  address: string;\n  eventName: string;\n  fromBlock: number;\n  toBlock: number;\n  executed?: boolean;\n}\n\nexport default class EventsService {\n  rootStore: RootStore;  \n\n  activeEventsCalls: EventCall[];\n    \n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    this.activeEventsCalls = [];\n  }\n  \n  async getEvents(\n    contractType: ContractType,\n    address: string,\n    eventName: string,\n    fromBlock: number,\n    toBlock: number\n  ){\n    const { providerStore } = this.rootStore;\n    const contract = providerStore.getContract(providerStore.getActiveWeb3React(), contractType, address);\n    console.log('Getting event',eventName, fromBlock, toBlock);\n    return _.orderBy( \n      await contract.getPastEvents(eventName, {fromBlock: fromBlock, toBlock: toBlock })\n      , [\"blockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  async executeActiveEventCalls() {\n    return await Promise.all(this.activeEventsCalls.map(async (activeEventCall) => {\n      return await this.getEvents(\n        activeEventCall.contractType,\n        activeEventCall.address,\n        activeEventCall.eventName,\n        activeEventCall.fromBlock,\n        activeEventCall.toBlock\n      )\n    }));\n  }\n\n  addEventsCalls(events: EventCall[]) {\n    events.forEach(event => this.addEventCall(event));\n  }\n\n  addEventCall(event: EventCall) {\n    this.activeEventsCalls.push(event);\n  }\n\n  resetActiveEventCalls() {\n    this.activeEventsCalls = [];\n  }\n  \n}\n","import RootStore from '../stores';\nimport IPFS from 'ipfs-core';\nimport contentHash from 'content-hash';\nimport axios from \"axios\";\nconst CID = require('cids')\n\nexport default class IPFSService {\n  rootStore: RootStore;\n  calls: {[hash:string]: {\n    time: Number,\n    content: String,\n    fetched: Boolean\n  }} = {};\n  ipfs: any = null;\n  started: Boolean = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async start(){\n    if (!this.ipfs && !this.started) {\n      this.started = true;\n      try {\n        this.ipfs = await IPFS.create();\n      } catch (error) {\n        console.error('[IPFS]', error);\n      }\n    }\n  }\n\n  async add(content: String) {\n    const { cid } = await this.ipfs.add({content});\n    console.log(cid.string)\n    return cid.string;\n  }\n  \n  async pin(hash: String){\n    console.log(new CID(hash))\n    return await this.ipfs.pin.add(new CID(hash));\n  }\n  \n  async getContent(hash: String){\n    const content = []\n    for await (const file of this.ipfs.get(hash)) {\n      console.debug(\"[IPFS FILE]\",file.type, file.path);\n      if (!file.content) continue;\n      for await (const chunk of file.content) {\n        content.push(chunk)\n      }\n    }\n    return content.toString(\"utf8\");\n  }\n}\n","import RootStore from '../stores';\nimport axios from \"axios\";\nimport contentHash from 'content-hash';\n\nexport default class PinataService {\n  rootStore: RootStore;\n  auth: Boolean = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async updatePinList() {\n    const pinList = await this.getPinList();\n    const ipfsHashes = this.rootStore.daoStore.getCache().ipfsHashes;\n    const alreadyPinned = pinList.data.rows;\n    for (let i = 0; i < ipfsHashes.length; i++) {\n      // if (alreadyPinned.indexOf(pinned => alreadyPinned.ipfs_pin_hash == ipfsHashes[i].hash) < 0) {\n      //   console.debug('[PINATA] Pinning:', ipfsHashes[i].hash);\n      // } else {\n      //   console.debug('[PINATA] Alpready pinned:', ipfsHashes[i].hash);\n      // }\n    }\n  }\n  \n  async isAuthenticated(){\n    const pinataApiKey = this.rootStore.configStore.getLocalConfig().pinata;\n    try {\n      const auth = await axios({\n        method: \"GET\",\n        url: \"https://api.pinata.cloud/data/testAuthentication\",\n        headers: { Authorization: `Bearer ${pinataApiKey}` }\n      });\n      this.auth = auth.status == 200;\n    } catch (error) {\n      this.auth = false;\n    }\n  }\n\n  async pin(hashToPin: String){\n    console.log('pininng', hashToPin)\n    const pinataApiKey = this.rootStore.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"POST\",\n      url: \"https://api.pinata.cloud/pinning/pinByHash\",\n      data: {\n        hashToPin,\n        pinataMetadata: {\n          name: `DXdao ${this.rootStore.configStore.getActiveChainName()} DescriptionHash ${contentHash.fromIpfs(hashToPin)}`,\n          keyValues: { type: 'proposal' }\n        }\n      },\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n  \n  async getPinList(){\n    const pinataApiKey = this.rootStore.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"GET\",\n      url: `https://api.pinata.cloud/data/pinList?pageLimit=1000&metadata[name]=DXdao ${this.rootStore.configStore.getActiveChainName()}`,\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n}\n","import RootStore from '../stores';\nimport axios from \"axios\";\n\nexport default class EtherscanService {\n  rootStore: RootStore;\n  auth: Boolean = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async isAuthenticated(){\n    const etherscanAPIKey = this.rootStore.configStore.getLocalConfig().etherscan;\n    const { account } = this.rootStore.providerStore.getActiveWeb3React();\n    const auth = await axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=account&action=balance&address=${account}&tag=latest&apikey=${etherscanAPIKey}`,\n    });\n    this.auth = auth.data.status == 1;\n  }\n  \n  async getContractABI(address: string){\n    const etherscanAPIKey = this.rootStore.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n  \n  async getContractSource(address: string){\n    const etherscanAPIKey = this.rootStore.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n}\n","import RootStore from '../stores';\nimport axios from \"axios\";\nimport web3 from \"web3\";\nimport { getTokensToFetchPrice } from '../config';\n\nexport default class CoingeckoService {\n  rootStore: RootStore;\n  prices: any = {};\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async loadPrices(){\n    const tokens = getTokensToFetchPrice(this.rootStore.configStore.getActiveChainName());\n    const networkName = this.rootStore.configStore.getActiveChainName() == 'mainnet' ? 'ethereum'\n      : this.rootStore.configStore.getActiveChainName() == 'xdai' ? 'xdai'\n      : '';\n    \n    if (networkName == 'ethereum' || networkName == 'xdai') {\n      let tokenAddresses = \"\";\n      tokens.map((tokenAddress, i) => {\n        if (i == tokens.length - 1)\n          tokenAddresses += tokenAddress;\n        else\n        tokenAddresses += tokenAddress + \"%2C\";\n      })\n      console.log(`https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`)\n      const pricesResponse = await Promise.all([\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`\n        }),\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/price?ids=${networkName}&vs_currencies=usd`\n        })\n      ]);\n      \n      if ((pricesResponse[0].status == 200) && (pricesResponse[1].status == 200)){\n        this.prices = pricesResponse[0].data;\n        \n        Object.keys(this.prices).map((tokenAddress) => {\n          this.prices[web3.utils.toChecksumAddress(tokenAddress)] = this.prices[tokenAddress];\n          delete this.prices[tokenAddress];\n        });\n        \n        this.prices[\"0x0000000000000000000000000000000000000000\"] = pricesResponse[1].data[networkName];\n      }\n    }\n    return;\n  }\n  \n  getPrices() {\n    return this.prices;\n  }\n}\n","// src/contexts/index.tsx\nimport React from 'react';\nimport RootStore from 'stores';\n\nexport const storesContext = React.createContext({\n    root: new RootStore(),\n});\n\nexport const useStores = () => React.useContext(storesContext);\n","// Stores\nimport ProviderStore from './Provider';\nimport TransactionStore from './Transaction';\nimport ModalStore from './Modal';\nimport ConfigStore from './ConfigStore';\nimport DaoStore from './DaoStore';\nimport UserStore from './UserStore';\nimport BlockchainStore from './BlockchainStore';\nimport ABIService from '../services/ABIService';\nimport MulticallService from '../services/MulticallService';\nimport DaoService from '../services/DaoService';\nimport EventsService from '../services/EventsService';\nimport IPFSService from '../services/IPFSService';\nimport PinataService from '../services/PinataService';\nimport EtherscanService from '../services/EtherscanService';\nimport CoingeckoService from '../services/CoingeckoService';\n\nexport default class RootStore {\n  providerStore: ProviderStore;\n  transactionStore: TransactionStore;\n  modalStore: ModalStore;\n  configStore: ConfigStore;\n  daoStore: DaoStore;\n  userStore: UserStore;\n  blockchainStore: BlockchainStore;\n\n  abiService: ABIService;\n  multicallService: MulticallService;\n  daoService: DaoService;\n  eventsService: EventsService;\n  ipfsService: IPFSService;\n  pinataService: PinataService;\n  etherscanService: EtherscanService;\n  coingeckoService: CoingeckoService;\n\n  constructor() {\n    this.abiService = new ABIService(this);\n    this.multicallService = new MulticallService(this);\n    this.eventsService = new EventsService(this);\n    this.daoService = new DaoService(this);\n    this.ipfsService = new IPFSService(this);\n    this.pinataService = new PinataService(this);\n    this.etherscanService = new EtherscanService(this);\n    this.coingeckoService = new CoingeckoService(this);\n    this.providerStore = new ProviderStore(this);\n    this.transactionStore = new TransactionStore(this);\n    this.modalStore = new ModalStore(this);\n    this.configStore = new ConfigStore(this);\n    this.daoStore = new DaoStore(this);\n    this.userStore = new UserStore(this);\n    this.blockchainStore = new BlockchainStore(this);\n  }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport copy from 'copy-to-clipboard';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport function useCopyClipboard(timeout = 500): [S, Dispatch<SetStateAction<S>>] {\n    const [isCopied, setIsCopied] = useState(false);\n\n    const staticCopy = useCallback((text) => {\n        const didCopy = copy(text);\n        setIsCopied(didCopy);\n    }, []);\n\n    useEffect(() => {\n        if (isCopied) {\n            const hide = setTimeout(() => {\n                setIsCopied(false);\n            }, timeout);\n\n            return () => {\n                clearTimeout(hide);\n            };\n        }\n    }, [isCopied, setIsCopied, timeout]);\n\n    return [isCopied, staticCopy];\n}\n\n// modified from https://usehooks.com/usePrevious/\nexport function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef();\n\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\n","import React, { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { web3ContextNames, isChainIdSupported } from 'provider/connectors';\nimport { useEagerConnect, useInactiveListener } from 'provider/providerHooks';\nimport { useStores } from 'contexts/storesContext';\nimport { useInterval } from 'utils/helperHooks';\n\nconst BLOKCHAIN_FETCH_INTERVAL = 10000;\n\nconst Web3ReactManager = ({ children }) => {\n    const {\n        root: { providerStore, blockchainStore, daoStore },\n    } = useStores();\n\n    const web3ContextInjected = useWeb3React(web3ContextNames.injected);\n    const {\n        active: networkActive,\n        error: networkError\n    } = web3ContextInjected;\n\n    if (!providerStore.activeChainId)\n      providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n\n    console.debug('[Web3ReactManager] Start of render', {\n        injected: web3ContextInjected,\n        web3React: providerStore.getActiveWeb3React(),\n    });\n\n    // try to eagerly connect to an injected provider, if it exists and has granted access already\n    const triedEager = useEagerConnect();\n    \n    ethereum.on('chainChanged', (chainId) => {\n      // Handle the new chain.\n      // Correctly handling chain changes can be complicated.\n      // We recommend reloading the page unless you have good reason not to.\n      // providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n      // blockchainStore.fetchData(providerStore.getActiveWeb3React(), true);\n      window.location.reload();\n    });\n\n    ethereum.on('accountsChanged', (accounts) => {\n      // Handle the new accounts, or lack thereof.\n      // \"accounts\" will always be an array, but it can be empty.\n      // blockchainStore.fetchData(web3React, false);\n    });\n    \n    // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n    useInactiveListener(!triedEager);\n\n    // Fetch user blockchain data on an interval using current params\n    useInterval(\n      () => {\n        if (networkActive)\n          blockchainStore.fetchData(providerStore.getActiveWeb3React(), false)\n      }, BLOKCHAIN_FETCH_INTERVAL\n    );\n\n    const BlurWrapper = styled.div`\n        filter: blur(1px);\n    `;\n\n    const OverBlurModal = styled.div`\n      position: fixed;\n      z-index: 1;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      background-color: rgb(0,0,0);\n      background-color: rgba(0,0,0,0.4);\n      \n      .connectModalContent {\n        background-color: #fefefe;\n        max-width: 350px;\n        text-align: center;\n        margin: 15% auto;\n        padding: 20px;\n        border-radius: 4px;\n      }\n    `;\n\n    // on page load, do nothing until we've tried to connect to the injected connector\n    if (!triedEager) {\n        console.debug('[Web3ReactManager] Render: Eager load not tried');\n        return null;\n    }\n\n    if (networkError) {\n      console.debug('[Web3ReactManager] Render: Network error, showing modal error.');\n      return (\n        <div>\n          <OverBlurModal>\n            <div className=\"connectModalContent\">Ups, something broke :(</div>\n            </OverBlurModal>\n            <BlurWrapper>\n              {children}\n            </BlurWrapper>\n          </div>\n        );\n    // If network is not active show blur content\n  } else if(!networkActive) {\n      console.debug('[Web3ReactManager] Render: No active network');\n      // return (\n      //   <div>\n      //     <OverBlurModal>\n      //       <div className=\"connectModalContent\">Connect to a valid network</div>\n      //       </OverBlurModal>\n      //       <BlurWrapper>\n      //         {children}\n      //       </BlurWrapper>\n      //     </div>\n      //   );\n      return children;\n    } else {\n      console.debug( '[Web3ReactManager] Render: Active network, render children', { networkActive } );\n      return children;\n    }\n\n};\n\nexport default Web3ReactManager;\n","import { useEffect, useState } from 'react';\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { isMobile } from 'react-device-detect';\nimport { injected, web3ContextNames } from 'provider/connectors';\n\n/*  Attempt to connect to & activate injected connector\n    If we're on mobile and have an injected connector, attempt even if not authorized (legacy support)\n    If we tried to connect, or it's active, return true;\n */\nexport function useActiveWeb3React() {\n    return useWeb3ReactCore(web3ContextNames.injected);\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3ReactCore(web3ContextNames.injected);\n\n    const [tried, setTried] = useState(false);\n\n    useEffect(() => {\n        console.debug('[Injected Eager Connect]', injected);\n        injected.isAuthorized().then((isAuthorized) => {\n            console.debug('[Eager Connect] Activate injected if authorized', {\n                isAuthorized,\n            });\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            } else {\n                if (isMobile && window.ethereum) {\n                    activate(injected, undefined, true).catch(() => {\n                        setTried(true);\n                    });\n                } else {\n                    setTried(true);\n                }\n            }\n        });\n    }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (active) {\n            setTried(true);\n        }\n    }, [active]);\n\n    return tried;\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network they're on\n */\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3ReactCore(\n        web3ContextNames.injected\n    );\n\n    useEffect(() => {\n        const { ethereum } = window;\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            const handleAccountsChanged = (accounts) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    activate(injected, undefined, true).catch(() => {});\n                }\n            };\n\n            const handleNetworkChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            ethereum.on('chainChanged', handleChainChanged);\n            ethereum.on('networkChanged', handleNetworkChanged);\n            ethereum.on('accountsChanged', handleAccountsChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('chainChanged', handleChainChanged);\n                    ethereum.removeListener(\n                        'networkChanged',\n                        handleNetworkChanged\n                    );\n                    ethereum.removeListener(\n                        'accountsChanged',\n                        handleAccountsChanged\n                    );\n                }\n            };\n        }\n\n        return () => {};\n    }, [active, error, suppress, activate]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker === null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType !== null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React, { useEffect } from 'react';\nimport {\n    createGlobalStyle,\n    css,\n    ThemeProvider as StyledComponentsThemeProvider,\n} from 'styled-components';\nimport { useStores } from '../contexts/storesContext';\n\nexport const SUPPORTED_THEMES = {\n    DARK: 'DARK',\n    LIGHT: 'LIGHT',\n};\n\nconst MEDIA_WIDTHS = {\n    upToSmall: 600,\n    upToMedium: 960,\n    upToLarge: 1280,\n};\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce(\n    (accumulator, size) => {\n        accumulator[size] = (...args) => css`\n            @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n                ${css(...args)}\n            }\n        `;\n        return accumulator;\n    },\n    {}\n);\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default function ThemeProvider({ children }) {\n    const {\n        root: { configStore },\n    } = useStores();\n\n    const darkMode = configStore.darkMode;\n\n    useEffect(() => {\n        configStore.setDarkMode(darkMode);\n    }, [configStore, darkMode]);\n    return (\n        <StyledComponentsThemeProvider theme={theme(darkMode)}>\n          {children}\n        </StyledComponentsThemeProvider>\n    );\n}\n\nconst theme = (darkMode) => ({\n    white,\n    black,\n    textColor: darkMode ? white : '#010101',\n    greyText: darkMode ? white : '#6C7284',\n\n    // for setting css on <html>\n    backgroundColor: darkMode ? '#333639' : white,\n    \n    activeButtonBackground: \"#536DFE\",\n\n    modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n    inputBackground: darkMode ? '#202124' : white,\n    placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n    shadowColor: darkMode ? '#000' : '#2F80ED',\n    \n    borderStyle: \"rgba(14, 0, 135, 0.1) 0px 2px 10px, rgba(14, 0, 135, 0.05) 0px 12px 32px\",\n\n    // grays\n    concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n    mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n    silverGray: darkMode ? '#737373' : '#C4C4C4',\n    chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n    doveGray: darkMode ? '#C4C4C4' : '#737373',\n    mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n    activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n    buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n    tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n\n    //blacks\n    charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n    // blues\n    zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\n    // TODO refactor; malibuBlue changed as quick hack to a different color JK 013120\n    malibuBlue: darkMode ? '#E67AEF' : '#4C5480',\n    // TODO refactor; royalBlue changed as quick hack to a different color JK 013120\n    royalBlue: darkMode ? '#DC6BE5' : '#fafafa',\n    loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\n\n    // purples\n    wisteriaPurple: '#DC6BE5',\n    // reds\n    salmonRed: '#FF6871',\n    // orange\n    pizazzOrange: '#FF8F05',\n    // yellows\n    warningYellow: '#FFE270',\n    // body text color\n    bodyText: '#90a4ae',\n    //green\n    connectedGreen: '#27AE60',\n\n    //branded\n    metaMaskOrange: '#E8831D',\n\n    //specific\n    textHover: darkMode ? '#90a4ae' : '#C4C4C4',\n\n    // connect button when loggedout\n    buttonFaded: darkMode ? '#DC6BE5' : '#737373',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n        display: flex;\n        flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n        display: flex;\n        flex-flow: row nowrap;\n    `,\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { ethers, utils } from 'ethers';\n\nexport function shortenAddress(address, digits = 4) {\n    if (!isAddress(address)) {\n        throw Error(`Invalid 'address' parameter '${address}'.`);\n    }\n    return `${address.substring(0, digits + 2)}...${address.substring(\n        42 - digits\n    )}`;\n}\n\nexport function isAddress(value) {\n    try {\n        return ethers.utils.getAddress(value.toLowerCase());\n    } catch {\n        return false;\n    }\n}\n\nexport function toChecksum(address) {\n    return utils.getAddress(address);\n}\n\nexport function toAddressStub(address) {\n    const start = address.slice(0, 5);\n    const end = address.slice(-3);\n\n    return `${start}...${end}`;\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { animated, useTransition } from 'react-spring';\nimport { Spring } from 'react-spring/renderprops';\n\nimport { DialogContent, DialogOverlay } from '@reach/dialog';\nimport { isMobile } from 'react-device-detect';\nimport '@reach/dialog/styles.css';\n// import { useGesture } from 'react-use-gesture';\n\nconst AnimatedDialogOverlay = animated(DialogOverlay);\nconst WrappedDialogOverlay = ({\n    suppressClassNameWarning,\n    mobile,\n    ...rest\n}) => <AnimatedDialogOverlay {...rest} />;\nconst StyledDialogOverlay = styled(WrappedDialogOverlay).attrs({\n    suppressClassNameWarning: true,\n})`\n    &[data-reach-dialog-overlay] {\n        z-index: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n\n        ${({ mobile }) =>\n            mobile &&\n            css`\n                align-items: flex-end;\n            `}\n\n        &::after {\n            content: '';\n            background-color: ${({ theme }) => theme.modalBackground};\n            opacity: 0.5;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            /* position: absolute; */\n            position: fixed;\n            z-index: -1;\n        }\n    }\n`;\n\nconst FilteredDialogContent = ({\n    minHeight,\n    maxHeight,\n    isOpen,\n    slideInAnimation,\n    mobile,\n    ...rest\n}) => <DialogContent aria-label=\"BCDappModal\" {...rest} />;\nconst StyledDialogContent = styled(FilteredDialogContent)`\n    &[data-reach-dialog-content] {\n        border: 1px solid var(--panel-border);\n        background-color: var(--panel-border);\n        padding: 0px;\n        width: 50vw;\n        max-width: 650px;\n        ${({ maxHeight }) =>\n            maxHeight &&\n            css`\n                max-height: ${maxHeight}vh;\n            `}\n        ${({ minHeight }) =>\n            minHeight &&\n            css`\n                min-height: ${minHeight}vh;\n            `}\n    display: flex;\n        overflow: hidden;\n        border-radius: 10px;\n        ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      max-height: 65vh;\n      margin: 0;\n    `}\n        ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      max-height: 66vh;\n      ${\n          mobile &&\n          css`\n              width: 100vw;\n              border-radius: 20px;\n              border-bottom-left-radius: 0;\n              border-bottom-right-radius: 0;\n          `\n      }\n    `}\n    }\n`;\n\nconst HiddenCloseButton = styled.button`\n    margin: 0;\n    padding: 0;\n    width: 0;\n    height: 0;\n    border: none;\n`;\n\nexport default function Modal({\n    isOpen,\n    onDismiss,\n    minHeight = false,\n    maxHeight = 50,\n    initialFocusRef,\n    children,\n}) {\n    const transitions = useTransition(isOpen, null, {\n        config: { duration: 200 },\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    });\n\n    // const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }));\n    // const bind = useGesture({\n    //     onDrag: (state) => {\n    //         let velocity = state.velocity;\n    //         if (velocity < 1) {\n    //             velocity = 1;\n    //         }\n    //         if (velocity > 8) {\n    //             velocity = 8;\n    //         }\n    //         set({\n    //             xy: state.down ? state.movement : [0, 0],\n    //             config: { mass: 1, tension: 210, friction: 20 },\n    //         });\n    //         if (velocity > 3 && state.direction[1] > 0) {\n    //             onDismiss();\n    //         }\n    //     },\n    // });\n\n    if (isMobile) {\n        return transitions.map(\n            ({ item, key, props }) =>\n                item && (\n                    <StyledDialogOverlay\n                        key={key}\n                        style={props}\n                        onDismiss={onDismiss}\n                        initialFocusRef={initialFocusRef}\n                        mobile={isMobile}\n                    >\n                        <Spring // animation for entrance and exit\n                            from={{\n                                transform: isOpen\n                                    ? 'translateY(200px)'\n                                    : 'translateY(100px)',\n                            }}\n                            to={{\n                                transform: isOpen\n                                    ? 'translateY(0px)'\n                                    : 'translateY(200px)',\n                            }}\n                        >\n                            {(props) => (\n                                <animated.div\n                                    // {...bind()}\n                                    // style={{\n                                    //     transform: `translate3d(${0}px,${ y > 0 ? y : 0 }px,0)`,\n                                    // }}\n                                >\n                                    <StyledDialogContent\n                                        style={props}\n                                        hidden={true}\n                                        minHeight={minHeight}\n                                        maxHeight={maxHeight}\n                                        mobile={isMobile}\n                                    >\n                                        <HiddenCloseButton\n                                            onClick={onDismiss}\n                                        />\n                                        {children}\n                                    </StyledDialogContent>\n                                </animated.div>\n                            )}\n                        </Spring>\n                    </StyledDialogOverlay>\n                )\n        );\n    } else {\n        return transitions.map(\n            ({ item, key, props }) =>\n                item && (\n                    <StyledDialogOverlay\n                        key={key}\n                        style={props}\n                        onDismiss={onDismiss}\n                        initialFocusRef={initialFocusRef}\n                        mobile={isMobile}\n                    >\n                        <StyledDialogContent\n                            hidden={true}\n                            minHeight={minHeight}\n                            maxHeight={maxHeight}\n                            isOpen={isOpen}\n                            mobile={isMobile}\n                        >\n                            <HiddenCloseButton onClick={onDismiss} />\n                            {children}\n                        </StyledDialogContent>\n                    </StyledDialogOverlay>\n                )\n        );\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Link = styled.a.attrs({\n    target: '_blank',\n    rel: 'noopener noreferrer',\n})`\n    text-decoration: none;\n    cursor: pointer;\n    color: var(--turquois-text);\n\n    :focus {\n        outline: none;\n        text-decoration: underline;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nexport default Link;\n","var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.33076876.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport { useCopyClipboard } from '../../utils/helperHooks';\n\nimport Link from '../../components/common/Link';\nimport { FiCopy, FiCheckCircle } from \"react-icons/fi\";\n\nconst CopyIcon = styled(Link)`\n  color: ${({ theme }) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n      text-decoration: none;\n      color: ${({ theme }) => theme.doveGray};\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`;\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard();\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      <TransactionStatusText>\n        {isCopied ? (\n          <FiCheckCircle />\n        ) : (\n          <FiCopy />\n        )}\n      </TransactionStatusText>\n    </CopyIcon>\n  );\n}\n","import React from 'react';\n\nexport const ETHERSCAN_PREFIXES = {\n    1: '',\n    3: 'ropsten.',\n    4: 'rinkeby.',\n    5: 'goerli.',\n    42: 'kovan.',\n};\n\nexport function getEtherscanLink(networkId, data, type) {\n    const prefix = `https://${\n        ETHERSCAN_PREFIXES[networkId] || ETHERSCAN_PREFIXES[1]\n    }etherscan.io`;\n\n    switch (type) {\n        case 'transaction': {\n            return `${prefix}/tx/${data}`;\n        }\n        case 'address':\n        default: {\n            return `${prefix}/address/${data}`;\n        }\n    }\n}\n\nexport const etherscanUrl = (networkId) => {\n    return \"https://\" + ETHERSCAN_PREFIXES[networkId] + \"etherscan.io\";\n};\n\nexport const etherscanAddress = (network, text, address) => {\n    return (\n        <a\n            className=\"address\"\n            href={`${etherscanUrl(network)}/address/${address}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {text}\n        </a>\n    );\n};\n\nexport const etherscanTx = (network, text, tx) => {\n    return (\n        <a\n            href={`${etherscanUrl(network)}/tx/${tx}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {text}\n        </a>\n    );\n};\n\nexport const etherscanToken = (network, text, token, holder = false) => {\n    return (\n        <a\n            href={`${etherscanUrl(network)}/token/${token}${\n                holder ? `?a=${holder}` : ''\n            }`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {text}\n        </a>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Copy from '../common/Copy';\nimport { injected } from 'provider/connectors';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { getEtherscanLink } from 'utils/etherscan';\n\nimport Link from '../../components/common/Link';\nimport { useStores } from '../../contexts/storesContext';\n\nconst OptionButton = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    justify-content: center;\n    align-items: center;\n    border-radius: 4px;\n    border: 1px solid var(--active-button-border);\n    background-color: var(--blue-text);\n    color: #FFFFFF;\n    padding: 8px 24px;\n\n    &:hover {\n        cursor: pointer;\n        border: 1px solid var(--blue-onHover-border);\n        background-color: var(--blue-onHover);\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      font-size: 12px;\n    `};\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      padding: 1rem;\n    `};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst InfoCard = styled.div`\n    padding: 1rem;\n    border: 1px solid ${({ theme }) => theme.placeholderGray};\n    border-radius: 20px;\n`;\n\nconst AccountGroupingRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    justify-content: space-between;\n    align-items: center;\n    font-weight: 500;\n    color: ${({ theme }) => theme.textColor};\n\n    div {\n        ${({ theme }) => theme.flexRowNoWrap}\n        align-items: center;\n    }\n\n    &:first-of-type {\n        margin-bottom: 20px;\n    }\n`;\n\nconst AccountSection = styled.div`\n    background-color: var(--panel-background);\n    padding: 0rem 1.5rem;\n    ${({ theme }) =>\n        theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\n`;\n\nconst YourAccount = styled.div`\n    h5 {\n        margin: 0 0 1rem 0;\n        font-weight: 400;\n    }\n\n    h4 {\n        margin: 0;\n        font-weight: 500;\n    }\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-left: 12px;\n        margin-right: 2px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AccountControl = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    align-items: center;\n    min-width: 0;\n\n    font-weight: ${({ hasENS, isENS }) => (hasENS ? (isENS ? 500 : 400) : 500)};\n    font-size: ${({ hasENS, isENS }) =>\n        hasENS ? (isENS ? '1rem' : '0.8rem') : '1rem'};\n\n    a:hover {\n        text-decoration: underline;\n    }\n\n    a {\n        min-width: 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n`;\n\nconst ConnectButtonRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin: 30px;\n`;\n\nconst StyledLink = styled(Link)`\n    color: var(--turquois-text);\n`;\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    right: 1rem;\n    top: 14px;\n    color: var(--header-text);\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\n\nconst WalletAction = styled.div`\n    color: ${({ theme }) => theme.chaliceGray};\n    margin-left: 16px;\n    font-weight: 400;\n    :hover {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`;\n\ninterface Props {\n    toggleWalletModal: any;\n    ENSName: any;\n    openOptions: any;\n}\n\nexport default function AccountDetails(props: Props) {\n    const {\n        toggleWalletModal,\n        ENSName,\n        openOptions,\n    } = props;\n    const {\n        root: { providerStore },\n    } = useStores();\n    const { chainId, account, connector } = providerStore.getActiveWeb3React();\n\n    return (\n        <>\n            <UpperSection>\n                <CloseIcon onClick={toggleWalletModal}>\n                    <CloseColor alt={'close icon'} />\n                </CloseIcon>\n                <HeaderRow>Account</HeaderRow>\n                <AccountSection>\n                    <YourAccount>\n                        <InfoCard>\n                            <AccountGroupingRow>\n                                <div>\n                                    {connector !== injected && (\n                                        <WalletAction\n                                            onClick={() => {\n                                                //@ts-ignore\n                                                connector.close();\n                                            }}\n                                        >\n                                            Disconnect\n                                        </WalletAction>\n                                    )}\n                                    <CircleWrapper>\n                                        <GreenCircle>\n                                            <div />\n                                        </GreenCircle>\n                                    </CircleWrapper>\n                                </div>\n                            </AccountGroupingRow>\n                            <AccountGroupingRow>\n                                {ENSName ? (\n                                    <AccountControl\n                                        hasENS={!!ENSName}\n                                        isENS={true}\n                                    >\n                                        <StyledLink\n                                            hasENS={!!ENSName}\n                                            isENS={true}\n                                            href={getEtherscanLink(\n                                                chainId,\n                                                ENSName,\n                                                'address'\n                                            )}\n                                        >\n                                            {ENSName} ↗{' '}\n                                        </StyledLink>\n                                        <Copy toCopy={ENSName} />\n                                    </AccountControl>\n                                ) : (\n                                    <AccountControl\n                                        hasENS={!!ENSName}\n                                        isENS={false}\n                                    >\n                                        <StyledLink\n                                            hasENS={!!ENSName}\n                                            isENS={false}\n                                            href={getEtherscanLink(\n                                                chainId,\n                                                account,\n                                                'address'\n                                            )}\n                                        >\n                                            {account} ↗{' '}\n                                        </StyledLink>\n                                        <Copy toCopy={account} />\n                                    </AccountControl>\n                                )}\n                            </AccountGroupingRow>\n                        </InfoCard>\n                    </YourAccount>\n\n                    <ConnectButtonRow>\n                        <OptionButton\n                            onClick={() => {\n                                openOptions();\n                            }}\n                        >\n                            Connect to a different wallet\n                        </OptionButton>\n                    </ConnectButtonRow>\n                </AccountSection>\n            </UpperSection>\n        </>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { transparentize } from 'polished';\nimport Link from '../../components/common/Link';\nimport metamaskIcon from '../../assets/images/metamask.png';\n\nconst InfoCard = styled.button`\n  background-color: ${({ theme, active }) =>\n      active ? theme.activeGray : theme.backgroundColor};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  : 0 4px 8px 0 ${({ theme, clickable }) =>\n      clickable ? transparentize(0.95, theme.shadowColor) : 'none'};\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.royalBlue};\n  }\n  border-color: ${({ theme, active }) =>\n      active ? 'transparent' : theme.placeholderGray};\n`;\n\nconst OptionCard = styled(InfoCard)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 1rem;\n`;\n\nconst OptionCardLeft = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    justify-content: center;\n    height: 100%;\n`;\n\nconst OptionCardClickable = styled(OptionCard)`\n    margin-top: 0;\n    &:hover {\n        cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n        border: ${({ clickable, theme }) =>\n            clickable ? `1px solid ${theme.malibuBlue}` : ``};\n    }\n    opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-right: 8px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst HeaderText = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    color: ${(props) =>\n        props.color === 'blue'\n            ? ({ theme }) => theme.royalBlue\n            : ({ theme }) => theme.textColor};\n    font-size: 1rem;\n    font-weight: 500;\n`;\n\nconst SubHeader = styled.div`\n    color: ${({ theme }) => theme.textColor};\n    margin-top: 10px;\n    font-size: 12px;\n`;\n\nconst IconWrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    align-items: center;\n    justify-content: center;\n    & > img,\n    span {\n        height: ${({ size }) => (size ? size + 'px' : '24px')};\n        width: ${({ size }) => (size ? size + 'px' : '24px')};\n    }\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\n\nexport default function Option({\n    link = null,\n    clickable = true,\n    size = null,\n    onClick = null,\n    color,\n    header,\n    subheader = null,\n    icon,\n    active = false,\n}) {\n    const content = (\n        <OptionCardClickable\n            onClick={onClick}\n            clickable={clickable && !active}\n            active={active}\n        >\n            <OptionCardLeft>\n                <HeaderText color={color}>\n                    {' '}\n                    {active ? (\n                        <CircleWrapper>\n                            <GreenCircle>\n                                <div />\n                            </GreenCircle>\n                        </CircleWrapper>\n                    ) : (\n                        ''\n                    )}\n                    {header}\n                </HeaderText>\n                {subheader && <SubHeader>{subheader}</SubHeader>}\n            </OptionCardLeft>\n            <IconWrapper size={size} active={active}>\n                {<img src={metamaskIcon} alt={'Icon'} />}\n            </IconWrapper>\n        </OptionCardClickable>\n    );\n    if (link) {\n        return <Link href={link}>{content}</Link>;\n    }\n\n    return content;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Option from './Option';\nimport { injected, SUPPORTED_WALLETS } from 'provider/connectors';\nimport { FiZap } from \"react-icons/fi\";\nimport { darken } from 'polished';\n\nconst PendingSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`\n\nconst LoadingMessage = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({ theme, error }) => (error ? theme.salmonRed : 'inherit')};\n  border: 1px solid ${({ theme, error }) => (error ? theme.salmonRed : theme.placeholderGray)};\n\n  & > * {\n    padding: 1rem;\n  }\n`\n\nconst ErrorGroup = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.textColor};\n  background-color: ${({ theme }) => theme.placeholderGray};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, theme.placeholderGray)};\n  }\n`\n\nconst LoadingWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n`\n\nexport default function PendingView({ uri = '', size, connector, error = false, setPendingError, tryActivation }) {\n  const isMetamask = window.ethereum && window.ethereum.isMetaMask\n\n  return (\n    <PendingSection>\n      <LoadingMessage error={error}>\n        <LoadingWrapper>\n          {!error && <FiZap/>}\n          {error ? (\n            <ErrorGroup>\n              <div>Error connecting.</div>\n              <ErrorButton\n                onClick={() => {\n                  setPendingError(false)\n                  tryActivation(connector)\n                }}\n              >\n                Try Again\n              </ErrorButton>\n            </ErrorGroup>\n          ) :  (\n            'Initializing...'\n          )}\n        </LoadingWrapper>\n      </LoadingMessage>\n      {Object.keys(SUPPORTED_WALLETS).map(key => {\n        const option = SUPPORTED_WALLETS[key]\n        if (option.connector === connector) {\n          if (option.connector === injected) {\n            if (isMetamask && option.name !== 'MetaMask') {\n              return null\n            }\n            if (!isMetamask && option.name === 'MetaMask') {\n              return null\n            }\n          }\n          return (\n            <Option\n              key={key}\n              clickable={false}\n              color={option.color}\n              header={option.name}\n              subheader={option.description}\n              icon={option.iconName}\n            />\n          )\n        }\n        return null\n      })}\n    </PendingSection>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { isMobile } from 'react-device-detect';\nimport { observer } from 'mobx-react';\n\nimport Modal from '../Modal';\nimport AccountDetails from '../AccountDetails';\nimport PendingView from './PendingView';\nimport Option from './Option';\nimport { usePrevious } from 'utils/helperHooks';\nimport Link from '../../components/common/Link';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { injected, SUPPORTED_WALLETS } from 'provider/connectors';\nimport { useStores } from 'contexts/storesContext';\nimport { isChainIdSupported } from '../../provider/connectors';\nimport { useActiveWeb3React } from 'provider/providerHooks';\nimport metamaskIcon from '../../assets/images/metamask.png';\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    color: var(--header-text);\n    right: 1rem;\n    top: 14px;\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\nconst Wrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${({ theme }) => theme.backgroundColor};\n    border-radius: 10px;\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\n\nconst ContentWrapper = styled.div`\n    background-color: var(--panel-background);\n    color: var(--body-text);\n    padding: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst Blurb = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin-top: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\n\nconst OptionGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\n\nconst HoverText = styled.div`\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nconst WALLET_VIEWS = {\n    OPTIONS: 'options',\n    OPTIONS_SECONDARY: 'options_secondary',\n    ACCOUNT: 'account',\n    PENDING: 'pending',\n};\n\nconst WalletModal = observer(\n    ({ pendingTransactions, confirmedTransactions }) => {\n        const {\n            root: { modalStore },\n        } = useStores();\n        const { active, connector, error, activate, account, chainId } = useActiveWeb3React();\n        const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n        const [pendingWallet, setPendingWallet] = useState(false);\n        const [pendingError, setPendingError] = useState(false);\n        const [connectionErrorMessage, setConnectionErrorMessage] = useState(false);\n\n        const walletModalOpen = modalStore.walletModalVisible;\n\n        const toggleWalletModal = () => {\n            modalStore.toggleWalletModal();\n        };\n\n        // always reset to account view\n        useEffect(() => {\n            if (walletModalOpen) {\n                setPendingError(false);\n                setConnectionErrorMessage(false);\n                setWalletView(WALLET_VIEWS.ACCOUNT);\n            }\n        }, [walletModalOpen]);\n        \n        // close modal when a connection is successful\n        const activePrevious = usePrevious(active);\n        const connectorPrevious = usePrevious(connector);\n        useEffect(() => {\n            if (\n                walletModalOpen &&\n                ((active && !activePrevious) ||\n                    (connector && connector !== connectorPrevious && !error))\n            ) {\n                setWalletView(WALLET_VIEWS.ACCOUNT);\n            }\n        }, [\n            setWalletView,\n            active,\n            error,\n            connector,\n            walletModalOpen,\n            activePrevious,\n            connectorPrevious,\n        ]);\n\n        const tryActivation = async (connector) => {\n            setPendingWallet(connector); // set wallet for pending view\n            setWalletView(WALLET_VIEWS.PENDING);\n            activate(connector, undefined, true).catch((e) => {\n                setConnectionErrorMessage(e)\n                console.debug('[Activation Error]', e);\n                setPendingError(true);\n            });\n        };\n\n        // get wallets user can switch too, depending on device/browser\n        function getOptions() {\n            const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n            return Object.keys(SUPPORTED_WALLETS).map((key) => {\n                const option = SUPPORTED_WALLETS[key];\n                // check for mobile options\n                if (isMobile) {\n                    if (!window.web3 && !window.ethereum && option.mobile) {\n                        return (\n                            <Option\n                                onClick={() => {\n                                    option.connector !== connector &&\n                                        !option.href &&\n                                        tryActivation(option.connector);\n                                }}\n                                key={key}\n                                active={\n                                    option.connector &&\n                                    option.connector === connector\n                                }\n                                color={option.color}\n                                link={option.href}\n                                header={option.name}\n                                subheader={null}\n                                icon={option.iconName}\n                            />\n                        );\n                    }\n                    return null;\n                }\n\n                // overwrite injected when needed\n                if (option.connector === injected) {\n                    // don't show injected if there's no injected provider\n                    if (!(window.web3 || window.ethereum)) {\n                        if (option.name === 'MetaMask') {\n                            return (\n                                <Option\n                                    key={key}\n                                    color={'#E8831D'}\n                                    header={'Install Metamask'}\n                                    subheader={null}\n                                    link={'https://metamask.io/'}\n                                />\n                            );\n                        } else {\n                            return null; //dont want to return install twice\n                        }\n                    }\n                    // don't return metamask if injected provider isn't metamask\n                    else if (option.name === 'MetaMask' && !isMetamask) {\n                        return null;\n                    }\n                    // likewise for generic\n                    else if (option.name === 'Injected' && isMetamask) {\n                        return null;\n                    }\n                }\n\n                // return rest of options\n                return (\n                    !isMobile &&\n                    !option.mobileOnly && (\n                        <Option\n                            onClick={() => {\n                                option.connector === connector\n                                    ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                                    : !option.href &&\n                                      tryActivation(option.connector);\n                            }}\n                            key={key}\n                            active={option.connector === connector}\n                            color={option.color}\n                            link={option.href}\n                            header={option.name}\n                            subheader={null} //use option.descriptio to bring back multi-line\n                            icon={option.iconName}\n                        />\n                    )\n                );\n            });\n        }\n\n        function getModalContent() {\n            if (connectionErrorMessage) {\n                return (\n                    <UpperSection>\n                        <CloseIcon onClick={toggleWalletModal}>\n                            <CloseColor alt={'close icon'} />\n                        </CloseIcon>\n                        <HeaderRow>\n                            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0\n                                ? 'Wrong Network'\n                                : 'Error connecting'}\n                        </HeaderRow>\n                        <ContentWrapper>\n                            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0 ? (\n                                <h5>\n                                    Please connect to a valid ethereum network.\n                                </h5>\n                            ) : (\n                                'Error connecting. Try refreshing the page.'\n                            )}\n                        </ContentWrapper>\n                    </UpperSection>\n                );\n            }\n            if (\n                account &&\n                !isChainIdSupported(chainId) &&\n                walletView === WALLET_VIEWS.ACCOUNT\n            ) {\n                return (\n                    <UpperSection>\n                        <CloseIcon onClick={toggleWalletModal}>\n                            <CloseColor alt={'close icon'} />\n                        </CloseIcon>\n                        <HeaderRow>{'Wrong Network'}</HeaderRow>\n                        <ContentWrapper>\n                            <h5>\n                                Please connect to a valid ethereum network.\n                            </h5>\n                        </ContentWrapper>\n                    </UpperSection>\n                );\n            }\n            if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n                return (\n                    <AccountDetails\n                        toggleWalletModal={toggleWalletModal}\n                        pendingTransactions={pendingTransactions || []}\n                        confirmedTransactions={confirmedTransactions || []}\n                        openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n                    />\n                );\n            }\n            return (\n                <UpperSection>\n                    <CloseIcon onClick={toggleWalletModal}>\n                        <CloseColor alt={'close icon'} />\n                    </CloseIcon>\n                    {walletView !== WALLET_VIEWS.ACCOUNT ? (\n                        <HeaderRow color=\"blue\">\n                            <HoverText\n                                onClick={() => {\n                                    setPendingError(false);\n                                    setWalletView(WALLET_VIEWS.ACCOUNT);\n                                }}\n                            >\n                                Back\n                            </HoverText>\n                        </HeaderRow>\n                    ) : (\n                        <HeaderRow>\n                            <HoverText>Connect to a wallet</HoverText>\n                        </HeaderRow>\n                    )}\n                    <ContentWrapper>\n                        {walletView === WALLET_VIEWS.PENDING ? (\n                            <PendingView\n                                size={220}\n                                connector={pendingWallet}\n                                error={pendingError}\n                                setPendingError={setPendingError}\n                                tryActivation={tryActivation}\n                            />\n                        ) : (\n                            <OptionGrid>{getOptions()}</OptionGrid>\n                        )}\n                        {walletView !== WALLET_VIEWS.PENDING && (\n                            <Blurb>\n                                <span style={{ color: '#90a4ae' }}>\n                                    New to Ethereum? &nbsp;\n                                </span>{' '}\n                                <Link href=\"https://ethereum.org/use/#3-what-is-a-wallet-and-which-one-should-i-use\">\n                                    Learn more about wallets\n                                </Link>\n                            </Blurb>\n                        )}\n                    </ContentWrapper>\n                </UpperSection>\n            );\n        }\n\n        return (\n            <Modal\n                style={{ userSelect: 'none' }}\n                isOpen={walletModalOpen}\n                onDismiss={toggleWalletModal}\n                minHeight={null}\n                maxHeight={90}\n            >\n                <Wrapper>{getModalContent()}</Wrapper>\n            </Modal>\n        );\n    }\n);\n\nexport default WalletModal;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Box = styled.div\n`\n  border: 1px solid #E1E3E7;\n  padding: 10px 0px;\n  background: white;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  box-shadow: ${({ theme }) => theme.borderStyle};\n`\n\nexport default Box;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { shortenAddress } from 'utils/address';\nimport WalletModal from 'components/WalletModal';\nimport { isChainIdSupported } from 'provider/connectors';\nimport { useStores } from '../../contexts/storesContext';\nimport Box from '../../components/common/Box';\n\nconst WrongNetworkButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--wrong-network);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst AccountButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n  cursor: pointer;\n`;\n\nconst ConnectButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--blue-text);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst Web3ConnectStatus = observer((props) => {\n    \n    const {\n        root: { modalStore, transactionStore, providerStore, configStore },\n    } = useStores();\n    const {\n        chainId,\n        account,\n        error,\n    } = providerStore.getActiveWeb3React();\n    \n    let pending = undefined;\n    let confirmed = undefined;\n\n    if (chainId && account && isChainIdSupported(chainId)) {\n        pending = transactionStore.getPendingTransactions(account);\n        confirmed = transactionStore.getConfirmedTransactions(account);\n    }\n\n    const toggleWalletModal = () => {\n        modalStore.toggleWalletModal();\n    };\n\n    function getWeb3Status() {\n        console.debug('[GetWeb3Status]', {\n            account,\n            chainId: chainId,\n            error,\n        });\n        // Wrong network\n        if (account && chainId && !isChainIdSupported(chainId)) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else if (account) {\n            return (\n              <div style={{display: \"flex\"}}>\n                  <AccountButton onClick={toggleWalletModal}>\n                    {shortenAddress(account)}\n                  </AccountButton>\n                  <AccountButton onClick={toggleWalletModal} style={{fontSize: \"14px\"}}>\n                    {configStore.getActiveChainName().replace(/^./, configStore.getActiveChainName()[0].toUpperCase())}\n                  </AccountButton>\n              </div>\n            );\n        } else if (error) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else {\n            return (\n                <ConnectButton\n                    onClick={toggleWalletModal}\n                    active={true}\n                    >\n                    {props.text}\n                </ConnectButton>\n                \n            );\n        }\n    }\n\n    return (\n        <>\n            {getWeb3Status()}\n            <WalletModal\n                pendingTransactions={pending}\n                confirmedTransactions={confirmed}\n            />\n        </>\n    );\n});\n\nexport default Web3ConnectStatus;\n","export default __webpack_public_path__ + \"static/media/DXdao.22782c18.svg\";","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport Web3ConnectStatus from '../Web3ConnectStatus';\nimport { useStores } from '../../contexts/storesContext';\nimport { FiSettings, FiUser, FiBarChart2 } from \"react-icons/fi\";\nimport dxdaoIcon from \"assets/images/DXdao.svg\"\nimport Web3 from 'web3';\nimport { bnum } from '../../utils/helpers';\nimport Box from '../../components/common/Box';\n\nconst NavWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px 0px 0px 0px;\n`;\n\nconst NavSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItem = styled.div`\n  display: flex;\n  align-items: center;\n  color: var(--nav-text-light);\n  font-size: 16px;\n  line-height: 19px;\n  cursor: pointer;\n`;\n\nconst ItemBox = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n`;\n\nconst Header = observer(() => {\n  const NavItem = withRouter(\n    ({ route, history, children }) => {\n      return (\n        <MenuItem\n          onClick={() => {\n            history.push(route);\n          }}\n        >\n          {children}\n        </MenuItem>\n      );\n    }\n  );\n  \n  const {\n      root: { userStore, providerStore, daoStore, blockchainStore, configStore },\n  } = useStores();\n  \n  const votingMachines = configStore.getNetworkConfig().votingMachines;\n  const userInfo = userStore.getUserInfo();\n  const { active, account } = providerStore.getActiveWeb3React();\n  const ethBalance = active && userInfo.ethBalance ?\n    parseFloat(Number(Web3.utils.fromWei(userInfo.ethBalance.toString())).toFixed(2))\n    : 0;\n  const dxdBalance = active && userInfo.dxdBalance ?\n    parseFloat(Number(Web3.utils.fromWei(userInfo.dxdBalance.toString())).toFixed(2))\n    : 0;\n  const genBalance = active && userInfo.genBalance ?\n    parseFloat(Number(Web3.utils.fromWei(userInfo.genBalance.toString())).toFixed(2))\n    : 0;\n    \n   const repPercentage = active && daoStore.getDaoInfo().totalRep\n    ? bnum(userInfo.repBalance).times(100).div(bnum(daoStore.getDaoInfo().totalRep)).toFixed(4)\n    : bnum(0);\n\n  return (\n    <NavWrapper>\n      <NavSection>\n        <NavItem route=\"/?\">\n          <img alt=\"dxdao\" src={dxdaoIcon}/>\n        </NavItem>\n      </NavSection>\n      { active && blockchainStore.initialLoadComplete ?\n        <NavSection>\n          {votingMachines.dxd ? <ItemBox> {dxdBalance} DXD </ItemBox> : <div/> }\n          {votingMachines.gen ? <ItemBox> {genBalance} GEN </ItemBox> : <div/> }\n          <ItemBox> {repPercentage.toString()} % REP </ItemBox>\n          <Web3ConnectStatus text=\"Connect Wallet\" />\n          <a href={`${window.location.pathname}#/info`}><FiBarChart2 style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n          <a href={`${window.location.pathname}#/config`}><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n          <a href={`${window.location.pathname}#/user/${account}`}><FiUser style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n        </NavSection>\n      : <NavSection>\n          <Web3ConnectStatus text=\"Connect Wallet\" />\n        </NavSection>\n      }\n    </NavWrapper>\n  );\n});\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 24px 0px 32px;\n  color: var(--footer-text-gray);\n  flex-grow: 1;\n`;\n\nconst LeftFooter = styled.div`\nmargin-top: auto;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FooterItem = styled.div`\n  a {\n    text-decoration: none;\n    color: var(--footer-text-gray);\n    cursor: pointer;\n  }\n  a:hover {\n    color: var(--text-gray-onHover);\n  }a\n    \n`;\n\nconst FooterDivider = styled.div`\n  background: var(--footer-text-gray);\n  width: 4px;\n  height: 4px;\n  border-radius: 2px;\n  line-height: 24px;\n  margin: 7px;\n`;\n\nconst Footer = () => {\n  let history = useHistory();\n\n  return (\n    <FooterWrapper>\n      <LeftFooter>\n        <FooterItem>\n          <a href=\"https://dxdao.eth.link/#/\" target=\"_blank\" > Website </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/forum')}}  target=\"_self\" > Forum </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote\" target=\"_blank\" > Source Code </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/faq')}} > FAQ </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote/issues/new/choose\" target=\"_blank\" > Submit Issue </a>\n        </FooterItem>\n      </LeftFooter>\n    </FooterWrapper>\n\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from './contexts/storesContext';\nimport { FiZapOff, FiZap } from \"react-icons/fi\";\nimport { useLocation } from 'react-router-dom';\nimport Box from './components/common/Box';\n\nconst PageRouterWrapper = styled.div`\n  margin-top: 20px;\n`\n\nconst LoadingBox = styled(Box)`\n  \n .loader {\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 18px;\n    color: var(--dark-text-gray);\n    padding: 25px 0px;\n      \n    .svg {\n      height: 30px;\n      width: 30px;\n      margin-bottom: 10px;\n    }\n  }\n`\n\nconst PageRouter = observer(({ children }) => {\n    \n    const {\n        root: { providerStore, blockchainStore, configStore, ipfsService, etherscanService, pinataService, coingeckoService },\n    } = useStores();\n    let needsLoading = true;\n    \n    const { pathname } = useLocation();\n    const noLoading = ['/faq', '/config', '/forum'];\n    \n    // Start or auth services\n    ipfsService.start();\n    etherscanService.isAuthenticated();\n    pinataService.isAuthenticated();\n    coingeckoService.loadPrices();\n\n    const { active: providerActive } = providerStore.getActiveWeb3React();\n    if (!providerActive)\n      return (\n        <PageRouterWrapper>\n          <LoadingBox>\n            <div className=\"loader\"> <FiZapOff/> <br/> Connect to metamask </div>\n          </LoadingBox>\n        </PageRouterWrapper>\n      );\n    else if (!blockchainStore.initialLoadComplete && noLoading.indexOf(pathname) < 0)\n      return (\n        <PageRouterWrapper>\n          <LoadingBox>\n            <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n          </LoadingBox>\n        </PageRouterWrapper>\n      );\n    else {\n      if (configStore.getLocalConfig().pinOnStart)\n        pinataService.updatePinList();\n      return <PageRouterWrapper> {children} </PageRouterWrapper>;\n    }\n});\n\nexport default PageRouter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst Button = styled.div`\n    background-color: ${({ theme }) => theme.activeButtonBackground};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 10px;\n    margin: 5px;\n`;\n\nconst ButtonWithRouter = withRouter(\n  ({ route, history, children }) => {\n    return (\n      <Button onClick={() => { history.push(route)}} >\n        {children}\n      </Button>\n    );\n  }\n);\nconst ActiveButton = ({ children, onClick = undefined, route = undefined }) => {\n    if (route) {\n      return <ButtonWithRouter route={route}>{children}</ButtonWithRouter>\n    } else {\n      return <Button onClick={onClick}>{children}</Button>;\n    }\n};\n\nexport default ActiveButton;\n","import moment from 'moment';\nimport { BigNumber } from './bignumber';\nimport { bnum } from './helpers';\n\nexport const formatDate = (date: Date) => {\n    return moment(date).format('DD.MM - HH:mm');\n};\n\nexport const timeToTimestamp = (timestamp: BigNumber) => {\n    if (timestamp.toNumber() > moment().unix())\n      return moment().to( moment.unix(timestamp.toNumber()) ).toString();\n    else\n      return \"\";\n};\n\nexport const addZero = (value) => {\n    return value > 9 ? value : `0${value}`;\n};\n","import { BigNumber } from './bignumber';\nimport { bnum } from './helpers';\n\nexport function formatFee(fee: BigNumber) {\n    return fee.times(100).toString() + '%';\n}\n\nexport function formatPercentage(\n    value: BigNumber,\n    decimals: number,\n    useLowerLimit = true\n): string {\n    if (value.lte(0.01) && value.gt(0) && useLowerLimit) {\n        return '<0.01%';\n    }\n    return `${value.times(100).decimalPlaces(decimals).toString()}%`;\n}\n\nexport function fromPercentage(value: BigNumber | string): BigNumber {\n    const bn = bnum(value.toString());\n    return bn.div(100);\n}\n\nexport function toPercentage(value: BigNumber | string): BigNumber {\n    const bn = bnum(value.toString());\n    return bn.times(100);\n}\n\nexport const normalizePriceValues = (\n    inputValue: BigNumber,\n    outputValue: BigNumber\n): {\n    normalizedInput: BigNumber;\n    normalizedOutput: BigNumber;\n} => {\n    const multiplier = bnum(1).div(inputValue);\n    return {\n        normalizedInput: bnum(1),\n        normalizedOutput: outputValue.times(multiplier),\n    };\n};\n\nexport const formatCurrency = (balance: BigNumber): string => {\n    const fmt = {\n      groupSize: 3,\n      groupSeparator: ' ',\n      decimalSeparator: '.'\n    };\n    return balance.toFormat(2, BigNumber.ROUND_DOWN, fmt);\n};\n\nexport const numDigits = (value: BigNumber): number => {\n    return value.toString().length;\n};\n\nexport const roundUpToScale = (\n    value: BigNumber\n): BigNumber => {\n    const placesValue = numDigits(value.integerValue())-1;\n    const scaledValue = value\n        .shiftedBy(-placesValue);\n    return scaledValue.integerValue(BigNumber.ROUND_UP).shiftedBy(placesValue);\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\nimport { timeToTimestamp } from '../utils/date';\nimport { normalizeBalance } from '../utils/token';\nimport { formatPercentage } from '../utils/number';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProposalsTableWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst ProposalsFilter = styled.select`\n  background-color: ${(props) => props.color || '#536DFE'};\n  border-radius: 4px;\n  color: white;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 34px;\n  text-align: center;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n  border: 0px;\n`;\n\nconst ProposalsNameFilter = styled.input`\n  background-color: white;\n  border: 1px solid #536DFE;\n  border-radius: 4px;\n  color: #536DFE;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\nconst ProposalTableHeaderActions = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  \n  span {\n    font-size: 20px;\n    padding: 10px 5px 5px 5px;\n  }\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: var(--light-text-gray);\n  padding: 20px 24px 8px 24px;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst TableHeader = styled.div`\n  width: ${(props) => props.width || '25%'};\n  text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n  overflow-y: scroll;\n  height: 350px;\n  \n  h3 {\n    text-align: center;\n    margin-top: 30px;\n    color: var(--dark-text-gray);\n  }\n`;\n\nconst TableRow = styled.div`\n  font-size: 16px;\n  line-height: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--line-gray);\n  padding: 16px 24px;\n  color: var(--dark-text-gray);\n  text-align: right;\n  cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  color: ${(props) => props.color};\n  width: ${(props) => props.width || '25%'};\n  justify-content: ${(props) => props.align};\n  font-weight: ${(props) => props.weight};\n  white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n  overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n  text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst ProposalsPage = observer(() => {\n    const {\n        root: { providerStore, daoStore, blockchainStore, configStore },\n    } = useStores();\n\n    const schemes = daoStore.getAllSchemes();\n    const votingMachines = configStore.getNetworkConfig().votingMachines;\n    const { library, active } = providerStore.getActiveWeb3React();\n    const [stateFilter, setStateFilter] = React.useState(\"Any Status\");\n    const [schemeFilter, setSchemeFilter] = React.useState(\"All Schemes\");\n    const [titleFilter, setTitleFilter] = React.useState(\"\");\n    const allProposals = daoStore.getAllProposals().map((cacheProposal) => {\n      const {status, boostTime, finishTime} = daoStore.getProposalStatus(cacheProposal.id);\n      cacheProposal.status = status; \n      cacheProposal.boostTime = boostTime; \n      cacheProposal.finishTime = finishTime;\n      return cacheProposal;\n    }).sort(function(a, b) { return a.finishTime - b.finishTime; })\n    .sort(function(a, b) { return b.stateInVotingMachine - a.stateInVotingMachine });\n    \n    function onStateFilterChange(newValue) { setStateFilter(newValue.target.value) }\n    function onTitleFilterChange(newValue) { setTitleFilter(newValue.target.value) }\n    function onSchemeFilterChange(newValue) { setSchemeFilter(newValue.target.value) }\n    \n    console.debug(\"All Proposals\", allProposals, allProposals.length, daoStore);\n\n    return (\n      <ProposalsTableWrapper>\n        <ProposalTableHeaderActions>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ProposalsNameFilter\n              type=\"text\"\n              placeholder=\"Search by proposal title\"\n              name=\"titleFilter\"\n              id=\"titleFilter\"\n              onChange={onTitleFilterChange}\n            ></ProposalsNameFilter>\n            <ProposalsFilter name=\"stateFilter\" id=\"stateSelector\" onChange={onStateFilterChange}>\n              <option value=\"Any Status\">Any Status</option>\n              <option value=\"Pending Boost\">Pending Boost</option>\n              <option value=\"Pre Boosted\">Pre Boosted</option>\n              <option value=\"Boosted\">Boosted</option>\n              <option value=\"In Queue\">Queue</option>\n              <option value=\"Quiet Ending Period\">Quiet Ending Period</option>\n              <option value=\"Passed\">Passed</option>\n              <option value=\"Pending Execution\">Pending Execution</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"Executed\">Executed</option>\n              <option value=\"Expired in Queue\">Expired</option>\n            </ProposalsFilter>\n            <ProposalsFilter name=\"schemeFilter\" id=\"schemeSelector\" onChange={onSchemeFilterChange}>\n              <option value=\"All Schemes\">All Schemes</option>\n              {schemes.map((scheme) => {\n                return <option key={scheme.address} value={scheme.address}>{scheme.name}</option>\n              })}\n            </ProposalsFilter>\n          </div>\n\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ActiveButton route=\"/new\">+ New Proposal</ActiveButton>\n          </div>\n        </ProposalTableHeaderActions>\n        <ProposalTableHeaderWrapper>\n          <TableHeader width=\"35%\" align=\"left\"> Title </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Scheme </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Status </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Stakes </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Votes  </TableHeader>\n        </ProposalTableHeaderWrapper>\n        { (allProposals.length === 0) ?\n          <TableRowsWrapper>\n            <h3>No Proposals Found</h3>\n          </TableRowsWrapper>\n          :\n          <TableRowsWrapper>\n            { allProposals.map((proposal, i) => {\n              if (\n                proposal \n                && ((stateFilter == 'Any Status') || (stateFilter != 'Any Status' && proposal.status == stateFilter))\n                && ((titleFilter.length == 0) || ((titleFilter.length > 0) && (proposal.title.indexOf(titleFilter) >= 0)))\n                && ((schemeFilter == 'All Schemes') || (proposal.scheme == schemeFilter))\n              ) {\n                const positiveStake = normalizeBalance(proposal.positiveStakes, 18);\n                const negativeStake = normalizeBalance(proposal.negativeStakes, 18);\n                const positiveVotesPercentage = formatPercentage(\n                  proposal.positiveVotes.div(proposal.repAtCreation), 2\n                );\n                const negativeVotesPercentage =  formatPercentage(\n                  proposal.negativeVotes.div(proposal.repAtCreation), 2\n                );\n                const timeToBoost = timeToTimestamp(proposal.boostTime);\n                const timeToFinish = timeToTimestamp(proposal.finishTime);\n                \n                const votingMachineTokenName = \n                (votingMachines.gen && daoStore.getVotingMachineOfProposal(proposal.id) == votingMachines.gen.address)\n                ? 'GEN' : 'DXD';\n                return (\n                  <Link key={\"proposal\"+i} to={\"/proposal/\"+proposal.id} style={{textDecoration: \"none\"}}>\n                    <TableRow>\n                      <TableCell width=\"35%\" align=\"left\" weight='500' wrapText=\"true\">\n                        {proposal.title.length > 0 ? proposal.title : proposal.id}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        {daoStore.getCache().schemes[proposal.scheme].name}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        <span style={{textAlign:\"center\"}}>\n                          {proposal.status} <br/>\n                          {(timeToBoost != \"\") ? <small>Boost {timeToBoost} <br/></small> : <span></span>}\n                          {(timeToFinish != \"\") ? <small>Finish {timeToFinish} </small> : <span></span>}\n                        </span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\"> \n                        <span style={{color: \"green\", flex:\"3\", textAlign:\"right\"}}>{positiveStake.toString()} {votingMachineTokenName} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"3\", textAlign:\"left\"}}> {negativeStake.toString()} {votingMachineTokenName}</span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\"> \n                        <span style={{color: \"green\", flex:\"3\", textAlign:\"right\"}}>{positiveVotesPercentage} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"3\", textAlign:\"left\"}}> {negativeVotesPercentage}</span>\n                      </TableCell>\n                    </TableRow>\n                  </Link>);\n                } else {\n                  return null;\n                }\n              }\n            )}\n          </TableRowsWrapper>\n        }\n      </ProposalsTableWrapper>\n    );\n});\n\nexport default ProposalsPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaQuestionCircle } from \"react-icons/fa\";\n\n\nconst QuestionLink = styled.a`\n\n  color: var(--dark-text-gray);\n  \n  svg {\n    height: 15px;\n  }\n  svg:hover {\n    color: var(--text-gray-onHover);\n  }\n`;\n\nconst QuestionIcon = ({ question }) => {\n  return (\n    <QuestionLink href={\"/#/faq?question=\"+question} target=\"_self\">\n      <FaQuestionCircle> </FaQuestionCircle>\n    </QuestionLink>\n  );\n}\n\nexport default QuestionIcon;\n","\nconst ProposalTemplates = [\n    {\n      name: \"Contributor Proposal\",\n      title: \"[NAME] Contributor Proposal [DATE - DATE]\",\n      description: \n`# Background\n  - If this is your first contributor proposal, state any context for making the proposal, including:\n    - What position you will be filling – i.e. developer, marketing, governance, etc.\n    - Who you have been in contact with regarding the position (add their DAOtalk usernames)\n  - If you are a continuing contributor, state which products and areas you are working on / any other relevant background information\n# Timeframe\n  - State the date range, typically 2 months (2.5 months for first-time workers)\n# Scope of Contribution\n  - **Goals** :\n    - State the products and /or strategy areas you will be working under. E.g. Omen and Governance. Include both short-term goals that you seek to accomplish during the working period and long-term goals.\n  - **Responsibilities:**\n    - List the specific deliverables you will be either completing and / or working on during the working period. Try to state which deliverables you intend to complete within the period and which are long-term or ongoing projects.\n\n# Reflection\n- If You Are A Returning Contributor, Write a Self-Reflection\n  - State what you did well, what you did okay, and what you need to improve on\n# Compensation\n  - Experience Level : 1-5\n  - Time commitment :  Percent (%) of time\n  - [ETH/DAI AMT] : For 2 months of work at level \\_, to be sent half on the first payment proposal and half on the second payment proposal\n  - [DXD AMT] : Vested for 2 years with a 1 year cliff starting the [DATE WORK PERIOD STARTS]\n  - [% AMT REP] : For 2 months of work , to be sent half on the first payment proposal and half on the second payment proposal\n# Work Experience\n  - Prior DXdao work proposals (if applicable)\n  - Past Work for DXdao\n    - If a developer, Github links\n    - If a non-tech worker, doc links or described deliverables\n  - If new, past relevant work experience\n    - Developers : Github profile link\n    - Non-tech : suggested Linkedin / other references`\n    },{\n      name: \"Payment Proposal\",\n      title: \"[NAME] Payment Proposal [DATE - DATE]\",\n      description: \n`# Timeframe\n  - State the contributor proposal date range\n# Background\n  - State the context for making the contributor payment proposal, including:\n    - What position you will be filling – i.e. developer, marketing, governance, etc.\n    - Proposed Scope of Contribution\n    - Self-Reflection on Scope of Contribution\n    - Include the URL to the original proposal forum post\n# Deliverables\n- Include information around deliverables that were completed during your worker period\n    \n# Compensation\n  - Experience Level : 1-5\n  - Time commitment : Percent (%) of time\n  - [ETH/DAI AMT] : For second half payment proposal\n  - [DXD AMT] : Vested for 2 years with a 1 year cliff starting the [DATE WORK PERIOD STARTS]\n  - [% AMT REP]: For 2 second half payment proposal\n# Work Experience\n  - Prior DXdao work proposals (if applicable)\n  - Past Work for DXdao\n    - If a developer, Github links\n    - If a non-tech worker, doc links or described \n  - If new, past relevant work experience\n    - Developers : Github profile link\n    - Non-tech : suggested Linkedin / other references`\n    },{\n      name: \"Signal Proposal\",\n      title: \"Signal Proposal for [DAO_ACTION]\",\n      description: \n`## Description\n\n## Proposition\n\n## Action Plan`\n    }\n  ];\n\nexport default ProposalTemplates;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport { getTokenData } from '../config';\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE, ERC20_TRANSFER_SIGNATURE, sleep } from '../utils/helpers';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport MDEditor, { commands } from '@uiw/react-md-editor';\nimport { useHistory } from \"react-router-dom\";\nimport contentHash from 'content-hash';\nimport ProposalTemplates from '../config/proposalTemplates';\nimport { TXEvents } from '../enums';\n\nconst NewProposalFormWrapper = styled(Box)`\n    width: cacl(100% -40px);\n    display: flex;\n    padding: 10px 10px;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst SchemeInput = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n    \n    label {\n      text-align: center;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      padding: 10px 10px;\n    }\n\n`;\nconst PlaceHolders = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n    padding-bottom: 0px;\n`\nconst TitleInput = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n\n    input {\n      margin-top: 5px;\n      width: 100%;\n      height: 32px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n      padding: 0px 5px;\n    }\n    \n    select {\n      margin-left: 5px;\n      background-color: white;\n      min-width: 150px;\n      height: 34px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n    }\n`;\n\nconst TextActions = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: column;\n    margin: 10px 0px;\n    line-height: 30px;\n    \n`;\n\nconst CallRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n    \n    span {\n      text-align: center;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      padding: 10px 10px;\n    }\n`;\n\nconst RemoveButton = styled.div`\n    background-color: grey;\n    border: 1px solid black;\n    border-radius: 10px;\n    color: white;\n    height: 25px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 25px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 5px;\n    margin: 5px;\n`;\n\nconst AddButton = styled.div`\n    background-color: var(--blue-text);\n    border: 1px solid black;\n    border-radius: 10px;\n    color: white;\n    height: 25px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 25px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 5px;\n    margin: 5px;\n`;\n\nconst TextInput = styled.input`\n  width: ${(props) => props.width || '25%'};\n  height: 34px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n`;\n\nconst SelectInput = styled.select`\n  width: ${(props) => props.width || '25%'};\n  height: 38px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n  background-color: #FFF;\n`;\n\nconst SelectEditable = styled.div`\n\n  position:relative;\n  background-color:white;\n  border:solid grey 1px; \n  width:120px;\n  height:18px;\n\n  select {\n    position:absolute; top:0px; left:0px; font-size:14px; border:none; width:120px; margin:0;\n  }\n  input {\n    position:absolute; top:0px; left:0px; width:100px; padding:1px; font-size:12px; border:none;\n  }\n  select:focus, .select-editable input:focus {\n    outline:none;\n  }\n`\n\nconst NewProposalPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        root: { providerStore, daoStore, configStore, daoService, ipfsService, pinataService, blockchainStore },\n    } = useStores();\n    \n    const { active, account } = providerStore.getActiveWeb3React();\n    \n    const schemes = daoStore.getAllSchemes();\n    const networkConfig = configStore.getNetworkConfig();\n    const schemeInLocalStorage = localStorage.getItem('dxvote-newProposal-scheme');\n\n    const defaultSchemeToUse = schemeInLocalStorage\n      ? schemes.findIndex((scheme) => scheme.address == schemeInLocalStorage)\n      : schemes.findIndex((scheme) => scheme.name == \"MasterWalletScheme\");\n\n    const [schemeToUse, setSchemeToUse] =\n      React.useState(defaultSchemeToUse > -1 ? schemes[defaultSchemeToUse] : schemes[0]);\n    const [titleText, setTitleText] = React.useState(localStorage.getItem('dxvote-newProposal-title'));\n    const [ipfsHash, setIpfsHash] = React.useState(\"\");\n    const [descriptionText, setDescriptionText] = React.useState(localStorage.getItem('dxvote-newProposal-description'));\n    const [calls, setCalls] = React.useState(\n      localStorage.getItem('dxvote-newProposal-calls') ? \n        JSON.parse(localStorage.getItem('dxvote-newProposal-calls'))\n      : []\n    );\n    \n    const [contributionRewardCalls, setContributionRewardCalls] = React.useState({\n      beneficiary: \"ZERO_ADDRESS\",\n      repChange: \"0\",\n      ethValue: \"0\",\n      externalToken: ZERO_ADDRESS,\n      tokenValue: \"0\"\n    });\n    \n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n\n    const [submitionState, setSubmitionState] = React.useState(0);\n    // 0 = Proposal Description not uploaded\n    // 1 = Uploading proposal description\n    // 2 = Proposal description uploaded\n    // 3 = Submiting new proposal tx\n    // 4 = Proposal creation tx submited\n    // 5 = Proposal creation tx receipt received\n    \n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    \n    if (ProposalTemplates[0].name != \"Custom\")\n      ProposalTemplates.unshift({name: \"Custom\", title: \"\", description: \"\" });\n\n    const {\n      assetLimits: transferLimits, recommendedCalls\n    } = daoStore.getSchemeRecommendedCalls(schemeToUse.address);\n    console.debug(\"[PERMISSIONS]\",schemeToUse, transferLimits, recommendedCalls)\n    \n    let allowedToCall = [];\n    \n    recommendedCalls.map((recommendedCall) => {\n      if((recommendedCall.fromTime > 0)\n        && (allowedToCall.findIndex((allowedPermission) => allowedPermission.value == recommendedCall.to) < 0)\n      ) {\n        allowedToCall.push({ value: recommendedCall.to, name: recommendedCall.toName });\n      }\n    });\n    \n    const callPermissions = daoStore.getCache().callPermissions;\n    if (callPermissions\n      [ZERO_ADDRESS]\n      [schemeToUse.controllerAddress == networkConfig.controller ? networkConfig.avatar : schemeToUse.address]\n      [ANY_ADDRESS]\n    )\n    allowedToCall.push({ value: ANY_ADDRESS, name: \"Custom\" });\n\n    const uploadToIPFS = async function() {\n      if (titleText.length == 10) {\n        setErrorMessage(\"Title has to be at mimimum 10 characters length\");\n      } else if (descriptionText.length == 0) {\n        setErrorMessage(\"Description has to be at mimimum 100 characters length\");\n      } else {\n        setSubmitionState(1);\n        setErrorMessage(\"\");\n\n        const bodyTextToUpload = (schemeToUse.type == \"ContributionReward\" || schemeToUse.type == \"GenericMulticall\")\n          ? JSON.stringify({\n              description: descriptionText,\n              title: titleText,\n              url: \"\"\n            })\n          : descriptionText;\n          \n        const hash = await ipfsService.add(bodyTextToUpload);\n        setIpfsHash(hash);\n        \n        if (pinataService.auth) {\n          const pinataPin = await pinataService.pin(hash);\n          console.debug('[PINATA PIN]', pinataPin.data)\n        }\n        const ipfsPin = await ipfsService.pin(hash);\n        console.debug('[IPFS PIN]', ipfsPin)\n        \n        let uploaded = false;\n        while (!uploaded) {\n          const ipfsContent = await ipfsService.getContent(hash);\n          console.debug('[IPFS CONTENT]', ipfsContent);\n          if (ipfsContent == bodyTextToUpload)\n            uploaded = true;\n          await sleep(1000);\n        }\n\n        setSubmitionState(2);\n      }\n    }\n    \n    const createProposal = async function() {\n      console.debug('[RAW PROPOSAL]', schemeToUse, calls, titleText, ipfsHash);\n      setSubmitionState(3);\n\n      const { library } = providerStore.getActiveWeb3React();\n      \n      let to = [], data = [], value = [];\n      try {\n        \n        if ((schemeToUse.type != \"ContributionReward\")) {\n          const callToController = (schemeToUse.controllerAddress == networkConfig.controller);\n          \n          to = calls.map((call) => {\n            return callToController ? networkConfig.controller : call.to;\n          });\n\n          data = calls.map((call) => {\n            if (call.to == \"\")\n              return \"\";\n            \n            let callData;\n            \n            if (call.callType == \"simple\") {\n              let callDataFunctionSignature = \"0x0\";\n              let callDataFunctionParamsEncoded = \"\";\n              \n              if (call.functionName.length == 0) {\n                callDataFunctionSignature = \"0x0\";\n              } else {\n                callDataFunctionSignature = library.eth.abi.encodeFunctionSignature(call.functionName)\n              }\n              \n              if (call.dataValues.length > 0) {\n                const parameters = (call.functionName.length > 0 && call.dataValues.length > 0)\n                  ? call.functionName.substring(\n                    call.functionName.indexOf(\"(\") + 1, call.functionName.lastIndexOf(\")\")).split(\",\")\n                  : [];\n\n                callDataFunctionParamsEncoded = parameters.length > 0 ? library.eth.abi.encodeParameters(\n                    parameters,\n                    call.dataValues\n                  ).substring(2)\n                  : \"\";\n              }\n              callData = callDataFunctionSignature + callDataFunctionParamsEncoded;\n            } else {\n              callData = call.dataValues[0];\n            }\n            if (callToController && call.to != networkConfig.controller) {\n              return daoService.encodeControllerGenericCall(\n                call.to,\n                callData,\n                call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n                : call.value\n              )\n            } else {\n              return callData;\n            }\n          });\n\n          value = calls.map((call) => {\n            return callToController ? \"0\"\n            : call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n              : call.value\n          });\n        }\n        \n        const proposalData = (schemeToUse.type == \"ContributionReward\")\n        ? {\n          beneficiary: contributionRewardCalls.beneficiary,\n          reputationChange: contributionRewardCalls.repChange,\n          ethValue: contributionRewardCalls.ethValue,\n          externalToken: contributionRewardCalls.externalToken,\n          tokenValue: contributionRewardCalls.tokenValue,\n          descriptionHash: contentHash.fromIpfs(ipfsHash)\n        } : {\n          to, data, value, titleText, descriptionHash: contentHash.fromIpfs(ipfsHash) \n        };\n      \n        console.debug('[PROPOSAL]', schemeToUse.address, proposalData);\n      \n        daoStore.createProposal(\n          schemeToUse.address,\n          schemeToUse.type,\n          proposalData,\n        ).on(TXEvents.TX_HASH, (hash) => {\n            console.debug(\"[TX_SUBMITTED]\", hash);\n            setSubmitionState(4);\n            setErrorMessage(\"\");\n          })\n          .on(TXEvents.RECEIPT, (hash) => {\n            console.debug(\"[TX_RECEIPT]\", hash);\n            setSubmitionState(5);\n          })\n          .on(TXEvents.TX_ERROR, (txerror) => {\n            console.error(\"[TX_ERROR]\", txerror);\n            setSubmitionState(2);\n            setErrorMessage(txerror.message);\n          })\n          .on(TXEvents.INVARIANT, (error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          })\n          .catch((error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          });\n      } catch (error) {\n        console.error('[PROPOSAL_ERROR]', error);\n        setSubmitionState(2);\n        setErrorMessage(error.message);\n      }\n      \n    }\n    \n    function onDescriptionChange(newValue) {\n      if (submitionState < 1) {\n        setDescriptionText(newValue);\n        localStorage.setItem('dxvote-newProposal-description', newValue);\n      }\n    }\n    \n    function onTitleChange(newValue) {\n      if (submitionState < 1) {\n        setTitleText(newValue.target.value);\n        localStorage.setItem('dxvote-newProposal-title', newValue.target.value);\n      }\n    }\n    \n    function setCallsInState(calls) {\n      localStorage.setItem('dxvote-newProposal-calls', JSON.stringify(calls));\n      setCalls(calls);\n      forceUpdate();\n    }\n    \n    function setContributionRewardCallsInState(contributionRewardCalls) {\n      setContributionRewardCalls(contributionRewardCalls);\n      forceUpdate();\n    }\n\n    function addCall() {\n      calls.push({\n        callType: schemeToUse.type == \"WalletScheme\" ? \"simple\" : \"advanced\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        dataValues: [],\n        value: \"\"\n      })\n      setCallsInState(calls);\n    };\n    \n    function removeCall(proposalIndex) {\n      calls.splice(proposalIndex, 1);\n      setCallsInState(calls);\n    };\n    \n    function changeCallType(callIndex) {\n      calls[callIndex] = {\n        callType: calls[callIndex].callType === \"simple\" ? \"advanced\" : \"simple\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        dataValues: [],\n        value: \"\"\n      }\n      setCallsInState(calls);\n    };\n    \n    function onToSelectChange(callIndex, event) {\n      const toAddress = event.target.value;\n      \n      if (toAddress == ANY_ADDRESS) {\n        changeCallType(callIndex);\n      } else {\n        calls[callIndex].to = toAddress;\n        calls[callIndex].allowedFunctions = [];\n        calls[callIndex].functionName = \"\";\n        calls[callIndex].functionParams = [];\n        calls[callIndex].dataValues = [];\n        calls[callIndex].value = \"0\";\n        recommendedCalls.map((recommendedCall) => {\n          if (recommendedCall.to == toAddress){\n            calls[callIndex].allowedFunctions.push(recommendedCall);\n          }\n        });\n        if (calls[callIndex].allowedFunctions.length > 0){\n          calls[callIndex].functionName = calls[callIndex].allowedFunctions[0].functionName;\n          calls[callIndex].functionParams = calls[callIndex].allowedFunctions[0].params;\n          calls[callIndex].dataValues = new Array(calls[callIndex].allowedFunctions[0].params.length);\n        }\n\n        setCallsInState(calls);\n      }\n    }\n    \n    function onFunctionSelectChange(callIndex, functionName, params) {\n      calls[callIndex].functionName = functionName;\n\n      if (calls[callIndex].callType == \"simple\"){\n        calls[callIndex].functionParams = params;\n        calls[callIndex].dataValues = new Array(params.length);\n        calls[callIndex].value = \"0\";\n      } else {\n        calls[callIndex].functionParams = [];\n        calls[callIndex].dataValues = [\"\"];\n        calls[callIndex].value = \"0\";\n      }\n        \n      setCallsInState(calls);\n    }\n    \n    function onFunctionParamsChange(callIndex, event, paramIndex) {\n      calls[callIndex].dataValues[paramIndex] = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onValueChange(callIndex, event) {\n      calls[callIndex].value = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onCallDataChange(callIndex, event) {\n      calls[callIndex].data = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onContributionRewardValueChange(key, value) {\n      contributionRewardCalls[key] = value;\n      setContributionRewardCallsInState(contributionRewardCalls);\n    }\n    \n    function onSchemeChange(event) {\n      setSchemeToUse(schemes[event.target.value]);\n      localStorage.setItem('dxvote-newProposal-scheme', schemes[event.target.value].address);\n      calls.splice(0, calls.length);\n      setContributionRewardCalls({\n        beneficiary: \"\",\n        repChange: \"0\",\n        ethValue: \"0\",\n        externalToken: ZERO_ADDRESS,\n        tokenValue: \"0\"\n      })\n      setCallsInState(calls);\n    }\n    \n    function onProposalTemplate(event) {\n      if (ProposalTemplates[event.target.value].name != 'Custom') {\n        setTitleText(ProposalTemplates[event.target.value].title);\n        setDescriptionText(ProposalTemplates[event.target.value].description);\n        calls.splice(0, calls.length);\n        setCallsInState(calls);\n      }\n    }\n    \n    return (\n      <NewProposalFormWrapper>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}>\n          <PlaceHolders>\n            <span style={{width: \"100%\"}}>Title</span>\n            <span style={{minWidth: \"150px\"}}>Scheme <Question question=\"2\"/></span>\n            <span style={{minWidth: \"150px\"}}>Template</span>\n          </PlaceHolders>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <TitleInput>\n            <input type=\"text\" placeholder=\"Proposal Title\" onChange={onTitleChange} value={titleText}/>\n            <select name=\"scheme\" id=\"schemeSelector\" onChange={onSchemeChange} defaultValue={defaultSchemeToUse}>\n              {schemes.map((scheme, i) =>{\n                if (scheme.type == \"WalletScheme\" || scheme.type == \"ContributionReward\" ||scheme.type == \"GenericMulticall\")\n                  return <option key={scheme.address} value={i}>{scheme.name}</option>\n              })}\n            </select>\n            <select name=\"proposalTemplate\" id=\"proposalTemplateSelector\" onChange={onProposalTemplate}>\n              {ProposalTemplates.map((template, i) =>{\n                return <option key={\"proposalTemplate\"+i} value={i}>{template.name}</option>\n              })}\n            </select>\n          </TitleInput>\n        </div>\n        {(submitionState < 1) ?\n          <MDEditor\n            value={descriptionText}\n            disabled={submitionState > 0}\n            onChange={onDescriptionChange}\n            preview=\"edit\"\n            height=\"300\"\n            minheights=\"300\"\n            maxheights=\"1000\"\n            commands={[\n              commands.bold,\n              commands.italic,\n              commands.strikethrough,\n              commands.hr,\n              commands.title,\n              commands.divider,\n              commands.link,\n              commands.quote,\n              commands.code,\n              commands.image,\n              commands.unorderedListCommand,\n              commands.orderedListCommand,\n              commands.checkedListCommand,\n            ]}\n          />\n          : <div/>\n        }\n        <h2>Description Preview</h2>\n        <MDEditor.Markdown source={descriptionText} style={{\n          backgroundColor: \"white\",\n          borderRadius: \"5px\",\n          border: \"1px solid gray\",\n          padding: \"20px 10px\"\n        }} />\n        {(schemeToUse.type == \"ContributionReward\" || schemeToUse.type == \"GenericMulticall\")\n          || (schemeToUse.type == \"WalletScheme\" && schemeToUse.controllerAddress == networkConfig.controller)\n          ? <h2>Calls executed from the avatar <Question question=\"9\"/></h2>\n          : <h2>Calls executed from the scheme <Question question=\"9\"/></h2>\n        }\n      \n        {(schemeToUse.type == \"ContributionReward\")\n        ? \n        // If scheme to use is Contribution Reward display a different form with less fields\n        <div>\n          <CallRow>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Beneficiary Account</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>REP Change</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>ETH Value (in WEI)</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Address of Token</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Token Amount (in WEI)</span>\n          </CallRow>\n          <CallRow>\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"beneficiary\", event.target.value)}\n              value={contributionRewardCalls.beneficiary}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"repChange\", event.target.value)}\n              value={contributionRewardCalls.repChange}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"ethValue\", event.target.value)}\n              value={contributionRewardCalls.ethValue}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"externalToken\", event.target.value)}\n              value={contributionRewardCalls.externalToken}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"tokenValue\", event.target.value)}\n              value={contributionRewardCalls.tokenValue}\n              width=\"50%\"\n            />\n          </CallRow>\n        </div>\n        \n        : \n        // If the scheme is GenericMulticall allow only advanced encoded calls\n        // At last if the scheme used is a Wallet Scheme type allow a complete edition of the calls :)\n          <div>\n            {calls.map((call, i) => \n              <CallRow key={\"call\"+i}>\n                <span>#{i}</span>\n\n                {((schemeToUse.type == \"WalletScheme\") && (call.callType === \"simple\")) ?\n                  <SelectInput\n                    value={calls[i].to}\n                    onChange={(value) => {onToSelectChange(i, value)}}\n                    width={\"20%\"}\n                  >\n                  {allowedToCall.map((allowedCall, allowedCallIndex) =>{\n                    return (\n                      <option key={\"toCall\"+allowedCallIndex} value={allowedCall.value}>\n                        {allowedCall.name}\n                      </option>\n                    );\n                  })}\n                  </SelectInput>\n                  : (schemeToUse.type == \"WalletScheme\") &&\n                  <TextInput\n                    value={calls[i].to}\n                    onChange={(value) => {onToSelectChange(i, value)}}\n                    width={\"20%\"}\n                  />\n                }\n                \n                { call.callType === \"simple\" ?\n                  \n                  <div style={{display: \"flex\", width: call.callType === \"simple\" ? \"60%\" : \"50%\"}}>\n                    <SelectInput\n                      value={calls[i].functionName}\n                      onChange={(event) => {\n                        const selectedFunction = calls[i].allowedFunctions.find((allowedFunction) => {\n                          return allowedFunction.functionName == event.target.value\n                        });\n                        onFunctionSelectChange(\n                          i,\n                          event.target.value,\n                          selectedFunction ? selectedFunction.params : \"\"\n                        )\n                      }}\n                      width=\"40%\"\n                    >\n                      {calls[i].allowedFunctions.map((allowedFunc, allowedFuncIndex) =>{\n                        if (allowedFunc.fromTime > 0 && allowedFunc.value != ANY_FUNC_SIGNATURE)\n                          return (\n                            <option key={\"functionToCall\"+allowedFuncIndex} value={allowedFunc.functionName}>\n                              {allowedFunc.functionName}\n                            </option>\n                          );\n                      })}\n                    </SelectInput>\n                    \n                    <div style={{display: \"flex\", width: \"100%\", flexDirection: \"column\", paddingRight: \"10px\"}}>\n                      {calls[i].functionParams.length == 0 ?\n                        <TextInput \n                          key={\"functionParam00\"}\n                          disabled\n                          type=\"text\"\n                          placeholder=\"Select address to call and function\"\n                          width=\"100%\"\n                          style={{marginTop: \"0px\"}}\n                        />\n                      : calls[i].functionParams.map((funcParam, funcParamIndex) => {\n                        return (\n                          <TextInput \n                            key={\"functionParam\"+funcParamIndex}\n                            type=\"text\"\n                            onChange={(value) => onFunctionParamsChange(i, value, funcParamIndex)}\n                            defaultValue={funcParam.defaultValue}\n                            value={calls[i].dataValues[funcParamIndex]}\n                            placeholder={funcParam.name}\n                            width=\"100%\"\n                            style={{marginTop: funcParamIndex > 0 ? \"5px\": \"0px\"}}\n                          />\n                        );\n                        \n                      })}\n                    </div>\n                  </div>\n                :\n                  <TextInput \n                    type=\"text\"\n                    onChange={(value) => onFunctionParamsChange(i, value, 0)}\n                    value={calls[i].dataValues[0]}\n                    placeholder=\"0x...\"\n                    width=\"100%\"\n                  />\n                }\n                \n                <TextInput\n                  type=\"text\"\n                  onChange={(value) => onValueChange(i, value)}\n                  value={calls[i].value}\n                  width=\"10%\"\n                  placeholder={calls[i].callType === \"advanced\" ? \"WEI\" : \"ETH\"}\n                />\n                \n                <RemoveButton onClick={() => {removeCall(i)}}>X</RemoveButton>\n                { schemeToUse.type == \"WalletScheme\"\n                  ? <RemoveButton onClick={() => {changeCallType(i)}}>\n                    {calls[i].callType === \"advanced\" ? \"Simple\" : \"Advanced\"}\n                    </RemoveButton>\n                  : <div/>\n                }\n              </CallRow>\n            )}\n            \n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n              <ActiveButton onClick={addCall}>Add Call</ActiveButton>\n            </div>\n            \n          </div>\n        }\n        \n        {\n          (errorMessage.length > 0) ?\n            <TextActions>\n              <span>\n                {errorMessage}\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        { (submitionState > 1) ?\n            <TextActions>\n              <span>\n                Uploaded to IPFS:\n                  <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\">https://ipfs.io/ipfs/{ipfsHash}</a>\n                <br/>\n                Check before submitting proposal\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        \n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n          {\n            (submitionState == 0) ?\n              <ActiveButton onClick={uploadToIPFS}> Upload to IPFS </ActiveButton>\n            : (submitionState == 1) ?\n              <ActiveButton> Uploading descritpion to IPFS.. </ActiveButton>\n            : (submitionState == 2) ?\n              <ActiveButton onClick={createProposal}>Submit Proposal</ActiveButton>\n            : (submitionState == 3) ?\n              <ActiveButton>Submiting TX...</ActiveButton>\n            : (submitionState == 4) ?\n              <ActiveButton>Waiting for TX...</ActiveButton>\n            :\n              <ActiveButton route=\"/\">Back to Proposals</ActiveButton>\n          }\n        </div>\n        \n      </NewProposalFormWrapper>\n    );\n});\n\nexport default NewProposalPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Copy from './Copy';\nimport { useStores } from '../../contexts/storesContext';\nimport { FiExternalLink } from \"react-icons/fi\";\n\nconst AddressLink = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  a {\n    padding: 2px 5px;\n    font-family: var(--roboto);\n    line-height: 17px;\n    letter-spacing: 0.2px;\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst BlockchainLink = ({ text, size = 'default', type = 'default', toCopy, onlyIcon}) => {\n  \n    const {\n        root: { configStore },\n    } = useStores();\n    \n    const networkName = configStore.getActiveChainName();\n\n    function formarText(toFormat) {\n        const start = toFormat.slice(0, 6);\n        const end = toFormat.slice(-4);\n\n        switch (size) {\n          case \"short\":\n            return `${start}..`;\n          case \"long\":\n            return toFormat;\n          default:\n            return `${start}...${end}`;\n        }\n    }\n    \n    function href() {\n        switch (type) {\n          case \"user\":\n            return `${window.location.pathname}#/user/${text}`;\n          case \"address\":\n            if (networkName == 'arbitrum')\n              return `https://explorer.arbitrum.io/#/address/${text}`\n            else if (networkName == 'arbitrumTestnet')\n              return `https://rinkeby-explorer.arbitrum.io/#/address/${text}`\n            else if (networkName == 'mainnet')\n              return `https://etherscan.io/address/${text}`\n            else if (networkName == 'xdai')\n              return `https://blockscout.com/xdai/mainnet/address/${text}`\n            else\n              return `https://${networkName}.etherscan.io/address/${text}`\n          default:\n            if (networkName == 'arbitrum')\n              return `https://explorer.arbitrum.io/#/tx/${text}`\n            else if (networkName == 'arbitrumTestnet')\n              return `https://rinkeby-explorer.arbitrum.io/#/tx/${text}`\n            else if (networkName == 'mainnet')\n              return `https://etherscan.io/tx/${text}`\n            else if (networkName == 'xdai')\n              return `https://blockscout.com/xdai/mainnet/tx/${text}`\n            else\n              return `https://${networkName}.etherscan.io/tx/${text}`\n        }\n    }\n\n    return (\n        <AddressLink>\n          <a href={href()} target=\"_blank\">{ onlyIcon ? <FiExternalLink/> : formarText(text)}</a>\n          {toCopy ? <Copy toCopy={text} /> : <div/> }\n        </AddressLink>\n    );\n};\n\nexport default BlockchainLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport { useLocation } from 'react-router-dom';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Box from '../components/common/Box';\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst UserPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        root: { daoStore, blockchainStore },\n    } = useStores();\n    const userAddress = useLocation().pathname.split(\"/\")[2];\n    const userEvents = daoStore.getUserEvents(userAddress);\n    const userInfo = daoStore.getUser(userAddress);\n    const governanceInfo = daoStore.getGovernanceInfo().ranking.find(user => user.address == userAddress);\n    let proposalsToRedeem = [];\n    \n    userEvents.votes.map((vote) => {\n      const proposal = daoStore.getProposal(vote.proposalId);\n      const voteParameters = daoStore.getVotingParametersOfProposal(vote.proposalId);\n      if ((\n        (proposal.stateInVotingMachine == 1) \n        ||\n        (\n          voteParameters.votersReputationLossRatio > 0\n          && vote.timestamp < proposal.boostedPhaseTime\n          && proposal.winningVote == vote.vote\n        )\n      ) && (proposalsToRedeem.indexOf(vote.proposalId) < 0)) {\n          proposalsToRedeem.push(vote.proposalId);\n      }\n    })\n    \n    userEvents.stakes.map((stake) => {\n      const proposal = daoStore.getProposal(stake.proposalId);\n      if (proposalsToRedeem.indexOf(stake.proposalId) < 0 && proposal.winningVote == stake.vote)\n        proposalsToRedeem.push(stake.proposalId);\n    });\n    \n    userEvents.redeems.map((redeem) => {\n      if (proposalsToRedeem.indexOf(redeem.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeem.proposalId) , 1);\n    });\n    \n    userEvents.redeemsRep.map((redeemRep) => {\n      if (proposalsToRedeem.indexOf(redeemRep.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeemRep.proposalId) , 1);\n    });\n\n    return (\n      <Box style={{padding: \"10px 20px\"}}>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <h2 style={{ display: \"flex\", alignItems:\"center\"}}>\n            User: <BlockchainLink size=\"long\" text={userAddress} toCopy/>\n          </h2>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n          </div>\n        </div>\n        \n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {userInfo.repPercentage.toFixed(2)} % REP\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 1).length} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 2).length} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.newProposalEvents.length} Proposals\n          </InfoBox>\n        </div>\n        \n        <h2> Redeems Left </h2>\n        {proposalsToRedeem.length == 0 ? <span> No redeems left </span> : <div/>}\n        {proposalsToRedeem.map((proposalId, i) => {\n          return(\n            <span\n              key={\"proposalLink\"+i}\n              onClick={() => { history.push(`/proposal/${proposalId}`)}}\n              style={{  \n                padding: \"6px 0px\", cursor: \"pointer\"\n              }}\n            >\n              <span> Proposal {proposalId} </span>\n            </span>\n          );\n        })}\n        \n        <h2> History </h2>\n        {userEvents.history.map((historyEvent, i) => {\n          return(\n            <div key={\"userHistoryEvent\"+i} style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"6px 0px\",\n              borderBottom: i < userEvents.history.length - 1 ? \"1px solid\": \"\"\n            }}>\n              <span> {historyEvent.text} </span> \n              <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n            </div>\n          );\n        })}\n      </Box>\n    );\n});\n\nexport default UserPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport moment from 'moment';\nimport { FiPlayCircle, FiFastForward } from \"react-icons/fi\";\nimport Slider from '@material-ui/core/Slider';\nimport MDEditor from '@uiw/react-md-editor';\nimport { useHistory } from \"react-router-dom\";\nimport contentHash from 'content-hash';\nimport { bnum } from '../utils/helpers';\nimport { timeToTimestamp } from '../utils/date';\nimport { calculateStakes } from '../utils/proposals';\nimport { formatBalance } from '../utils/token';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\nimport {\n  WalletSchemeProposalState,\n  VotingMachineProposalState\n} from '../enums';\n\nconst ProposalInformationWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoSidebarBox = styled(Box)`\n  max-width: 400px;\n  min-width: 300px;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  padding: 10px 15px;\n`;\n\nconst ProposalInfoSection = styled.div`\n  max-width: 900px;\n  width: 100%;\n  flex-direction: column;\n  margin-right: 15px;\n`\n\nconst ProposalInfoBox = styled(Box)`\n  max-width: 900px;\n  overflow-wrap: break-word;\n  padding: 20px 15px 10px 15px;\n  justify-content: flex-start;\n  overflow: auto;\n`\n\nconst SidebarDivider = styled.div`\n  border-bottom: 1px solid gray;\n  margin: 5px 10px;\n`;\n\nconst SidebarRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 5px 0px;\n\n  .timeText {\n    font-size: 20;\n    margin-left: -10px;\n    width:100%;\n    padding-top: 5px;\n  }\n  \n  span {\n    margin-bottom: 5px;\n  }\n`;\n\nconst AmountInput = styled.input`\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: 60px;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\n\nconst AmountBadge = styled.span`\n    background-color: ${(props) => props.color || 'inherit'};\n    border-radius: 50%;\n    color: white;\n    padding: 2px 6px;\n    text-align: center;\n    margin: 5px;\n`;\n\nconst ActionButton = styled.div`\n    background-color: ${(props) => props.color || '#536DFE'};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    width: max-content;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    padding: 0px 10px;\n    margin: 5px;\n    \n    display: flex;\n    align-items: center;\n    \n    svg {\n      margin-right: 4px;\n    }\n`;\n\nconst AmountSlider = styled(Slider)({\n    maxWidth: \"40%\",\n    margin: \"auto\"\n});\n\n\nconst voteMarks = [\n  { value: 0, label: 'NO', },\n  { value: 50, label: '', },\n  { value: 100, label: 'YES', },\n];\n\nconst ProposalPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        root: { providerStore, daoStore, configStore, daoService, ipfsService, userStore, blockchainStore },\n    } = useStores();\n    const votingMachines = configStore.getNetworkConfig().votingMachines;\n    const proposalId = useLocation().pathname.split(\"/\")[2];\n    const proposal = daoStore.getProposal(proposalId);\n    \n    if (!proposal)\n      history.push('/')\n    \n    const votingMachineUsed = daoStore.getVotingMachineOfProposal(proposalId);\n    const scheme = daoStore.getScheme(proposal.scheme);\n    const { dxdApproved, genApproved } = userStore.getUserInfo(); \n    const { active, account, library } = providerStore.getActiveWeb3React();\n    const [stakeAmount, setStakeAmount] = React.useState(100);\n    const [votePercentage, setVotePercentage] = React.useState(0);\n    const [proposalDescription, setProposalDescription] = React.useState(\n      \"## Getting proposal description from IPFS...\"\n    );\n    const [proposalTitle, setProposalTitle] = React.useState(\n      proposal.title.length > 0 ? proposal.title : \"Getting proposal title from IPFS...\"\n    );\n    \n    const votingMachineTokenName = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? 'GEN' : 'DXD';\n    const votingMachineTokenApproved = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? genApproved : dxdApproved;\n      \n    const proposalEvents = daoStore.getProposalEvents(proposalId);\n    console.debug(\"[Scheme]\", scheme);\n    \n    let votedAmount = bnum(0);\n    let positiveVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"1\").length;\n    let negativeVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"2\").length;\n    let stakedAmount = bnum(0);\n    let positiveStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"1\").length;\n    let negativeStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"2\").length;\n    \n    const {\n      userRep: userRepAtProposalCreation\n    } = configStore.getActiveChainName().indexOf('arbitrum') > -1 ?\n      daoService.getRepAt(proposal.creationEvent.l2BlockNumber, true)\n      : daoService.getRepAt(proposal.creationEvent.l1BlockNumber);\n\n    const {status, boostTime, finishTime} = daoStore.getProposalStatus(proposalId);\n\n    const totalRepAtProposalCreation = proposal.repAtCreation;\n    // @ts-ignore\n    try {\n      if (proposalDescription == \"## Getting proposal description from IPFS...\")\n        ipfsService.getContent(contentHash.decode(proposal.descriptionHash)).then((data) => {\n          if (scheme.type == 'WalletScheme') {\n            setProposalDescription(data);\n          } else {\n            setProposalTitle(JSON.parse(data).title);\n            setProposalDescription(JSON.parse(data).description);\n          }\n        });\n    } catch (error) {\n      console.error(\"[IPFS ERROR]\",error);\n      setProposalTitle(\"Error getting proposal title from ipfs\");\n      setProposalDescription(\"Error getting proposal description from IPFS\");\n    }\n    \n    proposalEvents.votes.map((vote) => {\n      if (vote.voter === account) {\n        votedAmount = bnum(vote.amount);\n      };\n    });\n      \n    proposalEvents.stakes.map((stake) => {\n      if (stake.staker === account && stake.vote.toString() == \"1\") {\n        stakedAmount = stakedAmount.plus(stake.amount);\n      } else if (stake.staker === account && stake.vote.toString() == \"2\") {\n        stakedAmount = stakedAmount.minus(stake.amount);\n      }\n    });\n    \n    console.debug(\"[Proposal]\", proposal);\n    console.debug(\"[Proposal events]\", proposalEvents);\n    \n    const executionTimeoutTime = scheme.type == \"WalletScheme\"\n      ? proposal.submittedTime.plus(scheme.maxSecondsForExecution)\n      : bnum(0);\n    \n    let proposalCallTexts = new Array(proposal.to.length);\n    for (var p = 0; p < proposal.to.length; p++) {\n      if (\n        scheme.controllerAddress === configStore.getNetworkConfig().controller\n        || proposal.to[p] === configStore.getNetworkConfig().controller\n      ) {\n        const decodedGenericCall = daoService.decodeControllerCall(proposal.callData[p]);\n        proposalCallTexts[p] = decodedGenericCall;\n      } else {\n        proposalCallTexts[p] =\n          \"Call to \"+proposal.to[p]+\" with data of \"+proposal.callData[p]+\n          \" uinsg value of \"+library.utils.fromWei(proposal.values[p].toString());\n      }\n    }\n    \n    const votingParameters = daoStore.getVotingParametersOfProposal(proposalId);\n\n    const canRedeemToken = (proposalEvents.redeems.findIndex((redeem) => redeem.beneficiary === account) < 0)\n      && (stakedAmount.gt('0'));\n\n    const vote = proposalEvents.votes.find((vote) => vote.voter === account);\n    const canRedeemRep = vote\n      ? (proposalEvents.redeemsRep.findIndex((redeemRep) => redeemRep.beneficiary === account) < 0)\n        && (\n          ((votingParameters.votersReputationLossRatio > 0) && (vote.timestamp < proposal.boostedPhaseTime))\n          || (proposal.stateInVotingMachine == 1)\n        )\n      : false;\n\n    const canRedeem = (canRedeemToken || canRedeemRep);\n\n    const {stakeToBoost, stakeToUnBoost, recommendedStakeToBoost, recommendedStakeToUnBoost } = calculateStakes(\n      votingParameters.thresholdConst,\n      scheme.boostedProposals,\n      daoStore.getAmountOfProposalsPreBoostedInScheme(scheme.address),\n      proposal.positiveStakes,\n      proposal.negativeStakes,\n    )\n    \n    const timeToBoost = timeToTimestamp(boostTime);\n    const timeToFinish = timeToTimestamp(finishTime);\n  \n    const boostedVoteRequiredPercentage = scheme.boostedVoteRequiredPercentage / 1000;\n\n    const repPercentageAtCreation = userRepAtProposalCreation.times(100).div(totalRepAtProposalCreation).toFixed(4);\n    \n    function onStakeAmountChange(event) {\n      setStakeAmount(event.target.value);\n    }\n    \n    function onVoteValueChange(event) {\n      setVotePercentage(event.target.value < repPercentageAtCreation ? event.target.value : repPercentageAtCreation);\n    }\n    \n    if (repPercentageAtCreation > 0 && votePercentage === 0) {\n      setVotePercentage(repPercentageAtCreation);\n    }\n    \n    const submitVote = function(decision) {\n      const repAmount = (totalRepAtProposalCreation.times(bnum(votePercentage))).div('100');\n      daoStore.vote(decision, repAmount.toFixed(0), proposalId);\n    };\n    \n    const submitStake = function(decision) {\n      daoStore.stake(decision, library.utils.toWei(stakeAmount.toString()), proposalId);\n    };\n    \n    const redeem = function() {\n      daoStore.redeem(proposalId, account);\n    }\n    \n    const approveVotingMachineToken = function() {\n      daoStore.approveVotingMachineToken(votingMachineUsed);\n    };\n    \n    const executeProposal = function() {\n      daoStore.execute(proposalId);\n    };\n\n    const finishTimeReached = finishTime.toNumber() < moment().unix();\n\n    return (\n      <ProposalInformationWrapper>\n        <ProposalInfoSection>\n          <ProposalInfoBox>\n            <h1 style={{margin: \"0px\"}}> {proposalTitle} </h1>\n            <MDEditor.Markdown source={ proposalDescription } style={{\n              padding: \"20px 10px\",\n              lineBreak: \"anywhere\",\n              whiteSpace: \"pre-line\"\n            }} />\n            {proposal.descriptionHash.length > 0 &&\n              <h3 style={{margin: \"0px\"}}>\n                <small>\n                  IPFS Document: <a target=\"_blank\" href={`https://ipfs.io/ipfs/${contentHash.decode(proposal.descriptionHash)}`}>\n                  ipfs://{contentHash.decode(proposal.descriptionHash)}\n                  </a>\n                </small>\n              </h3>\n            }\n            <h2> Calls  <Question question=\"9\"/></h2>\n            {proposalCallTexts.map((proposalCallText, i) => {\n              return(\n              <div key={\"proposalCallText\"+i}>\n                <span> {proposalCallText} </span> \n                {i < proposalCallTexts.length - 1 ? <hr/> : <div/>}\n              </div>);\n            })}\n          </ProposalInfoBox>\n          <ProposalInfoBox style={{marginTop: \"15px\"}}>\n            <h1 style={{margin: \"0px\"}}> History </h1>\n            \n            {proposalEvents.history.map((historyEvent, i) => {\n              return(\n                <div key={\"proposalHistoryEvent\"+i} style={{\n                  display: \"flex\", alignItems:\"center\", padding:\"4px 0px\",\n                  borderBottom: i < proposalEvents.history.length - 1 ? \" 1px --medium-gray\": \"\"\n                }}>\n                  <span> {historyEvent.text} </span> \n                  <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n                  {i < proposalEvents.history.length - 1 ? <hr/> : <div/>}\n                </div>\n              );\n            })}\n          </ProposalInfoBox>\n        </ProposalInfoSection>\n        <InfoSidebarBox>\n          <h2 style={{margin: \"10px 0px 0px 0px\", textAlign: \"center\"}}>{status} <Question question=\"3\"/></h2>\n          <SidebarRow style={{\n            margin: \"0px 10px\",\n            flexDirection: \"column\"\n          }}>\n            {(boostTime.toNumber() > moment().unix()) ?\n              <span className=\"timeText\"> Boost {timeToBoost} </span> \n              : <div></div>\n            }\n            {(finishTime.toNumber() > moment().unix()) ?\n              <span className=\"timeText\">\n                Finish {timeToFinish} </span>\n              : <div></div>}\n          </SidebarRow>\n          { proposal.stateInScheme < 3 ? \n            <SidebarRow style={{flexDirection:\"column\", alignItems:\"center\"}}>\n              {status === \"Pending Boost\" ? \n                <ActionButton color=\"blue\" onClick={executeProposal}><FiFastForward/> Boost </ActionButton>\n                : status === \"Quiet Ending Period\" && timeToFinish === \"\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Finish </ActionButton>\n                : status === \"Pending Execution\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Execute </ActionButton>\n                : status === \"Execution Timeout\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Execute </ActionButton>\n                : status === \"Expired in Queue\" && proposal.stateInScheme == \"1\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Finish </ActionButton>\n                : <div/>\n              }\n            </SidebarRow>\n            : <div/>\n          }\n          \n          { ((status == \"Pending Execution\") && (executionTimeoutTime.toNumber() > 0)) ?\n            <span style={{textAlign: \"center\"}}> <strong> Execution Timeout Date </strong> <br/> <small>{moment.unix(executionTimeoutTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")}</small> </span>\n            : <div/>\n          }\n          \n          <SidebarDivider/> \n\n          <SidebarRow style={{ margin: \"0px 10px\", padding: \"10px 0px\", flexDirection: \"column\" }}>\n            <span style={{ display: \"flex\", height: \"17px \"}}>\n              <strong>Proposer</strong> <small><BlockchainLink type=\"user\" text={proposal.proposer} toCopy/></small>\n            </span>\n            <span> <strong>Scheme</strong> <small>{scheme.name}</small></span>\n            <span><strong>State in Voting Machine </strong>\n              <small>{VotingMachineProposalState[proposal.stateInVotingMachine]}</small>\n            </span>\n            <span><strong>State in Scheme </strong>\n              <small>{WalletSchemeProposalState[proposal.stateInScheme]}</small>\n            </span>\n            <span> <strong>Submitted Date</strong> <small>{\n              moment.unix(proposal.submittedTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            <span> <strong>Boost Date</strong> <small>{\n              boostTime.toNumber() > 0 ?\n                moment.unix(boostTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n              : \"-\"\n            }</small> </span>\n            <span> <strong>Finish Date</strong> <small>{\n              moment.unix(finishTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            \n            { (boostedVoteRequiredPercentage > 0) ?\n              <span> <strong> Required Boosted Vote: </strong> <small>{boostedVoteRequiredPercentage}%</small> </span>\n              : <div/>\n            }\n          </SidebarRow>\n          \n          <SidebarDivider/> \n        \n          <SidebarRow>\n            <strong>Votes <Question question=\"4\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}> \n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveVotesCount}</AmountBadge>\n              {proposal.positiveVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <br/> \n              {proposalEvents.votes && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`voteUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n                    </small>\n                  );\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {proposal.negativeVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <AmountBadge color=\"red\">{negativeVotesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`voteDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toNumber().toFixed(2)} %\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {repPercentageAtCreation > 0\n            ? <small>{repPercentageAtCreation} % REP at proposal creation</small>\n            : <div/>\n          }\n          \n          { (\n              ((proposal.stateInVotingMachine == \"3\") || (proposal.stateInVotingMachine == \"4\"))\n              && (votingParameters.votersReputationLossRatio.toNumber() > 0)\n              && (finishTime.toNumber() > 0)\n            ) ? <small>Voter REP Loss Ratio: {votingParameters.votersReputationLossRatio.toString()}%</small>\n            : <div/> \n          }\n          \n          {!finishTimeReached && votedAmount.toNumber() === 0 && repPercentageAtCreation > 0 && proposal.stateInVotingMachine >= 3 ?\n            <SidebarRow>\n              \n              <AmountInput\n                type=\"number\"\n                placeholder=\"REP\"\n                name=\"votePercentage\"\n                max={repPercentageAtCreation}\n                value={votePercentage}\n                min=\"0\"\n                step={votePercentage > 10 ? \"1\" : votePercentage > 1 ? \"0.01\" : votePercentage > 0.1 ? \"0.001\" : \"0.00001\"}\n                id=\"votePercentage\"\n                onChange={onVoteValueChange}\n                style={{flex: 2}}\n              />\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitVote(1)}><FiThumbsUp /></ActionButton>\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitVote(2)}><FiThumbsDown /></ActionButton>\n              \n            </SidebarRow>\n          : votedAmount.toNumber() !== 0 ?\n            <SidebarRow>\n              Already voted {(votedAmount.toNumber() > 0) ? \"for\" : \"against\"} with { (votedAmount.times(\"100\").div(totalRepAtProposalCreation)).toFixed(2)} % REP\n            </SidebarRow>\n          : <div/>\n          }\n          \n          <SidebarDivider/> \n          \n          <SidebarRow>\n            <strong>Stakes <Question question=\"5\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveStakesCount}</AmountBadge>\n              {formatBalance(proposal.positiveStakes).toString()} {votingMachineTokenName}\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`stakeUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(bnum(stakeEvent.amount)).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {formatBalance(proposal.negativeStakes).toString()} {votingMachineTokenName}\n              <AmountBadge color=\"red\">{negativeStakesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`stakeDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(stakeEvent.amount).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {stakedAmount.toNumber() > 0\n            ? <SidebarRow>\n            Already staked {(stakedAmount.toNumber() > 0) ? \"for\" : \"against\"} with {formatBalance(stakedAmount).toString()} {votingMachineTokenName}\n            </SidebarRow>\n            : <div></div>\n          }\n\n          {!finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4) && votingMachineTokenApproved.toString() === \"0\" ?\n            <SidebarRow>\n              <small>Approve {votingMachineTokenName} to stake</small>\n              <ActionButton color=\"blue\" onClick={() => approveVotingMachineToken()}>Approve {votingMachineTokenName}</ActionButton>\n            </SidebarRow>\n            : !finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4)  ?\n              <div>\n                {Number(recommendedStakeToBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToBoost, 18, 1, false).toString()} {votingMachineTokenName} to boost</small> : <span/>}\n                {Number(recommendedStakeToUnBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToUnBoost, 18, 1, false).toString()} {votingMachineTokenName} to unboost</small> : <span/>}\n                <SidebarRow>\n                  <AmountInput\n                    type=\"number\"\n                    placeholder={votingMachineTokenName}\n                    name=\"stakeAmount\"\n                    id=\"stakeAmount\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    onChange={onStakeAmountChange}\n                    style={{flex: 2}}\n                  />\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitStake(1)}><FiThumbsUp /></ActionButton>\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitStake(2)}><FiThumbsDown /></ActionButton>\n                </SidebarRow>\n              </div>\n            : <div></div>\n          }\n          \n          {proposal.stateInVotingMachine < 3 && canRedeem\n            ? <SidebarRow style={{ borderTop: \"1px solid gray\",  margin: \"0px 10px\", justifyContent: \"center\" }}>\n              <ActionButton color=\"blue\" onClick={() => redeem()}>Redeem</ActionButton>\n            </SidebarRow>\n            : <div></div>\n          }\n          \n        </InfoSidebarBox>\n      </ProposalInformationWrapper>\n    );\n    \n});\n\nexport default ProposalPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { bnum, parseCamelCase, ZERO_ADDRESS } from '../utils/helpers';\nimport { formatBalance } from '../utils/token';\nimport { formatCurrency } from '../utils/number';\nimport { getTokenData } from '../config';\n\nconst FinanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    color: var(--dark-text-gray);\n    flex-wrap: wrap;\n`;\n\nconst FinanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: ${(props) => props.align};;\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst FinanceInformation = observer(() => {\n    const {\n        root: { providerStore, daoStore, configStore, coingeckoService },\n    } = useStores();\n    const { active: providerActive, library } = providerStore.getActiveWeb3React();\n\n    const daoInfo = daoStore.getDaoInfo();\n    const networkConfig = configStore.getNetworkConfig();\n    const schemes = daoStore.getAllSchemes();\n    const prices = coingeckoService.getPrices();\n\n    let assets = {\n      total: [{\n        address: ZERO_ADDRESS,\n        name: \"ETH\",\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }],\n      avatar: [{\n        address: ZERO_ADDRESS,\n        name: \"ETH\",\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }]\n    };\n    Object.keys(daoInfo.tokenBalances).map((tokenAddress) => {\n      const tokenData = getTokenData(tokenAddress);\n      assets.avatar.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n      assets.total.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n    });\n    \n    schemes.map((scheme) => {\n      if (scheme.controllerAddress != ZERO_ADDRESS)\n        return;\n        \n      const tokenBalances = scheme.tokenBalances;\n      if (!assets[scheme.name])\n        assets[scheme.name] = [{\n          address: ZERO_ADDRESS,\n          name: \"ETH\",\n          amount: bnum(scheme.ethBalance),\n          decimals: 18\n        }]\n      \n      Object.keys(tokenBalances).map((tokenAddress) => {\n        const tokenData = getTokenData(tokenAddress);\n\n        assets[scheme.name].push({\n          address: tokenAddress,\n          name: tokenData.name,\n          amount: bnum(tokenBalances[tokenAddress]),\n          decimals: tokenData.decimals\n        })\n        const indexOfAssetInTotal = assets.total.findIndex((asset) => asset.address == tokenAddress);\n        if (indexOfAssetInTotal > -1) {\n          assets.total[indexOfAssetInTotal].amount = assets.total[indexOfAssetInTotal].amount.plus(\n            bnum(tokenBalances[tokenAddress])\n          );\n        } else {\n          assets.total.push({\n            address: tokenAddress,\n            name: tokenData.name,\n            amount: bnum(tokenBalances[tokenAddress]),\n            decimals: tokenData.decimals,\n          })\n        }\n        \n      });\n    });\n    \n    return (\n      <FinanceInfoWrapper>\n        { Object.keys(assets).map((assetHolder, i) => {\n          const assetsOfHolder = assets[assetHolder];\n          return (\n            <div style={{width: i > 0 ? \"50%\" : \"100%\"}}>\n              <h2 style={{textAlign: \"center\"}}>{parseCamelCase(assetHolder)}</h2>\n              <FinanceTableHeaderWrapper>\n              <TableHeader width=\"33%\" align=\"center\"> Asset </TableHeader>\n              <TableHeader width=\"34%\" align=\"center\"> Balance </TableHeader>\n              <TableHeader width=\"33%\" align=\"center\"> USD Value </TableHeader>\n\n              </FinanceTableHeaderWrapper>\n              <TableRowsWrapper>\n              {assetsOfHolder.map((asset, i) => {\n                if (asset && formatBalance(asset.amount, asset.decimals, 2) > 0) {\n                  return (\n                    <TableRow key={`asset${i}`}>\n                      <TableCell width=\"33%\" align=\"center\" weight='500'>\n                        {asset.name} <BlockchainLink size=\"long\" type=\"address\" text={asset.address} onlyIcon/>\n                      </TableCell>\n                      <TableCell width=\"34%\" align=\"center\"> \n                        {formatBalance(asset.amount, asset.decimals, 2).toString()}\n                      </TableCell>\n                      <TableCell width=\"33%\" align=\"center\"> \n                        {(prices[asset.address] && prices[asset.address].usd) ?\n                          formatCurrency(\n                            bnum(\n                              Number(formatBalance(asset.amount, asset.decimals, 2)) * prices[asset.address].usd\n                            )\n                          )\n                          : \"-\"\n                        }\n                      </TableCell>\n                    </TableRow>);\n                } else {\n                  return <div/>\n                }\n              })}\n              </TableRowsWrapper>\n            </div>\n          );\n        })}\n      </FinanceInfoWrapper>\n    );\n});\n\nexport default FinanceInformation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport { bnum } from '../utils/helpers';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst SchemesInformationWrapper = styled.div`\n  width: 100%;\n  background: white;\n  font-weight: 400;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--dark-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 16px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    align-items: center;\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n`;\n\nconst TableCell = styled.div`\n    a {\n        text-decoration: none;\n        width: 100%;\n\n        &:hover{\n            color: var(--turquois-text-onHover);\n        }\n    }\n    color: ${(props) => props.color};\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst SchemesInformation = observer(() => {\n    const {\n        root: { providerStore, daoStore, blockchainStore },\n    } = useStores();\n    const { active: providerActive, library } = providerStore.getActiveWeb3React();\n    \n    const loading = (\n      !blockchainStore.initialLoadComplete\n    );\n    \n    const schemes = daoStore.getAllSchemes();\n    return (\n      <SchemesInformationWrapper>\n        <ProposalTableHeaderWrapper>\n            <TableHeader width=\"15%\" align=\"left\"> Name </TableHeader>\n            <TableHeader width=\"40%\" align=\"center\"> Configuration <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"25%\" align=\"center\"> Permissions <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <span>Boosted</span> - <span>Active</span> - <span>Total</span>\n            </TableHeader>\n        </ProposalTableHeaderWrapper>\n        <TableRowsWrapper>\n        {schemes.map((scheme, i) => {\n          const schemeProposals = daoStore.getSchemeProposals(scheme.address);\n          const votingMachineParameters = daoStore.getVotingParametersOfScheme(scheme.address);\n          if (votingMachineParameters)\n            return (\n              <div key={\"scheme\"+i}>\n                <TableRow>\n                  <TableCell width=\"15%\" align=\"left\" weight='500' wrapText=\"true\">\n                    {scheme.name}<br/>\n                    <BlockchainLink size=\"short\" text={scheme.address} toCopy/>\n                  </TableCell>\n                  <TableCell width=\"40%\" align=\"center\">\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max time for execution: {\n                          moment.duration(scheme.maxSecondsForExecution.toString(), 'seconds').humanize()\n                        }<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max REP % to change in proposal: {scheme.maxRepPercentageChange.toString()} %<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Required Percentage for boosted approval: {bnum(scheme.boostedVoteRequiredPercentage).div(\"1000\").toString()} %<br/></small>\n                      : <div/>\n                    }\n                    \n                    <small>Required Percentage for queue approval: {votingMachineParameters.queuedVoteRequiredPercentage.toString()} %</small><br/>\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Rep Proposing Reward: {\n                      Number(library.utils.fromWei(votingMachineParameters.proposingRepReward.toString())).toFixed(2)\n                    } REP</small><br/>\n                    <small>Reputation Loss Ratio: {votingMachineParameters.votersReputationLossRatio.toString()} %</small><br/>\n                    <small>Minimum Dao Boost: {\n                      Number(library.utils.fromWei(votingMachineParameters.minimumDaoBounty.toString())).toFixed(2)\n                    } DXD</small><br/>\n                    <small>Proposal Boost Bounty Const: {votingMachineParameters.daoBountyConst.toString()}</small><br/>\n                    <small>Boost Threshold Constant: {votingMachineParameters.thresholdConst.div(10**12).toString()}</small><br/>\n                    <small>Boost Limit Exponent Value: {votingMachineParameters.limitExponentValue.toString()}</small>\n                    \n                  </TableCell>\n                  <TableCell width=\"25%\" align=\"center\" wrapText>\n                    <strong>Controller Permissions</strong><br/>\n                    <small>{scheme.permissions.canGenericCall ? 'Can' : 'Cant'} make generic call</small><br/>\n                    <small>{scheme.permissions.canUpgrade ? 'Can' : 'Cant'} upgrade controller</small><br/>\n                    <small>{scheme.permissions.canChangeConstraints ? 'Can' : 'Cant'} change constraints</small><br/>\n                    <small>{scheme.permissions.canRegisterSchemes ? 'Can' : 'Cant'} register schemes</small>\n\n                  </TableCell>\n\n                  <TableCell width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-around\"}}> \n                    <span>{scheme.boostedProposals}</span>\n                    -\n                    <span>{schemeProposals.filter((proposal) => {\n                      return (proposal.stateInVotingMachine > 2)\n                    }).length}</span>\n                    -\n                    <span>{scheme.proposalIds ? scheme.proposalIds.length : 0}</span>\n                  </TableCell>\n                </TableRow>\n              </div>\n            );\n          }\n        )}\n        </TableRowsWrapper>\n      </SchemesInformationWrapper>\n    );\n});\n\nexport default SchemesInformation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { FaTrophy, FaMedal } from \"react-icons/fa\";\nimport { bnum } from '../utils/helpers';\nimport { Chart } from \"react-google-charts\";\n\nconst GovernanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    color: var(--dark-text-gray);\n`;\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst GovernanceTableHeaderActions = styled.div`\n    padding: 0px 10px 10px 10px;\n    color: var(--dark-text-gray);\n    border-bottom: 1px solid var(--line-gray);\n    font-weight: 500;\n    font-size: 18px;\n    letter-spacing: 1px;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    \n    span {\n      font-size: 20px;\n      padding: 10px 5px 5px 5px;\n    }\n`;\n\nconst GovernanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst GovernanceInformation = observer(() => {\n    const {\n        root: { providerStore, daoStore, configStore },\n    } = useStores();\n    const { active: providerActive, library } = providerStore.getActiveWeb3React();\n    const daoInfo = daoStore.getDaoInfo();\n    const governanceInfo = daoStore.getGovernanceInfo();\n    console.log(governanceInfo);\n    function toNumber(weiNumber) {\n      return bnum(weiNumber).div(10**18).toFixed(0)\n    }\n    return (\n      <GovernanceInfoWrapper>\n        <h1 style={{textAlign: \"center\"}}>Stats</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {toNumber(daoInfo.totalRep)} REP\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalPositiveVotes} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalNegativeVotes} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalProposalsCreated} Proposals\n          </InfoBox>\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Reputation Charts</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n          <Chart\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.rep}\n            options={{\n              legend: 'none',\n              pieSliceText: 'none',\n              pieStartAngle: 100,\n              title: \"Reputation Distribution\",\n              sliceVisibilityThreshold: 0.001, // 0.1%\n            }}\n          />\n          <Chart\n            width=\"100%\"\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.repEvents}\n            options={{\n              hAxis: { title: 'Block Number', },\n              vAxis: { title: 'Reputation', },\n              title: \"Reputation over Time\",\n              legend: 'none'\n            }}\n          />\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Governance Ranking</h1>\n\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            Create Proposal<br/>\n            <strong>1 to 30 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Winning Option<br/>\n            <strong>3 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Losing Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n          <InfoBox>\n            Stake Winning Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n        </div>\n        <GovernanceTableHeaderWrapper>\n          <TableHeader width=\"5%\" align=\"center\"> # </TableHeader>\n          <TableHeader width=\"35%\" align=\"center\"> Address </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Proposals Created </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Voted </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Staked </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Score </TableHeader>\n        </GovernanceTableHeaderWrapper>\n        <TableRowsWrapper>\n        {governanceInfo.ranking.map((user, i) => {\n          return (\n            <TableRow key={`user${i}`}>\n              <TableCell width=\"5%\" align=\"center\" weight='500'> {i + 1}\n              {i == 0 ? <FaTrophy style={{color:\"gold\"}}/> :\n              i == 1 ? <FaTrophy style={{color:\"silver\"}}/> :\n              i == 2 ? <FaTrophy style={{color:\"#CD7F32\"}}/> :\n              i < 6 ? <FaMedal style={{color:\"gold\"}}/> :\n              i < 9 ? <FaMedal style={{color:\"silver\"}}/> :\n              i < 12 ? <FaMedal style={{color:\"#CD7F32\"}}/> :\n              <div/>}\n              </TableCell>\n              <TableCell width=\"35%\" align=\"center\" weight='500'>\n                <BlockchainLink size=\"long\" type=\"address\" text={user.address}/>\n              </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.proposals} </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctVotes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongVotes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctStakes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongStakes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.score.toFixed(0)} </TableCell>\n            </TableRow>\n          );\n        })}\n        </TableRowsWrapper>\n      </GovernanceInfoWrapper>\n    );\n});\n\nexport default GovernanceInformation;\n","import React from 'react';\nimport styled from 'styled-components'; \nimport { useLocation } from 'react-router-dom';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\n\nimport FinanceInformation from '../components/FinanceInformation';\nimport SchemesInformation from '../components/SchemesInformation';\nimport GovernanceInformation from '../components/GovernanceInformation';\nimport ProposalsTable from '../components/ProposalsTable';\n\nconst InfoPageWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst InfoNavigation = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n`;\nconst InfoPage = () => {\n    const searchPath = useLocation().search;\n    return (\n      <InfoPageWrapper>\n        <InfoNavigation>\n          <ActiveButton route=\"/info?view=governance\">Governance</ActiveButton>\n          <ActiveButton route=\"/info?view=finance\">Finance</ActiveButton>\n          <ActiveButton route=\"/info?view=schemes\">Schemes</ActiveButton>\n        </InfoNavigation>\n        <div>\n          { searchPath === \"?view=schemes\" ?\n            <SchemesInformation/>\n          : searchPath === \"?view=governance\" ?\n            <GovernanceInformation/>\n          : <FinanceInformation/>\n          }\n        </div>\n      </InfoPageWrapper>\n    );\n};\n\nexport default InfoPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport { FiCheckCircle, FiX } from \"react-icons/fi\";\nimport Box from '../components/common/Box';\n\nconst Row = styled.div`\n  flex-direction: row;\n  flex: auto;\n  display: flex;\n  padding-top: 15px;\n  justify-content: space-around;\n`\n\nconst InputBox = styled.input`\n  background-color: white;\n  border: 1px solid var(--medium-gray );\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  padding: 0px 10px;\n  margin: 5px;\n`;\n\nconst ConfigPage = observer(() => {\n    const {\n        root: { providerStore, configStore, blockchainStore, pinataService, etherscanService },\n    } = useStores();\n    const { active: providerActive } = providerStore.getActiveWeb3React();\n    const loading = !blockchainStore.initialLoadComplete;\n    \n    const [etherscanApiStatus, setEtherscanApiStatus] = React.useState(etherscanService.auth);\n    const [pinataKeyStatus, setPinataKeyStatus] = React.useState(pinataService.auth);\n\n    const [localConfig, setLocalConfig] = React.useState(configStore.getLocalConfig());\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n    \n    function onApiKeyValueChange(value, key) {\n      localConfig[key] = value;\n      setLocalConfig(localConfig)\n      forceUpdate();\n    }\n    \n    function saveConfig() {\n      configStore.setLocalConfig(localConfig);\n    }\n    \n    async function testApis() {\n      await pinataService.isAuthenticated();\n      await etherscanService.isAuthenticated();\n      setPinataKeyStatus(pinataService.auth);  \n      setEtherscanApiStatus(etherscanService.auth);\n    }\n    \n    async function pinDXvoteHashes() {\n      pinataService.updatePinList();\n    }\n  \n    return (\n      <Box style={{alignItems: \"center\"}}>\n        <h2>API Keys <Question question=\"8\"/></h2>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Etherscan:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"etherscan\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"etherscan\")}\n            value={localConfig.etherscan}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {etherscanApiStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Pinata:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"pinata\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"pinata\")}\n            value={localConfig.pinata}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {pinataKeyStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{height: \"34px\", padding:\"10px 10px\"}}>Pin DXdao hashes on start</span>\n          <InputBox\n            type=\"checkbox\"\n            checked={localConfig.pinOnStart}\n            onChange={(event) => onApiKeyValueChange(event.target.checked, \"pinOnStart\")}\n            style={{width: \"20px\"}}\n          ></InputBox>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <ActiveButton onClick={saveConfig}>Save</ActiveButton>\n          <ActiveButton onClick={testApis}>Test Apis</ActiveButton>\n          <ActiveButton onClick={pinDXvoteHashes}>Pin Dxvote Hashes</ActiveButton>\n        </Row>\n      </Box>\n    );\n});\n\nexport default ConfigPage;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useStores } from '../contexts/storesContext';\nimport { observer } from 'mobx-react';\nimport Box from '../components/common/Box';\nimport { useLocation } from 'react-router-dom';\nimport MDEditor from '@uiw/react-md-editor';\nimport { ZERO_ADDRESS } from '../utils/helpers';\n\nconst FAQPage = observer(() => {\n    \n  const questionId = useLocation().search.indexOf(\"=\") > -1 ? useLocation().search.split(\"=\")[1] : 0;\n  \n  const {\n      root: { configStore, daoStore },\n  } = useStores();\n  \n  const FAQBox = styled(Box)`\n    padding: 20px 30px;\n    p {\n      line-height: 28px;\n      font-size: 20px;\n    }\n    h2 {\n      margin:10px 0px;\n    }\n    h3 {\n      margin: 5px 0px;\n    }\n    h4 {\n      margin: 0px;\n    }\n  `\n  useEffect(() => {\n    if (questionId > 0)\n      document.querySelectorAll(\"#FAQBody div h1\")[questionId].scrollIntoView();\n  }, []);\n   \n  const networkConfig = configStore.getNetworkConfig();\n  const schemes = daoStore.getCache().schemes;\n  let schemeAddresses = \"\";\n  for (let i = 0; i < Object.keys(schemes).length; i++) {\n    schemeAddresses += \"   - \"+schemes[Object.keys(schemes)[i]].name+\": \"+schemes[Object.keys(schemes)[i]].address+\"\\n\";\n  }\n\n   const FAQBody = \n`# Where are the dao funds held?\nMost of the ETH and tokens are held in the DXdao avatar address, this is the safest place for the funds to be, the access to this funds is usually slow and it take day for a proposal to move funds from this address. The Wallet Schemes can also hold funds too, but only the ones that dont make calls from the avatar.\n\n## DXdao Addresses\n\n- Avatar: ${networkConfig.avatar}\n- Controller: ${networkConfig.controller}\n- Reputation: ${networkConfig.reputation}\n- Permission Registry: ${networkConfig.permissionRegistry}\n- Reputation: ${networkConfig.reputation}\n- Schemes:\n${schemeAddresses}\n\n# What is a Wallet Scheme?\nA wallet scheme is a smart contract that manage the access to DXdao funds, in order to make transfers or calls from the DXdao avatar or the scheme itself the scheme needs to execute a proposal. The proposals are executed after it reaches a certain amount of votes or stakes over time, the amount of votes, staked and time that has to passed depends on the scheme configuration. An scheme who will have access to the DXdao avatar funds will usually take more votes, stakes and time than a scheme who make calls form itself, this means that funds can be allocated in the schemes as well, but this schemes will have only access to the funds held by themselves.\n\n# Proposal States\n## In Queue\nA proposal that needs the queuedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Pre Boosted\nA proposal that has enough stakes to pass be boosted state but cant be boosted just yet.\n\n## Pending Boost\nA proposal that has enough stakes to pass to boosted state.\n\n## Boosted\nA proposal that needs the boostedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Quiet Ending Period\nA proposal that changed the winning option in the amount of seconds specified as quietEndingPeriod before finishing, this will extend the proposal time for quietEndingPeriod seconds. The quietEndingPeriod is specified in the scheme configuration where the proposal was submitted.\n\n## Pending Execution\nA proposal that got enough votes and is ready to be executed.\n\n## Execution Failed\nA proposal that was executed after it passed but it execution failed.\n\n## Execution Succeded\nA proposal that was executed after it passed but it execution succeeded.\n\n## Expired in Queue\nA proposal that spent too much time in Queue state and didnt get enough votes to pass.\n\n# How does voting works?\nA proposal needs a minimum amount of votes to pass, and that depends on the state of the proposal at the moment of execution. If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed. If a proposal reaches the queuedVoteRequiredPercentage percentage amount of votes it gets executed instantly. This means that any proposal in Queued state will need that amount of votes to pass.\n\n# How does staking works?\nA proposal can receives a financial stake in DXD to speed up the voting process. If a proposal receives enough positive stakes to boost it will enter pre-boosted state, once the pre-boosted state finish if the proposal still has enough DXD staked to boost it will be boosted in the next voting machine action (vote, stake, or voting machine execution). If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed.\n\n# How do I get DXD?\nYou can get rinkeby DXD buying DXD in dxtrust rinkeby here: https://levelkdev.github.io/dxtrust/\n\n# How are proposals created?\nEach proposal has a title, description and calls to be exected by the wallet scheme where it is proposed. The description of the proposal is stored in IPFS, and we save the hash of the IPFS description in the blokchain next to the proposal title and calls. When creating a proposal you first need to submit the description to IPFS and once you get the IPFS hash of the description the proposal can be submited by sending a transaction to the wallet scheme smart contract.\n\n# External APIs\nThe app allows you to add external API services. Use Pinata to help DXdao by pinning the proposal description and important documents in you pinata account. Use Etherscan to decode proposal calls and know what the proposal will execute.\n\n# Schemes Configuration\n## Scheme Parameters\n### name\nThe name of the scheme, this will be used to identify the scheme by name in DXvote dapp.\n\n### callToController\nIf the scheme make calls to the controller or not. A Scheme that makes calls to a controller will make calls from the dxdao avatar (which gives access to the dxdao funds) and a scheme that do not call the controller will make call directly from itself, which means that it will have access only to the funds held in the scheme address.\n\n### maxSecondsForExecution\nThis is the amount of time that a proposal has to be executed in the scheme, this is useful to \"clean\" proposals that weren't successful or weren't able to be executed for some reason. This means that if a proposal passes in 3 days in the voting machine and the maxSecondsForExecution are 6 days it will have 3 days to be executed, after that it will be marked in ExecutionTimeout state and wont be able to be executed again, reaching a state of termination.\n\n### maxRepPercentageToMint\nThis is the maximum amount of rep in percentage allowed to be minted by proposal, the value can be between 0-100, if a proposal execution mints 5% of REP and the maxRepPercentageToMint equals 3, it will fail.\n\n## Controller Permissions\nThis are four values that determine what the scheme can do in the dxdao controller contract, the most powerful contract in the stack, the only two values that we use from it are canRegisterSchemes and canGenericCall. canRegisterSchemes allows the addition/removal of schemes and the canGenericCall allows the execution of calls in the avatar contract.\n\n## Permission Registry Permissions\nThis permissions are checked before a proposal execution to check that the total value transferred by asset and the functions to be called are allowed. If a scheme make calls to the controller the permissions are checked from the avatar address. The permissions are set by asset, specifying the sender and receiver addresses, the signature of the function to be used and the value to be transferred. It allows the use of \"wildcard\" permissions by using 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa for any address and 0xaaaaaaaa for any signature. It also allows the use of global transfer limits, by setting the limit by asset using the scheme as receiver address, any value recorded here will be used as global transfer limit in the proposal check.\n\n## Voting Machine Params\n### queuedVoteRequiredPercentage\nThe percentage of votes required to execute a proposal in queued state.\n\n### boostedVoteRequiredPercentage\nThe percentage of votes required to execute a proposal in boosted state.\n\n### queuedVotePeriodLimit\nThe amount of time that a proposal will be in queue state (not boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### boostedVotePeriodLimit\nThe amount of time that a proposal will be in boost state (after pre-boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### preBoostedVotePeriodLimit\nThe amount of time that a proposal will be in pre-boosted state. A proposal gets into pre-boosted state when it has enough.\n\n### thresholdConst\nThe constant used to calculate the needed upstakes in a proposal to reach boosted state, where the upstakes needed equal to downStakes * (thresholdConst ** (numberOfBoostedProposals)) taking in count the number of boosted proposals at the moment of the pre-boost to boosted state change.\n\n### quietEndingPeriod\nThe amount of time a proposal has to have the same winning option before it finish, if the winning option change during that time the proposal finish time will be extended till the winning option doesn't change during that time.\n\nproposingRepReward\nThe fixed amount of REP that will be minted to the address who created the proposal.\n\n### votersReputationLossRatio\nThe percentage of REP a voter will loose if the voter voted a proposal in queue state for the loosing option.\n\n### minimumDaoBounty\nThe minimum amount to be set as downstake when a proposal is created.\n\n### daoBountyConst\nThe downstake for proposal is calculated when the proposal is created, by using the formula: (daoBountyConst * averageBoostDownstakes) / 100. If the value calculated is higher than minimumDaoBounty then this value will be used, if not the start downstake of the proposal will be minimumDaoBounty.\n`\n\n  return (\n    <FAQBox id=\"FAQBody\">\n      <MDEditor.Markdown source={ FAQBody } style={{\n        padding: \"20px 10px\"\n      }} />\n    </FAQBox>\n  );\n});\n\nexport default FAQPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../components/common/Box';\nimport { FiZap } from \"react-icons/fi\";\n\nconst ForumPage = () => {\n  \n  const LoadingBox = styled.div`\n   .loader {\n      text-align: center;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      color: var(--dark-text-gray);\n      padding: 25px 0px;\n        \n      .svg {\n        height: 30px;\n        width: 30px;\n        margin-bottom: 10px;\n      }\n    }\n  `\n    \n  const [loading, setLoading] = React.useState(true);\n\n  function postMessageReceived(e) {\n    if (!e) {\n      return;\n    }\n  \n    if (e.data && e.data.type === \"discourse-resize\" && e.data.embedId) {\n      var elem = document.getElementById(e.data.embedId);\n      if (elem) {\n        elem.height = e.data.height + \"px\";\n      }\n    }\n    if (loading){\n      setLoading(false);\n    }\n  }\n  window.addEventListener(\"message\", postMessageReceived, false);\n\n  var lists = document.querySelectorAll(\"d-topics-list\");\n  for (var i = 0; i < lists.length; i++) {\n    var list = lists[i];\n    var url = list.getAttribute(\"discourse-url\");\n    if (!url || url.length === 0) {\n      console.error(\"Error, `discourse-url` was not found\");\n      continue;\n    }\n    var frameId = \"de-\" + Math.random().toString(36).substr(2, 9);\n    var params = [\"discourse_embed_id=\" + frameId];\n    list.removeAttribute(\"discourse-url\");\n\n    for (var j = 0; j < list.attributes.length; j++) {\n      var attr = list.attributes[j];\n      params.push(attr.name.replace(\"-\", \"_\") + \"=\" + attr.value);\n    }\n\n    var iframe = document.createElement(\"iframe\");\n    iframe.src = url + \"/embed/topics?\" + params.join(\"&\");\n    iframe.id = frameId;\n    iframe.width = \"100%\";\n    iframe.frameBorder = 0;\n    iframe.scrolling = \"no\";\n    console.log(iframe)\n    list.appendChild(iframe);\n  }\n\n  return (\n    <Box style={{padding: \"0px\"}}>\n      { loading ?\n        <LoadingBox>\n        <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n        </LoadingBox>\n      :\n        <d-topics-list discourse-url=\"https://daotalk.org/\" category=\"15\" per-page=\"10000\" template=\"complete\"></d-topics-list>\n      }\n    </Box>\n  );\n};\n\nexport default ForumPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { createWeb3ReactRoot } from '@web3-react/core';\nimport Web3ReactManager from 'components/Web3ReactManager';\nimport Web3 from 'web3';\nimport moment from 'moment';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'index.css';\nimport ThemeProvider, { GlobalStyle } from './theme';\n\nimport { web3ContextNames } from 'provider/connectors';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PageRouter from './PageRouter';\n\nimport ProposalsPage from './pages/Proposals';\nimport NewProposalPage from './pages/NewProposal';\nimport UserPage from './pages/User';\nimport ProposalPage from './pages/Proposal';\nimport InfoPage from './pages/Info';\nimport ConfigPage from './pages/Configuration';\nimport FAQPage from './pages/FAQ';\nimport ForumPage from './pages/Forum';\n\nmoment.updateLocale('en', {\n  relativeTime : {\n    s: \"1 second\",\n    m: \"1 minute\",\n    h: \"1 hour\",\n    d:  \"1 day\",\n  }\n});\n\nconst Web3ProviderInjected = createWeb3ReactRoot(web3ContextNames.injected);\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nconst Root = (\n  <Web3ProviderInjected getLibrary={getLibrary}>\n    <ThemeProvider>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Web3ReactManager>\n            <Header />\n            <PageRouter>\n              <Route exact path=\"/\"> <ProposalsPage /> </Route>\n              <Route exact path=\"/new\"> <NewProposalPage /> </Route>\n              <Route exact path=\"/info\"> <InfoPage /> </Route>\n              <Route exact path=\"/config\"> <ConfigPage /> </Route>\n              <Route exact path=\"/faq\"> <FAQPage /> </Route>\n              <Route exact path=\"/forum\"> <ForumPage /> </Route>\n              <Route exact path=\"/user/:address\"> <UserPage /> </Route>\n              <Route exact path=\"/proposal/:proposalId\"> <ProposalPage /> </Route>\n            </PageRouter>\n            <Footer />\n          </Web3ReactManager>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  </Web3ProviderInjected>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { bnum } from './helpers';\n\nexport const decodeSchemeParameters = function(rawParameters) {\n    return {\n        queuedVoteRequiredPercentage: bnum(rawParameters.queuedVoteRequiredPercentage.toString()),\n        queuedVotePeriodLimit: bnum(rawParameters.queuedVotePeriodLimit.toString()),\n        boostedVotePeriodLimit: bnum(rawParameters.boostedVotePeriodLimit.toString()),\n        preBoostedVotePeriodLimit: bnum(rawParameters.preBoostedVotePeriodLimit.toString()),\n        thresholdConst: bnum(rawParameters.thresholdConst.toString()),\n        limitExponentValue: bnum(rawParameters.limitExponentValue.toString()),\n        quietEndingPeriod: bnum(rawParameters.quietEndingPeriod.toString()),\n        proposingRepReward: bnum(rawParameters.proposingRepReward.toString()),\n        votersReputationLossRatio: bnum(rawParameters.votersReputationLossRatio.toString()),\n        minimumDaoBounty: bnum(rawParameters.minimumDaoBounty.toString()),\n        daoBountyConst: bnum(rawParameters.daoBountyConst.toString()),\n        activationTime: bnum(rawParameters.activationTime.toString())\n      };\n  }\n","const { getNetworkConfig } = require('../config');\nconst PermissionRegistry = require(\"./PermissionRegistry\");\nconst DxController = require(\"./DxController\");\nconst DxAvatar = require(\"./DxAvatar\");\nconst DxReputation = require(\"./DxReputation\");\nconst DXDVotingMachine = require(\"./DXDVotingMachine\");\nconst GenesisProtocol = require(\"./GenesisProtocol\");\nconst ERC20 = require(\"./ERC20\");\nconst Multicall = require(\"./Multicall\");\n\nexport const getContracts = async function(network: string, web3: any) {\n  const networkConfig = getNetworkConfig(network);\n  const avatar = await new web3.eth.Contract(DxAvatar.abi, networkConfig.avatar);\n  const controller = await new web3.eth.Contract(DxController.abi, networkConfig.controller);\n  const reputation = await new web3.eth.Contract(DxReputation.abi, networkConfig.reputation);\n  const permissionRegistry = await new web3.eth.Contract(PermissionRegistry.abi, networkConfig.permissionRegistry);\n  const multicall = await new web3.eth.Contract(Multicall.abi, networkConfig.utils.multicall);\n\n  let votingMachines = {};\n\n  if (networkConfig.votingMachines.gen)\n    votingMachines[networkConfig.votingMachines.gen.address] = {\n      name: \"GenesisProtocol\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen.token)\n    }\n    \n  if (networkConfig.votingMachines.gen2)\n    votingMachines[networkConfig.votingMachines.gen2.address] = {\n      name: \"GenesisProtocol2\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen2.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen2.token)\n    }\n  \n  if (networkConfig.votingMachines.dxd)\n    votingMachines[networkConfig.votingMachines.dxd.address] = {\n      name: \"DXDVotingMachine\",\n      contract: await new web3.eth.Contract(DXDVotingMachine.abi, networkConfig.votingMachines.dxd.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.dxd.token)\n    }\n  \n  return { votingMachines, avatar, controller, reputation, permissionRegistry, multicall };\n  \n}\n","import axios from 'axios';\nimport { bnum, ZERO_HASH, ZERO_ADDRESS, sleep } from '../utils/helpers';\nimport { decodePermission } from '../utils/permissions';\nimport { decodeSchemeParameters } from '../utils/scheme';\nimport {\n  getEvents,\n  getRawEvents,\n  sortEvents,\n  executeMulticall,\n  isNode,\n  descriptionHashToIPFSHash,\n  ipfsHashToDescriptionHash\n} from './helpers';\nimport { DaoNetworkCache } from '../types';\nimport WalletSchemeJSON from '../contracts/WalletScheme.json';\nimport { getContracts } from '../contracts';\nimport { getSchemeTypeData } from '../config';\n\nexport const updateNetworkCache = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  console.debug('[Cache Update]', fromBlock, toBlock);\n  const networkContracts = await getContracts(networkName, web3);\n  \n  (await Promise.all([\n    updateDaoInfo(networkCache, networkContracts, web3),\n    updateReputationEvents(networkCache, networkContracts.reputation, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n  \n  await Promise.all(Object.keys(networkContracts.votingMachines).map(async (votingMachineAddress) => {\n  \n    if (!networkCache.votingMachines[votingMachineAddress])\n      networkCache.votingMachines[votingMachineAddress] = {\n        name: networkContracts.votingMachines[votingMachineAddress].name,\n        events: {\n          votes: [],\n          stakes: [],\n          redeems: [],\n          redeemsRep: [],\n          proposalStateChanges: [],\n          newProposal: []\n        },\n        token: {\n          address: networkContracts.votingMachines[votingMachineAddress].token._address,\n          totalSupply: bnum(0)\n        },\n        votingParameters: {}\n      };\n  \n    networkCache = await updateVotingMachine(\n      networkCache,\n      networkContracts.avatar._address,\n      networkContracts.votingMachines[votingMachineAddress].contract,\n      networkContracts.multicall,\n      fromBlock,\n      toBlock,\n      web3\n    );\n  \n  }));\n  \n  networkCache = await updateSchemes(networkCache, networkName, fromBlock, toBlock, web3);\n  \n  (await Promise.all([\n    updatePermissionRegistry(networkCache, networkName, fromBlock, toBlock, web3),\n    updateProposals(networkCache, networkName, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n\n  networkCache.l1BlockNumber = Number(toBlock);\n  networkCache.l2BlockNumber = 0;\n  \n  console.debug('Total Proposals', Object.keys(networkCache.proposals).length);\n\n  return networkCache;\n}\n\n// Update the DAOinfo field in cache\nexport const updateDaoInfo = async function (\n  networkCache: DaoNetworkCache, allContracts: any, web3: any\n): Promise<DaoNetworkCache> {\n  let callsToExecute = [\n    [allContracts.reputation, \"totalSupply\", []],\n    [allContracts.multicall, \"getEthBalance\", [allContracts.avatar._address]]\n  ];\n  const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n  networkCache.daoInfo.address = allContracts.avatar._address;\n  networkCache.daoInfo.repEvents = !networkCache.daoInfo.repEvents ? [] : networkCache.daoInfo.repEvents;\n  networkCache.daoInfo.totalRep = bnum(callsResponse.decodedReturnData[0]);\n  networkCache.daoInfo.ethBalance = bnum(callsResponse.decodedReturnData[1]);\n  if (!networkCache.daoInfo.tokenBalances)\n    networkCache.daoInfo.tokenBalances = {};\n  return networkCache;\n}\n\n// Get all Mint and Burn reputation events to calculate rep by time off chain\nexport const updateReputationEvents = async function (\n  networkCache: DaoNetworkCache, reputation: any, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n\n  if (!networkCache.daoInfo.repEvents)\n    networkCache.daoInfo.repEvents = [];\n\n  let reputationEvents = sortEvents( await getEvents(web3, reputation, fromBlock, toBlock, 'allEvents'));\n\n  reputationEvents.map((reputationEvent) => {\n    switch (reputationEvent.event) {\n      case \"Mint\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._to,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n        if (!networkCache.users[reputationEvent.returnValues._to]) {\n          networkCache.users[reputationEvent.returnValues._to] = {\n            repBalance: bnum(reputationEvent.returnValues._amount),\n            proposalsCreated: []\n          }\n        } else {\n          networkCache.users[reputationEvent.returnValues._to].repBalance = \n            bnum(networkCache.users[reputationEvent.returnValues._to].repBalance).plus(reputationEvent.returnValues._amount)\n        }\n      break;\n      case \"Burn\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._from,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n        networkCache.users[reputationEvent.returnValues._from].repBalance =\n          bnum(networkCache.users[reputationEvent.returnValues._from].repBalance)\n          .minus(reputationEvent.returnValues._amount)\n      break;\n    }\n  });\n  \n  return networkCache;\n}\n\n// Update all voting machine information, events, token and voting parameters used.\nexport const updateVotingMachine = async function (\n  networkCache: DaoNetworkCache,\n  avatarAddress: string,\n  votingMachine: any,\n  multicall: any,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n\n  let newVotingMachineEvents = sortEvents(\n    await getEvents(web3, votingMachine, fromBlock, toBlock, 'allEvents')\n  );\n  const votingMachineEventsInCache = networkCache.votingMachines[votingMachine._address].events;\n  const votingMachineParamsHash = [];\n\n  newVotingMachineEvents.map((votingMachineEvent) => {\n    const proposalCreated = votingMachineEventsInCache.newProposal\n      .findIndex(newProposalEvent => votingMachineEvent.returnValues._proposalId == newProposalEvent.proposalId) > -1;\n    \n    if (votingMachineEvent.returnValues._organization == avatarAddress\n      || (votingMachineEvent.event == \"StateChange\" && proposalCreated))\n      switch (votingMachineEvent.event) {\n        case \"NewProposal\":\n          votingMachineEventsInCache.newProposal.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            proposer: votingMachineEvent.returnValues._proposer,\n            paramHash: votingMachineEvent.returnValues._paramsHash,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n          \n        if (votingMachineParamsHash.indexOf(votingMachineEvent.returnValues._paramsHash) < 0)\n          votingMachineParamsHash.push(votingMachineEvent.returnValues._paramsHash);\n        break;\n        case \"StateChange\":\n          votingMachineEventsInCache.proposalStateChanges.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            state: votingMachineEvent.returnValues._proposalState,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"VoteProposal\":\n          \n          const preBoosted = votingMachineEventsInCache.proposalStateChanges\n            .findIndex(i => i.state === \"5\") >= 0;\n\n          votingMachineEventsInCache.votes.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            voter: votingMachineEvent.returnValues._voter,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._reputation,\n            preBoosted: preBoosted,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Stake\":\n        votingMachineEventsInCache.stakes.push({\n          event: votingMachineEvent.event,\n          signature: votingMachineEvent.signature,\n          address: votingMachineEvent.address,\n            staker: votingMachineEvent.returnValues._staker,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._amount,\n            amount4Bounty: bnum(\"0\"),\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Redeem\":\n          votingMachineEventsInCache.redeems.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"RedeemReputation\":\n          votingMachineEventsInCache.redeemsRep.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n      }\n  });\n  \n  const callsToExecute = [];\n  for (let i = 0; i < votingMachineParamsHash.length; i++) {\n    callsToExecute.push([\n      votingMachine,\n      \"parameters\",\n      [votingMachineParamsHash[i]]\n    ]);\n  }\n\n  const callsResponse = await executeMulticall(web3, multicall, callsToExecute);\n\n  for (let i = 0; i < callsResponse.returnData.length; i++) {\n    networkCache.votingMachines[votingMachine._address].votingParameters[ votingMachineParamsHash[i] ] =\n      decodeSchemeParameters(web3.eth.abi.decodeParameters(\n        [\n          {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n          {type: 'uint256', name: 'queuedVotePeriodLimit' },\n          {type: 'uint256', name: 'boostedVotePeriodLimit' },\n          {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n          {type: 'uint256', name: 'thresholdConst' },\n          {type: 'uint256', name: 'limitExponentValue' },\n          {type: 'uint256', name: 'quietEndingPeriod' },\n          {type: 'uint256', name: 'proposingRepReward' },\n          {type: 'uint256', name: 'votersReputationLossRatio' },\n          {type: 'uint256', name: 'minimumDaoBounty' },\n          {type: 'uint256', name: 'daoBountyConst' },\n          {type: 'uint256', name: 'activationTime' }\n        ], callsResponse.returnData[i])\n      );\n    }\n  \n  networkCache.votingMachines[votingMachine._address].events = votingMachineEventsInCache;\n\n  return networkCache;\n}\n\n// Gets all teh events form the permission registry and stores the permissions set.\nexport const updatePermissionRegistry = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  const allContracts = await getContracts(networkName, web3);\n  if (allContracts.permissionRegistry._address != ZERO_ADDRESS) {\n  \n    let permissionRegistryEvents = sortEvents(\n      await getEvents(web3, allContracts.permissionRegistry, fromBlock, toBlock, 'allEvents')\n    );\n    permissionRegistryEvents.map((permissionRegistryEvent) => {\n      const eventValues = permissionRegistryEvent.returnValues;\n      \n      if (!networkCache.callPermissions[eventValues.asset])\n        networkCache.callPermissions[eventValues.asset] = {};\n        \n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from])\n        networkCache.callPermissions[eventValues.asset][eventValues.from] = {};\n        \n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to])\n        networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to] = {};\n      \n      networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to][eventValues.functionSignature] = {\n        value: eventValues.value,\n        fromTime: eventValues.fromTime\n      };\n    });\n  }\n  \n  return networkCache;\n}\n\n// Update all the schemes information\nexport const updateSchemes = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  const allContracts = await getContracts(networkName, web3);\n\n  let controllerEvents = sortEvents(\n    await getEvents(web3, allContracts.controller, fromBlock, toBlock, 'allEvents')\n  );\n  \n  for (let controllerEventsIndex = 0; controllerEventsIndex < controllerEvents.length; controllerEventsIndex++) {\n    const controllerEvent = controllerEvents[controllerEventsIndex];\n    \n    const schemeAddress = controllerEvent.returnValues._scheme;\n    \n    // Add or update the scheme information, register scheme is used to add and updates scheme parametersHash\n    if (controllerEvent.event == \"RegisterScheme\") {\n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      console.debug('Register Scheme event for ', schemeAddress, schemeTypeData.name);\n      \n      let callsToExecute = [\n        [allContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [allContracts.controller, \"getSchemePermissions\", [schemeAddress, allContracts.avatar._address]],\n        [allContracts.controller, \"getSchemeParameters\", [schemeAddress, allContracts.avatar._address]]\n      ];\n      \n      if (schemeTypeData.type == 'WalletScheme') {\n        const walletSchemeContract = await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress);\n        callsToExecute.push([walletSchemeContract, \"controllerAddress\", []]);\n        callsToExecute.push([walletSchemeContract, \"schemeName\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxSecondsForExecution\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxRepPercentageChange\", []]);\n      }\n      \n      const callsResponse1 = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const ethBalance = callsResponse1.decodedReturnData[0];\n      const permissions = decodePermission(callsResponse1.decodedReturnData[1]);\n      const paramsHash = schemeTypeData.voteParams\n        ? schemeTypeData.voteParams\n        : callsResponse1.decodedReturnData[2];\n\n      const controllerAddress = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[3]\n        : allContracts.avatar._address;\n      const schemeName = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[4]\n        : schemeTypeData.name;\n      const maxSecondsForExecution = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[5]\n        : 0;\n      const maxRepPercentageChange = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[6]\n        : 0;\n      \n      callsToExecute = [];\n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([\n          votingMachine,\n          \"getBoostedVoteRequiredPercentage\",\n          [schemeAddress, allContracts.avatar._address, paramsHash]\n        ]);\n      }\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        callsToExecute.push([\n          votingMachine,\n          \"parameters\",\n          [paramsHash]\n        ]);\n      }\n\n      const callsResponse2 = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse2.returnData[0])['0']\n        : 0;\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        try {\n          networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash] =\n          decodeSchemeParameters(web3.eth.abi.decodeParameters(\n            [\n              {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n              {type: 'uint256', name: 'queuedVotePeriodLimit' },\n              {type: 'uint256', name: 'boostedVotePeriodLimit' },\n              {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n              {type: 'uint256', name: 'thresholdConst' },\n              {type: 'uint256', name: 'limitExponentValue' },\n              {type: 'uint256', name: 'quietEndingPeriod' },\n              {type: 'uint256', name: 'proposingRepReward' },\n              {type: 'uint256', name: 'votersReputationLossRatio' },\n              {type: 'uint256', name: 'minimumDaoBounty' },\n              {type: 'uint256', name: 'daoBountyConst' },\n              {type: 'uint256', name: 'activationTime' }\n            ], callsResponse2.returnData[1])\n          );\n        } catch (error) {\n          console.error(\"Error getting parameters configuration for\", schemeTypeData.name);\n        }\n      }\n    \n      if (!networkCache.schemes[schemeAddress]) {\n        networkCache.schemes[schemeAddress] = {\n          address: schemeAddress,\n          registered: true,\n          controllerAddress,\n          name: schemeName,\n          type: schemeTypeData.type,\n          ethBalance: ethBalance,\n          tokenBalances: {},\n          votingMachine: schemeTypeData.votingMachine,\n          paramsHash: paramsHash,\n          permissions,\n          boostedVoteRequiredPercentage,\n          proposalIds: [],\n          boostedProposals: 0,\n          maxSecondsForExecution,\n          maxRepPercentageChange,\n          newProposalEvents: []\n        };\n      } else {\n        networkCache.schemes[schemeAddress].paramsHash = paramsHash;\n        networkCache.schemes[schemeAddress].permissions = permissions;\n        networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n      }\n    \n    // Mark scheme as not registered but save all previous data\n    } else if (\n      controllerEvent.event == \"UnregisterScheme\" && \n      // This condition is added to skip the first scheme added (that is the dao creator account)\n      (controllerEvent.returnValues._sender != schemeAddress)\n    ) {\n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      console.debug('Unregister scheme event', schemeAddress, schemeTypeData.name);\n      let callsToExecute = [\n        [allContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, allContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n      }\n      const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n      \n      // Update the scheme values a last time\n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].registered = false;\n    }\n    \n  };\n  \n  // Update registered schemes\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    if (networkCache.schemes[schemeAddress].registered) {\n      \n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      let callsToExecute = [\n        [allContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, allContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n        callsToExecute.push([\n          votingMachine,\n          \"boostedVoteRequiredPercentage\",\n          [web3.utils.soliditySha3(schemeAddress, allContracts.avatar._address), networkCache.schemes[schemeAddress].paramsHash]\n        ])\n      }\n      const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n        \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse.returnData[3])['0']\n        : 0;\n      \n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n    }\n\n  }));\n  \n  return networkCache;\n};\n\n// Update all the proposals information\nexport const updateProposals = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  \n  const allContracts = await getContracts(networkName, web3);\n  const avatarAddress = allContracts.avatar._address;\n  const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', avatarAddress);\n  \n  // Get new proposals\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    \n    const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n    const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n  \n    let schemeEvents = [];\n    for (let i = 0; i < schemeTypeData.newProposalTopics.length; i++) {\n      schemeEvents = schemeEvents.concat(await getRawEvents(\n        web3,\n        schemeAddress,\n        fromBlock,\n        toBlock,\n        schemeTypeData.newProposalTopics[i]\n      ));\n    }\n    \n    console.debug(\"Getting proposals of\", schemeTypeData.name, schemeEvents.length);\n    \n    let schemeEventsBatchs = [];\n    let schemeEventsBatchsIndex = 0;\n    for (var i = 0; i < schemeEvents.length; i += 50)\n      schemeEventsBatchs.push(schemeEvents.slice(i, i + 50));\n    \n    while(schemeEventsBatchsIndex < schemeEventsBatchs.length) {\n      \n      try {\n        console.debug(\"Getting proposals in event batch index\", schemeEventsBatchsIndex, \"in\", schemeTypeData.name,);\n        await Promise.all(schemeEventsBatchs[schemeEventsBatchsIndex].map(async (schemeEvent) => {\n          const proposalId = (schemeEvent.topics[1] == avatarAddressEncoded)\n          ? web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[2])\n          : web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[1]);\n          // Get all the proposal information from the scheme and voting machine\n          let callsToExecute = [\n            [ \n              votingMachine,\n              \"proposals\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                1] ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                2] ],\n            [ \n              votingMachine,\n              \"proposalStatus\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"getProposalTimes\",\n              [proposalId]\n            ]\n          ];\n\n          if (schemeTypeData.type == 'WalletScheme') {\n            callsToExecute.push([ \n              await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n              \"getOrganizationProposal\", [proposalId]\n            ]);\n          }\n          \n          const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n          \n          const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n            [\n              {type: 'bytes32', name: 'organizationId' },\n              {type: 'address', name: 'callbacks' },\n              {type: 'uint256', name: 'state' },\n              {type: 'uint256', name: 'winningVote' },\n              {type: 'address', name: 'proposer' },\n              {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n              {type: 'bytes32', name: 'paramsHash' },\n              {type: 'uint256', name: 'daoBountyRemain' },\n              {type: 'uint256', name: 'daoBounty' },\n              {type: 'uint256', name: 'totalStakes' },\n              {type: 'uint256', name: 'confidenceThreshold' },\n              {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n            ],\n            callsResponse.returnData[0]\n          );\n          const positiveVotes = callsResponse.returnData[1];\n          const negativeVotes = callsResponse.returnData[2];\n          \n          const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n            ['uint256','uint256','uint256','uint256'], \n            callsResponse.returnData[3]\n          );\n          const proposalTimes = callsResponse.decodedReturnData[4];\n          \n          let schemeProposalInfo = {\n            to: [],\n            callData: [],\n            value: [],\n            state: 0,\n            title: \"\",\n            descriptionHash: \"\",\n            submittedTime: 0\n          };\n          let decodedProposer;\n          let creationLogDecoded;\n          \n          if (schemeTypeData.type == 'WalletScheme') {\n            schemeProposalInfo = web3.eth.abi.decodeParameters(\n                [ \n                  {type: 'address[]', name: 'to' },\n                  {type: 'bytes[]', name: 'callData' },\n                  {type: 'uint256[]', name: 'value' },\n                  {type: 'uint256', name: 'state' },\n                  {type: 'string', name: 'title' },\n                  {type: 'string', name: 'descriptionHash' },\n                  {type: 'uint256', name: 'submittedTime' }\n                ],\n                callsResponse.returnData[5]\n              );\n          } else {\n            const transactionReceipt = await web3.eth.getTransactionReceipt(schemeEvent.transactionHash);\n            try {\n              schemeTypeData.newProposalTopics.map((newProposalTopic, i) => {\n                transactionReceipt.logs.map((log) => {\n                  if (log.topics[0] == \"0x75b4ff136cc5de5957574c797de3334eb1c141271922b825eb071e0487ba2c5c\") {\n                    decodedProposer = web3.eth.abi.decodeParameters([\n                      { type:'uint256', name: \"_numOfChoices\"},\n                      { type:'address', name: \"_proposer\"},\n                      { type:'bytes32', name: \"_paramsHash\"}\n                    ], log.data)._proposer\n                  }\n                  if (!creationLogDecoded && (log.topics[0] == newProposalTopic[0])) {\n                    creationLogDecoded = web3.eth.abi.decodeParameters(schemeTypeData.creationLogEncoding[i], log.data)\n                    if (creationLogDecoded._descriptionHash.length > 0 && creationLogDecoded._descriptionHash != ZERO_HASH) {\n                      schemeProposalInfo.descriptionHash = ipfsHashToDescriptionHash(creationLogDecoded._descriptionHash);\n                    }\n                  }\n                  \n                })\n              });\n              \n            } catch (error) {\n              console.error('Error on adding content hash from tx', schemeEvent.transactionHash);\n            }\n            \n            if (schemeTypeData.type == 'SchemeRegistrar') {\n              \n              schemeProposalInfo.to = [schemeTypeData.contractToCall];\n              schemeProposalInfo.value = [0];\n              \n              if (creationLogDecoded._parametersHash) {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'registerScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'bytes32', name: '_paramsHash' },\n                      { type: 'bytes4', name: '_permissions' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    creationLogDecoded._parametersHash,\n                    creationLogDecoded._permissions,\n                    avatarAddress\n                  ]\n                )];\n              } else {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'unregisterScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    avatarAddress\n                  ]\n                )];\n              }\n              \n            } else if (schemeTypeData.type == \"ContributionReward\") {\n              \n              if (creationLogDecoded._reputationChange > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._reputationChange,\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              } else if (creationLogDecoded._reputationChange < 0) {\n\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'burnReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_from' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    bnum(creationLogDecoded._reputationChange).times(-1),\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[0] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintTokens',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_beneficiary' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[0],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[1] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'sendEther',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amountInWei' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[1],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[2] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'externalTokenTransfer',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_externalToken' },\n                      { type: 'address', name: '_to' },\n                      { type: 'uint256', name: '_value' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._externalToken,\n                    creationLogDecoded._beneficiary,\n                    creationLogDecoded._rewards[2],\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n            } else if (schemeTypeData.type == \"GenericScheme\") {\n              \n              schemeProposalInfo.to = [allContracts.controller._address];\n              schemeProposalInfo.value = [0];\n              schemeProposalInfo.callData = [\n                web3.eth.abi.encodeFunctionCall({\n                  name: 'genericCall',\n                  type: 'function',\n                  inputs: [\n                    { type: 'address', name: '_contract' },\n                    { type: 'bytes', name: '_data' },\n                    { type: 'address', name: '_avatar' },\n                    { type: 'uint256', name: '_value' },\n                  ]\n                },[\n                  schemeTypeData.contractToCall,\n                  creationLogDecoded._data,\n                  avatarAddress,\n                  creationLogDecoded._value\n                ]\n              )];\n              \n            } else if (schemeTypeData.type == \"GenericMulticall\") {\n              for (let callIndex = 0; callIndex < creationLogDecoded._contractsToCall.length; callIndex++) {\n                schemeProposalInfo.to.push(allContracts.controller._address);\n                schemeProposalInfo.value.push(0)\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'genericCall',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_contract' },\n                      { type: 'bytes', name: '_data' },\n                      { type: 'address', name: '_avatar' },\n                      { type: 'uint256', name: '_value' },\n                    ]\n                  },[\n                    creationLogDecoded._contractsToCall[callIndex],\n                    creationLogDecoded._callsData[callIndex],\n                    avatarAddress,\n                    creationLogDecoded._values[callIndex],\n                  ]\n                ));\n              }\n              \n            }\n          }\n          \n          networkCache.proposals[proposalId] = {\n            id: proposalId,\n            scheme: schemeAddress,\n            to: schemeProposalInfo.to,\n            title: schemeProposalInfo.title,\n            callData: schemeProposalInfo.callData,\n            values: schemeProposalInfo.value.map((value) => bnum(value)),\n            stateInScheme: schemeProposalInfo.state,\n            stateInVotingMachine: votingMachineProposalInfo.state,\n            descriptionHash: schemeProposalInfo.descriptionHash,\n            creationEventSender: (await web3.eth.getTransaction(schemeEvent.transactionHash)).from,\n            creationEvent: {\n              event: schemeEvent.event,\n              signature: schemeEvent.signature,\n              address: schemeEvent.address,\n              tx: schemeEvent.transactionHash,\n              l1BlockNumber: schemeEvent.l1BlockNumber,\n              l2BlockNumber: schemeEvent.l2BlockNumber,\n              timestamp: schemeEvent.timestamp,\n              transactionIndex: schemeEvent.transactionIndex,\n              logIndex: schemeEvent.logIndex\n            },\n            repAtCreation: bnum(await allContracts.reputation.methods.totalSupplyAt(schemeEvent.l1BlockNumber).call()),\n            winningVote: votingMachineProposalInfo.winningVote,\n            proposer: decodedProposer ? decodedProposer : votingMachineProposalInfo.proposer,\n            currentBoostedVotePeriodLimit: votingMachineProposalInfo.currentBoostedVotePeriodLimit,\n            paramsHash: votingMachineProposalInfo.paramsHash,\n            daoBountyRemain: bnum(votingMachineProposalInfo.daoBountyRemain),\n            daoBounty: bnum(votingMachineProposalInfo.daoBounty),\n            totalStakes: bnum(votingMachineProposalInfo.totalStakes),\n            confidenceThreshold: votingMachineProposalInfo.confidenceThreshold,\n            secondsFromTimeOutTillExecuteBoosted: votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted,\n            submittedTime: bnum(proposalTimes[0]),\n            boostedPhaseTime: bnum(proposalTimes[1]),\n            preBoostedPhaseTime: bnum(proposalTimes[2]),\n            daoRedeemItsWinnings: votingMachineProposalInfo.daoRedeemItsWinnings,\n            shouldBoost: false,\n            positiveVotes: bnum(positiveVotes),\n            negativeVotes: bnum(negativeVotes),\n            preBoostedPositiveVotes: bnum(proposalStatusWithVotes[0]),\n            preBoostedNegativeVotes: bnum(proposalStatusWithVotes[1]),\n            positiveStakes: bnum(proposalStatusWithVotes[2]),\n            negativeStakes: bnum(proposalStatusWithVotes[3])\n          };\n          \n          networkCache.schemes[schemeAddress].proposalIds.push(proposalId);\n          networkCache.schemes[schemeAddress].newProposalEvents.push({\n            proposalId: proposalId,\n            event: schemeEvent.event,\n            signature: schemeEvent.signature,\n            address: schemeEvent.address,\n            tx: schemeEvent.transactionHash,\n            l1BlockNumber: schemeEvent.l1BlockNumber,\n            l2BlockNumber: schemeEvent.l2BlockNumber,\n            timestamp: schemeEvent.timestamp,\n            transactionIndex: schemeEvent.transactionIndex,\n            logIndex: schemeEvent.logIndex\n          });\n          \n          if (schemeProposalInfo.descriptionHash.length > 1){\n            networkCache.ipfsHashes.push({\n              hash: descriptionHashToIPFSHash(schemeProposalInfo.descriptionHash),\n              type: 'proposal',\n              name: proposalId\n            });\n          }\n          // Save proposal created in users\n          if (!networkCache.users[votingMachineProposalInfo.proposer]) {\n            networkCache.users[votingMachineProposalInfo.proposer] = {\n              repBalance: bnum(0),\n              proposalsCreated: [proposalId]\n            }\n          } else {\n            networkCache.users[votingMachineProposalInfo.proposer].proposalsCreated.push(proposalId);\n          }\n        }));\n        \n        schemeEventsBatchsIndex ++;\n      } catch (error) {\n        console.error('Error:',error.message);\n        console.debug('Trying again getting proposal info of schemeEventsBatchs index',schemeEventsBatchsIndex);\n      }\n    }\n    \n  }));\n  \n  let retryIntent = 0;\n  // Update proposals title\n  for (let proposalIndex = 0; proposalIndex < Object.keys(networkCache.proposals).length; proposalIndex++) {\n    const proposal = networkCache.proposals[Object.keys(networkCache.proposals)[proposalIndex]];\n    if (retryIntent > 3) {\n      retryIntent = 0;\n      continue;\n    }\n    if (\n      networkCache.schemes[proposal.scheme].type != \"WalletScheme\"\n      && proposal.descriptionHash && proposal.descriptionHash.length > 0\n      // Try to get title if cache is running in node script or if proposal was submitted in last 100000 blocks\n      && (proposal.title.length == 0\n        && (isNode() || proposal.creationEvent.l1BlockNumber > Number(toBlock) - 100000)\n      )\n    )\n      try {\n        console.debug('Getting title from proposal', proposal.id, proposal.descriptionHash);\n        const response = await axios.request({\n          url:'https://ipfs.io/ipfs/'+descriptionHashToIPFSHash(proposal.descriptionHash),\n          method: \"GET\",\n          timeout: 5000\n        });\n        if (response && response.data && response.data.title) {\n          networkCache.proposals[proposal.id].title = response.data.title;\n        } else {\n          console.error('Couldnt not get title from', proposal.descriptionHash);\n        }\n        await sleep(1000);\n      } catch (error) {\n        console.error('Error getting title from', proposal.descriptionHash, 'waiting 2 seconds and trying again..');\n        proposalIndex --;\n        retryIntent ++;\n        await sleep(2000);\n      }\n  }\n\n  // Update existent active proposals\n  await Promise.all(Object.keys(networkCache.proposals).map(async (proposalId) => {\n    \n    if (networkCache.proposals[proposalId].stateInVotingMachine > 2) {\n  \n      const schemeAddress = networkCache.proposals[proposalId].scheme;\n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      // Get all the proposal information from the scheme and voting machine\n      let callsToExecute = [\n        [ \n          votingMachine,\n          \"proposals\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 1]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 2]\n        ],\n        [ \n          votingMachine,\n          \"proposalStatus\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"getProposalTimes\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"shouldBoost\",\n          [proposalId]\n        ]\n      ];\n  \n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([ \n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"getOrganizationProposal\", [proposalId]\n        ]);\n      }\n  \n      const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n  \n      const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n        [\n          {type: 'bytes32', name: 'organizationId' },\n          {type: 'address', name: 'callbacks' },\n          {type: 'uint256', name: 'state' },\n          {type: 'uint256', name: 'winningVote' },\n          {type: 'address', name: 'proposer' },\n          {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n          {type: 'bytes32', name: 'paramsHash' },\n          {type: 'uint256', name: 'daoBountyRemain' },\n          {type: 'uint256', name: 'daoBounty' },\n          {type: 'uint256', name: 'totalStakes' },\n          {type: 'uint256', name: 'confidenceThreshold' },\n          {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n        ],\n        callsResponse.returnData[0]\n      );\n      const positiveVotes = callsResponse.returnData[1];\n      const negativeVotes = callsResponse.returnData[2];\n  \n      const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n        ['uint256','uint256','uint256','uint256'], \n        callsResponse.returnData[3]\n      );\n      const proposalTimes = callsResponse.decodedReturnData[4];\n      const proposalShouldBoost = callsResponse.decodedReturnData[5];\n  \n      const schemeProposalInfo = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(\n          [ \n            {type: 'address[]', name: 'to' },\n            {type: 'bytes[]', name: 'callData' },\n            {type: 'uint256[]', name: 'value' },\n            {type: 'uint256', name: 'state' },\n            {type: 'string', name: 'title' },\n            {type: 'string', name: 'descriptionHash' },\n            {type: 'uint256', name: 'submittedTime' }\n          ],\n          callsResponse.returnData[6]\n        )\n        : {\n          to: \"\",\n          callData: [],\n          value: [],\n          state: 0,\n          title: \"\",\n          descriptionHash: \"\",\n          submittedTime: 0\n        };\n  \n      networkCache.proposals[proposalId].stateInScheme = schemeProposalInfo.state;\n      networkCache.proposals[proposalId].stateInVotingMachine = votingMachineProposalInfo.state;\n      networkCache.proposals[proposalId].winningVote = votingMachineProposalInfo.winningVote;\n      networkCache.proposals[proposalId].currentBoostedVotePeriodLimit = votingMachineProposalInfo.currentBoostedVotePeriodLimit;\n      networkCache.proposals[proposalId].daoBountyRemain = bnum(votingMachineProposalInfo.daoBountyRemain);\n      networkCache.proposals[proposalId].daoBounty = bnum(votingMachineProposalInfo.daoBounty);\n      networkCache.proposals[proposalId].totalStakes = bnum(votingMachineProposalInfo.totalStakes);\n      networkCache.proposals[proposalId].confidenceThreshold = votingMachineProposalInfo.confidenceThreshold;\n      networkCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted;\n      networkCache.proposals[proposalId].boostedPhaseTime = bnum(proposalTimes[1]);\n      networkCache.proposals[proposalId].preBoostedPhaseTime = bnum(proposalTimes[2]);\n      networkCache.proposals[proposalId].daoRedeemItsWinnings = votingMachineProposalInfo.daoRedeemItsWinnings;\n      networkCache.proposals[proposalId].shouldBoost = proposalShouldBoost;\n      networkCache.proposals[proposalId].positiveVotes = bnum(positiveVotes);\n      networkCache.proposals[proposalId].negativeVotes = bnum(negativeVotes);\n      networkCache.proposals[proposalId].preBoostedPositiveVotes = bnum(proposalStatusWithVotes[0]);\n      networkCache.proposals[proposalId].preBoostedNegativeVotes = bnum(proposalStatusWithVotes[1]);\n      networkCache.proposals[proposalId].positiveStakes = bnum(proposalStatusWithVotes[2]);\n      networkCache.proposals[proposalId].negativeStakes = bnum(proposalStatusWithVotes[3]);\n  \n      // Save proposal created in users if not saved already\n      if (!networkCache.users[networkCache.proposals[proposalId].proposer]) {\n        networkCache.users[networkCache.proposals[proposalId].proposer] = {\n          repBalance: bnum(0),\n          proposalsCreated: [proposalId]\n        }\n      } else if (networkCache.users[networkCache.proposals[proposalId].proposer].proposalsCreated.indexOf(proposalId) < 0) {\n        networkCache.users[networkCache.proposals[proposalId].proposer].proposalsCreated.push(proposalId);\n      }\n  \n    }\n  \n  }));\n  \n  return networkCache;\n};\n","\nconst binaryToHex = function(binaryString) {\n  const lookup = {\n    \"0000\": \"0\",\n    \"0001\": \"1\",\n    \"0010\": \"2\",\n    \"0011\": \"3\",\n    \"0100\": \"4\",\n    \"0101\": \"5\",\n    \"0110\": \"6\",\n    \"0111\": \"7\",\n    \"1000\": \"8\",\n    \"1001\": \"9\",\n    \"1010\": \"A\",\n    \"1011\": \"B\",\n    \"1100\": \"C\",\n    \"1101\": \"D\",\n    \"1110\": \"E\",\n    \"1111\": \"F\"\n  };\n  var ret = \"\";\n  binaryString = binaryString.split(\" \");\n  for (var i = 0; i < binaryString.length; i++) {\n    ret += lookup[ binaryString[ i ] ];\n  }\n  return ret;\n};\n\nconst hexToBinary = function(hexString) {\n  hexString = hexString.replace(/^0x+/, '');\n  const lookup = {\n    \"0\": \"0000\",\n    \"1\": \"0001\",\n    \"2\": \"0010\",\n    \"3\": \"0011\",\n    \"4\": \"0100\",\n    \"5\": \"0101\",\n    \"6\": \"0110\",\n    \"7\": \"0111\",\n    \"8\": \"1000\",\n    \"9\": \"1001\",\n    \"a\": \"1010\",\n    \"b\": \"1011\",\n    \"c\": \"1100\",\n    \"d\": \"1101\",\n    \"e\": \"1110\",\n    \"f\": \"1111\",\n    \"A\": \"1010\",\n    \"B\": \"1011\",\n    \"C\": \"1100\",\n    \"D\": \"1101\",\n    \"E\": \"1110\",\n    \"F\": \"1111\"\n  };\n\n  var ret = \"\";\n  for (var i = 0, len = hexString.length; i < len; i++) {\n    if (hexString[ i ] != \"0\")\n      ret += lookup[ hexString[ i ] ];\n  }\n  return ret;\n};\n\n// All 0: Not registered,\n// 1st bit: Flag if the scheme is registered,\n// 2nd bit: Scheme can register other schemes\n// 3rd bit: Scheme can add/remove global constraints\n// 4th bit: Scheme can upgrade the controller\n// 5th bit: Scheme can call genericCall on behalf of the organization avatar\nexport const encodePermission = function(permissions) {\n  const canGenericCall = permissions.canGenericCall || false;\n  const canUpgrade = permissions.canUpgrade || false;\n  const canChangeConstraints = permissions.canChangeConstraints || false;\n  const canRegisterSchemes = permissions.canRegisterSchemes || false;\n  const permissionBytes = `000${canGenericCall ? 1 : 0} ${canUpgrade ? 1 : 0}${canChangeConstraints ? 1 : 0}${canRegisterSchemes ? 1 : 0}1`;\n  return \"0x000000\" + binaryToHex(permissionBytes);\n}\nexport const decodePermission = function(permission) {\n  permission = hexToBinary(permission);\n  return {\n    canGenericCall: permission.length > 3 && permission[ 4 ] == \"1\",\n    canUpgrade: permission.length > 3 && permission[ 5 ] == \"1\",\n    canChangeConstraints: permission.length > 3 && permission[ 6 ] == \"1\",\n    canRegisterSchemes: permission.length > 3 && permission[ 7 ] == \"1\"\n  };\n}\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","// Libraries\nimport { ethers, utils } from 'ethers';\nimport { BigNumber } from './bignumber';\n\n// Utils\nexport const MAX_GAS = utils.bigNumberify('0xffffffff');\nexport const MAX_UINT = utils.bigNumberify(ethers.constants.MaxUint256);\nexport const ZERO_HASH = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const ANY_ADDRESS = \"0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\";\nexport const ANY_FUNC_SIGNATURE = \"0xaaaaaaaa\";\nexport const ERC20_TRANSFER_SIGNATURE = \"0xa9059cbb\";\nexport const DEFAULT_TOKEN_DECIMALS = 18;\n\nexport function bnum(\n    val: string | number | utils.BigNumber | BigNumber\n): BigNumber {\n    return new BigNumber(val.toString());\n}\n\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\n    const scalePow = new BigNumber(decimalPlaces.toString());\n    const scaleMul = new BigNumber(10).pow(scalePow);\n    return input.times(scaleMul);\n}\n\nexport function setPropertyToMaxUintIfEmpty(value?): string {\n    if (!value || value === 0 || value === '') {\n        value = MAX_UINT.toString();\n    }\n    return value;\n}\n\nexport function setPropertyToZeroIfEmpty(value?): string {\n    if (!value || value === '') {\n        value = '0';\n    }\n    return value;\n}\n\nexport function hasMaxApproval(amount: BigNumber): boolean {\n    return amount.gte(bnum(MAX_UINT.div(2).toString()));\n}\n\nexport function isEmpty(str: string): boolean {\n    return !str || 0 === str.length;\n}\n\nexport function roundValue(value, decimals = 4): string {\n    const decimalPoint = value.indexOf('.');\n    if (decimalPoint === -1) {\n        return value;\n    }\n    return value.slice(0, decimalPoint + decimals + 1);\n}\n\nexport function str(value: any): string {\n    return value.toString();\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function parseCamelCase(text)\n{\n  const parsed = text.replace(/([a-z])([A-Z])/g, '$1 $2');\n  return parsed[0].toUpperCase() + parsed.substring(1);\n}\n","import contentHash from 'content-hash';\nimport _ from \"lodash\";\n\nconst MAX_BLOCKS_PER_EVENTS_FETCH : number = Number(process.env.MAX_BLOCKS_PER_EVENTS_FETCH) || 1000000;\n\nexport const getEvents = async function(\n  web3, contract, fromBlock, toBlock, eventsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching events of ${contract._address} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await contract.getPastEvents(eventsToGet, {fromBlock: from, toBlock: to});\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message);\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getRawEvents = async function(\n  web3, contractAddress, fromBlock, toBlock, topicsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching logs of ${contractAddress} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await web3.eth.getPastLogs({\n        address: contractAddress,\n        fromBlock: from,\n        toBlock: to,\n        topics: topicsToGet\n      });\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message)\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getTimestampOfEvents = async function(web3, events) {\n  \n  //// TODO:  See how can we bacth requests can be implemented\n  \n  // async function batchRequest(blocks) {\n  //   const batch = new web3.BatchRequest();\n  //   let requests = [];\n  //   for (let i = 0; i < blocks.length; i++) {\n  //     const request = new Promise((resolve, reject) => {\n  //       batch.add(web3.eth.getBlock.request(blocks[i], (err, data) => {\n  //         console.log(1)\n  //         if (err) return reject(err);\n  //         resolve(data);\n  //       }));\n  //     });\n  //     requests.push(request);\n  //   }\n  //   batch.execute();\n  //   console.log(batch)\n  //   await Promise.all(requests);\n  //   return batch;\n  // };\n\n  let blocksToFetch = [];\n  let timestamps = [];\n  events.map((event) => {\n    if (blocksToFetch.indexOf(event.blockNumber) < 0)\n      blocksToFetch.push(event.blockNumber);\n  })\n  const totalLength = blocksToFetch.length;\n  while (blocksToFetch.length > 0 && totalLength > timestamps.length){\n    // timestamps = (await batchRequest(blocksToFetch)).map((blockResult) => {\n    //   return blockResult.timestamp;\n    // });\n    const blocksToFetchBatch = blocksToFetch.splice(0, 500)\n    await Promise.all(blocksToFetchBatch.map(async (block) => {\n      const blockInfo = (await web3.eth.getBlock(block));\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].blockNumber == blockInfo.number)\n          events[i].timestamp = blockInfo.timestamp;\n        if (blockInfo.l1BlockNumber)\n          events[i].l1BlockNumber = Number(blockInfo.l1BlockNumber);\n      }\n    }));\n  }\n\n  for (let i = 0; i < events.length; i++) {\n    if (events[i].l1BlockNumber){\n      events[i].l2BlockNumber = events[i].blockNumber;\n    } else {\n      events[i].l1BlockNumber = events[i].blockNumber;\n      events[i].l2BlockNumber = 0;\n    }\n  }\n  return events;\n};\n\nexport const sortEvents = function(events) {\n  return _.orderBy( events , [\"l1BlockNumber\", \"l2BlockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\",\"asc\"]);\n};\n\nexport const executeMulticall = async function(web3, multicall, calls) {\n  const rawCalls = calls.map((call) => {\n    return [call[0]._address, web3.eth.abi.encodeFunctionCall(\n      call[0]._jsonInterface.find(method => method.name == call[1]), call[2]\n    )];\n  });\n  \n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\n\n  return {\n    returnData,\n    decodedReturnData:returnData.map((callResult, i) => {\n      return web3.eth.abi.decodeParameters(\n        calls[i][0]._jsonInterface.find(method => method.name == calls[i][1]).outputs,\n        callResult\n      )[\"0\"];\n    })\n  };\n}\n\nexport const isNode = function () {\n  return (typeof module !== 'undefined' && module.exports);\n}\n\nexport const descriptionHashToIPFSHash = function (descriptionHash) {\n  try {\n    if (contentHash.getCodec(descriptionHash) == \"ipfs-ns\")\n      return contentHash.decode(descriptionHash);\n    else if (descriptionHash.length > 1 && descriptionHash.substring(0,2) != \"Qm\")\n      return descriptionHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error decoding descriptionHash', descriptionHash);\n    return \"\";\n  }\n}\n\nexport const ipfsHashToDescriptionHash = function (ipfsHash) {\n  try {\n    if (ipfsHash.length > 1 && ipfsHash.substring(0,2) == \"Qm\")\n      return contentHash.fromIpfs(ipfsHash);\n    else if (contentHash.getCodec(ipfsHash) == \"ipfs-ns\")\n      return ipfsHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error encoding ipfsHash', ipfsHash);\n    return \"\";\n  }\n}\n","const contractsFile = require('./contracts.json');\nconst tokensToFetchPriceFile = require('./tokensToFetchPrice.json');\nconst tokensFile = require('./tokens.json');\nconst Web3 = require('web3');\nimport { ZERO_ADDRESS } from '../utils/helpers';\n\nconst web3 = new Web3();\n\nexport const getNetworkConfig = function(network) {\n  let networkConfig;\n\n  if (network === 'localhost') {\n    networkConfig = {\n      fromBlock: 1,\n      avatar: process.env.REACT_APP_AVATAR_ADDRESS.replace(/[\"']/g, \"\"),\n      controller: process.env.REACT_APP_CONTROLLER_ADDRESS.replace(/[\"']/g, \"\"),\n      reputation: process.env.REACT_APP_REPUTATION_ADDRESS.replace(/[\"']/g, \"\"),\n      permissionRegistry: process.env.REACT_APP_PERMISSION_REGISTRY_ADDRESS.replace(/[\"']/g, \"\"),\n      utils: {\n        multicall: process.env.REACT_APP_MULTICALL_ADDRESS.replace(/[\"']/g, \"\"),\n      },\n      votingMachines: {\n        dxd: {\n          address: process.env.REACT_APP_VOTING_MACHINE_ADDRESS.replace(/[\"']/g, \"\"),\n          token: process.env.REACT_APP_VOTING_MACHINE_TOKEN_ADDRESS.replace(/[\"']/g, \"\")\n        }\n      },\n    };\n  } else  if (network == 'mainnet') {\n    networkConfig = contractsFile[network];\n    const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', networkConfig.avatar);\n    \n    networkConfig.daostack = {\n      \n      \"dxSchemes\": {\n        \"0x2E6FaE82c77e1D6433CCaAaF90281523b99D0D0a\": \"DxLockMgnForRep\",\n        \"0x4D8DB062dEFa0254d00a44aA1602C30594e47B12\": \"DxGenAuction4Rep\",\n        \"0x4564BFe303900178578769b2D76B1a13533E5fd5\": \"DxLockEth4Rep\",\n        \"0x1cb5B2BB4030220ad5417229A7A1E3c373cDD2F6\": \"DxLockWhitelisted4Rep\"\n      },\n      \n      \"schemeRegistrar\": {\n        \"address\": \"0xf050F3C6772Ff35eB174A6900833243fcCD0261F\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x9799ec39e42562c5ac7fbb104f1edcaa495e00b45e0db80cce1c0cdc863d0d0f\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewSchemeProposal(address,bytes32,address,address,bytes32,bytes4,string)\"), avatarAddressEncoded],\n          [web3.utils.soliditySha3(\"RemoveSchemeProposal(address,bytes32,address,address,string)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n            { type:'address', name: \"_scheme \"},\n            { type:'bytes32', name: \"_parametersHash\"},\n            { type:'bytes4', name: \"_permissions\"},\n            { type:'string', name: \"_descriptionHash\"}\n          ],[\n            { type:'address', name: \"_scheme \"},\n            { type:'string', name: \"_descriptionHash\"}\n          ]\n        ]\n      },\n      \n      \"contributionReward\": {\n        \"address\": \"0x08cC7BBa91b849156e9c44DEd51896B38400f55B\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x399141801e9e265d79f1f1759dd67932980664ea28c2ba7e0e4dba8719e47118\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewContributionProposal(address,bytes32,address,string,int256,uint256[5],address,address)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'int256', name: \"_reputationChange\"},\n          { type:'uint256[5]', name: \"_rewards\"},\n          { type:'address', name: \"_externalToken\"},\n          { type:'address', name: \"_beneficiary\"}\n        ]]\n      },\n      \n      \"genericSchemes\": {\n        \"addresses\": {\n          \"0x199719EE4d5DCF174B80b80afa1FE4a8e5b0E3A0\": {\n            \"name\": \"DutchXScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0xff6155010292b35fb8daae8b4450cdc41a586bc591e9a76484e88ffba36f94a8\",\n            \"contractToCall\": \"0xb9812E2fA995EC53B5b6DF34d21f9304762C5497\",\n          },\n          \"0x46DF3EA38a680FBc84E744D92b0A8Ec717B2eA7E\":{\n            \"name\": \"GenericSchemeToENS\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x29ddbf85a0d14e08084cd9764c66ff2799d05355edf7f546c5af1c847a2d9734\",\n            \"contractToCall\": \"0x314159265dd8dbb310642f98f50c066173c1259b\",\n          },\n          \"0x9A543aeF934c21Da5814785E38f9A7892D3CDE6E\": {\n            \"name\": \"EnsPublicProviderScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x29ddbf85a0d14e08084cd9764c66ff2799d05355edf7f546c5af1c847a2d9734\",\n            \"contractToCall\": \"0x226159d592e2b063810a10ebf6dcbada94ed68b8\",\n          },\n          \"0x973ce4e81BdC3bD39f46038f3AaA928B04558b08\": {\n            \"name\": \"EnsRegistrarScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x29ddbf85a0d14e08084cd9764c66ff2799d05355edf7f546c5af1c847a2d9734\",\n            \"contractToCall\": \"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85\",\n          },\n          \"0x9CEA0DD05C4344A769B2F4C2f8890EDa8a700d64\": {\n            \"name\": \"EnsRegistryScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x0dc1fb4d230debe146613511601e0df83dd5ac323a7add833de82ead5a19db3a\",\n            \"contractToCall\": \"0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e\",\n          },\n          \"0xc072171dA83CCe311e37BC1d168f54E6A6536DF4\": {\n            \"name\": \"TokenRegistry\",\n            \"votingMachine\": \"0x1C18bAd5a3ee4e96611275B13a8ed062B4a13055\",\n            \"voteParams\": \"0x8452e57c89dc78ec1b1ffc28786655279f9af4ac589dd5988c962e8cf6b4529b\",\n            \"contractToCall\": \"0x93db90445b76329e9ed96ecd74e76d8fbf2590d8\",\n          },\n          \"0xB3ec6089556CcA49549Be01fF446cF40fA81c84D\": {\n            \"name\": \"EnsPublicResolverScheme\",\n            \"votingMachine\": \"0x1C18bAd5a3ee4e96611275B13a8ed062B4a13055\",\n            \"voteParams\": \"0xa81f982cb1c27eb142e5f602e7eb50d125dd6a7e52dac1af5f9decb88278f2fa\",\n            \"contractToCall\": \"0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41\",\n          },\n        },\n        \"newProposalTopics\": [\n          [ web3.utils.soliditySha3(\"NewCallProposal(address,bytes32,bytes,uint256,string)\"), avatarAddressEncoded ]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'bytes', name: \"_data\"},\n          { type:'uint256', name: \"_value\"},\n          { type:'string', name: \"_descriptionHash\"}\n        ]]\n      },\n      \n      \"multicallSchemes\": {\n        \"addresses\": {\n          \"0xef9dC3c39CA40A2a3000ACc5ca0467CE1C250808\": {\n            \"name\": \"Multicall_1\",\n            \"voteParams\": \"0xe5e87e294b422b2aa711bd25a7e8ac59a06bbf723786560c53c50edce980f2fd\"\n          },\n          \"0x34C42c3ee81A03FD9ea773987b4a6eF62f3fc151\": {\n            \"name\": \"Multicall_2\",\n            \"voteParams\": \"0x8a8f5413c9b49a4ed4df33213f474a0ae29328a81b3c40c881e8a3fab0d12b44\"\n          },\n          \"0x0f4775722a72FA85230c63598e661eC52563Fb4E\": {\n            \"name\": \"Multicall_3\",\n            \"voteParams\": \"0xe5e87e294b422b2aa711bd25a7e8ac59a06bbf723786560c53c50edce980f2fd\"\n          }\n        },\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewMultiCallProposal(address,bytes32,bytes[],uint256[],string,address[])\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'bytes[]', name: \"_callsData\"},\n          { type:'uint256[]', name: \"_values\"},\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'address[]', name: \"_contractsToCall\"}\n        ]]\n      }\n    };\n    \n  } else  if (network == 'xdai') {\n    networkConfig = contractsFile[network];\n    const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', networkConfig.avatar);\n    \n    networkConfig.daostack = {\n      \n      \"schemeRegistrar\": {\n        \"address\": \"0x22Ac81BE75cF76281D88A0F3A8Ae59b9abbE9da1\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x1e3e01f4ce01291e53f32570ab772ef6e7301d7223b00c162494e26cc16830df\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewSchemeProposal(address,bytes32,address,address,bytes32,bytes4,string)\"), avatarAddressEncoded],\n          [web3.utils.soliditySha3(\"RemoveSchemeProposal(address,bytes32,address,address,string)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n            { type:'address', name: \"_scheme \"},\n            { type:'bytes32', name: \"_parametersHash\"},\n            { type:'bytes4', name: \"_permissions\"},\n            { type:'string', name: \"_descriptionHash\"}\n          ],[\n            { type:'address', name: \"_scheme \"},\n            { type:'string', name: \"_descriptionHash\"}\n          ]\n        ]\n      },\n      \n      \"contributionReward\": {\n        \"address\": \"0x016Bf002D361bf5563c76230D19B4DaB4d66Bda4\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x1e3e01f4ce01291e53f32570ab772ef6e7301d7223b00c162494e26cc16830df\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewContributionProposal(address,bytes32,address,string,int256,uint256[5],address,address)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'int256', name: \"_reputationChange\"},\n          { type:'uint256[5]', name: \"_rewards\"},\n          { type:'address', name: \"_externalToken\"},\n          { type:'address', name: \"_beneficiary\"}\n        ]]\n      },\n      \n      \"competitionScheme\": {\n        \"address\": \"0x73753baC5B0fBECfd741436b64163f670E0aCB30\",\n        \"contractToCall\": ZERO_ADDRESS,\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewContributionProposal(address,bytes32,address,string,int256,uint256[3],address,address,address)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'int256', name: \"_reputationChange\"},\n          { type:'uint256[5]', name: \"_rewards\"},\n          { type:'address', name: \"_externalToken\"},\n          { type:'address', name: \"_beneficiary\"}\n        ]]\n      },\n      \n      \"multicallSchemes\": {\n        \"addresses\": {\n          \"0xaFE59DF878E23623A7a91d16001a66A4DD87e0c0\": {\n            \"name\": \"Multicall_1\",\n            \"voteParams\": \"0x1e3e01f4ce01291e53f32570ab772ef6e7301d7223b00c162494e26cc16830df\",\n            \"votingMachine\": \"0xDA309aDF1c84242Bb446F7CDBa96B570E901D4CF\"\n          }\n        },\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewMultiCallProposal(address,bytes32,bytes[],uint256[],string,address[])\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'bytes[]', name: \"_callsData\"},\n          { type:'uint256[]', name: \"_values\"},\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'address[]', name: \"_contractsToCall\"}\n        ]]\n      },\n      \n      \"dxSchemes\": {\n        \"0x2b644360a24366B1ebdBf4f69563eAfA4772bCA0\": \"InvalidScheme\",\n        \"0x50d895Df2ea26b4C3aBbFa22906197458F56bAe9\": \"DaoDeployer\",\n        \"0x63F411E7cA67CB296FE2c7B875E072E82A609436\": \"DaoDeployer2\"\n      },\n      \n    };\n    \n  } else {\n    networkConfig = contractsFile[network];\n  };\n  \n\n  return networkConfig;\n\n}\n\nexport const getSchemeTypeData = function(network, schemeAddress) {\n  const networkConfig = getNetworkConfig(network);\n  if (networkConfig.daostack) {\n    if (networkConfig.daostack.schemeRegistrar && networkConfig.daostack.schemeRegistrar.address == schemeAddress) {\n      return {\n        type: \"SchemeRegistrar\",\n        name: \"SchemeRegistrar\",\n        contractToCall: networkConfig.daostack.schemeRegistrar.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.schemeRegistrar.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.schemeRegistrar.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.contributionReward && networkConfig.daostack.contributionReward.address == schemeAddress) {\n      return {\n        type: \"ContributionReward\",\n        name: \"ContributionReward\",\n        contractToCall: networkConfig.daostack.contributionReward.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.contributionReward.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.contributionReward.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.competitionScheme && networkConfig.daostack.competitionScheme.address == schemeAddress) {\n      return {\n        type: \"CompetitionScheme\",\n        name: \"CompetitionScheme\",\n        contractToCall: networkConfig.daostack.competitionScheme.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.competitionScheme.newProposalTopics,\n        creationLogEncoding: networkConfig.daostack.competitionScheme.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.multicallSchemes && Object.keys(networkConfig.daostack.multicallSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericMulticall\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.multicallSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.multicallSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.genericSchemes && Object.keys(networkConfig.daostack.genericSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericScheme\",\n        votingMachine: networkConfig.daostack.genericSchemes.addresses[schemeAddress].votingMachine,\n        contractToCall: networkConfig.daostack.genericSchemes.addresses[schemeAddress].contractToCall,\n        name: networkConfig.daostack.genericSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.genericSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.genericSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.genericSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.dxSchemes && Object.keys(networkConfig.daostack.dxSchemes).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"OldDxScheme\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.dxSchemes[schemeAddress],\n        newProposalTopics: [],\n        creationLogEncoding: []\n      };\n    }\n  }\n  return {\n    type: \"WalletScheme\",\n    votingMachine: networkConfig.votingMachines.dxd.address,\n    name: \"WalletScheme\",\n    newProposalTopics: [[\n      web3.utils.soliditySha3(\"ProposalStateChange(bytes32,uint256)\"),\n      null,\n      '0x0000000000000000000000000000000000000000000000000000000000000001']\n    ],\n    creationLogEncoding: []\n  }\n}\n\nexport const getTokenData = function(tokenAddress) {\n  console.log(tokenAddress)\n  return tokensFile.tokens.find((tokenInFile) => tokenInFile.address == tokenAddress);\n}\n\nexport const getTokensToFetchPrice = function(networkName) {\n  return tokensToFetchPriceFile[networkName];\n}\n"],"sourceRoot":""}