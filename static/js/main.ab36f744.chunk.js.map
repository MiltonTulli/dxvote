{"version":3,"sources":["utils/bignumber.ts","../node_modules/prismjs/components lazy /^/.//prism/-.*$/ groupOptions: {} namespace object","provider/connectors.ts","enums.ts","provider/UncheckedJsonRpcSigner.ts","stores/actions/error.ts","stores/Provider.ts","stores/actions/actions.ts","services/ABIService.ts","stores/Transaction.ts","stores/Modal.ts","stores/ConfigStore.ts","stores/DaoStore.ts","utils/proposals.ts","stores/UserStore.ts","stores/BlockchainStore.ts","services/MulticallService.ts","utils/token.ts","services/DaoService.ts","services/EventsService.ts","services/IPFSService.ts","services/PinataService.ts","services/EtherscanService.ts","services/CoingeckoService.ts","contexts/storesContext.tsx","stores/index.ts","utils/helperHooks.js","components/Web3ReactManager/index.tsx","provider/providerHooks.js","serviceWorker.ts","theme/index.tsx","utils/address.ts","components/Modal/index.tsx","components/common/Link.tsx","assets/images/x.svg","components/common/Copy.tsx","utils/etherscan.tsx","components/AccountDetails/index.tsx","components/WalletModal/Option.tsx","components/WalletModal/PendingView.js","components/WalletModal/index.js","components/common/Box.tsx","components/Web3ConnectStatus/index.tsx","assets/images/DXdao.svg","components/Header/index.tsx","components/Footer/index.tsx","PageRouter.tsx","components/common/ActiveButton.tsx","utils/date.ts","utils/number.ts","pages/Proposals.tsx","components/common/Question.tsx","config/proposalTemplates.ts","pages/NewProposal.tsx","components/common/BlockchainLink.tsx","pages/User.tsx","pages/Proposal.tsx","components/FinanceInformation.tsx","components/SchemesInformation.tsx","components/GovernanceInformation.tsx","pages/Info.tsx","pages/Configuration.tsx","pages/FAQ.tsx","pages/Forum.tsx","index.tsx","utils/scheme.ts","contracts/index.ts","cache/index.ts","utils/permissions.ts","assets/images/metamask.png","utils/helpers.ts","cache/helpers.ts","config/index.ts"],"names":["BigNumber","config","EXPONENTIAL_AT","ROUNDING_MODE","ROUND_DOWN","DECIMAL_PLACES","FORMAT","groupSize","groupSeparator","decimalSeparator","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","ETH_NETWORKS","process","split","NETWORK_NAMES","NETWORK_IDS","ETH_NETWORKS_IDS","network","web3ContextNames","isChainIdSupported","chainId","indexOf","injected","InjectedConnector","supportedChainIds","SUPPORTED_WALLETS","INJECTED","connector","name","iconName","description","href","color","primary","METAMASK","require","Web3Errors","TXEvents","VoteDecision","WalletSchemeProposalState","VotingMachineProposalState","UncheckedJsonRpcSigner","signer","ethers","defineReadOnly","provider","this","getAddress","transaction","sendUncheckedTransaction","hash","nonce","gasLimit","gasPrice","data","value","confirmations","from","wait","waitForTransaction","message","signMessage","ContractType","ERRORS","errorCodeMapping","SIGNATURE_REJECTED","isKnownErrorCode","codeStr","toString","getErrorByCode","UNKNOWN_ERROR","sendAction","params","contract","action","sender","overrides","console","debug","preLog","promiEvent","PromiEvent","methods","send","once","emit","TX_HASH","receipt","RECEIPT","confNumber","CONFIRMATION","on","error","TX_ERROR","INVARIANT","FINALLY","catch","schema","Avatar","abi","Controller","VotingMachine","DXDVotingMachine","Reputation","WalletScheme","ERC20","PermissionRegistry","Multicall","ABIService","root","contractType","library","providerStore","getActiveWeb3React","contractInterface","Interface","getAbi","functionSignature","substring","functionName","functions","sighash","function","args","eth","decodeParameters","inputs","input","type","FetchCode","ProviderStore","rootStore","accounts","defaultAccount","web3Contexts","supportedNetworks","chainData","activeChainId","activeFetchLoop","activeAccount","fetchUserBlockchainData","web3React","account","a","transactionStore","checkPendingTransactions","currentBlockNumber","makeObservable","observable","setCurrentBlockNumber","setActiveAccount","blocknumber","getCurrentBlockNumber","newBlockNumber","oldBlockNumber","getSigner","address","signerAccount","Contract","context","getBlock","blockData","date","Date","timestamp","moment","format","ContextNotFound","contractAddress","BlockchainActionNoAccount","BlockchainActionNoChainId","getContract","addTransactionRecord","to","log","sendTransaction","TransactionStore","txRecords","filter","isTxPending","currentBlock","forEach","isStale","getTransactionReceipt","blockNumberChecked","SUCCESS","txHash","record","undefined","records","find","push","txRecord","ModalStore","walletModalVisible","toggleWalletModal","setWalletModalVisible","visible","ConfigStore","darkMode","toggleDarkMode","activeWeb3","localStorage","getItem","JSON","parse","etherscan","pinata","pinOnStart","setItem","stringify","getNetworkConfig","getActiveChainName","CACHE","DaoStore","daoCache","updateNetworkCache","createProposal","vote","approveVotingMachineToken","stake","execute","redeem","unparsedCache","daoInfo","totalRep","bnum","ethBalance","repEvents","repEvent","i","amount","schemes","schemeAddress","callPermissions","callPermissionFrom","callPermission","fromTime","proposals","proposalId","values","stateInScheme","stateInVotingMachine","repAtCreation","currentBoostedVotePeriodLimit","daoBountyRemain","daoBounty","totalStakes","confidenceThreshold","secondsFromTimeOutTillExecuteBoosted","submittedTime","preBoostedPhaseTime","boostedPhaseTime","positiveVotes","negativeVotes","preBoostedPositiveVotes","preBoostedNegativeVotes","positiveStakes","negativeStakes","votingMachines","votingMachineAddress","votingParameters","paramsHash","unparsedParams","queuedVoteRequiredPercentage","queuedVotePeriodLimit","boostedVotePeriodLimit","preBoostedVotePeriodLimit","thresholdConst","limitExponentValue","quietEndingPeriod","proposingRepReward","votersReputationLossRatio","minimumDaoBounty","daoBountyConst","activationTime","configStore","newNetworkCache","networkName","parseCache","getCache","_schemeName","_schemeAddress","scheme","getProposal","schemeInfo","getSchemeProposals","proposal","length","users","totalPositiveVotes","totalPositiveVotesAmount","totalNegativeVotes","totalNegativeVotesAmount","totalPositiveStakes","totalPositiveStakesAmount","totalNegativeStakes","totalNegativeStakesAmount","totalProposalsCreated","cache","rep","userAddress","repBalance","div","toNumber","_","sortBy","unshift","repTotalSupply","blockNumber","event","plus","minus","l1BlockNumber","events","votes","voter","correctVotes","wrongVotes","correctStakes","wrongStakes","totalVoted","totalStaked","score","winningVote","stakes","staker","proposalCreator","proposer","times","toFixed","Math","min","creationEvent","tx","ranking","orderBy","key","assign","allProposals","votingMachine","getVotingMachineOfProposal","proposalEvents","getVotesOfProposal","getStakesOfProposal","redeems","getRedeemsOfProposal","redeemsRep","getRedeemsRepOfProposal","stateChanges","getProposalStateChanges","history","text","block","transactionIndex","logIndex","concat","web3","utils","fromWei","beneficiary","state","user","repPercentage","gen","redeemRep","dxd","newProposalEvents","proposalsCreated","proposalStateChangeEvents","votingMachineOfProposal","networkConfig","votingMachineParams","autoBoost","maxSecondsForExecution","timeNow","unix","status","boostTime","finishTime","shouldBoost","decodeProposalStatus","proposalStateChanges","proposalStateChange","schemeType","proposalData","sendRawTransaction","encodeFunctionCall","avatar","contentHash","decode","descriptionHash","reputationChange","ethValue","tokenValue","externalToken","titleText","decision","blockchainStore","token","bigNumberify","constants","MaxUint256","UserStore","userInfo","dxdBalance","dxdApproved","genBalance","genApproved","update","getCachedValue","reputation","method","multicall","BlockchainStore","initialLoadComplete","contractStorage","eventsStorage","updateStore","fetchData","calls","results","multicallService","call","index","decodeCall","response","lastFetched","executeCalls","multicallResponse","reduceMulticall","resetActiveCalls","entry","has","get","eventName","emitions","entries","oldEntry","reset","active","daoStore","userStore","networkCache","getBlockNumber","lastCheckedBlockNumber","fromBlock","toBlock","tokensBalancesCalls","getTokensToFetchPrice","tokenAddress","tokenBalances","controllerAddress","controller","addCalls","executeAndUpdateMulticall","tokensBalancesCall","accountCalls","MulticallService","activeCalls","activeCallsRaw","rawCalls","multi","aggregate","returnData","addCall","addContractCall","abiService","iface","encoded","encode","result","normalizeBalance","decimals","DEFAULT_TOKEN_DECIMALS","scale","formatBalance","balance","precision","roundDown","eq","decimalPlaces","ROUND_UP","padToDecimalPlaces","minDecimals","zerosToPad","pad","DaoService","callData","avatarAddress","genericCall","encodeABI","callDecoded","genericCallData","ERC20_TRANSFER_SIGNATURE","transferParams","atBlock","l2BlockNumber","userRep","totalSupply","EventsService","activeEventsCalls","getPastEvents","activeEventCall","getEvents","addEventCall","CID","IPFSService","ipfs","started","IPFS","create","content","add","cid","string","pin","file","path","chunk","PinataService","auth","getPinList","pinList","ipfsHashes","rows","pinataApiKey","getLocalConfig","axios","url","headers","Authorization","hashToPin","pinataMetadata","fromIpfs","keyValues","EtherscanService","etherscanAPIKey","CoingeckoService","prices","tokens","tokenAddresses","pricesResponse","toChecksumAddress","storesContext","React","createContext","modalStore","daoService","eventsService","ipfsService","pinataService","etherscanService","coingeckoService","useStores","useContext","usePrevious","ref","useRef","useEffect","current","Web3ReactManager","children","web3ContextInjected","useWeb3React","networkActive","networkError","setWeb3Context","triedEager","useWeb3ReactCore","activate","useState","tried","setTried","isAuthorized","isMobile","window","ethereum","useEagerConnect","location","reload","suppress","handleChainChanged","handleAccountsChanged","handleNetworkChanged","removeListener","useInactiveListener","callback","delay","savedCallback","setInterval","clearInterval","useInterval","BlurWrapper","styled","OverBlurModal","className","Boolean","hostname","match","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","reduce","accumulator","size","css","white","ThemeProvider","setDarkMode","theme","black","textColor","greyText","backgroundColor","activeButtonBackground","modalBackground","inputBackground","placeholderGray","shadowColor","borderStyle","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","bodyText","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle","createGlobalStyle","shortenAddress","digits","isAddress","toLowerCase","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","suppressClassNameWarning","mobile","rest","attrs","StyledDialogContent","minHeight","maxHeight","isOpen","slideInAnimation","aria-label","HiddenCloseButton","button","Modal","onDismiss","initialFocusRef","transitions","useTransition","duration","opacity","enter","leave","item","props","style","transform","hidden","onClick","_line","_line2","Link","target","rel","CopyIcon","TransactionStatusText","span","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","useCallback","didCopy","copy","hide","setTimeout","clearTimeout","useCopyClipboard","setCopied","_extends","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","title","titleId","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","ForwardRef","ETHERSCAN_PREFIXES","1","3","4","5","42","getEtherscanLink","networkId","prefix","OptionButton","HeaderRow","UpperSection","InfoCard","AccountGroupingRow","AccountSection","YourAccount","GreenCircle","CircleWrapper","AccountControl","hasENS","isENS","ConnectButtonRow","StyledLink","CloseIcon","CloseColor","Close","WalletAction","AccountDetails","ENSName","openOptions","alt","close","clickable","transparentize","OptionCard","OptionCardLeft","OptionCardClickable","disabled","HeaderText","SubHeader","IconWrapper","Option","link","header","subheader","icon","src","metamaskIcon","PendingSection","LoadingMessage","ErrorGroup","ErrorButton","darken","LoadingWrapper","PendingView","uri","setPendingError","tryActivation","isMetamask","isMetaMask","option","Wrapper","ContentWrapper","Blurb","OptionGrid","HoverText","WALLET_VIEWS","WalletModal","observer","pendingTransactions","confirmedTransactions","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","connectionErrorMessage","setConnectionErrorMessage","walletModalOpen","activePrevious","connectorPrevious","getOptions","mobileOnly","userSelect","Box","WrongNetworkButton","AccountButton","ConnectButton","Web3ConnectStatus","pending","confirmed","getPendingTransactions","getConfirmedTransactions","display","fontSize","replace","toUpperCase","NavWrapper","NavSection","MenuItem","ItemBox","Header","NavItem","withRouter","route","getUserInfo","parseFloat","Number","Web3","getDaoInfo","dxdaoIcon","pathname","margin","FooterWrapper","LeftFooter","FooterItem","FooterDivider","Footer","useHistory","PageRouterWrapper","LoadingBox","PageRouter","useLocation","start","isAuthenticated","loadPrices","updatePinList","Button","ButtonWithRouter","ActiveButton","timeToTimestamp","formatPercentage","useLowerLimit","lte","gt","ProposalsTableWrapper","ProposalsFilter","select","ProposalsNameFilter","ProposalTableHeaderActions","ProposalTableHeaderWrapper","TableHeader","align","TableRowsWrapper","TableRow","TableCell","weight","wrapText","ProposalsPage","getAllSchemes","stateFilter","setStateFilter","schemeFilter","setSchemeFilter","titleFilter","setTitleFilter","getAllProposals","cacheProposal","getProposalStatus","sort","b","flexDirection","justifyContent","placeholder","onChange","newValue","positiveStake","negativeStake","positiveVotesPercentage","negativeVotesPercentage","timeToBoost","timeToFinish","votingMachineTokenName","textDecoration","textAlign","flex","QuestionLink","QuestionIcon","question","ProposalTemplates","NewProposalFormWrapper","PlaceHolders","TitleInput","TextActions","CallRow","RemoveButton","CallInput","NewProposalPage","schemeInLocalStorage","defaultSchemeToUse","findIndex","schemeToUse","setSchemeToUse","setTitleText","ipfsHash","setIpfsHash","descriptionText","setDescriptionText","setCalls","repChange","ZERO_ADDRESS","contributionRewardCalls","setContributionRewardCalls","useReducer","x","forceUpdate","submitionState","setSubmitionState","errorMessage","setErrorMessage","uploadToIPFS","bodyTextToUpload","pinataPin","ipfsPin","uploaded","getContent","ipfsContent","sleep","callToController","callType","callDataFunctionSignature","callDataFunctionParamsEncoded","encodeFunctionSignature","functionParams","parameters","lastIndexOf","encodeParameters","encodeControllerGenericCall","toWei","txerror","allowedToCall","setCallsInState","onFunctionParamsChange","callIndex","paramIndex","onContributionRewardValueChange","setContributionRewardCallsInState","permissionRegistry","asset","ANY_ADDRESS","ANY_FUNC_SIGNATURE","allowedPermission","minWidth","Question","splice","defaultValue","template","preview","minheights","maxheights","commands","bold","italic","strikethrough","hr","divider","quote","image","unorderedListCommand","orderedListCommand","checkedListCommand","Markdown","borderRadius","border","padding","list","toAddress","allowedFunctions","votingMachineToken","getTokenData","onToSelectChange","allowedCall","allowedCallIndex","functionSelected","selectedFunction","allowedFunc","allowedFuncIndex","paddingRight","marginTop","funcParam","funcParamIndex","proposalIndex","alignItems","AddressLink","BlockchainLink","onlyIcon","toFormat","end","formarText","InfoBox","UserPage","userEvents","getUserEvents","getUser","proposalsToRedeem","getGovernanceInfo","voteParameters","getVotingParametersOfProposal","cursor","historyEvent","borderBottom","ProposalInformationWrapper","InfoSidebarBox","ProposalInfoSection","ProposalInfoBox","SidebarDivider","SidebarRow","AmountInput","AmountBadge","ActionButton","ProposalPage","Slider","maxWidth","votingMachineUsed","getScheme","stakeAmount","setStakeAmount","votePercentage","setVotePercentage","proposalDescription","setProposalDescription","proposalTitle","setProposalTitle","votingMachineTokenApproved","getProposalEvents","votedAmount","positiveVotesCount","negativeVotesCount","stakedAmount","positiveStakesCount","negativeStakesCount","userRepAtProposalCreation","getRepAt","totalRepAtProposalCreation","executionTimeoutTime","proposalCallTexts","Array","p","decodedGenericCall","decodeControllerCall","canRedeemToken","canRedeemRep","canRedeem","boostedProposals","preBoostedProposals","upstakes","downstakes","threshold","pow","lt","recommendedThreshold","stakeToBoost","stakeToUnBoost","recommendedStakeToBoost","recommendedStakeToUnBoost","calculateStakes","getAmountOfProposalsPreBoostedInScheme","boostedVoteRequiredPercentage","repPercentageAtCreation","submitVote","repAmount","submitStake","executeProposal","finishTimeReached","lineBreak","whiteSpace","proposalCallText","voteEvent","max","step","stakeEvent","borderTop","FinanceInfoWrapper","FinanceTableHeaderWrapper","FinanceInformation","getPrices","assets","total","tokenData","indexOfAssetInTotal","assetHolder","assetsOfHolder","parseCamelCase","usd","SchemesInformationWrapper","SchemesInformation","schemeProposals","votingMachineParameters","getVotingParametersOfScheme","humanize","maxRepPercentageChange","permissions","canGenericCall","canUpgrade","canChangeConstraints","canRegisterSchemes","proposalIds","GovernanceInfoWrapper","GovernanceTableHeaderWrapper","GovernanceInformation","weiNumber","governanceInfo","chartType","loader","options","legend","pieSliceText","pieStartAngle","sliceVisibilityThreshold","hAxis","vAxis","InfoPageWrapper","InfoNavigation","InfoPage","searchPath","search","Row","InputBox","ConfigPage","etherscanApiStatus","setEtherscanApiStatus","pinataKeyStatus","setPinataKeyStatus","localConfig","setLocalConfig","onApiKeyValueChange","serviceName","checked","FAQPage","questionId","FAQBox","document","querySelectorAll","scrollIntoView","schemeAddresses","FAQBody","ForumPage","loading","setLoading","addEventListener","embedId","elem","getElementById","lists","getAttribute","frameId","random","substr","removeAttribute","j","attributes","attr","iframe","createElement","join","frameBorder","scrolling","appendChild","discourse-url","category","per-page","updateLocale","relativeTime","s","m","h","d","Web3ProviderInjected","createWeb3ReactRoot","Root","getLibrary","exact","Proposals","NewProposal","Info","FAQ","Forum","User","Proposal","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","decodeSchemeParameters","rawParameters","DxController","DxAvatar","DxReputation","GenesisProtocol","getContracts","gen2","networkContracts","updateDaoInfo","updateReputationEvents","networkCacheUpdated","newProposal","_address","updateVotingMachine","updateSchemes","updatePermissionRegistry","updateProposals","allContracts","callsToExecute","executeMulticall","callsResponse","decodedReturnData","sortEvents","reputationEvent","signature","returnValues","_to","_amount","transactionHash","_from","newVotingMachineEvents","votingMachineEventsInCache","votingMachineParamsHash","votingMachineEvent","proposalCreated","newProposalEvent","_proposalId","_organization","_proposer","paramHash","_paramsHash","_proposalState","preBoosted","_voter","_vote","_reputation","_staker","amount4Bounty","_beneficiary","permissionRegistryEvent","eventValues","controllerEvents","controllerEventsIndex","controllerEvent","_scheme","schemeTypeData","getSchemeTypeData","WalletSchemeJSON","walletSchemeContract","callsResponse1","permission","hexString","lookup","ret","len","hexToBinary","voteParams","schemeName","ZERO_HASH","callsResponse2","registered","_sender","soliditySha3","avatarAddressEncoded","encodeParameter","schemeEvents","newProposalTopics","getRawEvents","schemeEventsBatchs","schemeEventsBatchsIndex","schemeEvent","topics","decodeParameter","votingMachineProposalInfo","proposalStatusWithVotes","proposalTimes","schemeProposalInfo","transactionReceipt","newProposalTopic","logs","decodedProposer","creationLogDecoded","creationLogEncoding","_descriptionHash","ipfsHashToDescriptionHash","contractToCall","_parametersHash","_permissions","_reputationChange","_rewards","_externalToken","_data","_value","_contractsToCall","_callsData","_values","getTransaction","totalSupplyAt","daoRedeemItsWinnings","creationEventSender","descriptionHashToIPFSHash","retryIntent","isNode","request","proposalShouldBoost","val","scalePow","scaleMul","ms","parsed","MAX_BLOCKS_PER_EVENTS_FETCH","eventsToGet","maxBlocksPerFetch","eventsFetched","getTimestampOfEvents","trunc","blocksToLower","topicsToGet","getPastLogs","blocksToFetch","timestamps","totalLength","blocksToFetchBatch","blockInfo","number","_jsonInterface","callResult","outputs","getCodec","contractsFile","tokensToFetchPriceFile","tokensFile","REACT_APP_AVATAR_ADDRESS","REACT_APP_CONTROLLER_ADDRESS","REACT_APP_REPUTATION_ADDRESS","REACT_APP_PERMISSION_REGISTRY_ADDRESS","REACT_APP_MULTICALL_ADDRESS","REACT_APP_VOTING_MACHINE_ADDRESS","REACT_APP_VOTING_MACHINE_TOKEN_ADDRESS","daostack","schemeRegistrar","contributionReward","competitionScheme","multicallSchemes","addresses","genericSchemes","dxSchemes","tokenInFile"],"mappings":"oGAAA,wDAEAA,YAAUC,OAAO,CACbC,eAAgB,EAAE,IAAK,KACvBC,cAAeH,YAAUI,WACzBC,eAAgB,GAChBC,OAAQ,CACNC,UAAW,EACXC,eAAgB,IAChBC,iBAAkB,Q,+xp7TCTxB,IAAIC,EAAM,CACT,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,cAAe,CACd,IACA,GAED,iBAAkB,CACjB,IACA,GAED,kBAAmB,CAClB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,eAAgB,CACf,IACA,GAED,kBAAmB,CAClB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,aAAc,CACb,IACA,IAED,gBAAiB,CAChB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,cAAe,CACd,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,YAAa,CACZ,IACA,IAED,eAAgB,CACf,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,cAAe,CACd,IACA,IAED,iBAAkB,CACjB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,gBAAiB,CAChB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,eAAgB,CACf,IACA,IAED,kBAAmB,CAClB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,iBAAkB,CACjB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,mCAAoC,CACnC,IACA,KAED,sCAAuC,CACtC,IACA,KAED,uCAAwC,CACvC,IACA,KAED,0CAA2C,CAC1C,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,YAAa,CACZ,IACA,KAED,eAAgB,CACf,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,6BAA8B,CAC7B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,aAAc,CACb,IACA,KAED,gBAAiB,CAChB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,2BAA4B,CAC3B,IACA,KAED,8BAA+B,CAC9B,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,mBAAoB,CACnB,KAED,sBAAuB,CACtB,KAED,uBAAwB,CACvB,IACA,KAED,0BAA2B,CAC1B,IACA,KAED,iBAAkB,CACjB,KAED,4BAA6B,CAC5B,IACA,KAED,+BAAgC,CAC/B,IACA,KAED,gCAAiC,CAChC,IACA,KAED,mCAAoC,CACnC,IACA,KAED,oBAAqB,CACpB,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,cAAe,CACd,IACA,KAED,iBAAkB,CACjB,IACA,KAED,kBAAmB,CAClB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,gBAAiB,CAChB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,uBAAwB,CACvB,IACA,KAED,iBAAkB,CACjB,IACA,KAED,oBAAqB,CACpB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,qBAAsB,CACrB,IACA,KAED,wBAAyB,CACxB,IACA,KAED,yBAA0B,CACzB,IACA,KAED,4BAA6B,CAC5B,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,eAAgB,CACf,IACA,KAED,kBAAmB,CAClB,IACA,KAED,mBAAoB,CACnB,IACA,KAED,sBAAuB,CACtB,IACA,KAED,0BAA2B,CAC1B,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,iCAAkC,CACjC,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,aAAc,CACb,KACA,KAED,gBAAiB,CAChB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,YAAa,CACZ,KACA,KAED,eAAgB,CACf,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,6BAA8B,CAC7B,KACA,KAED,gCAAiC,CAChC,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,+BAAgC,CAC/B,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,iBAAkB,CACjB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,cAAe,CACd,KACA,KAED,iBAAkB,CACjB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,0BAA2B,CAC1B,KACA,KAED,2BAA4B,CAC3B,KACA,KAED,8BAA+B,CAC9B,KACA,KAED,qBAAsB,CACrB,KACA,KAED,wBAAyB,CACxB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,4BAA6B,CAC5B,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,gBAAiB,CAChB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,oBAAqB,CACpB,KACA,KAED,uBAAwB,CACvB,KACA,KAED,kBAAmB,CAClB,KACA,KAED,qBAAsB,CACrB,KACA,KAED,sBAAuB,CACtB,KACA,KAED,yBAA0B,CACzB,KACA,KAED,eAAgB,CACf,KACA,KAED,kBAAmB,CAClB,KACA,KAED,mBAAoB,CACnB,KACA,KAED,sBAAuB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","file":"static/js/main.ab36f744.chunk.js","sourcesContent":["import { BigNumber } from 'bignumber.js';\n\nBigNumber.config({\n    EXPONENTIAL_AT: [-100, 100],\n    ROUNDING_MODE: BigNumber.ROUND_DOWN,\n    DECIMAL_PLACES: 18,\n    FORMAT: {\n      groupSize: 3,\n      groupSeparator: ' ',\n      decimalSeparator: '.'\n    }\n});\n\nexport { BigNumber };\n","var map = {\n\t\"./prism-abap\": [\n\t\t739,\n\t\t0\n\t],\n\t\"./prism-abap.js\": [\n\t\t739,\n\t\t0\n\t],\n\t\"./prism-abap.min\": [\n\t\t740,\n\t\t1\n\t],\n\t\"./prism-abap.min.js\": [\n\t\t740,\n\t\t1\n\t],\n\t\"./prism-abnf\": [\n\t\t741,\n\t\t2\n\t],\n\t\"./prism-abnf.js\": [\n\t\t741,\n\t\t2\n\t],\n\t\"./prism-abnf.min\": [\n\t\t742,\n\t\t3\n\t],\n\t\"./prism-abnf.min.js\": [\n\t\t742,\n\t\t3\n\t],\n\t\"./prism-actionscript\": [\n\t\t743,\n\t\t4\n\t],\n\t\"./prism-actionscript.js\": [\n\t\t743,\n\t\t4\n\t],\n\t\"./prism-actionscript.min\": [\n\t\t744,\n\t\t5\n\t],\n\t\"./prism-actionscript.min.js\": [\n\t\t744,\n\t\t5\n\t],\n\t\"./prism-ada\": [\n\t\t745,\n\t\t6\n\t],\n\t\"./prism-ada.js\": [\n\t\t745,\n\t\t6\n\t],\n\t\"./prism-ada.min\": [\n\t\t746,\n\t\t7\n\t],\n\t\"./prism-ada.min.js\": [\n\t\t746,\n\t\t7\n\t],\n\t\"./prism-agda\": [\n\t\t747,\n\t\t8\n\t],\n\t\"./prism-agda.js\": [\n\t\t747,\n\t\t8\n\t],\n\t\"./prism-agda.min\": [\n\t\t748,\n\t\t9\n\t],\n\t\"./prism-agda.min.js\": [\n\t\t748,\n\t\t9\n\t],\n\t\"./prism-al\": [\n\t\t749,\n\t\t10\n\t],\n\t\"./prism-al.js\": [\n\t\t749,\n\t\t10\n\t],\n\t\"./prism-al.min\": [\n\t\t750,\n\t\t11\n\t],\n\t\"./prism-al.min.js\": [\n\t\t750,\n\t\t11\n\t],\n\t\"./prism-antlr4\": [\n\t\t751,\n\t\t12\n\t],\n\t\"./prism-antlr4.js\": [\n\t\t751,\n\t\t12\n\t],\n\t\"./prism-antlr4.min\": [\n\t\t752,\n\t\t13\n\t],\n\t\"./prism-antlr4.min.js\": [\n\t\t752,\n\t\t13\n\t],\n\t\"./prism-apacheconf\": [\n\t\t753,\n\t\t14\n\t],\n\t\"./prism-apacheconf.js\": [\n\t\t753,\n\t\t14\n\t],\n\t\"./prism-apacheconf.min\": [\n\t\t754,\n\t\t15\n\t],\n\t\"./prism-apacheconf.min.js\": [\n\t\t754,\n\t\t15\n\t],\n\t\"./prism-apl\": [\n\t\t755,\n\t\t16\n\t],\n\t\"./prism-apl.js\": [\n\t\t755,\n\t\t16\n\t],\n\t\"./prism-apl.min\": [\n\t\t756,\n\t\t17\n\t],\n\t\"./prism-apl.min.js\": [\n\t\t756,\n\t\t17\n\t],\n\t\"./prism-applescript\": [\n\t\t757,\n\t\t18\n\t],\n\t\"./prism-applescript.js\": [\n\t\t757,\n\t\t18\n\t],\n\t\"./prism-applescript.min\": [\n\t\t758,\n\t\t19\n\t],\n\t\"./prism-applescript.min.js\": [\n\t\t758,\n\t\t19\n\t],\n\t\"./prism-aql\": [\n\t\t759,\n\t\t20\n\t],\n\t\"./prism-aql.js\": [\n\t\t759,\n\t\t20\n\t],\n\t\"./prism-aql.min\": [\n\t\t760,\n\t\t21\n\t],\n\t\"./prism-aql.min.js\": [\n\t\t760,\n\t\t21\n\t],\n\t\"./prism-arduino\": [\n\t\t761,\n\t\t22\n\t],\n\t\"./prism-arduino.js\": [\n\t\t761,\n\t\t22\n\t],\n\t\"./prism-arduino.min\": [\n\t\t762,\n\t\t23\n\t],\n\t\"./prism-arduino.min.js\": [\n\t\t762,\n\t\t23\n\t],\n\t\"./prism-arff\": [\n\t\t763,\n\t\t24\n\t],\n\t\"./prism-arff.js\": [\n\t\t763,\n\t\t24\n\t],\n\t\"./prism-arff.min\": [\n\t\t764,\n\t\t25\n\t],\n\t\"./prism-arff.min.js\": [\n\t\t764,\n\t\t25\n\t],\n\t\"./prism-asciidoc\": [\n\t\t765,\n\t\t26\n\t],\n\t\"./prism-asciidoc.js\": [\n\t\t765,\n\t\t26\n\t],\n\t\"./prism-asciidoc.min\": [\n\t\t766,\n\t\t27\n\t],\n\t\"./prism-asciidoc.min.js\": [\n\t\t766,\n\t\t27\n\t],\n\t\"./prism-asm6502\": [\n\t\t767,\n\t\t28\n\t],\n\t\"./prism-asm6502.js\": [\n\t\t767,\n\t\t28\n\t],\n\t\"./prism-asm6502.min\": [\n\t\t768,\n\t\t29\n\t],\n\t\"./prism-asm6502.min.js\": [\n\t\t768,\n\t\t29\n\t],\n\t\"./prism-aspnet\": [\n\t\t769,\n\t\t30\n\t],\n\t\"./prism-aspnet.js\": [\n\t\t769,\n\t\t30\n\t],\n\t\"./prism-aspnet.min\": [\n\t\t770,\n\t\t31\n\t],\n\t\"./prism-aspnet.min.js\": [\n\t\t770,\n\t\t31\n\t],\n\t\"./prism-autohotkey\": [\n\t\t771,\n\t\t32\n\t],\n\t\"./prism-autohotkey.js\": [\n\t\t771,\n\t\t32\n\t],\n\t\"./prism-autohotkey.min\": [\n\t\t772,\n\t\t33\n\t],\n\t\"./prism-autohotkey.min.js\": [\n\t\t772,\n\t\t33\n\t],\n\t\"./prism-autoit\": [\n\t\t773,\n\t\t34\n\t],\n\t\"./prism-autoit.js\": [\n\t\t773,\n\t\t34\n\t],\n\t\"./prism-autoit.min\": [\n\t\t774,\n\t\t35\n\t],\n\t\"./prism-autoit.min.js\": [\n\t\t774,\n\t\t35\n\t],\n\t\"./prism-bash\": [\n\t\t775,\n\t\t36\n\t],\n\t\"./prism-bash.js\": [\n\t\t775,\n\t\t36\n\t],\n\t\"./prism-bash.min\": [\n\t\t776,\n\t\t37\n\t],\n\t\"./prism-bash.min.js\": [\n\t\t776,\n\t\t37\n\t],\n\t\"./prism-basic\": [\n\t\t777,\n\t\t38\n\t],\n\t\"./prism-basic.js\": [\n\t\t777,\n\t\t38\n\t],\n\t\"./prism-basic.min\": [\n\t\t778,\n\t\t39\n\t],\n\t\"./prism-basic.min.js\": [\n\t\t778,\n\t\t39\n\t],\n\t\"./prism-batch\": [\n\t\t779,\n\t\t40\n\t],\n\t\"./prism-batch.js\": [\n\t\t779,\n\t\t40\n\t],\n\t\"./prism-batch.min\": [\n\t\t780,\n\t\t41\n\t],\n\t\"./prism-batch.min.js\": [\n\t\t780,\n\t\t41\n\t],\n\t\"./prism-bbcode\": [\n\t\t781,\n\t\t42\n\t],\n\t\"./prism-bbcode.js\": [\n\t\t781,\n\t\t42\n\t],\n\t\"./prism-bbcode.min\": [\n\t\t782,\n\t\t43\n\t],\n\t\"./prism-bbcode.min.js\": [\n\t\t782,\n\t\t43\n\t],\n\t\"./prism-bison\": [\n\t\t783,\n\t\t44\n\t],\n\t\"./prism-bison.js\": [\n\t\t783,\n\t\t44\n\t],\n\t\"./prism-bison.min\": [\n\t\t784,\n\t\t45\n\t],\n\t\"./prism-bison.min.js\": [\n\t\t784,\n\t\t45\n\t],\n\t\"./prism-bnf\": [\n\t\t785,\n\t\t46\n\t],\n\t\"./prism-bnf.js\": [\n\t\t785,\n\t\t46\n\t],\n\t\"./prism-bnf.min\": [\n\t\t786,\n\t\t47\n\t],\n\t\"./prism-bnf.min.js\": [\n\t\t786,\n\t\t47\n\t],\n\t\"./prism-brainfuck\": [\n\t\t787,\n\t\t48\n\t],\n\t\"./prism-brainfuck.js\": [\n\t\t787,\n\t\t48\n\t],\n\t\"./prism-brainfuck.min\": [\n\t\t788,\n\t\t49\n\t],\n\t\"./prism-brainfuck.min.js\": [\n\t\t788,\n\t\t49\n\t],\n\t\"./prism-brightscript\": [\n\t\t789,\n\t\t50\n\t],\n\t\"./prism-brightscript.js\": [\n\t\t789,\n\t\t50\n\t],\n\t\"./prism-brightscript.min\": [\n\t\t790,\n\t\t51\n\t],\n\t\"./prism-brightscript.min.js\": [\n\t\t790,\n\t\t51\n\t],\n\t\"./prism-bro\": [\n\t\t791,\n\t\t52\n\t],\n\t\"./prism-bro.js\": [\n\t\t791,\n\t\t52\n\t],\n\t\"./prism-bro.min\": [\n\t\t792,\n\t\t53\n\t],\n\t\"./prism-bro.min.js\": [\n\t\t792,\n\t\t53\n\t],\n\t\"./prism-c\": [\n\t\t793,\n\t\t54\n\t],\n\t\"./prism-c.js\": [\n\t\t793,\n\t\t54\n\t],\n\t\"./prism-c.min\": [\n\t\t794,\n\t\t55\n\t],\n\t\"./prism-c.min.js\": [\n\t\t794,\n\t\t55\n\t],\n\t\"./prism-cil\": [\n\t\t795,\n\t\t56\n\t],\n\t\"./prism-cil.js\": [\n\t\t795,\n\t\t56\n\t],\n\t\"./prism-cil.min\": [\n\t\t796,\n\t\t57\n\t],\n\t\"./prism-cil.min.js\": [\n\t\t796,\n\t\t57\n\t],\n\t\"./prism-clike\": [\n\t\t797,\n\t\t58\n\t],\n\t\"./prism-clike.js\": [\n\t\t797,\n\t\t58\n\t],\n\t\"./prism-clike.min\": [\n\t\t798,\n\t\t59\n\t],\n\t\"./prism-clike.min.js\": [\n\t\t798,\n\t\t59\n\t],\n\t\"./prism-clojure\": [\n\t\t799,\n\t\t60\n\t],\n\t\"./prism-clojure.js\": [\n\t\t799,\n\t\t60\n\t],\n\t\"./prism-clojure.min\": [\n\t\t800,\n\t\t61\n\t],\n\t\"./prism-clojure.min.js\": [\n\t\t800,\n\t\t61\n\t],\n\t\"./prism-cmake\": [\n\t\t801,\n\t\t62\n\t],\n\t\"./prism-cmake.js\": [\n\t\t801,\n\t\t62\n\t],\n\t\"./prism-cmake.min\": [\n\t\t802,\n\t\t63\n\t],\n\t\"./prism-cmake.min.js\": [\n\t\t802,\n\t\t63\n\t],\n\t\"./prism-coffeescript\": [\n\t\t803,\n\t\t64\n\t],\n\t\"./prism-coffeescript.js\": [\n\t\t803,\n\t\t64\n\t],\n\t\"./prism-coffeescript.min\": [\n\t\t804,\n\t\t65\n\t],\n\t\"./prism-coffeescript.min.js\": [\n\t\t804,\n\t\t65\n\t],\n\t\"./prism-concurnas\": [\n\t\t805,\n\t\t66\n\t],\n\t\"./prism-concurnas.js\": [\n\t\t805,\n\t\t66\n\t],\n\t\"./prism-concurnas.min\": [\n\t\t806,\n\t\t67\n\t],\n\t\"./prism-concurnas.min.js\": [\n\t\t806,\n\t\t67\n\t],\n\t\"./prism-core\": [\n\t\t807,\n\t\t68\n\t],\n\t\"./prism-core.js\": [\n\t\t807,\n\t\t68\n\t],\n\t\"./prism-core.min\": [\n\t\t808,\n\t\t69\n\t],\n\t\"./prism-core.min.js\": [\n\t\t808,\n\t\t69\n\t],\n\t\"./prism-cpp\": [\n\t\t809,\n\t\t70\n\t],\n\t\"./prism-cpp.js\": [\n\t\t809,\n\t\t70\n\t],\n\t\"./prism-cpp.min\": [\n\t\t810,\n\t\t71\n\t],\n\t\"./prism-cpp.min.js\": [\n\t\t810,\n\t\t71\n\t],\n\t\"./prism-crystal\": [\n\t\t811,\n\t\t72\n\t],\n\t\"./prism-crystal.js\": [\n\t\t811,\n\t\t72\n\t],\n\t\"./prism-crystal.min\": [\n\t\t812,\n\t\t73\n\t],\n\t\"./prism-crystal.min.js\": [\n\t\t812,\n\t\t73\n\t],\n\t\"./prism-csharp\": [\n\t\t813,\n\t\t74\n\t],\n\t\"./prism-csharp.js\": [\n\t\t813,\n\t\t74\n\t],\n\t\"./prism-csharp.min\": [\n\t\t814,\n\t\t75\n\t],\n\t\"./prism-csharp.min.js\": [\n\t\t814,\n\t\t75\n\t],\n\t\"./prism-csp\": [\n\t\t815,\n\t\t76\n\t],\n\t\"./prism-csp.js\": [\n\t\t815,\n\t\t76\n\t],\n\t\"./prism-csp.min\": [\n\t\t816,\n\t\t77\n\t],\n\t\"./prism-csp.min.js\": [\n\t\t816,\n\t\t77\n\t],\n\t\"./prism-css\": [\n\t\t819,\n\t\t80\n\t],\n\t\"./prism-css-extras\": [\n\t\t817,\n\t\t78\n\t],\n\t\"./prism-css-extras.js\": [\n\t\t817,\n\t\t78\n\t],\n\t\"./prism-css-extras.min\": [\n\t\t818,\n\t\t79\n\t],\n\t\"./prism-css-extras.min.js\": [\n\t\t818,\n\t\t79\n\t],\n\t\"./prism-css.js\": [\n\t\t819,\n\t\t80\n\t],\n\t\"./prism-css.min\": [\n\t\t820,\n\t\t81\n\t],\n\t\"./prism-css.min.js\": [\n\t\t820,\n\t\t81\n\t],\n\t\"./prism-cypher\": [\n\t\t821,\n\t\t82\n\t],\n\t\"./prism-cypher.js\": [\n\t\t821,\n\t\t82\n\t],\n\t\"./prism-cypher.min\": [\n\t\t822,\n\t\t83\n\t],\n\t\"./prism-cypher.min.js\": [\n\t\t822,\n\t\t83\n\t],\n\t\"./prism-d\": [\n\t\t823,\n\t\t84\n\t],\n\t\"./prism-d.js\": [\n\t\t823,\n\t\t84\n\t],\n\t\"./prism-d.min\": [\n\t\t824,\n\t\t85\n\t],\n\t\"./prism-d.min.js\": [\n\t\t824,\n\t\t85\n\t],\n\t\"./prism-dart\": [\n\t\t825,\n\t\t86\n\t],\n\t\"./prism-dart.js\": [\n\t\t825,\n\t\t86\n\t],\n\t\"./prism-dart.min\": [\n\t\t826,\n\t\t87\n\t],\n\t\"./prism-dart.min.js\": [\n\t\t826,\n\t\t87\n\t],\n\t\"./prism-dax\": [\n\t\t827,\n\t\t88\n\t],\n\t\"./prism-dax.js\": [\n\t\t827,\n\t\t88\n\t],\n\t\"./prism-dax.min\": [\n\t\t828,\n\t\t89\n\t],\n\t\"./prism-dax.min.js\": [\n\t\t828,\n\t\t89\n\t],\n\t\"./prism-dhall\": [\n\t\t829,\n\t\t90\n\t],\n\t\"./prism-dhall.js\": [\n\t\t829,\n\t\t90\n\t],\n\t\"./prism-dhall.min\": [\n\t\t830,\n\t\t91\n\t],\n\t\"./prism-dhall.min.js\": [\n\t\t830,\n\t\t91\n\t],\n\t\"./prism-diff\": [\n\t\t831,\n\t\t92\n\t],\n\t\"./prism-diff.js\": [\n\t\t831,\n\t\t92\n\t],\n\t\"./prism-diff.min\": [\n\t\t832,\n\t\t93\n\t],\n\t\"./prism-diff.min.js\": [\n\t\t832,\n\t\t93\n\t],\n\t\"./prism-django\": [\n\t\t833,\n\t\t94\n\t],\n\t\"./prism-django.js\": [\n\t\t833,\n\t\t94\n\t],\n\t\"./prism-django.min\": [\n\t\t834,\n\t\t95\n\t],\n\t\"./prism-django.min.js\": [\n\t\t834,\n\t\t95\n\t],\n\t\"./prism-dns-zone-file\": [\n\t\t835,\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.js\": [\n\t\t835,\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.min\": [\n\t\t836,\n\t\t97\n\t],\n\t\"./prism-dns-zone-file.min.js\": [\n\t\t836,\n\t\t97\n\t],\n\t\"./prism-docker\": [\n\t\t837,\n\t\t98\n\t],\n\t\"./prism-docker.js\": [\n\t\t837,\n\t\t98\n\t],\n\t\"./prism-docker.min\": [\n\t\t838,\n\t\t99\n\t],\n\t\"./prism-docker.min.js\": [\n\t\t838,\n\t\t99\n\t],\n\t\"./prism-ebnf\": [\n\t\t839,\n\t\t100\n\t],\n\t\"./prism-ebnf.js\": [\n\t\t839,\n\t\t100\n\t],\n\t\"./prism-ebnf.min\": [\n\t\t840,\n\t\t101\n\t],\n\t\"./prism-ebnf.min.js\": [\n\t\t840,\n\t\t101\n\t],\n\t\"./prism-editorconfig\": [\n\t\t841,\n\t\t102\n\t],\n\t\"./prism-editorconfig.js\": [\n\t\t841,\n\t\t102\n\t],\n\t\"./prism-editorconfig.min\": [\n\t\t842,\n\t\t103\n\t],\n\t\"./prism-editorconfig.min.js\": [\n\t\t842,\n\t\t103\n\t],\n\t\"./prism-eiffel\": [\n\t\t843,\n\t\t104\n\t],\n\t\"./prism-eiffel.js\": [\n\t\t843,\n\t\t104\n\t],\n\t\"./prism-eiffel.min\": [\n\t\t844,\n\t\t105\n\t],\n\t\"./prism-eiffel.min.js\": [\n\t\t844,\n\t\t105\n\t],\n\t\"./prism-ejs\": [\n\t\t845,\n\t\t106\n\t],\n\t\"./prism-ejs.js\": [\n\t\t845,\n\t\t106\n\t],\n\t\"./prism-ejs.min\": [\n\t\t846,\n\t\t107\n\t],\n\t\"./prism-ejs.min.js\": [\n\t\t846,\n\t\t107\n\t],\n\t\"./prism-elixir\": [\n\t\t847,\n\t\t108\n\t],\n\t\"./prism-elixir.js\": [\n\t\t847,\n\t\t108\n\t],\n\t\"./prism-elixir.min\": [\n\t\t848,\n\t\t109\n\t],\n\t\"./prism-elixir.min.js\": [\n\t\t848,\n\t\t109\n\t],\n\t\"./prism-elm\": [\n\t\t849,\n\t\t110\n\t],\n\t\"./prism-elm.js\": [\n\t\t849,\n\t\t110\n\t],\n\t\"./prism-elm.min\": [\n\t\t850,\n\t\t111\n\t],\n\t\"./prism-elm.min.js\": [\n\t\t850,\n\t\t111\n\t],\n\t\"./prism-erb\": [\n\t\t851,\n\t\t112\n\t],\n\t\"./prism-erb.js\": [\n\t\t851,\n\t\t112\n\t],\n\t\"./prism-erb.min\": [\n\t\t852,\n\t\t113\n\t],\n\t\"./prism-erb.min.js\": [\n\t\t852,\n\t\t113\n\t],\n\t\"./prism-erlang\": [\n\t\t853,\n\t\t114\n\t],\n\t\"./prism-erlang.js\": [\n\t\t853,\n\t\t114\n\t],\n\t\"./prism-erlang.min\": [\n\t\t854,\n\t\t115\n\t],\n\t\"./prism-erlang.min.js\": [\n\t\t854,\n\t\t115\n\t],\n\t\"./prism-etlua\": [\n\t\t855,\n\t\t116\n\t],\n\t\"./prism-etlua.js\": [\n\t\t855,\n\t\t116\n\t],\n\t\"./prism-etlua.min\": [\n\t\t856,\n\t\t117\n\t],\n\t\"./prism-etlua.min.js\": [\n\t\t856,\n\t\t117\n\t],\n\t\"./prism-excel-formula\": [\n\t\t857,\n\t\t118\n\t],\n\t\"./prism-excel-formula.js\": [\n\t\t857,\n\t\t118\n\t],\n\t\"./prism-excel-formula.min\": [\n\t\t858,\n\t\t119\n\t],\n\t\"./prism-excel-formula.min.js\": [\n\t\t858,\n\t\t119\n\t],\n\t\"./prism-factor\": [\n\t\t859,\n\t\t120\n\t],\n\t\"./prism-factor.js\": [\n\t\t859,\n\t\t120\n\t],\n\t\"./prism-factor.min\": [\n\t\t860,\n\t\t121\n\t],\n\t\"./prism-factor.min.js\": [\n\t\t860,\n\t\t121\n\t],\n\t\"./prism-firestore-security-rules\": [\n\t\t861,\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.js\": [\n\t\t861,\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.min\": [\n\t\t862,\n\t\t123\n\t],\n\t\"./prism-firestore-security-rules.min.js\": [\n\t\t862,\n\t\t123\n\t],\n\t\"./prism-flow\": [\n\t\t863,\n\t\t124\n\t],\n\t\"./prism-flow.js\": [\n\t\t863,\n\t\t124\n\t],\n\t\"./prism-flow.min\": [\n\t\t864,\n\t\t125\n\t],\n\t\"./prism-flow.min.js\": [\n\t\t864,\n\t\t125\n\t],\n\t\"./prism-fortran\": [\n\t\t865,\n\t\t126\n\t],\n\t\"./prism-fortran.js\": [\n\t\t865,\n\t\t126\n\t],\n\t\"./prism-fortran.min\": [\n\t\t866,\n\t\t127\n\t],\n\t\"./prism-fortran.min.js\": [\n\t\t866,\n\t\t127\n\t],\n\t\"./prism-fsharp\": [\n\t\t867,\n\t\t128\n\t],\n\t\"./prism-fsharp.js\": [\n\t\t867,\n\t\t128\n\t],\n\t\"./prism-fsharp.min\": [\n\t\t868,\n\t\t129\n\t],\n\t\"./prism-fsharp.min.js\": [\n\t\t868,\n\t\t129\n\t],\n\t\"./prism-ftl\": [\n\t\t869,\n\t\t130\n\t],\n\t\"./prism-ftl.js\": [\n\t\t869,\n\t\t130\n\t],\n\t\"./prism-ftl.min\": [\n\t\t870,\n\t\t131\n\t],\n\t\"./prism-ftl.min.js\": [\n\t\t870,\n\t\t131\n\t],\n\t\"./prism-gcode\": [\n\t\t871,\n\t\t132\n\t],\n\t\"./prism-gcode.js\": [\n\t\t871,\n\t\t132\n\t],\n\t\"./prism-gcode.min\": [\n\t\t872,\n\t\t133\n\t],\n\t\"./prism-gcode.min.js\": [\n\t\t872,\n\t\t133\n\t],\n\t\"./prism-gdscript\": [\n\t\t873,\n\t\t134\n\t],\n\t\"./prism-gdscript.js\": [\n\t\t873,\n\t\t134\n\t],\n\t\"./prism-gdscript.min\": [\n\t\t874,\n\t\t135\n\t],\n\t\"./prism-gdscript.min.js\": [\n\t\t874,\n\t\t135\n\t],\n\t\"./prism-gedcom\": [\n\t\t875,\n\t\t136\n\t],\n\t\"./prism-gedcom.js\": [\n\t\t875,\n\t\t136\n\t],\n\t\"./prism-gedcom.min\": [\n\t\t876,\n\t\t137\n\t],\n\t\"./prism-gedcom.min.js\": [\n\t\t876,\n\t\t137\n\t],\n\t\"./prism-gherkin\": [\n\t\t877,\n\t\t138\n\t],\n\t\"./prism-gherkin.js\": [\n\t\t877,\n\t\t138\n\t],\n\t\"./prism-gherkin.min\": [\n\t\t878,\n\t\t139\n\t],\n\t\"./prism-gherkin.min.js\": [\n\t\t878,\n\t\t139\n\t],\n\t\"./prism-git\": [\n\t\t879,\n\t\t140\n\t],\n\t\"./prism-git.js\": [\n\t\t879,\n\t\t140\n\t],\n\t\"./prism-git.min\": [\n\t\t880,\n\t\t141\n\t],\n\t\"./prism-git.min.js\": [\n\t\t880,\n\t\t141\n\t],\n\t\"./prism-glsl\": [\n\t\t881,\n\t\t142\n\t],\n\t\"./prism-glsl.js\": [\n\t\t881,\n\t\t142\n\t],\n\t\"./prism-glsl.min\": [\n\t\t882,\n\t\t143\n\t],\n\t\"./prism-glsl.min.js\": [\n\t\t882,\n\t\t143\n\t],\n\t\"./prism-gml\": [\n\t\t883,\n\t\t144\n\t],\n\t\"./prism-gml.js\": [\n\t\t883,\n\t\t144\n\t],\n\t\"./prism-gml.min\": [\n\t\t884,\n\t\t145\n\t],\n\t\"./prism-gml.min.js\": [\n\t\t884,\n\t\t145\n\t],\n\t\"./prism-go\": [\n\t\t885,\n\t\t146\n\t],\n\t\"./prism-go.js\": [\n\t\t885,\n\t\t146\n\t],\n\t\"./prism-go.min\": [\n\t\t886,\n\t\t147\n\t],\n\t\"./prism-go.min.js\": [\n\t\t886,\n\t\t147\n\t],\n\t\"./prism-graphql\": [\n\t\t887,\n\t\t148\n\t],\n\t\"./prism-graphql.js\": [\n\t\t887,\n\t\t148\n\t],\n\t\"./prism-graphql.min\": [\n\t\t888,\n\t\t149\n\t],\n\t\"./prism-graphql.min.js\": [\n\t\t888,\n\t\t149\n\t],\n\t\"./prism-groovy\": [\n\t\t889,\n\t\t150\n\t],\n\t\"./prism-groovy.js\": [\n\t\t889,\n\t\t150\n\t],\n\t\"./prism-groovy.min\": [\n\t\t890,\n\t\t151\n\t],\n\t\"./prism-groovy.min.js\": [\n\t\t890,\n\t\t151\n\t],\n\t\"./prism-haml\": [\n\t\t891,\n\t\t152\n\t],\n\t\"./prism-haml.js\": [\n\t\t891,\n\t\t152\n\t],\n\t\"./prism-haml.min\": [\n\t\t892,\n\t\t153\n\t],\n\t\"./prism-haml.min.js\": [\n\t\t892,\n\t\t153\n\t],\n\t\"./prism-handlebars\": [\n\t\t893,\n\t\t154\n\t],\n\t\"./prism-handlebars.js\": [\n\t\t893,\n\t\t154\n\t],\n\t\"./prism-handlebars.min\": [\n\t\t894,\n\t\t155\n\t],\n\t\"./prism-handlebars.min.js\": [\n\t\t894,\n\t\t155\n\t],\n\t\"./prism-haskell\": [\n\t\t895,\n\t\t156\n\t],\n\t\"./prism-haskell.js\": [\n\t\t895,\n\t\t156\n\t],\n\t\"./prism-haskell.min\": [\n\t\t896,\n\t\t157\n\t],\n\t\"./prism-haskell.min.js\": [\n\t\t896,\n\t\t157\n\t],\n\t\"./prism-haxe\": [\n\t\t897,\n\t\t158\n\t],\n\t\"./prism-haxe.js\": [\n\t\t897,\n\t\t158\n\t],\n\t\"./prism-haxe.min\": [\n\t\t898,\n\t\t159\n\t],\n\t\"./prism-haxe.min.js\": [\n\t\t898,\n\t\t159\n\t],\n\t\"./prism-hcl\": [\n\t\t899,\n\t\t160\n\t],\n\t\"./prism-hcl.js\": [\n\t\t899,\n\t\t160\n\t],\n\t\"./prism-hcl.min\": [\n\t\t900,\n\t\t161\n\t],\n\t\"./prism-hcl.min.js\": [\n\t\t900,\n\t\t161\n\t],\n\t\"./prism-hlsl\": [\n\t\t901,\n\t\t162\n\t],\n\t\"./prism-hlsl.js\": [\n\t\t901,\n\t\t162\n\t],\n\t\"./prism-hlsl.min\": [\n\t\t902,\n\t\t163\n\t],\n\t\"./prism-hlsl.min.js\": [\n\t\t902,\n\t\t163\n\t],\n\t\"./prism-hpkp\": [\n\t\t903,\n\t\t164\n\t],\n\t\"./prism-hpkp.js\": [\n\t\t903,\n\t\t164\n\t],\n\t\"./prism-hpkp.min\": [\n\t\t904,\n\t\t165\n\t],\n\t\"./prism-hpkp.min.js\": [\n\t\t904,\n\t\t165\n\t],\n\t\"./prism-hsts\": [\n\t\t905,\n\t\t166\n\t],\n\t\"./prism-hsts.js\": [\n\t\t905,\n\t\t166\n\t],\n\t\"./prism-hsts.min\": [\n\t\t906,\n\t\t167\n\t],\n\t\"./prism-hsts.min.js\": [\n\t\t906,\n\t\t167\n\t],\n\t\"./prism-http\": [\n\t\t907,\n\t\t168\n\t],\n\t\"./prism-http.js\": [\n\t\t907,\n\t\t168\n\t],\n\t\"./prism-http.min\": [\n\t\t908,\n\t\t169\n\t],\n\t\"./prism-http.min.js\": [\n\t\t908,\n\t\t169\n\t],\n\t\"./prism-ichigojam\": [\n\t\t909,\n\t\t170\n\t],\n\t\"./prism-ichigojam.js\": [\n\t\t909,\n\t\t170\n\t],\n\t\"./prism-ichigojam.min\": [\n\t\t910,\n\t\t171\n\t],\n\t\"./prism-ichigojam.min.js\": [\n\t\t910,\n\t\t171\n\t],\n\t\"./prism-icon\": [\n\t\t911,\n\t\t172\n\t],\n\t\"./prism-icon.js\": [\n\t\t911,\n\t\t172\n\t],\n\t\"./prism-icon.min\": [\n\t\t912,\n\t\t173\n\t],\n\t\"./prism-icon.min.js\": [\n\t\t912,\n\t\t173\n\t],\n\t\"./prism-iecst\": [\n\t\t913,\n\t\t174\n\t],\n\t\"./prism-iecst.js\": [\n\t\t913,\n\t\t174\n\t],\n\t\"./prism-iecst.min\": [\n\t\t914,\n\t\t175\n\t],\n\t\"./prism-iecst.min.js\": [\n\t\t914,\n\t\t175\n\t],\n\t\"./prism-ignore\": [\n\t\t915,\n\t\t176\n\t],\n\t\"./prism-ignore.js\": [\n\t\t915,\n\t\t176\n\t],\n\t\"./prism-ignore.min\": [\n\t\t916,\n\t\t177\n\t],\n\t\"./prism-ignore.min.js\": [\n\t\t916,\n\t\t177\n\t],\n\t\"./prism-inform7\": [\n\t\t917,\n\t\t178\n\t],\n\t\"./prism-inform7.js\": [\n\t\t917,\n\t\t178\n\t],\n\t\"./prism-inform7.min\": [\n\t\t918,\n\t\t179\n\t],\n\t\"./prism-inform7.min.js\": [\n\t\t918,\n\t\t179\n\t],\n\t\"./prism-ini\": [\n\t\t919,\n\t\t180\n\t],\n\t\"./prism-ini.js\": [\n\t\t919,\n\t\t180\n\t],\n\t\"./prism-ini.min\": [\n\t\t920,\n\t\t181\n\t],\n\t\"./prism-ini.min.js\": [\n\t\t920,\n\t\t181\n\t],\n\t\"./prism-io\": [\n\t\t921,\n\t\t182\n\t],\n\t\"./prism-io.js\": [\n\t\t921,\n\t\t182\n\t],\n\t\"./prism-io.min\": [\n\t\t922,\n\t\t183\n\t],\n\t\"./prism-io.min.js\": [\n\t\t922,\n\t\t183\n\t],\n\t\"./prism-j\": [\n\t\t923,\n\t\t184\n\t],\n\t\"./prism-j.js\": [\n\t\t923,\n\t\t184\n\t],\n\t\"./prism-j.min\": [\n\t\t924,\n\t\t185\n\t],\n\t\"./prism-j.min.js\": [\n\t\t924,\n\t\t185\n\t],\n\t\"./prism-java\": [\n\t\t925,\n\t\t186\n\t],\n\t\"./prism-java.js\": [\n\t\t925,\n\t\t186\n\t],\n\t\"./prism-java.min\": [\n\t\t926,\n\t\t187\n\t],\n\t\"./prism-java.min.js\": [\n\t\t926,\n\t\t187\n\t],\n\t\"./prism-javadoc\": [\n\t\t927,\n\t\t188\n\t],\n\t\"./prism-javadoc.js\": [\n\t\t927,\n\t\t188\n\t],\n\t\"./prism-javadoc.min\": [\n\t\t928,\n\t\t189\n\t],\n\t\"./prism-javadoc.min.js\": [\n\t\t928,\n\t\t189\n\t],\n\t\"./prism-javadoclike\": [\n\t\t929,\n\t\t190\n\t],\n\t\"./prism-javadoclike.js\": [\n\t\t929,\n\t\t190\n\t],\n\t\"./prism-javadoclike.min\": [\n\t\t930,\n\t\t191\n\t],\n\t\"./prism-javadoclike.min.js\": [\n\t\t930,\n\t\t191\n\t],\n\t\"./prism-javascript\": [\n\t\t931,\n\t\t192\n\t],\n\t\"./prism-javascript.js\": [\n\t\t931,\n\t\t192\n\t],\n\t\"./prism-javascript.min\": [\n\t\t932,\n\t\t193\n\t],\n\t\"./prism-javascript.min.js\": [\n\t\t932,\n\t\t193\n\t],\n\t\"./prism-javastacktrace\": [\n\t\t933,\n\t\t194\n\t],\n\t\"./prism-javastacktrace.js\": [\n\t\t933,\n\t\t194\n\t],\n\t\"./prism-javastacktrace.min\": [\n\t\t934,\n\t\t195\n\t],\n\t\"./prism-javastacktrace.min.js\": [\n\t\t934,\n\t\t195\n\t],\n\t\"./prism-jolie\": [\n\t\t935,\n\t\t196\n\t],\n\t\"./prism-jolie.js\": [\n\t\t935,\n\t\t196\n\t],\n\t\"./prism-jolie.min\": [\n\t\t936,\n\t\t197\n\t],\n\t\"./prism-jolie.min.js\": [\n\t\t936,\n\t\t197\n\t],\n\t\"./prism-jq\": [\n\t\t937,\n\t\t198\n\t],\n\t\"./prism-jq.js\": [\n\t\t937,\n\t\t198\n\t],\n\t\"./prism-jq.min\": [\n\t\t938,\n\t\t199\n\t],\n\t\"./prism-jq.min.js\": [\n\t\t938,\n\t\t199\n\t],\n\t\"./prism-js-extras\": [\n\t\t939,\n\t\t200\n\t],\n\t\"./prism-js-extras.js\": [\n\t\t939,\n\t\t200\n\t],\n\t\"./prism-js-extras.min\": [\n\t\t940,\n\t\t201\n\t],\n\t\"./prism-js-extras.min.js\": [\n\t\t940,\n\t\t201\n\t],\n\t\"./prism-js-templates\": [\n\t\t941,\n\t\t202\n\t],\n\t\"./prism-js-templates.js\": [\n\t\t941,\n\t\t202\n\t],\n\t\"./prism-js-templates.min\": [\n\t\t942,\n\t\t203\n\t],\n\t\"./prism-js-templates.min.js\": [\n\t\t942,\n\t\t203\n\t],\n\t\"./prism-jsdoc\": [\n\t\t943,\n\t\t204\n\t],\n\t\"./prism-jsdoc.js\": [\n\t\t943,\n\t\t204\n\t],\n\t\"./prism-jsdoc.min\": [\n\t\t944,\n\t\t205\n\t],\n\t\"./prism-jsdoc.min.js\": [\n\t\t944,\n\t\t205\n\t],\n\t\"./prism-json\": [\n\t\t945,\n\t\t206\n\t],\n\t\"./prism-json.js\": [\n\t\t945,\n\t\t206\n\t],\n\t\"./prism-json.min\": [\n\t\t946,\n\t\t207\n\t],\n\t\"./prism-json.min.js\": [\n\t\t946,\n\t\t207\n\t],\n\t\"./prism-json5\": [\n\t\t947,\n\t\t208\n\t],\n\t\"./prism-json5.js\": [\n\t\t947,\n\t\t208\n\t],\n\t\"./prism-json5.min\": [\n\t\t948,\n\t\t209\n\t],\n\t\"./prism-json5.min.js\": [\n\t\t948,\n\t\t209\n\t],\n\t\"./prism-jsonp\": [\n\t\t949,\n\t\t210\n\t],\n\t\"./prism-jsonp.js\": [\n\t\t949,\n\t\t210\n\t],\n\t\"./prism-jsonp.min\": [\n\t\t950,\n\t\t211\n\t],\n\t\"./prism-jsonp.min.js\": [\n\t\t950,\n\t\t211\n\t],\n\t\"./prism-jsstacktrace\": [\n\t\t951,\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.js\": [\n\t\t951,\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.min\": [\n\t\t952,\n\t\t213\n\t],\n\t\"./prism-jsstacktrace.min.js\": [\n\t\t952,\n\t\t213\n\t],\n\t\"./prism-jsx\": [\n\t\t953,\n\t\t214\n\t],\n\t\"./prism-jsx.js\": [\n\t\t953,\n\t\t214\n\t],\n\t\"./prism-jsx.min\": [\n\t\t954,\n\t\t215\n\t],\n\t\"./prism-jsx.min.js\": [\n\t\t954,\n\t\t215\n\t],\n\t\"./prism-julia\": [\n\t\t955,\n\t\t216\n\t],\n\t\"./prism-julia.js\": [\n\t\t955,\n\t\t216\n\t],\n\t\"./prism-julia.min\": [\n\t\t956,\n\t\t217\n\t],\n\t\"./prism-julia.min.js\": [\n\t\t956,\n\t\t217\n\t],\n\t\"./prism-keyman\": [\n\t\t957,\n\t\t218\n\t],\n\t\"./prism-keyman.js\": [\n\t\t957,\n\t\t218\n\t],\n\t\"./prism-keyman.min\": [\n\t\t958,\n\t\t219\n\t],\n\t\"./prism-keyman.min.js\": [\n\t\t958,\n\t\t219\n\t],\n\t\"./prism-kotlin\": [\n\t\t959,\n\t\t220\n\t],\n\t\"./prism-kotlin.js\": [\n\t\t959,\n\t\t220\n\t],\n\t\"./prism-kotlin.min\": [\n\t\t960,\n\t\t221\n\t],\n\t\"./prism-kotlin.min.js\": [\n\t\t960,\n\t\t221\n\t],\n\t\"./prism-latex\": [\n\t\t961,\n\t\t222\n\t],\n\t\"./prism-latex.js\": [\n\t\t961,\n\t\t222\n\t],\n\t\"./prism-latex.min\": [\n\t\t962,\n\t\t223\n\t],\n\t\"./prism-latex.min.js\": [\n\t\t962,\n\t\t223\n\t],\n\t\"./prism-latte\": [\n\t\t963,\n\t\t224\n\t],\n\t\"./prism-latte.js\": [\n\t\t963,\n\t\t224\n\t],\n\t\"./prism-latte.min\": [\n\t\t964,\n\t\t225\n\t],\n\t\"./prism-latte.min.js\": [\n\t\t964,\n\t\t225\n\t],\n\t\"./prism-less\": [\n\t\t965,\n\t\t226\n\t],\n\t\"./prism-less.js\": [\n\t\t965,\n\t\t226\n\t],\n\t\"./prism-less.min\": [\n\t\t966,\n\t\t227\n\t],\n\t\"./prism-less.min.js\": [\n\t\t966,\n\t\t227\n\t],\n\t\"./prism-lilypond\": [\n\t\t967,\n\t\t228\n\t],\n\t\"./prism-lilypond.js\": [\n\t\t967,\n\t\t228\n\t],\n\t\"./prism-lilypond.min\": [\n\t\t968,\n\t\t229\n\t],\n\t\"./prism-lilypond.min.js\": [\n\t\t968,\n\t\t229\n\t],\n\t\"./prism-liquid\": [\n\t\t969,\n\t\t230\n\t],\n\t\"./prism-liquid.js\": [\n\t\t969,\n\t\t230\n\t],\n\t\"./prism-liquid.min\": [\n\t\t970,\n\t\t231\n\t],\n\t\"./prism-liquid.min.js\": [\n\t\t970,\n\t\t231\n\t],\n\t\"./prism-lisp\": [\n\t\t971,\n\t\t232\n\t],\n\t\"./prism-lisp.js\": [\n\t\t971,\n\t\t232\n\t],\n\t\"./prism-lisp.min\": [\n\t\t972,\n\t\t233\n\t],\n\t\"./prism-lisp.min.js\": [\n\t\t972,\n\t\t233\n\t],\n\t\"./prism-livescript\": [\n\t\t973,\n\t\t234\n\t],\n\t\"./prism-livescript.js\": [\n\t\t973,\n\t\t234\n\t],\n\t\"./prism-livescript.min\": [\n\t\t974,\n\t\t235\n\t],\n\t\"./prism-livescript.min.js\": [\n\t\t974,\n\t\t235\n\t],\n\t\"./prism-llvm\": [\n\t\t975,\n\t\t236\n\t],\n\t\"./prism-llvm.js\": [\n\t\t975,\n\t\t236\n\t],\n\t\"./prism-llvm.min\": [\n\t\t976,\n\t\t237\n\t],\n\t\"./prism-llvm.min.js\": [\n\t\t976,\n\t\t237\n\t],\n\t\"./prism-lolcode\": [\n\t\t977,\n\t\t238\n\t],\n\t\"./prism-lolcode.js\": [\n\t\t977,\n\t\t238\n\t],\n\t\"./prism-lolcode.min\": [\n\t\t978,\n\t\t239\n\t],\n\t\"./prism-lolcode.min.js\": [\n\t\t978,\n\t\t239\n\t],\n\t\"./prism-lua\": [\n\t\t979,\n\t\t240\n\t],\n\t\"./prism-lua.js\": [\n\t\t979,\n\t\t240\n\t],\n\t\"./prism-lua.min\": [\n\t\t980,\n\t\t241\n\t],\n\t\"./prism-lua.min.js\": [\n\t\t980,\n\t\t241\n\t],\n\t\"./prism-makefile\": [\n\t\t981,\n\t\t242\n\t],\n\t\"./prism-makefile.js\": [\n\t\t981,\n\t\t242\n\t],\n\t\"./prism-makefile.min\": [\n\t\t982,\n\t\t243\n\t],\n\t\"./prism-makefile.min.js\": [\n\t\t982,\n\t\t243\n\t],\n\t\"./prism-markdown\": [\n\t\t432\n\t],\n\t\"./prism-markdown.js\": [\n\t\t432\n\t],\n\t\"./prism-markdown.min\": [\n\t\t983,\n\t\t244\n\t],\n\t\"./prism-markdown.min.js\": [\n\t\t983,\n\t\t244\n\t],\n\t\"./prism-markup\": [\n\t\t426\n\t],\n\t\"./prism-markup-templating\": [\n\t\t984,\n\t\t245\n\t],\n\t\"./prism-markup-templating.js\": [\n\t\t984,\n\t\t245\n\t],\n\t\"./prism-markup-templating.min\": [\n\t\t985,\n\t\t246\n\t],\n\t\"./prism-markup-templating.min.js\": [\n\t\t985,\n\t\t246\n\t],\n\t\"./prism-markup.js\": [\n\t\t426\n\t],\n\t\"./prism-markup.min\": [\n\t\t986,\n\t\t247\n\t],\n\t\"./prism-markup.min.js\": [\n\t\t986,\n\t\t247\n\t],\n\t\"./prism-matlab\": [\n\t\t987,\n\t\t248\n\t],\n\t\"./prism-matlab.js\": [\n\t\t987,\n\t\t248\n\t],\n\t\"./prism-matlab.min\": [\n\t\t988,\n\t\t249\n\t],\n\t\"./prism-matlab.min.js\": [\n\t\t988,\n\t\t249\n\t],\n\t\"./prism-mel\": [\n\t\t989,\n\t\t250\n\t],\n\t\"./prism-mel.js\": [\n\t\t989,\n\t\t250\n\t],\n\t\"./prism-mel.min\": [\n\t\t990,\n\t\t251\n\t],\n\t\"./prism-mel.min.js\": [\n\t\t990,\n\t\t251\n\t],\n\t\"./prism-mizar\": [\n\t\t991,\n\t\t252\n\t],\n\t\"./prism-mizar.js\": [\n\t\t991,\n\t\t252\n\t],\n\t\"./prism-mizar.min\": [\n\t\t992,\n\t\t253\n\t],\n\t\"./prism-mizar.min.js\": [\n\t\t992,\n\t\t253\n\t],\n\t\"./prism-monkey\": [\n\t\t993,\n\t\t254\n\t],\n\t\"./prism-monkey.js\": [\n\t\t993,\n\t\t254\n\t],\n\t\"./prism-monkey.min\": [\n\t\t994,\n\t\t255\n\t],\n\t\"./prism-monkey.min.js\": [\n\t\t994,\n\t\t255\n\t],\n\t\"./prism-moonscript\": [\n\t\t995,\n\t\t256\n\t],\n\t\"./prism-moonscript.js\": [\n\t\t995,\n\t\t256\n\t],\n\t\"./prism-moonscript.min\": [\n\t\t996,\n\t\t257\n\t],\n\t\"./prism-moonscript.min.js\": [\n\t\t996,\n\t\t257\n\t],\n\t\"./prism-n1ql\": [\n\t\t997,\n\t\t258\n\t],\n\t\"./prism-n1ql.js\": [\n\t\t997,\n\t\t258\n\t],\n\t\"./prism-n1ql.min\": [\n\t\t998,\n\t\t259\n\t],\n\t\"./prism-n1ql.min.js\": [\n\t\t998,\n\t\t259\n\t],\n\t\"./prism-n4js\": [\n\t\t999,\n\t\t260\n\t],\n\t\"./prism-n4js.js\": [\n\t\t999,\n\t\t260\n\t],\n\t\"./prism-n4js.min\": [\n\t\t1000,\n\t\t261\n\t],\n\t\"./prism-n4js.min.js\": [\n\t\t1000,\n\t\t261\n\t],\n\t\"./prism-nand2tetris-hdl\": [\n\t\t1001,\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.js\": [\n\t\t1001,\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.min\": [\n\t\t1002,\n\t\t263\n\t],\n\t\"./prism-nand2tetris-hdl.min.js\": [\n\t\t1002,\n\t\t263\n\t],\n\t\"./prism-nasm\": [\n\t\t1003,\n\t\t264\n\t],\n\t\"./prism-nasm.js\": [\n\t\t1003,\n\t\t264\n\t],\n\t\"./prism-nasm.min\": [\n\t\t1004,\n\t\t265\n\t],\n\t\"./prism-nasm.min.js\": [\n\t\t1004,\n\t\t265\n\t],\n\t\"./prism-neon\": [\n\t\t1005,\n\t\t266\n\t],\n\t\"./prism-neon.js\": [\n\t\t1005,\n\t\t266\n\t],\n\t\"./prism-neon.min\": [\n\t\t1006,\n\t\t267\n\t],\n\t\"./prism-neon.min.js\": [\n\t\t1006,\n\t\t267\n\t],\n\t\"./prism-nginx\": [\n\t\t1007,\n\t\t268\n\t],\n\t\"./prism-nginx.js\": [\n\t\t1007,\n\t\t268\n\t],\n\t\"./prism-nginx.min\": [\n\t\t1008,\n\t\t269\n\t],\n\t\"./prism-nginx.min.js\": [\n\t\t1008,\n\t\t269\n\t],\n\t\"./prism-nim\": [\n\t\t1009,\n\t\t270\n\t],\n\t\"./prism-nim.js\": [\n\t\t1009,\n\t\t270\n\t],\n\t\"./prism-nim.min\": [\n\t\t1010,\n\t\t271\n\t],\n\t\"./prism-nim.min.js\": [\n\t\t1010,\n\t\t271\n\t],\n\t\"./prism-nix\": [\n\t\t1011,\n\t\t272\n\t],\n\t\"./prism-nix.js\": [\n\t\t1011,\n\t\t272\n\t],\n\t\"./prism-nix.min\": [\n\t\t1012,\n\t\t273\n\t],\n\t\"./prism-nix.min.js\": [\n\t\t1012,\n\t\t273\n\t],\n\t\"./prism-nsis\": [\n\t\t1013,\n\t\t274\n\t],\n\t\"./prism-nsis.js\": [\n\t\t1013,\n\t\t274\n\t],\n\t\"./prism-nsis.min\": [\n\t\t1014,\n\t\t275\n\t],\n\t\"./prism-nsis.min.js\": [\n\t\t1014,\n\t\t275\n\t],\n\t\"./prism-objectivec\": [\n\t\t1015,\n\t\t276\n\t],\n\t\"./prism-objectivec.js\": [\n\t\t1015,\n\t\t276\n\t],\n\t\"./prism-objectivec.min\": [\n\t\t1016,\n\t\t277\n\t],\n\t\"./prism-objectivec.min.js\": [\n\t\t1016,\n\t\t277\n\t],\n\t\"./prism-ocaml\": [\n\t\t1017,\n\t\t278\n\t],\n\t\"./prism-ocaml.js\": [\n\t\t1017,\n\t\t278\n\t],\n\t\"./prism-ocaml.min\": [\n\t\t1018,\n\t\t279\n\t],\n\t\"./prism-ocaml.min.js\": [\n\t\t1018,\n\t\t279\n\t],\n\t\"./prism-opencl\": [\n\t\t1019,\n\t\t280\n\t],\n\t\"./prism-opencl.js\": [\n\t\t1019,\n\t\t280\n\t],\n\t\"./prism-opencl.min\": [\n\t\t1020,\n\t\t281\n\t],\n\t\"./prism-opencl.min.js\": [\n\t\t1020,\n\t\t281\n\t],\n\t\"./prism-oz\": [\n\t\t1021,\n\t\t282\n\t],\n\t\"./prism-oz.js\": [\n\t\t1021,\n\t\t282\n\t],\n\t\"./prism-oz.min\": [\n\t\t1022,\n\t\t283\n\t],\n\t\"./prism-oz.min.js\": [\n\t\t1022,\n\t\t283\n\t],\n\t\"./prism-parigp\": [\n\t\t1023,\n\t\t284\n\t],\n\t\"./prism-parigp.js\": [\n\t\t1023,\n\t\t284\n\t],\n\t\"./prism-parigp.min\": [\n\t\t1024,\n\t\t285\n\t],\n\t\"./prism-parigp.min.js\": [\n\t\t1024,\n\t\t285\n\t],\n\t\"./prism-parser\": [\n\t\t1025,\n\t\t286\n\t],\n\t\"./prism-parser.js\": [\n\t\t1025,\n\t\t286\n\t],\n\t\"./prism-parser.min\": [\n\t\t1026,\n\t\t287\n\t],\n\t\"./prism-parser.min.js\": [\n\t\t1026,\n\t\t287\n\t],\n\t\"./prism-pascal\": [\n\t\t1027,\n\t\t288\n\t],\n\t\"./prism-pascal.js\": [\n\t\t1027,\n\t\t288\n\t],\n\t\"./prism-pascal.min\": [\n\t\t1028,\n\t\t289\n\t],\n\t\"./prism-pascal.min.js\": [\n\t\t1028,\n\t\t289\n\t],\n\t\"./prism-pascaligo\": [\n\t\t1029,\n\t\t290\n\t],\n\t\"./prism-pascaligo.js\": [\n\t\t1029,\n\t\t290\n\t],\n\t\"./prism-pascaligo.min\": [\n\t\t1030,\n\t\t291\n\t],\n\t\"./prism-pascaligo.min.js\": [\n\t\t1030,\n\t\t291\n\t],\n\t\"./prism-pcaxis\": [\n\t\t1031,\n\t\t292\n\t],\n\t\"./prism-pcaxis.js\": [\n\t\t1031,\n\t\t292\n\t],\n\t\"./prism-pcaxis.min\": [\n\t\t1032,\n\t\t293\n\t],\n\t\"./prism-pcaxis.min.js\": [\n\t\t1032,\n\t\t293\n\t],\n\t\"./prism-peoplecode\": [\n\t\t1033,\n\t\t294\n\t],\n\t\"./prism-peoplecode.js\": [\n\t\t1033,\n\t\t294\n\t],\n\t\"./prism-peoplecode.min\": [\n\t\t1034,\n\t\t295\n\t],\n\t\"./prism-peoplecode.min.js\": [\n\t\t1034,\n\t\t295\n\t],\n\t\"./prism-perl\": [\n\t\t1035,\n\t\t296\n\t],\n\t\"./prism-perl.js\": [\n\t\t1035,\n\t\t296\n\t],\n\t\"./prism-perl.min\": [\n\t\t1036,\n\t\t297\n\t],\n\t\"./prism-perl.min.js\": [\n\t\t1036,\n\t\t297\n\t],\n\t\"./prism-php\": [\n\t\t1039,\n\t\t300\n\t],\n\t\"./prism-php-extras\": [\n\t\t1037,\n\t\t298\n\t],\n\t\"./prism-php-extras.js\": [\n\t\t1037,\n\t\t298\n\t],\n\t\"./prism-php-extras.min\": [\n\t\t1038,\n\t\t299\n\t],\n\t\"./prism-php-extras.min.js\": [\n\t\t1038,\n\t\t299\n\t],\n\t\"./prism-php.js\": [\n\t\t1039,\n\t\t300\n\t],\n\t\"./prism-php.min\": [\n\t\t1040,\n\t\t301\n\t],\n\t\"./prism-php.min.js\": [\n\t\t1040,\n\t\t301\n\t],\n\t\"./prism-phpdoc\": [\n\t\t1041,\n\t\t302\n\t],\n\t\"./prism-phpdoc.js\": [\n\t\t1041,\n\t\t302\n\t],\n\t\"./prism-phpdoc.min\": [\n\t\t1042,\n\t\t303\n\t],\n\t\"./prism-phpdoc.min.js\": [\n\t\t1042,\n\t\t303\n\t],\n\t\"./prism-plsql\": [\n\t\t1043,\n\t\t304\n\t],\n\t\"./prism-plsql.js\": [\n\t\t1043,\n\t\t304\n\t],\n\t\"./prism-plsql.min\": [\n\t\t1044,\n\t\t305\n\t],\n\t\"./prism-plsql.min.js\": [\n\t\t1044,\n\t\t305\n\t],\n\t\"./prism-powerquery\": [\n\t\t1045,\n\t\t306\n\t],\n\t\"./prism-powerquery.js\": [\n\t\t1045,\n\t\t306\n\t],\n\t\"./prism-powerquery.min\": [\n\t\t1046,\n\t\t307\n\t],\n\t\"./prism-powerquery.min.js\": [\n\t\t1046,\n\t\t307\n\t],\n\t\"./prism-powershell\": [\n\t\t1047,\n\t\t308\n\t],\n\t\"./prism-powershell.js\": [\n\t\t1047,\n\t\t308\n\t],\n\t\"./prism-powershell.min\": [\n\t\t1048,\n\t\t309\n\t],\n\t\"./prism-powershell.min.js\": [\n\t\t1048,\n\t\t309\n\t],\n\t\"./prism-processing\": [\n\t\t1049,\n\t\t310\n\t],\n\t\"./prism-processing.js\": [\n\t\t1049,\n\t\t310\n\t],\n\t\"./prism-processing.min\": [\n\t\t1050,\n\t\t311\n\t],\n\t\"./prism-processing.min.js\": [\n\t\t1050,\n\t\t311\n\t],\n\t\"./prism-prolog\": [\n\t\t1051,\n\t\t312\n\t],\n\t\"./prism-prolog.js\": [\n\t\t1051,\n\t\t312\n\t],\n\t\"./prism-prolog.min\": [\n\t\t1052,\n\t\t313\n\t],\n\t\"./prism-prolog.min.js\": [\n\t\t1052,\n\t\t313\n\t],\n\t\"./prism-properties\": [\n\t\t1053,\n\t\t314\n\t],\n\t\"./prism-properties.js\": [\n\t\t1053,\n\t\t314\n\t],\n\t\"./prism-properties.min\": [\n\t\t1054,\n\t\t315\n\t],\n\t\"./prism-properties.min.js\": [\n\t\t1054,\n\t\t315\n\t],\n\t\"./prism-protobuf\": [\n\t\t1055,\n\t\t316\n\t],\n\t\"./prism-protobuf.js\": [\n\t\t1055,\n\t\t316\n\t],\n\t\"./prism-protobuf.min\": [\n\t\t1056,\n\t\t317\n\t],\n\t\"./prism-protobuf.min.js\": [\n\t\t1056,\n\t\t317\n\t],\n\t\"./prism-pug\": [\n\t\t1057,\n\t\t318\n\t],\n\t\"./prism-pug.js\": [\n\t\t1057,\n\t\t318\n\t],\n\t\"./prism-pug.min\": [\n\t\t1058,\n\t\t319\n\t],\n\t\"./prism-pug.min.js\": [\n\t\t1058,\n\t\t319\n\t],\n\t\"./prism-puppet\": [\n\t\t1059,\n\t\t320\n\t],\n\t\"./prism-puppet.js\": [\n\t\t1059,\n\t\t320\n\t],\n\t\"./prism-puppet.min\": [\n\t\t1060,\n\t\t321\n\t],\n\t\"./prism-puppet.min.js\": [\n\t\t1060,\n\t\t321\n\t],\n\t\"./prism-pure\": [\n\t\t1061,\n\t\t322\n\t],\n\t\"./prism-pure.js\": [\n\t\t1061,\n\t\t322\n\t],\n\t\"./prism-pure.min\": [\n\t\t1062,\n\t\t323\n\t],\n\t\"./prism-pure.min.js\": [\n\t\t1062,\n\t\t323\n\t],\n\t\"./prism-purebasic\": [\n\t\t1063,\n\t\t324\n\t],\n\t\"./prism-purebasic.js\": [\n\t\t1063,\n\t\t324\n\t],\n\t\"./prism-purebasic.min\": [\n\t\t1064,\n\t\t325\n\t],\n\t\"./prism-purebasic.min.js\": [\n\t\t1064,\n\t\t325\n\t],\n\t\"./prism-python\": [\n\t\t1065,\n\t\t326\n\t],\n\t\"./prism-python.js\": [\n\t\t1065,\n\t\t326\n\t],\n\t\"./prism-python.min\": [\n\t\t1066,\n\t\t327\n\t],\n\t\"./prism-python.min.js\": [\n\t\t1066,\n\t\t327\n\t],\n\t\"./prism-q\": [\n\t\t1067,\n\t\t328\n\t],\n\t\"./prism-q.js\": [\n\t\t1067,\n\t\t328\n\t],\n\t\"./prism-q.min\": [\n\t\t1068,\n\t\t329\n\t],\n\t\"./prism-q.min.js\": [\n\t\t1068,\n\t\t329\n\t],\n\t\"./prism-qml\": [\n\t\t1069,\n\t\t330\n\t],\n\t\"./prism-qml.js\": [\n\t\t1069,\n\t\t330\n\t],\n\t\"./prism-qml.min\": [\n\t\t1070,\n\t\t331\n\t],\n\t\"./prism-qml.min.js\": [\n\t\t1070,\n\t\t331\n\t],\n\t\"./prism-qore\": [\n\t\t1071,\n\t\t332\n\t],\n\t\"./prism-qore.js\": [\n\t\t1071,\n\t\t332\n\t],\n\t\"./prism-qore.min\": [\n\t\t1072,\n\t\t333\n\t],\n\t\"./prism-qore.min.js\": [\n\t\t1072,\n\t\t333\n\t],\n\t\"./prism-r\": [\n\t\t1073,\n\t\t334\n\t],\n\t\"./prism-r.js\": [\n\t\t1073,\n\t\t334\n\t],\n\t\"./prism-r.min\": [\n\t\t1074,\n\t\t335\n\t],\n\t\"./prism-r.min.js\": [\n\t\t1074,\n\t\t335\n\t],\n\t\"./prism-racket\": [\n\t\t1075,\n\t\t336\n\t],\n\t\"./prism-racket.js\": [\n\t\t1075,\n\t\t336\n\t],\n\t\"./prism-racket.min\": [\n\t\t1076,\n\t\t337\n\t],\n\t\"./prism-racket.min.js\": [\n\t\t1076,\n\t\t337\n\t],\n\t\"./prism-reason\": [\n\t\t1077,\n\t\t338\n\t],\n\t\"./prism-reason.js\": [\n\t\t1077,\n\t\t338\n\t],\n\t\"./prism-reason.min\": [\n\t\t1078,\n\t\t339\n\t],\n\t\"./prism-reason.min.js\": [\n\t\t1078,\n\t\t339\n\t],\n\t\"./prism-regex\": [\n\t\t1079,\n\t\t340\n\t],\n\t\"./prism-regex.js\": [\n\t\t1079,\n\t\t340\n\t],\n\t\"./prism-regex.min\": [\n\t\t1080,\n\t\t341\n\t],\n\t\"./prism-regex.min.js\": [\n\t\t1080,\n\t\t341\n\t],\n\t\"./prism-renpy\": [\n\t\t1081,\n\t\t342\n\t],\n\t\"./prism-renpy.js\": [\n\t\t1081,\n\t\t342\n\t],\n\t\"./prism-renpy.min\": [\n\t\t1082,\n\t\t343\n\t],\n\t\"./prism-renpy.min.js\": [\n\t\t1082,\n\t\t343\n\t],\n\t\"./prism-rest\": [\n\t\t1083,\n\t\t344\n\t],\n\t\"./prism-rest.js\": [\n\t\t1083,\n\t\t344\n\t],\n\t\"./prism-rest.min\": [\n\t\t1084,\n\t\t345\n\t],\n\t\"./prism-rest.min.js\": [\n\t\t1084,\n\t\t345\n\t],\n\t\"./prism-rip\": [\n\t\t1085,\n\t\t346\n\t],\n\t\"./prism-rip.js\": [\n\t\t1085,\n\t\t346\n\t],\n\t\"./prism-rip.min\": [\n\t\t1086,\n\t\t347\n\t],\n\t\"./prism-rip.min.js\": [\n\t\t1086,\n\t\t347\n\t],\n\t\"./prism-roboconf\": [\n\t\t1087,\n\t\t348\n\t],\n\t\"./prism-roboconf.js\": [\n\t\t1087,\n\t\t348\n\t],\n\t\"./prism-roboconf.min\": [\n\t\t1088,\n\t\t349\n\t],\n\t\"./prism-roboconf.min.js\": [\n\t\t1088,\n\t\t349\n\t],\n\t\"./prism-robotframework\": [\n\t\t1089,\n\t\t350\n\t],\n\t\"./prism-robotframework.js\": [\n\t\t1089,\n\t\t350\n\t],\n\t\"./prism-robotframework.min\": [\n\t\t1090,\n\t\t351\n\t],\n\t\"./prism-robotframework.min.js\": [\n\t\t1090,\n\t\t351\n\t],\n\t\"./prism-ruby\": [\n\t\t1091,\n\t\t352\n\t],\n\t\"./prism-ruby.js\": [\n\t\t1091,\n\t\t352\n\t],\n\t\"./prism-ruby.min\": [\n\t\t1092,\n\t\t353\n\t],\n\t\"./prism-ruby.min.js\": [\n\t\t1092,\n\t\t353\n\t],\n\t\"./prism-rust\": [\n\t\t1093,\n\t\t354\n\t],\n\t\"./prism-rust.js\": [\n\t\t1093,\n\t\t354\n\t],\n\t\"./prism-rust.min\": [\n\t\t1094,\n\t\t355\n\t],\n\t\"./prism-rust.min.js\": [\n\t\t1094,\n\t\t355\n\t],\n\t\"./prism-sas\": [\n\t\t1095,\n\t\t356\n\t],\n\t\"./prism-sas.js\": [\n\t\t1095,\n\t\t356\n\t],\n\t\"./prism-sas.min\": [\n\t\t1096,\n\t\t357\n\t],\n\t\"./prism-sas.min.js\": [\n\t\t1096,\n\t\t357\n\t],\n\t\"./prism-sass\": [\n\t\t1097,\n\t\t358\n\t],\n\t\"./prism-sass.js\": [\n\t\t1097,\n\t\t358\n\t],\n\t\"./prism-sass.min\": [\n\t\t1098,\n\t\t359\n\t],\n\t\"./prism-sass.min.js\": [\n\t\t1098,\n\t\t359\n\t],\n\t\"./prism-scala\": [\n\t\t1099,\n\t\t360\n\t],\n\t\"./prism-scala.js\": [\n\t\t1099,\n\t\t360\n\t],\n\t\"./prism-scala.min\": [\n\t\t1100,\n\t\t361\n\t],\n\t\"./prism-scala.min.js\": [\n\t\t1100,\n\t\t361\n\t],\n\t\"./prism-scheme\": [\n\t\t1101,\n\t\t362\n\t],\n\t\"./prism-scheme.js\": [\n\t\t1101,\n\t\t362\n\t],\n\t\"./prism-scheme.min\": [\n\t\t1102,\n\t\t363\n\t],\n\t\"./prism-scheme.min.js\": [\n\t\t1102,\n\t\t363\n\t],\n\t\"./prism-scss\": [\n\t\t1103,\n\t\t364\n\t],\n\t\"./prism-scss.js\": [\n\t\t1103,\n\t\t364\n\t],\n\t\"./prism-scss.min\": [\n\t\t1104,\n\t\t365\n\t],\n\t\"./prism-scss.min.js\": [\n\t\t1104,\n\t\t365\n\t],\n\t\"./prism-shell-session\": [\n\t\t1105,\n\t\t366\n\t],\n\t\"./prism-shell-session.js\": [\n\t\t1105,\n\t\t366\n\t],\n\t\"./prism-shell-session.min\": [\n\t\t1106,\n\t\t367\n\t],\n\t\"./prism-shell-session.min.js\": [\n\t\t1106,\n\t\t367\n\t],\n\t\"./prism-smali\": [\n\t\t1107,\n\t\t368\n\t],\n\t\"./prism-smali.js\": [\n\t\t1107,\n\t\t368\n\t],\n\t\"./prism-smali.min\": [\n\t\t1108,\n\t\t369\n\t],\n\t\"./prism-smali.min.js\": [\n\t\t1108,\n\t\t369\n\t],\n\t\"./prism-smalltalk\": [\n\t\t1109,\n\t\t370\n\t],\n\t\"./prism-smalltalk.js\": [\n\t\t1109,\n\t\t370\n\t],\n\t\"./prism-smalltalk.min\": [\n\t\t1110,\n\t\t371\n\t],\n\t\"./prism-smalltalk.min.js\": [\n\t\t1110,\n\t\t371\n\t],\n\t\"./prism-smarty\": [\n\t\t1111,\n\t\t372\n\t],\n\t\"./prism-smarty.js\": [\n\t\t1111,\n\t\t372\n\t],\n\t\"./prism-smarty.min\": [\n\t\t1112,\n\t\t373\n\t],\n\t\"./prism-smarty.min.js\": [\n\t\t1112,\n\t\t373\n\t],\n\t\"./prism-solidity\": [\n\t\t1113,\n\t\t374\n\t],\n\t\"./prism-solidity.js\": [\n\t\t1113,\n\t\t374\n\t],\n\t\"./prism-solidity.min\": [\n\t\t1114,\n\t\t375\n\t],\n\t\"./prism-solidity.min.js\": [\n\t\t1114,\n\t\t375\n\t],\n\t\"./prism-solution-file\": [\n\t\t1115,\n\t\t376\n\t],\n\t\"./prism-solution-file.js\": [\n\t\t1115,\n\t\t376\n\t],\n\t\"./prism-solution-file.min\": [\n\t\t1116,\n\t\t377\n\t],\n\t\"./prism-solution-file.min.js\": [\n\t\t1116,\n\t\t377\n\t],\n\t\"./prism-soy\": [\n\t\t1117,\n\t\t378\n\t],\n\t\"./prism-soy.js\": [\n\t\t1117,\n\t\t378\n\t],\n\t\"./prism-soy.min\": [\n\t\t1118,\n\t\t379\n\t],\n\t\"./prism-soy.min.js\": [\n\t\t1118,\n\t\t379\n\t],\n\t\"./prism-sparql\": [\n\t\t1119,\n\t\t380\n\t],\n\t\"./prism-sparql.js\": [\n\t\t1119,\n\t\t380\n\t],\n\t\"./prism-sparql.min\": [\n\t\t1120,\n\t\t381\n\t],\n\t\"./prism-sparql.min.js\": [\n\t\t1120,\n\t\t381\n\t],\n\t\"./prism-splunk-spl\": [\n\t\t1121,\n\t\t382\n\t],\n\t\"./prism-splunk-spl.js\": [\n\t\t1121,\n\t\t382\n\t],\n\t\"./prism-splunk-spl.min\": [\n\t\t1122,\n\t\t383\n\t],\n\t\"./prism-splunk-spl.min.js\": [\n\t\t1122,\n\t\t383\n\t],\n\t\"./prism-sqf\": [\n\t\t1123,\n\t\t384\n\t],\n\t\"./prism-sqf.js\": [\n\t\t1123,\n\t\t384\n\t],\n\t\"./prism-sqf.min\": [\n\t\t1124,\n\t\t385\n\t],\n\t\"./prism-sqf.min.js\": [\n\t\t1124,\n\t\t385\n\t],\n\t\"./prism-sql\": [\n\t\t1125,\n\t\t386\n\t],\n\t\"./prism-sql.js\": [\n\t\t1125,\n\t\t386\n\t],\n\t\"./prism-sql.min\": [\n\t\t1126,\n\t\t387\n\t],\n\t\"./prism-sql.min.js\": [\n\t\t1126,\n\t\t387\n\t],\n\t\"./prism-stylus\": [\n\t\t1127,\n\t\t388\n\t],\n\t\"./prism-stylus.js\": [\n\t\t1127,\n\t\t388\n\t],\n\t\"./prism-stylus.min\": [\n\t\t1128,\n\t\t389\n\t],\n\t\"./prism-stylus.min.js\": [\n\t\t1128,\n\t\t389\n\t],\n\t\"./prism-swift\": [\n\t\t1129,\n\t\t390\n\t],\n\t\"./prism-swift.js\": [\n\t\t1129,\n\t\t390\n\t],\n\t\"./prism-swift.min\": [\n\t\t1130,\n\t\t391\n\t],\n\t\"./prism-swift.min.js\": [\n\t\t1130,\n\t\t391\n\t],\n\t\"./prism-t4-cs\": [\n\t\t1131,\n\t\t392\n\t],\n\t\"./prism-t4-cs.js\": [\n\t\t1131,\n\t\t392\n\t],\n\t\"./prism-t4-cs.min\": [\n\t\t1132,\n\t\t393\n\t],\n\t\"./prism-t4-cs.min.js\": [\n\t\t1132,\n\t\t393\n\t],\n\t\"./prism-t4-templating\": [\n\t\t1133,\n\t\t394\n\t],\n\t\"./prism-t4-templating.js\": [\n\t\t1133,\n\t\t394\n\t],\n\t\"./prism-t4-templating.min\": [\n\t\t1134,\n\t\t395\n\t],\n\t\"./prism-t4-templating.min.js\": [\n\t\t1134,\n\t\t395\n\t],\n\t\"./prism-t4-vb\": [\n\t\t1135,\n\t\t396\n\t],\n\t\"./prism-t4-vb.js\": [\n\t\t1135,\n\t\t396\n\t],\n\t\"./prism-t4-vb.min\": [\n\t\t1136,\n\t\t397\n\t],\n\t\"./prism-t4-vb.min.js\": [\n\t\t1136,\n\t\t397\n\t],\n\t\"./prism-tap\": [\n\t\t1137,\n\t\t398\n\t],\n\t\"./prism-tap.js\": [\n\t\t1137,\n\t\t398\n\t],\n\t\"./prism-tap.min\": [\n\t\t1138,\n\t\t399\n\t],\n\t\"./prism-tap.min.js\": [\n\t\t1138,\n\t\t399\n\t],\n\t\"./prism-tcl\": [\n\t\t1139,\n\t\t400\n\t],\n\t\"./prism-tcl.js\": [\n\t\t1139,\n\t\t400\n\t],\n\t\"./prism-tcl.min\": [\n\t\t1140,\n\t\t401\n\t],\n\t\"./prism-tcl.min.js\": [\n\t\t1140,\n\t\t401\n\t],\n\t\"./prism-textile\": [\n\t\t1141,\n\t\t402\n\t],\n\t\"./prism-textile.js\": [\n\t\t1141,\n\t\t402\n\t],\n\t\"./prism-textile.min\": [\n\t\t1142,\n\t\t403\n\t],\n\t\"./prism-textile.min.js\": [\n\t\t1142,\n\t\t403\n\t],\n\t\"./prism-toml\": [\n\t\t1143,\n\t\t404\n\t],\n\t\"./prism-toml.js\": [\n\t\t1143,\n\t\t404\n\t],\n\t\"./prism-toml.min\": [\n\t\t1144,\n\t\t405\n\t],\n\t\"./prism-toml.min.js\": [\n\t\t1144,\n\t\t405\n\t],\n\t\"./prism-tsx\": [\n\t\t1145,\n\t\t406\n\t],\n\t\"./prism-tsx.js\": [\n\t\t1145,\n\t\t406\n\t],\n\t\"./prism-tsx.min\": [\n\t\t1146,\n\t\t407\n\t],\n\t\"./prism-tsx.min.js\": [\n\t\t1146,\n\t\t407\n\t],\n\t\"./prism-tt2\": [\n\t\t1147,\n\t\t408\n\t],\n\t\"./prism-tt2.js\": [\n\t\t1147,\n\t\t408\n\t],\n\t\"./prism-tt2.min\": [\n\t\t1148,\n\t\t409\n\t],\n\t\"./prism-tt2.min.js\": [\n\t\t1148,\n\t\t409\n\t],\n\t\"./prism-turtle\": [\n\t\t1149,\n\t\t410\n\t],\n\t\"./prism-turtle.js\": [\n\t\t1149,\n\t\t410\n\t],\n\t\"./prism-turtle.min\": [\n\t\t1150,\n\t\t411\n\t],\n\t\"./prism-turtle.min.js\": [\n\t\t1150,\n\t\t411\n\t],\n\t\"./prism-twig\": [\n\t\t1151,\n\t\t412\n\t],\n\t\"./prism-twig.js\": [\n\t\t1151,\n\t\t412\n\t],\n\t\"./prism-twig.min\": [\n\t\t1152,\n\t\t413\n\t],\n\t\"./prism-twig.min.js\": [\n\t\t1152,\n\t\t413\n\t],\n\t\"./prism-typescript\": [\n\t\t1153,\n\t\t414\n\t],\n\t\"./prism-typescript.js\": [\n\t\t1153,\n\t\t414\n\t],\n\t\"./prism-typescript.min\": [\n\t\t1154,\n\t\t415\n\t],\n\t\"./prism-typescript.min.js\": [\n\t\t1154,\n\t\t415\n\t],\n\t\"./prism-unrealscript\": [\n\t\t1155,\n\t\t416\n\t],\n\t\"./prism-unrealscript.js\": [\n\t\t1155,\n\t\t416\n\t],\n\t\"./prism-unrealscript.min\": [\n\t\t1156,\n\t\t417\n\t],\n\t\"./prism-unrealscript.min.js\": [\n\t\t1156,\n\t\t417\n\t],\n\t\"./prism-vala\": [\n\t\t1157,\n\t\t418\n\t],\n\t\"./prism-vala.js\": [\n\t\t1157,\n\t\t418\n\t],\n\t\"./prism-vala.min\": [\n\t\t1158,\n\t\t419\n\t],\n\t\"./prism-vala.min.js\": [\n\t\t1158,\n\t\t419\n\t],\n\t\"./prism-vbnet\": [\n\t\t1159,\n\t\t420\n\t],\n\t\"./prism-vbnet.js\": [\n\t\t1159,\n\t\t420\n\t],\n\t\"./prism-vbnet.min\": [\n\t\t1160,\n\t\t421\n\t],\n\t\"./prism-vbnet.min.js\": [\n\t\t1160,\n\t\t421\n\t],\n\t\"./prism-velocity\": [\n\t\t1161,\n\t\t422\n\t],\n\t\"./prism-velocity.js\": [\n\t\t1161,\n\t\t422\n\t],\n\t\"./prism-velocity.min\": [\n\t\t1162,\n\t\t423\n\t],\n\t\"./prism-velocity.min.js\": [\n\t\t1162,\n\t\t423\n\t],\n\t\"./prism-verilog\": [\n\t\t1163,\n\t\t424\n\t],\n\t\"./prism-verilog.js\": [\n\t\t1163,\n\t\t424\n\t],\n\t\"./prism-verilog.min\": [\n\t\t1164,\n\t\t425\n\t],\n\t\"./prism-verilog.min.js\": [\n\t\t1164,\n\t\t425\n\t],\n\t\"./prism-vhdl\": [\n\t\t1165,\n\t\t426\n\t],\n\t\"./prism-vhdl.js\": [\n\t\t1165,\n\t\t426\n\t],\n\t\"./prism-vhdl.min\": [\n\t\t1166,\n\t\t427\n\t],\n\t\"./prism-vhdl.min.js\": [\n\t\t1166,\n\t\t427\n\t],\n\t\"./prism-vim\": [\n\t\t1167,\n\t\t428\n\t],\n\t\"./prism-vim.js\": [\n\t\t1167,\n\t\t428\n\t],\n\t\"./prism-vim.min\": [\n\t\t1168,\n\t\t429\n\t],\n\t\"./prism-vim.min.js\": [\n\t\t1168,\n\t\t429\n\t],\n\t\"./prism-visual-basic\": [\n\t\t1169,\n\t\t430\n\t],\n\t\"./prism-visual-basic.js\": [\n\t\t1169,\n\t\t430\n\t],\n\t\"./prism-visual-basic.min\": [\n\t\t1170,\n\t\t431\n\t],\n\t\"./prism-visual-basic.min.js\": [\n\t\t1170,\n\t\t431\n\t],\n\t\"./prism-warpscript\": [\n\t\t1171,\n\t\t432\n\t],\n\t\"./prism-warpscript.js\": [\n\t\t1171,\n\t\t432\n\t],\n\t\"./prism-warpscript.min\": [\n\t\t1172,\n\t\t433\n\t],\n\t\"./prism-warpscript.min.js\": [\n\t\t1172,\n\t\t433\n\t],\n\t\"./prism-wasm\": [\n\t\t1173,\n\t\t434\n\t],\n\t\"./prism-wasm.js\": [\n\t\t1173,\n\t\t434\n\t],\n\t\"./prism-wasm.min\": [\n\t\t1174,\n\t\t435\n\t],\n\t\"./prism-wasm.min.js\": [\n\t\t1174,\n\t\t435\n\t],\n\t\"./prism-wiki\": [\n\t\t1175,\n\t\t436\n\t],\n\t\"./prism-wiki.js\": [\n\t\t1175,\n\t\t436\n\t],\n\t\"./prism-wiki.min\": [\n\t\t1176,\n\t\t437\n\t],\n\t\"./prism-wiki.min.js\": [\n\t\t1176,\n\t\t437\n\t],\n\t\"./prism-xeora\": [\n\t\t1177,\n\t\t438\n\t],\n\t\"./prism-xeora.js\": [\n\t\t1177,\n\t\t438\n\t],\n\t\"./prism-xeora.min\": [\n\t\t1178,\n\t\t439\n\t],\n\t\"./prism-xeora.min.js\": [\n\t\t1178,\n\t\t439\n\t],\n\t\"./prism-xml-doc\": [\n\t\t1179,\n\t\t440\n\t],\n\t\"./prism-xml-doc.js\": [\n\t\t1179,\n\t\t440\n\t],\n\t\"./prism-xml-doc.min\": [\n\t\t1180,\n\t\t441\n\t],\n\t\"./prism-xml-doc.min.js\": [\n\t\t1180,\n\t\t441\n\t],\n\t\"./prism-xojo\": [\n\t\t1181,\n\t\t442\n\t],\n\t\"./prism-xojo.js\": [\n\t\t1181,\n\t\t442\n\t],\n\t\"./prism-xojo.min\": [\n\t\t1182,\n\t\t443\n\t],\n\t\"./prism-xojo.min.js\": [\n\t\t1182,\n\t\t443\n\t],\n\t\"./prism-xquery\": [\n\t\t1183,\n\t\t444\n\t],\n\t\"./prism-xquery.js\": [\n\t\t1183,\n\t\t444\n\t],\n\t\"./prism-xquery.min\": [\n\t\t1184,\n\t\t445\n\t],\n\t\"./prism-xquery.min.js\": [\n\t\t1184,\n\t\t445\n\t],\n\t\"./prism-yaml\": [\n\t\t1185,\n\t\t446\n\t],\n\t\"./prism-yaml.js\": [\n\t\t1185,\n\t\t446\n\t],\n\t\"./prism-yaml.min\": [\n\t\t1186,\n\t\t447\n\t],\n\t\"./prism-yaml.min.js\": [\n\t\t1186,\n\t\t447\n\t],\n\t\"./prism-yang\": [\n\t\t1187,\n\t\t448\n\t],\n\t\"./prism-yang.js\": [\n\t\t1187,\n\t\t448\n\t],\n\t\"./prism-yang.min\": [\n\t\t1188,\n\t\t449\n\t],\n\t\"./prism-yang.min.js\": [\n\t\t1188,\n\t\t449\n\t],\n\t\"./prism-zig\": [\n\t\t1189,\n\t\t450\n\t],\n\t\"./prism-zig.js\": [\n\t\t1189,\n\t\t450\n\t],\n\t\"./prism-zig.min\": [\n\t\t1190,\n\t\t451\n\t],\n\t\"./prism-zig.min.js\": [\n\t\t1190,\n\t\t451\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 2321;\nmodule.exports = webpackAsyncContext;","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\n\nexport const ETH_NETWORKS = process.env.REACT_APP_ETH_NETWORKS.split(',');\n\nexport const NETWORK_NAMES = {\n  '1': 'mainnet',\n  '3': 'ropsten',\n  '4': 'rinkeby',\n  '42': 'kovan',\n  '100': 'xdai',\n  '42161': 'arbitrum',\n  '421611': 'arbitrumTestnet',\n  '1337': 'localhost',\n};\n\nexport const NETWORK_IDS = {\n  'mainnet': 1,\n  'ropsten': 3,\n  'rinkeby': 4,\n  'kovan': 42,\n  'xdai': 100,\n  'arbitrum': 42161,\n  'arbitrumTestnet': 421611,\n  'localhost': 1337,\n};\n\nexport const ETH_NETWORKS_IDS = ETH_NETWORKS.map((network) => {return NETWORK_IDS[network]});\nexport const DEFAULT_ETH_CHAIN_ID = NETWORK_IDS[ETH_NETWORKS[0]];\n\nexport const web3ContextNames = {\n  injected: 'INJECTED',\n  metamask: 'METAMASK',\n};\n\nexport const isChainIdSupported = (chainId: number): boolean => {\n  return ETH_NETWORKS_IDS ? ETH_NETWORKS_IDS.indexOf(chainId) >= 0 : false;\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: ETH_NETWORKS_IDS,\n});\n\nexport const SUPPORTED_WALLETS = {\n    INJECTED: {\n        connector: injected,\n        name: 'Injected',\n        iconName: 'arrow-right.svg',\n        description: 'Injected web3 provider.',\n        href: null,\n        color: '#010101',\n        primary: true,\n    },\n    METAMASK: {\n        connector: injected,\n        name: 'MetaMask',\n        iconName: require('assets/images/metamask.png'),\n        description: 'Easy-to-use browser extension.',\n        href: null,\n        color: '#E8831D',\n    }\n};\n\nexport default {\n  injected\n};\n","export enum Web3Errors {\n  UNKNOWN_ERROR,\n  SIGNATURE_REJECTED,\n}\nexport enum TXEvents {\n  TX_HASH = 'txhash',\n  RECEIPT = 'receipt',\n  CONFIRMATION = 'confirmation',\n  TX_ERROR = 'txerror',\n  FINALLY = 'finally',\n  INVARIANT = 'invariant',\n}\n\nexport enum VoteDecision {\n  None,\n  YES,\n  NO\n}\n\nexport enum WalletSchemeProposalState { None, Submitted, Rejected, ExecutionSucceded, ExecutionTimeout }\n\nexport enum VotingMachineProposalState { \n  None, ExpiredInQueue, Executed, Queued, PreBoosted, Boosted, QuietEndingPeriod\n}\n","import * as ethers from 'ethers';\n\nclass UncheckedJsonRpcSigner extends ethers.Signer {\n    signer: any;\n\n    constructor(signer) {\n        super();\n        ethers.utils.defineReadOnly(this, 'signer', signer);\n        ethers.utils.defineReadOnly(this, 'provider', signer.provider);\n    }\n\n    getAddress() {\n        return this.signer.getAddress();\n    }\n\n    sendTransaction(transaction) {\n        return this.signer\n            .sendUncheckedTransaction(transaction)\n            .then((hash) => {\n                return {\n                    hash: hash,\n                    nonce: null,\n                    gasLimit: null,\n                    gasPrice: null,\n                    data: null,\n                    value: null,\n                    chainId: null,\n                    confirmations: 0,\n                    from: null,\n                    wait: (confirmations) => {\n                        return this.signer.provider.waitForTransaction(\n                            hash,\n                            confirmations\n                        );\n                    },\n                };\n            });\n    }\n\n    signMessage(message) {\n        return this.signer.signMessage(message);\n    }\n}\n\nexport default UncheckedJsonRpcSigner;\n","import { Web3Errors } from '../../enums';\n\nconst errorCodeMapping = {\n    '4001': Web3Errors.SIGNATURE_REJECTED,\n};\n\nexport const isKnownErrorCode = (code: number): boolean => {\n    const codeStr = code.toString();\n    return !!errorCodeMapping[codeStr];\n};\n\nexport const getErrorByCode = (code: number): Web3Errors => {\n    const codeStr = code.toString();\n    if (isKnownErrorCode(code)) {\n        return errorCodeMapping[codeStr];\n    } else {\n        return Web3Errors.UNKNOWN_ERROR;\n    }\n};\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { ethers } from 'ethers';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport UncheckedJsonRpcSigner from 'provider/UncheckedJsonRpcSigner';\nimport { sendAction } from './actions/actions';\nimport { web3ContextNames } from '../provider/connectors';\nimport PromiEvent from 'promievent';\nimport { TXEvents } from '../enums';\nimport moment from 'moment';\nimport { schema } from '../services/ABIService';\n\nexport enum ContractType {\n    ERC20 = 'ERC20',\n    Avatar = 'Avatar',\n    Controller = 'Controller',\n    Reputation = 'Reputation',\n    PermissionRegistry = 'PermissionRegistry',\n    VotingMachine = 'VotingMachine',\n    DXDVotingMachine = 'DXDVotingMachine',\n    WalletScheme = 'WalletScheme',\n    Multicall = 'Multicall'\n}\n\nexport interface ChainData {\n    currentBlockNumber: number;\n}\n\nenum ERRORS {\n    UntrackedChainId = 'Attempting to access data for untracked chainId',\n    ContextNotFound = 'Specified context name note stored',\n    BlockchainActionNoAccount = 'Attempting to do blockchain transaction with no account',\n    BlockchainActionNoChainId = 'Attempting to do blockchain transaction with no chainId',\n    BlockchainActionNoResponse = 'No error or response received from blockchain action',\n}\n\nexport default class ProviderStore {\n    provider: any;\n    accounts: string[];\n    defaultAccount: string | null;\n    web3Contexts: object;\n    supportedNetworks: number[];\n    chainData: ChainData;\n    activeChainId: number;\n    activeFetchLoop: any;\n    activeAccount: string;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n      this.rootStore = rootStore;\n      this.web3Contexts = {};\n      this.chainData = { currentBlockNumber: -1 };\n      makeObservable(this, {\n          provider: observable,\n          accounts: observable,\n          defaultAccount: observable,\n          web3Contexts: observable,\n          chainData: observable, \n          activeChainId: observable, \n          activeFetchLoop: observable, \n          activeAccount: observable,\n          setCurrentBlockNumber: action,\n          setActiveAccount: action,\n          fetchUserBlockchainData: action\n        }\n      );\n    }\n\n    isFresh(blocknumber: number): boolean {\n        return blocknumber === this.getCurrentBlockNumber();\n    }\n\n    isFresher(newBlockNumber: number, oldBlockNumber: number): boolean {\n        return newBlockNumber > oldBlockNumber;\n    }\n\n    isBlockStale(blocknumber: number) {\n        return blocknumber < this.chainData.currentBlockNumber;\n    }\n\n    getCurrentBlockNumber(): number {\n        return this.chainData.currentBlockNumber;\n    }\n\n    setCurrentBlockNumber(blocknumber): void {\n        this.chainData.currentBlockNumber = blocknumber;\n    }\n\n    setActiveAccount(account: string) {\n        this.activeAccount = account;\n    }\n\n    fetchUserBlockchainData = async (\n        web3React: Web3ReactContextInterface,\n        account: string\n    ) => {\n        const { transactionStore } = this.rootStore;\n\n        console.debug('[Fetch Start - User Blockchain Data]', {\n            account,\n        });\n\n        transactionStore.checkPendingTransactions(web3React, account);\n    };\n\n    // account is optional\n    getProviderOrSigner(library, account) {\n        console.debug('[getProviderOrSigner', {\n            library,\n            account,\n            signer: library.getSigner(account),\n        });\n\n        return account\n            ? new UncheckedJsonRpcSigner(library.getSigner(account))\n            : library;\n    }\n\n    getContract(\n        web3React: Web3ReactContextInterface,\n        type: ContractType,\n        address: string,\n        signerAccount?: string\n    ): ethers.Contract {\n        const { library } = web3React;\n\n        if (signerAccount) {\n            return new library.eth.Contract(schema[type], address, {\n                from: signerAccount,\n            });\n        }\n\n        return new library.eth.Contract(schema[type], address);\n    }\n\n    // get blockTime from blocknumber\n    async getBlockTime(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        const date = new Date(blockData.timestamp * 1000);\n        return moment(date).format('DD.MM - HH:mm');\n    }\n\n\n    // get blockHash from blocknumber\n    async getBlockHash(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        return blockData.hash;\n    }\n\n    getActiveWeb3React(): Web3ReactContextInterface {\n        const contextInjected = this.web3Contexts[web3ContextNames.injected];\n        return contextInjected;\n    }\n\n    getWeb3React(name): Web3ReactContextInterface {\n        if (!this.web3Contexts[name]) {\n            throw new Error(ERRORS.ContextNotFound);\n        }\n        return this.web3Contexts[name];\n    }\n\n    @action setWeb3Context(name, context: Web3ReactContextInterface) {\n        console.debug('[setWeb3Context]', name, context);\n        this.web3Contexts[name] = context;\n    }\n\n    @action sendTransaction = (\n        web3React: Web3ReactContextInterface,\n        contractType: ContractType,\n        contractAddress: string,\n        action: string,\n        params: any[],\n        overrides?: any\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.rootStore;\n        const { chainId, account } = web3React;\n\n        overrides = overrides ? overrides : {};\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n\n        const contract = this.getContract(\n            web3React,\n            contractType,\n            contractAddress,\n            account\n        );\n\n        const response = sendAction({\n            contract,\n            action,\n            sender: account,\n            data: params,\n            overrides,\n        }).on(TXEvents.TX_HASH, (hash) => {\n            transactionStore.addTransactionRecord(account, hash);\n        });\n\n        return response;\n    };\n    \n    @action sendRawTransaction = (\n        web3React: Web3ReactContextInterface,\n        to: string,\n        data: string,\n        value: string\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.rootStore;\n        const { chainId, account } = web3React;\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n        console.log(value)\n        const promiEvent = new PromiEvent<any>(() => {\n            web3React.library.eth.sendTransaction({ from: account, to: to, data: data, value: value })\n                .once('transactionHash', (hash) => {\n                    transactionStore.addTransactionRecord(account, hash);\n                    promiEvent.emit(TXEvents.TX_HASH, hash);\n                    console.debug(TXEvents.TX_HASH, hash);\n                })\n                .once('receipt', (receipt) => {\n                    promiEvent.emit(TXEvents.RECEIPT, receipt);\n                    console.debug(TXEvents.RECEIPT, receipt);\n                })\n                .once('confirmation', (confNumber, receipt) => {\n                    promiEvent.emit(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                    console.debug(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                })\n                .on('error', (error) => {\n                    console.debug(error.code);\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                })\n                .then((receipt) => {\n                    promiEvent.emit(TXEvents.FINALLY, receipt);\n                    console.debug(TXEvents.FINALLY, receipt);\n                })\n                .catch((e) => {\n                    console.debug('rejected', e);\n                });\n        });\n\n        return promiEvent;\n    };\n}\n","import { Contract } from 'ethers';\nimport { TXEvents } from '../../enums';\nimport { getErrorByCode, isKnownErrorCode } from './error';\nimport PromiEvent from 'promievent';\n\ninterface ActionRequest {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: any[];\n    overrides: any;\n}\n\nexport interface ActionResponse {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: object;\n    txResponse: any | undefined;\n    error: any | undefined;\n}\n\nconst preLog = (params: ActionRequest) => {\n    console.debug(`[@action start: ${params.action}]`, {\n        contract: params.contract,\n        action: params.action,\n        sender: params.sender,\n        data: params.data,\n        overrides: params.overrides,\n    });\n};\n\nexport const sendAction = (params: ActionRequest): PromiEvent<any> => {\n    const { contract, action, sender, data, overrides } = params;\n    preLog(params);\n\n    const promiEvent = new PromiEvent<any>(() => {\n        contract.methods[action](...data)\n            .send({ from: sender, ...overrides })\n            .once('transactionHash', (hash) => {\n                promiEvent.emit(TXEvents.TX_HASH, hash);\n                console.debug(TXEvents.TX_HASH, hash);\n            })\n            .once('receipt', (receipt) => {\n                promiEvent.emit(TXEvents.RECEIPT, receipt);\n                console.debug(TXEvents.RECEIPT, receipt);\n            })\n            .once('confirmation', (confNumber, receipt) => {\n                promiEvent.emit(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n                console.debug(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n            })\n            .on('error', (error) => {\n                console.debug(error.code);\n                if (error.code && isKnownErrorCode(error.code)) {\n                    promiEvent.emit(\n                        TXEvents.TX_ERROR,\n                        getErrorByCode(error.code)\n                    );\n                    console.debug(TXEvents.TX_ERROR, getErrorByCode(error.code));\n                } else {\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                }\n            })\n            .then((receipt) => {\n                promiEvent.emit(TXEvents.FINALLY, receipt);\n                console.debug(TXEvents.FINALLY, receipt);\n            })\n            .catch((e) => {\n                console.debug('rejected', e);\n            });\n    });\n\n    return promiEvent;\n};\n","import { Interface } from 'ethers/utils';\nimport RootStore from '../stores';\n\nexport const schema = {\n  Avatar: require('../contracts/DxAvatar').abi,\n  Controller: require('../contracts/DxController').abi,\n  VotingMachine: require('../contracts/GenesisProtocol').abi,\n  DXDVotingMachine: require('../contracts/DXDVotingMachine').abi,\n  Reputation: require('../contracts/DxReputation').abi,\n  WalletScheme: require('../contracts/WalletScheme').abi,\n  ERC20: require('../contracts/ERC20').abi,\n  PermissionRegistry: require('../contracts/PermissionRegistry').abi,\n  Multicall: require('../contracts/Multicall').abi,\n};\n\nexport default class ABIService {\n  root: RootStore;\n\n  constructor(root: RootStore) {\n    this.root = root;\n  }\n  \n  getAbi(contractType: string) {\n    return schema[contractType];\n  }\n  \n  decodeCall(contractType: string, data: string) {\n    const { providerStore } = this.root;\n\n    const { library } = providerStore.getActiveWeb3React();\n\n    const contractInterface = new Interface(this.getAbi(contractType));\n    const functionSignature = data.substring(0,10);\n    for (const functionName in contractInterface.functions) {\n      if (contractInterface.functions[functionName].sighash === functionSignature){\n        return {\n          function: contractInterface.functions[functionName],\n          args: library.eth.abi.decodeParameters(\n            contractInterface.functions[functionName].inputs.map((input) => {return input.type}), data.substring(10)\n          )\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { TransactionReceipt } from 'web3-core';\n\nexport interface TransactionRecord {\n    hash: string;\n    blockNumberChecked: number;\n    receipt: TransactionReceipt | undefined;\n}\n\nconst ERRORS = {\n    unknownTxHash: 'Transaction hash is not stored',\n    unknownNetworkId: 'NetworkID specified is not tracked',\n    txHashAlreadyExists: 'Transaction hash already exists for network',\n    txHasNoHash: 'Attempting to add transaction record without hash',\n};\n\nexport enum FetchCode {\n    SUCCESS,\n    FAILURE,\n    STALE,\n}\n\nexport interface TransactionRecordMap {\n    [index: string]: TransactionRecord[];\n}\n\nexport default class TransactionStore {\n    txRecords: TransactionRecordMap;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.txRecords = {};\n        makeObservable(this, {\n            txRecords: observable,\n            checkPendingTransactions: action,\n            addTransactionRecord: action,\n          }\n        );\n    }\n\n    // @dev Transactions are pending if we haven't seen their receipt yet\n    getPendingTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    getConfirmedTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return !this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    async checkPendingTransactions(\n        web3React: Web3ReactContextInterface,\n        account\n    ): Promise<FetchCode> {\n        const { providerStore } = this.rootStore;\n        const currentBlock = providerStore.getCurrentBlockNumber();\n\n        const { library } = web3React;\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            records.forEach((value) => {\n                if (\n                    this.isTxPending(value) &&\n                    this.isStale(value, currentBlock)\n                ) {\n                    library.eth\n                        .getTransactionReceipt(value.hash)\n                        .then((receipt) => {\n                            value.blockNumberChecked = currentBlock;\n                            if (receipt) {\n                                value.receipt = receipt;\n                            }\n                        })\n                        .catch(() => {\n                            value.blockNumberChecked = currentBlock;\n                        });\n                }\n            });\n        }\n\n        return FetchCode.SUCCESS;\n    }\n\n    // @dev Add transaction record. It's in a pending state until mined.\n    addTransactionRecord(account: string, txHash: string) {\n        const record: TransactionRecord = {\n            hash: txHash,\n            blockNumberChecked: 0,\n            receipt: undefined,\n        };\n\n        if (!txHash) {\n            throw new Error(\n                'Attempting to add transaction record without hash'\n            );\n        }\n\n        let records = this.txRecords[account];\n\n        if (records) {\n            const duplicate = records.find((value) => value.hash === txHash);\n            if (!!duplicate) {\n                throw new Error(ERRORS.txHashAlreadyExists);\n            }\n            this.txRecords[account].push(record);\n        } else {\n            this.txRecords[account] = [];\n            this.txRecords[account].push(record);\n        }\n    }\n\n    isTxPending(txRecord: TransactionRecord): boolean {\n        return !txRecord.receipt;\n    }\n\n    isStale(txRecord: TransactionRecord, currentBlock: number) {\n        return txRecord.blockNumberChecked < currentBlock;\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\n\nexport default class ModalStore {\n    walletModalVisible: boolean;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n        this.rootStore = rootStore;\n        this.walletModalVisible = false;\n        makeObservable(this, {\n            walletModalVisible: observable,\n            toggleWalletModal: action,\n            setWalletModalVisible: action\n          }\n        );\n    }\n\n    @action toggleWalletModal() {\n        this.walletModalVisible = !this.walletModalVisible;\n    }\n\n    @action setWalletModalVisible(visible: boolean) {\n        this.walletModalVisible = visible;\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { getTokens, getNetworkConfig } from '../config';\nimport { _ } from 'lodash';\nimport { NETWORK_NAMES } from '../provider/connectors';\n\nexport default class ConfigStore {\n    darkMode: boolean;\n    rootStore: RootStore;\n\n    constructor(rootStore) {\n      this.rootStore = rootStore;\n      this.darkMode = false;\n      makeObservable(this, {\n          darkMode: observable,\n          toggleDarkMode: action\n        }\n      );\n    }\n    \n    getActiveChainName() {\n      const activeWeb3 = this.rootStore.providerStore.getActiveWeb3React();\n      return activeWeb3 ? NETWORK_NAMES[activeWeb3.chainId] : 'none';\n    }\n    \n    getLocalConfig() {\n      if (localStorage.getItem('dxvote-config'))\n        return JSON.parse(localStorage.getItem('dxvote-config'));\n      else return {\n        etherscan: '',\n        pinata: '',\n        pinOnStart: false\n      };\n    }\n    \n    setLocalConfig(config) {\n      localStorage.setItem('dxvote-config', JSON.stringify(config));\n    }\n    \n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n    }\n\n    @action setDarkMode(visible: boolean) {\n      this.darkMode = visible;\n    }\n    \n    getNetworkConfig() {\n      return getNetworkConfig(this.getActiveChainName());\n    }\n}\n","import RootStore from 'stores';\nimport { BigNumber } from '../utils/bignumber';\nimport { ContractType } from './Provider';\nimport { action, makeObservable, observable } from 'mobx';\nimport web3 from 'web3';\nimport _ from 'lodash';\nimport contentHash from 'content-hash';\nimport { bnum } from '../utils/helpers';\nimport { decodeProposalStatus } from '../utils/proposals';\nimport { ethers, utils } from 'ethers';\nimport PromiEvent from 'promievent';\nimport {\n  VoteDecision,\n  WalletSchemeProposalState,\n  VotingMachineProposalState\n} from '../enums';\n\nconst CACHE = require('../cache/data.json');\n\nexport default class DaoStore {\n  daoCache: DaoCache;\n  rootStore: RootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.daoCache = CACHE;\n    makeObservable(this, {\n      updateNetworkCache: action,\n      createProposal: action,\n      vote: action,\n      approveVotingMachineToken: action,\n      stake: action,\n      execute: action,\n      redeem: action\n    });\n  }\n  \n  // Parse bignnumbers\n  parseCache(unparsedCache: DaoNetworkCache): DaoNetworkCache {\n    unparsedCache.daoInfo.totalRep = bnum(unparsedCache.daoInfo.totalRep);\n    unparsedCache.daoInfo.ethBalance = bnum(unparsedCache.daoInfo.ethBalance);\n    unparsedCache.daoInfo.repEvents.map((repEvent, i) => {\n      unparsedCache.daoInfo.repEvents[i].amount = bnum(repEvent.amount)\n    })\n    Object.keys(unparsedCache.schemes).map((schemeAddress) => {\n      unparsedCache.schemes[schemeAddress].ethBalance = bnum(unparsedCache.schemes[schemeAddress].ethBalance)\n    })\n    Object.keys(unparsedCache.callPermissions).map((callPermissionFrom) => {\n      unparsedCache.callPermissions[callPermissionFrom].map((callPermission, i) => {\n        unparsedCache.callPermissions[callPermissionFrom][i].fromTime = bnum(callPermission.fromTime)\n        unparsedCache.callPermissions[callPermissionFrom][i].value = bnum(callPermission.value)\n      })\n    })\n    Object.keys(unparsedCache.proposals).map((proposalId) => {\n      unparsedCache.proposals[proposalId].values = unparsedCache.proposals[proposalId].values.map((value) => {\n        return bnum(value);\n      })\n\n      unparsedCache.proposals[proposalId].stateInScheme = unparsedCache.proposals[proposalId].stateInScheme;\n      unparsedCache.proposals[proposalId].stateInVotingMachine = unparsedCache.proposals[proposalId].stateInVotingMachine;\n      unparsedCache.proposals[proposalId].repAtCreation = bnum(unparsedCache.proposals[proposalId].repAtCreation);\n      unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit = bnum(unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit);\n      unparsedCache.proposals[proposalId].daoBountyRemain = bnum(unparsedCache.proposals[proposalId].daoBountyRemain);\n      unparsedCache.proposals[proposalId].daoBounty = bnum(unparsedCache.proposals[proposalId].daoBounty);\n      unparsedCache.proposals[proposalId].totalStakes = bnum(unparsedCache.proposals[proposalId].totalStakes);\n      unparsedCache.proposals[proposalId].confidenceThreshold = bnum(unparsedCache.proposals[proposalId].confidenceThreshold);\n      unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = bnum(unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted);\n      unparsedCache.proposals[proposalId].submittedTime = bnum(unparsedCache.proposals[proposalId].submittedTime);\n      unparsedCache.proposals[proposalId].preBoostedPhaseTime = bnum(unparsedCache.proposals[proposalId].preBoostedPhaseTime);\n      unparsedCache.proposals[proposalId].boostedPhaseTime = bnum(unparsedCache.proposals[proposalId].boostedPhaseTime);\n      unparsedCache.proposals[proposalId].positiveVotes = bnum(unparsedCache.proposals[proposalId].positiveVotes);\n      unparsedCache.proposals[proposalId].negativeVotes = bnum(unparsedCache.proposals[proposalId].negativeVotes);\n      unparsedCache.proposals[proposalId].preBoostedPositiveVotes = bnum(unparsedCache.proposals[proposalId].preBoostedPositiveVotes);\n      unparsedCache.proposals[proposalId].preBoostedNegativeVotes = bnum(unparsedCache.proposals[proposalId].preBoostedNegativeVotes);\n      unparsedCache.proposals[proposalId].positiveStakes = bnum(unparsedCache.proposals[proposalId].positiveStakes);\n      unparsedCache.proposals[proposalId].negativeStakes = bnum(unparsedCache.proposals[proposalId].negativeStakes);\n    });\n    \n    Object.keys(unparsedCache.votingMachines).map((votingMachineAddress) => {\n      Object.keys(unparsedCache.votingMachines[votingMachineAddress].votingParameters)\n        .map((paramsHash) => {\n          const unparsedParams = unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash];\n        unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash] = {\n          queuedVoteRequiredPercentage: bnum(unparsedParams.queuedVoteRequiredPercentage),\n          queuedVotePeriodLimit: bnum(unparsedParams.queuedVotePeriodLimit),\n          boostedVotePeriodLimit: bnum(unparsedParams.boostedVotePeriodLimit),\n          preBoostedVotePeriodLimit: bnum(unparsedParams.preBoostedVotePeriodLimit),\n          thresholdConst: bnum(unparsedParams.thresholdConst),\n          limitExponentValue: bnum(unparsedParams.limitExponentValue),\n          quietEndingPeriod: bnum(unparsedParams.quietEndingPeriod),\n          proposingRepReward: bnum(unparsedParams.proposingRepReward),\n          votersReputationLossRatio: bnum(unparsedParams.votersReputationLossRatio),\n          minimumDaoBounty: bnum(unparsedParams.minimumDaoBounty),\n          daoBountyConst: bnum(unparsedParams.daoBountyConst),\n          activationTime: bnum(unparsedParams.activationTime)\n        };\n      })\n    })\n    return unparsedCache;\n  }\n  \n  getCache(): DaoNetworkCache {\n    return this.daoCache[this.rootStore.configStore.getActiveChainName()];\n  }\n  \n  updateNetworkCache(newNetworkCache: DaoNetworkCache, networkName: string) {\n    this.daoCache[networkName] = this.parseCache(newNetworkCache);\n    console.debug('Cache Updated]', this.daoCache[networkName]);\n  }\n\n  getDaoInfo(): DaoInfo {\n    return this.getCache().daoInfo;\n  }\n  \n  getSchemeProposalsByName(_schemeName: string): Proposal[] {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getSchemeByName(_schemeName: string): Scheme {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let schemeInfo;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeInfo = this.getCache().schemes[schemeAddress];\n        break;\n      }\n    }\n    return schemeInfo;\n  }\n  \n  getSchemeProposals(schemeAddress: string): Proposal[] {\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getAmountOfProposalsPreBoostedInScheme(schemeAddress: string): number {\n    return this.getSchemeProposals(schemeAddress).filter((proposal) => {\n      return (proposal.stateInVotingMachine== 4)\n    }).length;\n  }\n  \n  getGovernanceInfo(): any {\n    let users = {},\n    totalPositiveVotes = 0,\n    totalPositiveVotesAmount = bnum(0),\n    totalNegativeVotes = 0,\n    totalNegativeVotesAmount = bnum(0),\n    totalPositiveStakes = 0,\n    totalPositiveStakesAmount = bnum(0),\n    totalNegativeStakes = 0,\n    totalNegativeStakesAmount = bnum(0),\n    totalProposalsCreated = 0;\n    const cache = this.getCache();\n    let rep = [];\n    Object.keys(cache.users).map((userAddress) => {\n      if (cache.users[userAddress].repBalance > 0)\n        rep.push([userAddress, bnum(cache.users[userAddress].repBalance).div(10**18).toNumber()])\n    })\n    rep = _.sortBy(rep, [function(o) { return o[1]; }]);\n    rep.unshift([\"User Address\", \"REP %\"]);\n    \n    let repEvents = [];\n    let repTotalSupply = bnum(0);\n    let blockNumber = 0;\n    for (let i = 0; i < cache.daoInfo.repEvents.length; i++) {\n\n      if (cache.daoInfo.repEvents[i].event == \"Mint\")\n        repTotalSupply = repTotalSupply.plus(cache.daoInfo.repEvents[i].amount);\n      else if (cache.daoInfo.repEvents[i].event == \"Burn\")\n        repTotalSupply = repTotalSupply.minus(cache.daoInfo.repEvents[i].amount);\n      \n      if (cache.daoInfo.repEvents[i].l1BlockNumber > blockNumber){\n        blockNumber = cache.daoInfo.repEvents[i].l1BlockNumber;\n        repEvents.push([blockNumber, bnum(repTotalSupply).div(10**18).toNumber()])\n      }\n    }\n    repEvents.unshift([\"Block\", \"Total Rep\"]);\n\n    Object.keys(cache.votingMachines).map((votingMachineAddress) => {\n      cache.votingMachines[votingMachineAddress].events.votes.map((vote) => {\n        if (!users[vote.voter])\n          users[vote.voter] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[vote.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", vote.proposalId);\n        } else {\n          if (vote.vote == 1){\n            totalPositiveVotes ++;\n            totalPositiveVotesAmount = totalPositiveVotesAmount.plus(bnum(vote.amount));\n          } else {\n            totalNegativeVotes ++;\n            totalNegativeVotesAmount = totalNegativeVotesAmount.plus(bnum(vote.amount));\n          }\n          if (cache.proposals[vote.proposalId].winningVote == vote.vote){\n            users[vote.voter].correctVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 3;\n            \n          } else {\n            users[vote.voter].wrongVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 1;\n          }\n        }\n      })\n      cache.votingMachines[votingMachineAddress].events.stakes.map((stake) => {\n        if (!users[stake.staker])\n          users[stake.staker] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[stake.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", stake.proposalId);\n        } else {\n          if (stake.vote == 1){\n            totalPositiveStakes ++;\n            totalPositiveStakesAmount = totalPositiveStakesAmount.plus(bnum(stake.amount));\n          } else {\n            totalNegativeStakes ++;\n            totalNegativeStakesAmount = totalNegativeStakesAmount.plus(bnum(stake.amount));\n          }\n          \n          if (cache.proposals[stake.proposalId].winningVote == stake.vote){\n            users[stake.staker].correctStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n            users[stake.staker].score += 1;\n          } else {\n            users[stake.staker].wrongStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n          }\n        }\n      });\n    })\n\n\n    Object.keys(cache.proposals).map( (proposalId) => {\n      \n      const proposalCreator = cache.proposals[proposalId].proposer;\n      \n      if (proposalCreator != \"0x0000000000000000000000000000000000000000\") {\n        if (!users[proposalCreator])\n          users[proposalCreator] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n          \n        const score = cache.proposals[proposalId].positiveVotes.plus(cache.proposals[proposalId].negativeVotes)\n          .div(cache.proposals[proposalId].repAtCreation).div(\"0.20\").times(\"10\").toFixed(2);\n        users[proposalCreator].score += Math.min(Math.min(score, 1), 30);\n        users[proposalCreator].proposals ++;\n      } else {\n        console.debug(\n          \"Couldnt get proposer for proposal\", proposalId, \"in scheme\",\n          cache.schemes[cache.proposals[proposalId].scheme].name,\n          \"in transaction\", cache.proposals[proposalId].creationEvent.tx\n        )\n      }\n      totalProposalsCreated ++;\n\n    });\n    \n    return {\n      totalPositiveVotes,\n      totalPositiveVotesAmount,\n      totalNegativeVotes,\n      totalNegativeVotesAmount,\n      totalPositiveStakes,\n      totalPositiveStakesAmount,\n      totalNegativeStakes,\n      totalNegativeStakesAmount,\n      totalProposalsCreated,\n      rep,\n      repEvents,\n      ranking: _.orderBy(\n        Object.keys(users).map(key => ( Object.assign({ address: key }, users[key]) )), [\"score\"], [\"desc\"]\n      )\n    }\n  }\n  \n  getAllProposals(): Proposal[] {\n    const allProposals = Object.keys(this.getCache().proposals)\n      .map( (proposalId) => {return this.getCache().proposals[proposalId] } );\n    return _.orderBy(\n      allProposals ,\n      [\"creationEvent.l1BlockNumber\", \"creationEvent.l2BlockNumber\", \"creationEvent.transactionIndex\", \"creationEvent.logIndex\"],\n      [\"asc\",\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  getAllSchemes(): Scheme[] {\n    const schemeAddresses = Object.keys(this.getCache().schemes);\n    return schemeAddresses.map( (schemeAddress) => {return this.getCache().schemes[schemeAddress] } );\n  }\n  \n  getProposal(proposalId): Proposal {\n    return this.getCache().proposals[proposalId];\n  }\n  \n  getScheme(schemeAddress): Scheme {\n    return this.getCache().schemes[schemeAddress];\n  }\n  \n  getVotingMachineOfProposal(proposalId): String {\n    return this.getCache().schemes[\n      this.getCache().proposals[proposalId].scheme\n    ].votingMachine;\n  }\n  \n  getVotingParametersOfProposal(proposalId): VotingMachineParameters {\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)].votingParameters[\n      this.getCache().proposals[proposalId].paramsHash\n    ];\n  }\n  \n  getVotingParametersOfScheme(schemeAddress): VotingMachineParameters {\n    const scheme = this.getCache().schemes[schemeAddress];\n    return this.getCache().votingMachines[scheme.votingMachine].votingParameters[ scheme.paramsHash ];\n  }\n  \n  getProposalEvents(proposalId): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    stateChanges: ProposalStateChange[],\n    history: {\n      text: string,\n      event: ProposalEvent\n    }[]\n  }{\n    const proposalEvents = {\n      votes: this.getVotesOfProposal(proposalId),\n      stakes: this.getStakesOfProposal(proposalId),\n      redeems: this.getRedeemsOfProposal(proposalId),\n      redeemsRep: this.getRedeemsRepOfProposal(proposalId),\n      stateChanges: this.getProposalStateChanges(proposalId)\n    }\n    \n    const proposal = this.getProposal(proposalId);\n      \n    let history : {\n      text: string,\n      event: ProposalEvent\n    }[] = proposalEvents.votes.map((event) => {\n      return {\n        text: `Vote from ${event.voter} of ${(bnum(event.amount)).times('100').div(proposal.repAtCreation).toFixed(4)} % REP on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Stake from ${event.staker} of ${web3.utils.fromWei(event.amount).toString()} DXD on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stateChanges.map((event) => {\n      return {\n        text: `Proposal change to state ${VotingMachineProposalState[event.state]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history.push({\n      text: `Proposal created by ${proposal.proposer}`,\n      event: proposal.creationEvent\n    });\n    \n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      stateChanges: proposalEvents.stateChanges,\n      history: history\n    }\n  }\n  \n  getUser(userAddress): {\n    repBalance: BigNumber,\n    repPercentage: Number\n  } {\n    const user = this.getCache().users[userAddress];\n\n    return {\n      repBalance: user ? bnum(user.repBalance) : bnum(0),\n      repPercentage: user && user.repBalance ? bnum(user.repBalance).times('100').div(this.getCache().daoInfo.totalRep).toNumber() : 0\n    }\n  }\n  \n  getUserEvents(userAddress): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    newProposal: ProposalEvent[],\n    history: {\n      text: string,\n      event: ProposalEvent\n    }[]\n  }{\n    \n    let history : {\n      text: string,\n      event: ProposalEvent\n    } = [];\n    \n    const cache = this.getCache();\n    const votingMachines = this.rootStore.configStore.getNetworkConfig().votingMachines;\n    let proposalEvents = {\n      votes: [],\n      stakes: [],\n      redeems: [],\n      redeemsRep: []\n    };\n    if (votingMachines.gen) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.gen.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.gen.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.gen.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.gen.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n\n    if (votingMachines.dxd) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.dxd.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.dxd.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.dxd.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.dxd.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n    \n    const newProposalEvents = cache.users[userAddress]\n      ? cache.users[userAddress].proposalsCreated.map((proposalId) => {\n        history.push({\n          text: `Proposal ${proposalId} created`,\n          event: {\n            proposalId: cache.proposals[proposalId].creationEvent.proposalId,\n            tx: cache.proposals[proposalId].creationEvent.tx,\n            block: cache.proposals[proposalId].creationEvent.block,\n            transactionIndex: cache.proposals[proposalId].creationEvent.transactionIndex,\n            logIndex: cache.proposals[proposalId].creationEvent.logIndex,\n            timestamp: cache.proposals[proposalId].creationEvent.timestamp\n          }\n        })\n        return cache.proposals[proposalId].creationEvent;\n      })\n      : [];\n\n    history = history.concat(proposalEvents.votes.map((event) => {\n      return {\n        text: `Voted with ${event.amount} REP for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Staked ${event.amount} DXD for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      newProposalEvents: newProposalEvents,\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      history: history\n    }\n  }\n  \n  getProposalStatus(proposalId: string): any {\n    const proposal = this.getCache().proposals[proposalId];\n    const proposalStateChangeEvents = this.getProposalStateChanges(proposalId);\n    const scheme = this.getCache().schemes[proposal.scheme];\n    const votingMachineOfProposal = this.getVotingMachineOfProposal(proposalId);\n    const networkConfig = this.rootStore.configStore.getNetworkConfig();\n    const votingMachineParams = \n    (proposal.paramsHash == \"0x0000000000000000000000000000000000000000000000000000000000000000\")\n    ? this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[scheme.paramsHash]\n    : this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[proposal.paramsHash];\n    \n    const autoBoost = (networkConfig.votingMachines.dxd && networkConfig.votingMachines.dxd.address == votingMachineOfProposal)\n    return decodeProposalStatus(\n      proposal, proposalStateChangeEvents, votingMachineParams, scheme.maxSecondsForExecution, autoBoost\n    );\n  }\n  \n  getVotesOfProposal(proposalId: string): Vote[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.votes\n      .filter((vote) => {return (proposalId === vote.proposalId)});\n  }\n  \n  getStakesOfProposal(proposalId: string): Stake[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.stakes\n      .filter((stake) => {return (proposalId === stake.proposalId)});\n  }\n  \n  getRedeemsOfProposal(proposalId: string): Redeem[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeems\n      .filter((redeem) => {return (proposalId === redeem.proposalId)});\n  }\n  \n  getRedeemsRepOfProposal(proposalId: string): RedeemRep[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeemsRep\n      .filter((redeemRep) => {return (proposalId === redeemRep.proposalId)});\n  }\n  \n  getProposalStateChanges(proposalId: string): ProposalStateChange[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.proposalStateChanges\n      .filter((proposalStateChange) => {return (proposalId === proposalStateChange.proposalId)});\n  }\n\n  createProposal(\n    scheme: string,\n    schemeType: string,\n    proposalData: any\n  ): PromiEvent<any> {\n    const networkConfig = this.rootStore.configStore.getNetworkConfig();\n    const { providerStore } = this.rootStore;\n    const { library } = providerStore.getActiveWeb3React();\n    console.log(proposalData)\n    if (schemeType == \"ContributionReward\") {\n      // function proposeContributionReward(\n      //   Avatar _avatar,\n      //   string memory _descriptionHash,\n      //   int256 _reputationChange,\n      //   uint256[5] memory _rewards,\n      //   IERC20 _externalToken,\n      //   address payable _beneficiary\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeContributionReward',\n            type: 'function',\n            inputs: [\n              { type: 'address', name: '_avatar' },\n              { type: 'string', name: '_descriptionHash' },\n              { type: 'int256', name: '_reputationChange' },\n              { type: 'uint256[5]', name: '_rewards' },\n              { type: 'address', name: '_externalToken' },\n              { type: 'address', name: '_beneficiary' }\n            ]\n        },[\n          networkConfig.avatar,\n          contentHash.decode(proposalData.descriptionHash),\n          proposalData.reputationChange,\n          [0, proposalData.ethValue, proposalData.tokenValue, 0, 1],\n          proposalData.externalToken,\n          proposalData.beneficiary,\n        ]),\n        \"0\"\n      );\n    } else if (schemeType == \"GenericMulticall\") {\n      // function proposeCalls(\n      //   address[] memory _contractsToCall,\n      //   bytes[] memory _callsData,\n      //   uint256[] memory _values,\n      //   string memory _descriptionHash\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeCalls',\n            type: 'function',\n            inputs: [\n              { type: 'address[]', name: '_contractsToCall' },\n              { type: 'bytes[]', name: '_callsData' },\n              { type: 'uint256[]', name: '_values' },\n              { type: 'string', name: '_descriptionHash' }\n            ]\n        },[\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          contentHash.decode(proposalData.descriptionHash)\n        ]),\n        \"0\"\n      );\n    } else {\n      return providerStore.sendTransaction(\n        providerStore.getActiveWeb3React(),\n        ContractType.WalletScheme,\n        scheme,\n        'proposeCalls',\n        [\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          proposalData.titleText,\n          proposalData.descriptionHash\n        ],\n        {}\n      );\n    }\n  }\n  \n  vote(\n    decision: Number,\n    amount: Number,\n    proposalId: String,\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    const { account } = providerStore.getActiveWeb3React();\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'vote',\n      [proposalId, decision, amount.toString(), account],\n      {}\n    );\n  }\n  \n  approveVotingMachineToken(votingMachineAddress): PromiEvent<any> {\n    const { providerStore, configStore, blockchainStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.ERC20,\n      this.getCache().votingMachines[votingMachineAddress].token.address,\n      'approve',\n      [votingMachineAddress, utils.bigNumberify(ethers.constants.MaxUint256)],\n      {}\n    );\n  }\n  \n  stake(\n    decision: Number,\n    amount: Number,\n    proposalId: String,\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'stake',\n      [proposalId, decision, amount.toString()],\n      {}\n    );\n  }\n  \n  execute(\n    proposalId: String,\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'execute',\n      [proposalId],\n      {}\n    );\n  }\n  \n  redeem(\n    proposalId: String, account: string\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.rootStore;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      this.getVotingMachineOfProposal(proposalId),\n      'redeem',\n      [proposalId, account],\n      {}\n    );\n  }\n}\n","import { bnum } from './helpers';\nimport moment from 'moment';\nimport { BigNumber } from 'bignumber.js';\n\nexport const calculateStakes = function(thresholdConst, boostedProposals, preBoostedProposals, upstakes, downstakes ) {\n\n  // No idea why but the estimation of staking token by diving the thresholdConst get on chain by 0.90...\n  // I think it might be due to the precision magic used in the real number library used in teh GenensisProtocol\n  thresholdConst = thresholdConst.times(0.90949470177);\n  let threshold = thresholdConst.div(10**12).pow(boostedProposals);\n  if (threshold.lt(1.0001))\n    threshold = bnum(\"1.0001\");\n    \n  let recommendedThreshold = thresholdConst.div(10**12).pow(Number(boostedProposals) + Number(preBoostedProposals));\n  if (recommendedThreshold.lt(1.0001))\n    recommendedThreshold = bnum(\"1.0001\");\n    \n  // console.log(\"--\", boostedProposals, preBoostedProposals);\n  // console.log(\"thresholdConst\", thresholdConst.div(10**12).toString());\n  // console.log(\"score\", upstakes.div(downstakes).toString())\n  // console.log(\"threshold\", threshold.toString());\n  // console.log(\n  //   downstakes.times(threshold).minus(upstakes).div(10**18).toString(),\n  //   upstakes.div(threshold).minus(downstakes).div(10**18).toString()\n  // )\n  // console.log(\"recommendedThreshold\", recommendedThreshold.toString());\n  // console.log(\n  //   downstakes.times(recommendedThreshold).minus(upstakes).div(10**18).toString(),\n  //   upstakes.div(recommendedThreshold).minus(downstakes).div(10**18).toString()\n  // )\n  \n  return {\n    stakeToBoost: downstakes.times(threshold).minus(upstakes),\n    stakeToUnBoost: upstakes.div(threshold).minus(downstakes),\n    recommendedStakeToBoost: downstakes.times(recommendedThreshold).minus(upstakes),\n    recommendedStakeToUnBoost: upstakes.div(recommendedThreshold).minus(downstakes)\n  }\n\n}\n\nexport const decodeProposalStatus = function(\n  proposal, proposalStateChangeEvents, votingMachineParams, maxSecondsForExecution, autoBoost\n) {\n  const timeNow = bnum(moment().unix());\n  const queuedVotePeriodLimit = votingMachineParams.queuedVotePeriodLimit;\n  const boostedVotePeriodLimit = votingMachineParams.boostedVotePeriodLimit;\n  const preBoostedVotePeriodLimit = votingMachineParams.preBoostedVotePeriodLimit;\n  const quietEndingPeriod = votingMachineParams.quietEndingPeriod;\n  const boostedPhaseTime = proposal.boostedPhaseTime;\n  const submittedTime = proposal.submittedTime;\n  const preBoostedPhaseTime = proposal.preBoostedPhaseTime;\n\n  // TODO: take in count that gen voting machine dont boost automatically\n  switch (proposal.stateInVotingMachine) {\n    case \"1\":\n      return { \n        status: \"Expired in Queue\", \n        boostTime: bnum(0), \n        finishTime: submittedTime.plus(queuedVotePeriodLimit)\n      };\n    case \"2\":\n      if (proposal.stateInScheme == \"2\")\n        return { \n          status: \"Proposal Rejected\", \n          boostTime: boostedPhaseTime,\n          finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n        };\n      else if (proposal.stateInScheme == \"3\")\n        return { \n          status: \"Execution Succeded\", \n          boostTime: boostedPhaseTime,\n          finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n        };\n      else if (proposal.stateInScheme == \"4\")\n        return { \n          status: \"Execution Timeout\", \n          boostTime: boostedPhaseTime,\n          finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n        };\n      else return { \n        status: \"Passed\", \n        boostTime: boostedPhaseTime,\n        finishTime: bnum(proposalStateChangeEvents.find(event => event.state == 2).timestamp)\n      };\n    case \"3\":\n      if (timeNow > submittedTime.plus(queuedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Expired in Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      } else {\n        return { \n          status: \"In Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      }\n    case \"4\":\n      if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).plus(maxSecondsForExecution).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Execution Timeout\",\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Boost\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (autoBoost && timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\",\n          boostTime: boostedPhaseTime,\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      } else if (timeNow > submittedTime.plus(queuedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"In Queue\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit)\n        };\n      } else {\n        return { \n          status: \"Pre Boosted\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit)\n        };\n      }\n    case \"5\":\n      if (timeNow > boostedPhaseTime.plus(boostedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit)\n        };\n      } else {\n        return { \n          status: \"Boosted\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit)\n        };\n      }\n    case \"6\":\n      return { \n        status: \"Quiet Ending Period\", \n        boostTime: boostedPhaseTime,\n        finishTime: boostedPhaseTime.plus(quietEndingPeriod)\n      };\n  }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootStore from 'stores';\nimport { ContractType } from './Provider';\nimport { bnum } from '../utils/helpers';\n\nexport default class UserStore {\n  userInfo: UserInfo;\n  rootStore: RootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.userInfo = {\n      address: rootStore.providerStore.getActiveWeb3React(),\n      ethBalance: bnum(0),\n      repBalance: bnum(0),\n      dxdBalance: bnum(0),\n      dxdApproved: bnum(0),\n      genBalance: bnum(0),\n      genApproved: bnum(0)\n    };\n    makeObservable(this, {\n        userInfo: observable,\n        update: action\n      }\n    );\n  }\n  \n  getUserInfo() {\n    return this.userInfo;\n  }\n\n  update() {\n    const { configStore, providerStore, blockchainStore } = this.rootStore;\n    const { account } = providerStore.getActiveWeb3React();\n    \n    const repBalance = account ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.Reputation,\n      address: configStore.getNetworkConfig().reputation,\n      method: 'balanceOf',\n      params: [account]\n    }) : bnum(0);\n    \n    const ethBalance = account ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.Multicall,\n      address: configStore.getNetworkConfig().multicall,\n      method: 'getEthBalance',\n      params: [account]\n    }) : bnum(0);\n    \n    const dxdBalance = account && configStore.getNetworkConfig().votingMachines.dxd \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.dxd.token,\n      method: 'balanceOf',\n      params: [account]\n    }) : bnum(0);\n    \n    const dxdApproved = account && configStore.getNetworkConfig().votingMachines.dxd \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.dxd.token,\n      method: 'allowance',\n      params: [account, configStore.getNetworkConfig().votingMachines.dxd.address]\n    }) : bnum(0);\n    \n    const genBalance = account && configStore.getNetworkConfig().votingMachines.gen \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.gen.token,\n      method: 'balanceOf',\n      params: [account]\n    }) : bnum(0);\n    \n    const genApproved = account && configStore.getNetworkConfig().votingMachines.gen \n    ? this.rootStore.blockchainStore.getCachedValue({\n      contractType: ContractType.ERC20,\n      address: configStore.getNetworkConfig().votingMachines.gen.token,\n      method: 'allowance',\n      params: [account, configStore.getNetworkConfig().votingMachines.gen.address]\n    }) : bnum(0);\n    \n    this.userInfo = {\n      address: account,\n      ethBalance,\n      repBalance,\n      dxdBalance,\n      dxdApproved,\n      genBalance,\n      genApproved\n    };\n  }\n  \n}\n","import RootStore from 'stores';\nimport { makeObservable, observable, action } from 'mobx';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { isChainIdSupported } from '../provider/connectors';\nimport { ContractType } from './Provider';\nimport { decodeSchemeParameters } from '../utils/scheme';\nimport { decodePermission } from '../utils/permissions';\nimport { bnum } from '../utils/helpers';\nconst { updateNetworkCache } = require('../cache');\nimport { getTokensToFetchPrice } from '../config';\n\nexport default class BlockchainStore {\n  activeFetchLoop: boolean = false;\n  initialLoadComplete: boolean;\n  contractStorage: ContractStorage = {};\n  eventsStorage: EventStorage = {};\n  rootStore: RootStore;\n\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    makeObservable(this, {\n        activeFetchLoop: observable,\n        initialLoadComplete: observable,\n        updateStore: action,\n        fetchData: action\n      }\n    );\n  }\n\n  reduceMulticall(calls: Call[], results: any, blockNumber: number): CallEntry[] {\n    const { multicallService } = this.rootStore;\n    return calls.map((call, index) => {\n      const value = multicallService.decodeCall(call, results[index]);\n      return {\n        contractType: call.contractType,\n        address: call.address,\n        method: call.method,\n        params: call.params,\n        response: {\n          value: value,\n          lastFetched: blockNumber\n        }\n      };\n    });\n  }\n  \n  async executeAndUpdateMulticall(multicallService){\n    const multicallResponse = await multicallService.executeCalls();\n    this.updateStore(\n      this.reduceMulticall(\n        multicallResponse.calls, multicallResponse.results, multicallResponse.blockNumber\n      ),\n      multicallResponse.blockNumber\n    );\n    multicallService.resetActiveCalls();\n  }\n\n  has(entry: Call): boolean {\n    const params = entry.params ? entry.params : [];\n    return (\n      !!this.contractStorage[entry.contractType] &&\n      !!this.contractStorage[entry.contractType][entry.address] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ]\n    );\n  }\n\n  getCachedValue(entry: Call) {\n    if (this.has(entry)) {\n      return this.get(entry).value.toString();\n    } else {\n      return undefined;\n    }\n  }\n  \n  getCachedEvents(address: string, eventName: string) {\n    if (this.eventsStorage[address] && this.eventsStorage[address][eventName])\n      return this.eventsStorage[address][eventName].emitions;\n    else\n      return [];\n  }\n\n  get(entry: Call): CallValue | undefined {\n    if (this.has(entry)) {\n      const params = entry.params ? entry.params : [];\n      return this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n    } else {\n      return undefined;\n    }\n  }\n\n  updateStore(entries: CallEntry[], blockNumber: number) {\n    entries.forEach((entry) => {\n      const params = entry.params ? entry.params : [];\n      if (!this.contractStorage[entry.contractType]) {\n        this.contractStorage[entry.contractType] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address]) {\n        this.contractStorage[entry.contractType][entry.address] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address][entry.method]) {\n        this.contractStorage[entry.contractType][entry.address][entry.method] = {};\n      }\n\n      if (\n        !this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ]\n      ) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n\n      const oldEntry = this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n\n      // Set if never fetched, or if the new data isn't stale\n      if (!oldEntry.lastFetched || (oldEntry.lastFetched && oldEntry.lastFetched <= blockNumber)) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n    });\n  }\n    \n  async fetchData(web3React: Web3ReactContextInterface, reset: boolean) {\n    if (!this.activeFetchLoop || reset\n      && web3React\n      && web3React.active\n      && isChainIdSupported(web3React.chainId)\n    ) {\n      this.initialLoadComplete = (reset) ? false : this.initialLoadComplete;\n      this.activeFetchLoop = true;\n      const { library, account, chainId } = web3React;\n      const {\n        providerStore,\n        configStore,\n        multicallService,\n        transactionStore,\n        daoStore,\n        userStore\n      } = this.rootStore;\n\n      let networkCache = daoStore.getCache();\n      const blockNumber = await library.eth.getBlockNumber();\n      const lastCheckedBlockNumber = networkCache.l1BlockNumber;\n\n      if (blockNumber > lastCheckedBlockNumber) {\n        console.debug('[Fetch Loop] Fetch Blockchain Data', { blockNumber, account, chainId });\n        \n        const fromBlock = lastCheckedBlockNumber + 1;\n        const toBlock = blockNumber;\n        const networkName = configStore.getActiveChainName();\n        const networkConfig = configStore.getNetworkConfig();\n        networkCache = await updateNetworkCache(networkCache, networkName, fromBlock, toBlock, library);\n        \n        let tokensBalancesCalls = [];\n        const tokens = getTokensToFetchPrice(this.rootStore.configStore.getActiveChainName());\n        tokens.map((tokenAddress) => {\n          if (!networkCache.daoInfo.tokenBalances[tokenAddress])\n            tokensBalancesCalls.push({\n              contractType: ContractType.ERC20,\n              address: tokenAddress,\n              method: 'balanceOf',\n              params: [networkConfig.avatar],\n            });\n          Object.keys(networkCache.schemes).map((schemeAddress) => {\n            if (networkCache.schemes[schemeAddress].controllerAddress != networkConfig.controller)\n              tokensBalancesCalls.push({\n                contractType: ContractType.ERC20,\n                address: tokenAddress,\n                method: 'balanceOf',\n                params: [schemeAddress],\n              });\n          })\n        });\n\n        if (tokensBalancesCalls.length > 0)\n          multicallService.addCalls(tokensBalancesCalls);\n        await this.executeAndUpdateMulticall(multicallService);\n        \n        tokensBalancesCalls.map((tokensBalancesCall) => {\n          if (tokensBalancesCall.params[0] == networkConfig.avatar) {\n            networkCache.daoInfo.tokenBalances[tokensBalancesCall.address] =\n              this.rootStore.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          } else {\n            networkCache.schemes[tokensBalancesCall.params[0]].tokenBalances[tokensBalancesCall.address] =\n              this.rootStore.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          }\n        });\n        \n        // Get user-specific blockchain data\n        if (account) {\n          transactionStore.checkPendingTransactions(web3React, account);\n          let accountCalls = [{\n            contractType: ContractType.Multicall,\n            address: networkConfig.utils.multicall,\n            method: 'getEthBalance',\n            params: [account],\n          },{\n            contractType: ContractType.Reputation,\n            address: networkConfig.reputation,\n            method: 'balanceOf',\n            params: [account],\n          }];\n          \n          if (networkConfig.votingMachines.gen) {\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.gen.token,\n              method: 'balanceOf',\n              params: [account],\n            });\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.gen.token,\n              method: 'allowance',\n              params: [account, networkConfig.votingMachines.gen.address],\n            });\n          }\n          if (networkConfig.votingMachines.dxd) {\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.dxd.token,\n              method: 'balanceOf',\n              params: [account],\n            });\n            accountCalls.push({\n              contractType: ContractType.ERC20,\n              address: networkConfig.votingMachines.dxd.token,\n              method: 'allowance',\n              params: [account, networkConfig.votingMachines.dxd.address],\n            });\n          }\n          \n          multicallService.addCalls(accountCalls);\n          await this.executeAndUpdateMulticall(multicallService);\n          userStore.update();\n        };\n        \n        networkCache.l1BlockNumber = toBlock;\n        providerStore.setCurrentBlockNumber(toBlock);\n      }\n      daoStore.updateNetworkCache(networkCache, configStore.getActiveChainName());\n\n      this.initialLoadComplete = true;\n      this.activeFetchLoop = false;\n    }\n  }\n}\n","import { Interface } from 'ethers/utils';\nimport RootStore from '../stores';\nimport { ContractType } from '../stores/Provider';\nimport { Call } from '../types';\n\n\nexport default class MulticallService {\n  root: RootStore;\n\n  activeCalls: Call[];\n  activeCallsRaw: any[];\n\n  constructor(root: RootStore) {\n    this.root = root;\n    this.resetActiveCalls();\n  }\n\n  // Add call additions and removals\n  async executeCalls(calls?: Call[], rawCalls?: any[]) {\n    const { providerStore, configStore } = this.root;\n\n    const multi = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Multicall,\n      configStore.getNetworkConfig().utils.multicall\n    );\n\n    const response = await multi.methods.aggregate(rawCalls || this.activeCallsRaw).call();\n    return {\n      calls: calls || this.activeCalls,\n      results: response.returnData,\n      blockNumber: response.blockNumber,\n    };\n  }\n\n  addCalls(calls: Call[]) {\n    calls.forEach(call => this.addCall(call));\n  }\n\n  addCall(call: Call) {\n    this.addContractCall(call);\n  }\n\n  addContractCall(call: Call) {\n    const { abiService } = this.root;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    call.params = call.params ? call.params : [];\n    const encoded = iface.functions[call.method].encode(call.params);\n    this.activeCallsRaw.push([call.address, encoded]);\n    this.activeCalls.push(call);\n  }\n\n  decodeCall(call: Call, result: any) {\n    const { abiService } = this.root;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    return iface.functions[call.method].decode(result);\n  }\n\n  resetActiveCalls() {\n    this.activeCalls = [];\n    this.activeCallsRaw = [];\n  }\n}\n","// Token Scale -> Wei Scale\nimport { BigNumber } from './bignumber';\nimport { bnum, DEFAULT_TOKEN_DECIMALS, scale } from './helpers';\n\nexport const denormalizeBalance = (\n    normalizedBalance: string | BigNumber,\n    decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n    return scale(bnum(normalizedBalance), decimals);\n};\n\n// Wei Scale -> Token Scale\nexport const normalizeBalance = (\n    amount: BigNumber,\n    decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n    return scale(bnum(amount), -decimals);\n};\n\nexport const formatNumberValue = (\n    normalizedBalance: BigNumber,\n    displayPrecision: number = 4,\n    truncateAt?: number,\n    roundDown: boolean = true\n): string => {\n    if (normalizedBalance.eq(0)) {\n        return bnum(0).toFixed(displayPrecision);\n    }\n\n    let result = bnum(normalizedBalance)\n        .decimalPlaces(displayPrecision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n        .toString();\n\n    result = padToDecimalPlaces(result, displayPrecision);\n\n    if (truncateAt && result.length > truncateAt) {\n        return result.substring(0, 20) + '...';\n    } else {\n        return result;\n    }\n};\n\nexport const formatBalance = (\n    balance: BigNumber,\n    decimals: number = 18,\n    precision: number = 4,\n    roundDown: boolean = true\n): string => {\n    if (balance.eq(0)) {\n        return bnum(0).toFixed(precision);\n    }\n\n    const result = scale(balance, -decimals)\n        .decimalPlaces(precision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n        .toString();\n\n    return padToDecimalPlaces(result, precision);\n};\n\nexport const padToDecimalPlaces = (\n    value: string,\n    minDecimals: number\n): string => {\n    const split = value.split('.');\n    const zerosToPad = split[1] ? minDecimals - split[1].length : minDecimals;\n\n    if (zerosToPad > 0) {\n        let pad = '';\n\n        // Add decimal point if no decimal portion in original number\n        if (zerosToPad === minDecimals) {\n            pad += '.';\n        }\n        for (let i = 0; i < zerosToPad; i++) {\n            pad += '0';\n        }\n        return value + pad;\n    }\n    return value;\n};\n","import RootStore from '../stores';\nimport { ContractType } from '../stores/Provider';\nimport { BigNumber } from '../utils/bignumber';\nimport { bnum, ERC20_TRANSFER_SIGNATURE } from '../utils/helpers';\nimport { normalizeBalance } from '../utils/token';\n\nexport default class DaoService {\n  rootStore: RootStore;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n\n  encodeControllerGenericCall(\n    to: string,\n    callData: string,\n    value: BigNumber\n  ){\n    const { providerStore, configStore } = this.rootStore;\n    const controller = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Controller,\n      configStore.getNetworkConfig().controller\n    )\n    const avatarAddress = configStore.getNetworkConfig().avatar;\n    return controller.methods.genericCall(to, callData, avatarAddress, value).encodeABI();\n  }\n  \n  decodeControllerCall(callData: string){\n    const { abiService, providerStore } = this.rootStore;\n    const { library } = providerStore.getActiveWeb3React();\n    const callDecoded = abiService.decodeCall(ContractType.Controller, callData);\n    if (!callDecoded) {\n      return \"Couldnt decode call\";\n    } else {\n      switch (callDecoded.function.name) {\n        case \"registerScheme\":\n          return \"Register scheme \"+callDecoded.args[0]+\" with params hash \"+callDecoded.args[1]+\" and permissions \"+callDecoded.args[2];\n        case \"unregisterScheme\":\n          return \"Unregister scheme \"+callDecoded.args[0];\n        case \"externalTokenTransfer\":\n          return \"Send \"+callDecoded.args[2]+\" tokens of contract \"+callDecoded.args[0]+\" to \"+callDecoded.args[1];\n        case \"sendEther\":\n          return \"Send \"+normalizeBalance(callDecoded.args[0], 18)+\" ETH to \"+callDecoded.args[1];\n        case \"mintReputation\":\n          return \"Mint \"+normalizeBalance(callDecoded.args[0], 18)+\" REP to \"+callDecoded.args[1];\n        case \"burnReputation\":\n          return \"Burn \"+normalizeBalance(callDecoded.args[0], 18)+\" REP of \"+callDecoded.args[1];\n        case \"genericCall\":\n          const genericCallData = callDecoded.args[1];\n          \n          // TO DO: Decode more functions here \n          if (genericCallData.substring(0,10) == ERC20_TRANSFER_SIGNATURE) {\n            const transferParams = library.eth.abi.decodeParameters(['address', 'uint256'], \"0x\"+genericCallData.substring(10));\n            return \"Token \"+callDecoded.args[0]+\" transfer to \"+transferParams[0]+\" of \"+transferParams[1];\n          } else {\n            return \"Generic Call to \"+callDecoded.args[0]+\" with data of \"+genericCallData+\" using a value of \"+library.utils.fromWei(callDecoded.args[3]);\n          }\n      }\n    }\n  }\n  \n  getRepAt(atBlock: number, l2BlockNumber: boolean = false): {\n    userRep: BigNumber,\n    totalSupply: BigNumber\n  } {\n    const { daoStore, providerStore } = this.rootStore;\n    const { account } = providerStore.getActiveWeb3React();\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\n    let userRep = bnum(0), totalSupply = bnum(0);\n\n    for (let i = 0; i < repEvents.length; i++) {\n      if (repEvents[i][l2BlockNumber ? 'l2BlockNumber' : 'l1BlockNumber'] <= atBlock) {\n        if (repEvents[i].event === 'Mint') {\n          totalSupply = totalSupply.plus(repEvents[i].amount)\n          if (repEvents[i].account == account)\n            userRep = userRep.plus(repEvents[i].amount)\n        } else if (repEvents[i].event === 'Burn') {\n          totalSupply = totalSupply.minus(repEvents[i].amount)\n          if (repEvents[i].account == account)\n            userRep = userRep.minus(repEvents[i].amount)\n        }\n      }\n    }\n\n\n    return { userRep, totalSupply };\n  }\n}\n","import RootStore from '../stores';\nimport _ from 'lodash';\nimport { ContractType } from '../stores/Provider';\n\nexport interface EventCall {\n  contractType: ContractType;\n  address: string;\n  eventName: string;\n  fromBlock: number;\n  toBlock: number;\n  executed?: boolean;\n}\n\nexport default class EventsService {\n  rootStore: RootStore;  \n\n  activeEventsCalls: EventCall[];\n    \n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n    this.activeEventsCalls = [];\n  }\n  \n  async getEvents(\n    contractType: ContractType,\n    address: string,\n    eventName: string,\n    fromBlock: number,\n    toBlock: number\n  ){\n    const { providerStore } = this.rootStore;\n    const contract = providerStore.getContract(providerStore.getActiveWeb3React(), contractType, address);\n    console.log('Getting event',eventName, fromBlock, toBlock);\n    return _.orderBy( \n      await contract.getPastEvents(eventName, {fromBlock: fromBlock, toBlock: toBlock })\n      , [\"blockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  async executeActiveEventCalls() {\n    return await Promise.all(this.activeEventsCalls.map(async (activeEventCall) => {\n      return await this.getEvents(\n        activeEventCall.contractType,\n        activeEventCall.address,\n        activeEventCall.eventName,\n        activeEventCall.fromBlock,\n        activeEventCall.toBlock\n      )\n    }));\n  }\n\n  addEventsCalls(events: EventCall[]) {\n    events.forEach(event => this.addEventCall(event));\n  }\n\n  addEventCall(event: EventCall) {\n    this.activeEventsCalls.push(event);\n  }\n\n  resetActiveEventCalls() {\n    this.activeEventsCalls = [];\n  }\n  \n}\n","import RootStore from '../stores';\nimport IPFS from 'ipfs-core';\nimport contentHash from 'content-hash';\nimport axios from \"axios\";\nconst CID = require('cids')\n\nexport default class IPFSService {\n  rootStore: RootStore;\n  calls: {[hash:string]: {\n    time: Number,\n    content: String,\n    fetched: Boolean\n  }} = {};\n  ipfs: any = null;\n  started: Boolean = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async start(){\n    if (!this.ipfs && !this.started) {\n      this.started = true;\n      try {\n        this.ipfs = await IPFS.create();\n      } catch (error) {\n        console.error('[IPFS]', error);\n      }\n    }\n  }\n\n  async add(content: String) {\n    const { cid } = await this.ipfs.add({content});\n    console.log(cid.string)\n    return cid.string;\n  }\n  \n  async pin(hash: String){\n    console.log(new CID(hash))\n    return await this.ipfs.pin.add(new CID(hash));\n  }\n  \n  async getContent(hash: String){\n    const content = []\n    for await (const file of this.ipfs.get(hash)) {\n      console.debug(\"[IPFS FILE]\",file.type, file.path);\n      if (!file.content) continue;\n      for await (const chunk of file.content) {\n        content.push(chunk)\n      }\n    }\n    return content.toString(\"utf8\");\n  }\n}\n","import RootStore from '../stores';\nimport axios from \"axios\";\nimport contentHash from 'content-hash';\n\nexport default class PinataService {\n  rootStore: RootStore;\n  auth: Boolean = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async updatePinList() {\n    const pinList = await this.getPinList();\n    const ipfsHashes = this.rootStore.daoStore.getCache().ipfsHashes;\n    const alreadyPinned = pinList.data.rows;\n    for (let i = 0; i < ipfsHashes.length; i++) {\n      // if (alreadyPinned.indexOf(pinned => alreadyPinned.ipfs_pin_hash == ipfsHashes[i].hash) < 0) {\n      //   console.debug('[PINATA] Pinning:', ipfsHashes[i].hash);\n      // } else {\n      //   console.debug('[PINATA] Alpready pinned:', ipfsHashes[i].hash);\n      // }\n    }\n  }\n  \n  async isAuthenticated(){\n    const pinataApiKey = this.rootStore.configStore.getLocalConfig().pinata;\n    try {\n      const auth = await axios({\n        method: \"GET\",\n        url: \"https://api.pinata.cloud/data/testAuthentication\",\n        headers: { Authorization: `Bearer ${pinataApiKey}` }\n      });\n      this.auth = auth.status == 200;\n    } catch (error) {\n      this.auth = false;\n    }\n  }\n\n  async pin(hashToPin: String){\n    console.log('pininng', hashToPin)\n    const pinataApiKey = this.rootStore.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"POST\",\n      url: \"https://api.pinata.cloud/pinning/pinByHash\",\n      data: {\n        hashToPin,\n        pinataMetadata: {\n          name: `DXdao ${this.rootStore.configStore.getActiveChainName()} DescriptionHash ${contentHash.fromIpfs(hashToPin)}`,\n          keyValues: { type: 'proposal' }\n        }\n      },\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n  \n  async getPinList(){\n    const pinataApiKey = this.rootStore.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"GET\",\n      url: `https://api.pinata.cloud/data/pinList?pageLimit=1000&metadata[name]=DXdao ${this.rootStore.configStore.getActiveChainName()}`,\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n}\n","import RootStore from '../stores';\nimport axios from \"axios\";\n\nexport default class EtherscanService {\n  rootStore: RootStore;\n  auth: Boolean = false;\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async isAuthenticated(){\n    const etherscanAPIKey = this.rootStore.configStore.getLocalConfig().etherscan;\n    const { account } = this.rootStore.providerStore.getActiveWeb3React();\n    const auth = await axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=account&action=balance&address=${account}&tag=latest&apikey=${etherscanAPIKey}`,\n    });\n    this.auth = auth.data.status == 1;\n  }\n  \n  async getContractABI(address: string){\n    const etherscanAPIKey = this.rootStore.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n  \n  async getContractSource(address: string){\n    const etherscanAPIKey = this.rootStore.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n}\n","import RootStore from '../stores';\nimport axios from \"axios\";\nimport web3 from \"web3\";\nimport { getTokensToFetchPrice } from '../config';\n\nexport default class CoingeckoService {\n  rootStore: RootStore;\n  prices: any = {};\n\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n  }\n  \n  async loadPrices(){\n    const tokens = getTokensToFetchPrice(this.rootStore.configStore.getActiveChainName());\n    const networkName = this.rootStore.configStore.getActiveChainName() == 'mainnet' ? 'ethereum'\n      : this.rootStore.configStore.getActiveChainName() == 'xdai' ? 'xdai'\n      : '';\n    \n    if (networkName == 'ethereum' || networkName == 'xdai') {\n      let tokenAddresses = \"\";\n      tokens.map((tokenAddress, i) => {\n        if (i == tokens.length - 1)\n          tokenAddresses += tokenAddress;\n        else\n        tokenAddresses += tokenAddress + \"%2C\";\n      })\n      console.log(`https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`)\n      const pricesResponse = await Promise.all([\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`\n        }),\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/price?ids=${networkName}&vs_currencies=usd`\n        })\n      ]);\n      \n      if ((pricesResponse[0].status == 200) && (pricesResponse[1].status == 200)){\n        this.prices = pricesResponse[0].data;\n        \n        Object.keys(this.prices).map((tokenAddress) => {\n          this.prices[web3.utils.toChecksumAddress(tokenAddress)] = this.prices[tokenAddress];\n          delete this.prices[tokenAddress];\n        });\n        \n        this.prices[\"0x0000000000000000000000000000000000000000\"] = pricesResponse[1].data[networkName];\n      }\n    }\n    return;\n  }\n  \n  getPrices() {\n    return this.prices;\n  }\n}\n","// src/contexts/index.tsx\nimport React from 'react';\nimport RootStore from 'stores';\n\nexport const storesContext = React.createContext({\n    root: new RootStore(),\n});\n\nexport const useStores = () => React.useContext(storesContext);\n","// Stores\nimport ProviderStore from './Provider';\nimport TransactionStore from './Transaction';\nimport ModalStore from './Modal';\nimport ConfigStore from './ConfigStore';\nimport DaoStore from './DaoStore';\nimport UserStore from './UserStore';\nimport BlockchainStore from './BlockchainStore';\nimport ABIService from '../services/ABIService';\nimport MulticallService from '../services/MulticallService';\nimport DaoService from '../services/DaoService';\nimport EventsService from '../services/EventsService';\nimport IPFSService from '../services/IPFSService';\nimport PinataService from '../services/PinataService';\nimport EtherscanService from '../services/EtherscanService';\nimport CoingeckoService from '../services/CoingeckoService';\n\nexport default class RootStore {\n  providerStore: ProviderStore;\n  transactionStore: TransactionStore;\n  modalStore: ModalStore;\n  configStore: ConfigStore;\n  daoStore: DaoStore;\n  userStore: UserStore;\n  blockchainStore: BlockchainStore;\n\n  abiService: ABIService;\n  multicallService: MulticallService;\n  daoService: DaoService;\n  eventsService: EventsService;\n  ipfsService: IPFSService;\n  pinataService: PinataService;\n  etherscanService: EtherscanService;\n  coingeckoService: CoingeckoService;\n\n  constructor() {\n    this.abiService = new ABIService(this);\n    this.multicallService = new MulticallService(this);\n    this.eventsService = new EventsService(this);\n    this.daoService = new DaoService(this);\n    this.ipfsService = new IPFSService(this);\n    this.pinataService = new PinataService(this);\n    this.etherscanService = new EtherscanService(this);\n    this.coingeckoService = new CoingeckoService(this);\n    this.providerStore = new ProviderStore(this);\n    this.transactionStore = new TransactionStore(this);\n    this.modalStore = new ModalStore(this);\n    this.configStore = new ConfigStore(this);\n    this.daoStore = new DaoStore(this);\n    this.userStore = new UserStore(this);\n    this.blockchainStore = new BlockchainStore(this);\n  }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport copy from 'copy-to-clipboard';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest function.\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}\n\nexport function useCopyClipboard(timeout = 500): [S, Dispatch<SetStateAction<S>>] {\n    const [isCopied, setIsCopied] = useState(false);\n\n    const staticCopy = useCallback((text) => {\n        const didCopy = copy(text);\n        setIsCopied(didCopy);\n    }, []);\n\n    useEffect(() => {\n        if (isCopied) {\n            const hide = setTimeout(() => {\n                setIsCopied(false);\n            }, timeout);\n\n            return () => {\n                clearTimeout(hide);\n            };\n        }\n    }, [isCopied, setIsCopied, timeout]);\n\n    return [isCopied, staticCopy];\n}\n\n// modified from https://usehooks.com/usePrevious/\nexport function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef();\n\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\n","import React, { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { web3ContextNames, isChainIdSupported } from 'provider/connectors';\nimport { useEagerConnect, useInactiveListener } from 'provider/providerHooks';\nimport { useStores } from 'contexts/storesContext';\nimport { useInterval } from 'utils/helperHooks';\n\nconst BLOKCHAIN_FETCH_INTERVAL = 10000;\n\nconst Web3ReactManager = ({ children }) => {\n    const {\n        root: { providerStore, blockchainStore, daoStore },\n    } = useStores();\n\n    const web3ContextInjected = useWeb3React(web3ContextNames.injected);\n    const {\n        active: networkActive,\n        error: networkError\n    } = web3ContextInjected;\n\n    if (!providerStore.activeChainId)\n      providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n\n    console.debug('[Web3ReactManager] Start of render', {\n        injected: web3ContextInjected,\n        web3React: providerStore.getActiveWeb3React(),\n    });\n\n    // try to eagerly connect to an injected provider, if it exists and has granted access already\n    const triedEager = useEagerConnect();\n    \n    ethereum.on('chainChanged', (chainId) => {\n      // Handle the new chain.\n      // Correctly handling chain changes can be complicated.\n      // We recommend reloading the page unless you have good reason not to.\n      // providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n      // blockchainStore.fetchData(providerStore.getActiveWeb3React(), true);\n      window.location.reload();\n    });\n\n    ethereum.on('accountsChanged', (accounts) => {\n      // Handle the new accounts, or lack thereof.\n      // \"accounts\" will always be an array, but it can be empty.\n      // blockchainStore.fetchData(web3React, false);\n    });\n    \n    // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n    useInactiveListener(!triedEager);\n\n    // Fetch user blockchain data on an interval using current params\n    useInterval(\n      () => {\n        if (networkActive)\n          blockchainStore.fetchData(providerStore.getActiveWeb3React(), false)\n      }, BLOKCHAIN_FETCH_INTERVAL\n    );\n\n    const BlurWrapper = styled.div`\n        filter: blur(1px);\n    `;\n\n    const OverBlurModal = styled.div`\n      position: fixed;\n      z-index: 1;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      background-color: rgb(0,0,0);\n      background-color: rgba(0,0,0,0.4);\n      \n      .connectModalContent {\n        background-color: #fefefe;\n        max-width: 350px;\n        text-align: center;\n        margin: 15% auto;\n        padding: 20px;\n        border-radius: 4px;\n      }\n    `;\n\n    // on page load, do nothing until we've tried to connect to the injected connector\n    if (!triedEager) {\n        console.debug('[Web3ReactManager] Render: Eager load not tried');\n        return null;\n    }\n\n    if (networkError) {\n      console.debug('[Web3ReactManager] Render: Network error, showing modal error.');\n      return (\n        <div>\n          <OverBlurModal>\n            <div className=\"connectModalContent\">Ups, something broke :(</div>\n            </OverBlurModal>\n            <BlurWrapper>\n              {children}\n            </BlurWrapper>\n          </div>\n        );\n    // If network is not active show blur content\n  } else if(!networkActive) {\n      console.debug('[Web3ReactManager] Render: No active network');\n      // return (\n      //   <div>\n      //     <OverBlurModal>\n      //       <div className=\"connectModalContent\">Connect to a valid network</div>\n      //       </OverBlurModal>\n      //       <BlurWrapper>\n      //         {children}\n      //       </BlurWrapper>\n      //     </div>\n      //   );\n      return children;\n    } else {\n      console.debug( '[Web3ReactManager] Render: Active network, render children', { networkActive } );\n      return children;\n    }\n\n};\n\nexport default Web3ReactManager;\n","import { useEffect, useState } from 'react';\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { isMobile } from 'react-device-detect';\nimport { injected, web3ContextNames } from 'provider/connectors';\n\n/*  Attempt to connect to & activate injected connector\n    If we're on mobile and have an injected connector, attempt even if not authorized (legacy support)\n    If we tried to connect, or it's active, return true;\n */\nexport function useActiveWeb3React() {\n    return useWeb3ReactCore(web3ContextNames.injected);\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3ReactCore(web3ContextNames.injected);\n\n    const [tried, setTried] = useState(false);\n\n    useEffect(() => {\n        console.debug('[Injected Eager Connect]', injected);\n        injected.isAuthorized().then((isAuthorized) => {\n            console.debug('[Eager Connect] Activate injected if authorized', {\n                isAuthorized,\n            });\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            } else {\n                if (isMobile && window.ethereum) {\n                    activate(injected, undefined, true).catch(() => {\n                        setTried(true);\n                    });\n                } else {\n                    setTried(true);\n                }\n            }\n        });\n    }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (active) {\n            setTried(true);\n        }\n    }, [active]);\n\n    return tried;\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network they're on\n */\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3ReactCore(\n        web3ContextNames.injected\n    );\n\n    useEffect(() => {\n        const { ethereum } = window;\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            const handleAccountsChanged = (accounts) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    activate(injected, undefined, true).catch(() => {});\n                }\n            };\n\n            const handleNetworkChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            ethereum.on('chainChanged', handleChainChanged);\n            ethereum.on('networkChanged', handleNetworkChanged);\n            ethereum.on('accountsChanged', handleAccountsChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('chainChanged', handleChainChanged);\n                    ethereum.removeListener(\n                        'networkChanged',\n                        handleNetworkChanged\n                    );\n                    ethereum.removeListener(\n                        'accountsChanged',\n                        handleAccountsChanged\n                    );\n                }\n            };\n        }\n\n        return () => {};\n    }, [active, error, suppress, activate]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker === null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType !== null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React, { useEffect } from 'react';\nimport {\n    createGlobalStyle,\n    css,\n    ThemeProvider as StyledComponentsThemeProvider,\n} from 'styled-components';\nimport { useStores } from '../contexts/storesContext';\n\nexport const SUPPORTED_THEMES = {\n    DARK: 'DARK',\n    LIGHT: 'LIGHT',\n};\n\nconst MEDIA_WIDTHS = {\n    upToSmall: 600,\n    upToMedium: 960,\n    upToLarge: 1280,\n};\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce(\n    (accumulator, size) => {\n        accumulator[size] = (...args) => css`\n            @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n                ${css(...args)}\n            }\n        `;\n        return accumulator;\n    },\n    {}\n);\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default function ThemeProvider({ children }) {\n    const {\n        root: { configStore },\n    } = useStores();\n\n    const darkMode = configStore.darkMode;\n\n    useEffect(() => {\n        configStore.setDarkMode(darkMode);\n    }, [configStore, darkMode]);\n    return (\n        <StyledComponentsThemeProvider theme={theme(darkMode)}>\n          {children}\n        </StyledComponentsThemeProvider>\n    );\n}\n\nconst theme = (darkMode) => ({\n    white,\n    black,\n    textColor: darkMode ? white : '#010101',\n    greyText: darkMode ? white : '#6C7284',\n\n    // for setting css on <html>\n    backgroundColor: darkMode ? '#333639' : white,\n    \n    activeButtonBackground: \"#536DFE\",\n\n    modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n    inputBackground: darkMode ? '#202124' : white,\n    placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n    shadowColor: darkMode ? '#000' : '#2F80ED',\n    \n    borderStyle: \"rgba(14, 0, 135, 0.1) 0px 2px 10px, rgba(14, 0, 135, 0.05) 0px 12px 32px\",\n\n    // grays\n    concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n    mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n    silverGray: darkMode ? '#737373' : '#C4C4C4',\n    chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n    doveGray: darkMode ? '#C4C4C4' : '#737373',\n    mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n    activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n    buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n    tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n\n    //blacks\n    charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n    // blues\n    zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\n    // TODO refactor; malibuBlue changed as quick hack to a different color JK 013120\n    malibuBlue: darkMode ? '#E67AEF' : '#4C5480',\n    // TODO refactor; royalBlue changed as quick hack to a different color JK 013120\n    royalBlue: darkMode ? '#DC6BE5' : '#fafafa',\n    loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\n\n    // purples\n    wisteriaPurple: '#DC6BE5',\n    // reds\n    salmonRed: '#FF6871',\n    // orange\n    pizazzOrange: '#FF8F05',\n    // yellows\n    warningYellow: '#FFE270',\n    // body text color\n    bodyText: '#90a4ae',\n    //green\n    connectedGreen: '#27AE60',\n\n    //branded\n    metaMaskOrange: '#E8831D',\n\n    //specific\n    textHover: darkMode ? '#90a4ae' : '#C4C4C4',\n\n    // connect button when loggedout\n    buttonFaded: darkMode ? '#DC6BE5' : '#737373',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n        display: flex;\n        flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n        display: flex;\n        flex-flow: row nowrap;\n    `,\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import { ethers, utils } from 'ethers';\n\nexport function shortenAddress(address, digits = 4) {\n    if (!isAddress(address)) {\n        throw Error(`Invalid 'address' parameter '${address}'.`);\n    }\n    return `${address.substring(0, digits + 2)}...${address.substring(\n        42 - digits\n    )}`;\n}\n\nexport function isAddress(value) {\n    try {\n        return ethers.utils.getAddress(value.toLowerCase());\n    } catch {\n        return false;\n    }\n}\n\nexport function toChecksum(address) {\n    return utils.getAddress(address);\n}\n\nexport function toAddressStub(address) {\n    const start = address.slice(0, 5);\n    const end = address.slice(-3);\n\n    return `${start}...${end}`;\n}\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { animated, useTransition } from 'react-spring';\nimport { Spring } from 'react-spring/renderprops';\n\nimport { DialogContent, DialogOverlay } from '@reach/dialog';\nimport { isMobile } from 'react-device-detect';\nimport '@reach/dialog/styles.css';\n// import { useGesture } from 'react-use-gesture';\n\nconst AnimatedDialogOverlay = animated(DialogOverlay);\nconst WrappedDialogOverlay = ({\n    suppressClassNameWarning,\n    mobile,\n    ...rest\n}) => <AnimatedDialogOverlay {...rest} />;\nconst StyledDialogOverlay = styled(WrappedDialogOverlay).attrs({\n    suppressClassNameWarning: true,\n})`\n    &[data-reach-dialog-overlay] {\n        z-index: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n\n        ${({ mobile }) =>\n            mobile &&\n            css`\n                align-items: flex-end;\n            `}\n\n        &::after {\n            content: '';\n            background-color: ${({ theme }) => theme.modalBackground};\n            opacity: 0.5;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            /* position: absolute; */\n            position: fixed;\n            z-index: -1;\n        }\n    }\n`;\n\nconst FilteredDialogContent = ({\n    minHeight,\n    maxHeight,\n    isOpen,\n    slideInAnimation,\n    mobile,\n    ...rest\n}) => <DialogContent aria-label=\"BCDappModal\" {...rest} />;\nconst StyledDialogContent = styled(FilteredDialogContent)`\n    &[data-reach-dialog-content] {\n        border: 1px solid var(--panel-border);\n        background-color: var(--panel-border);\n        padding: 0px;\n        width: 50vw;\n        max-width: 650px;\n        ${({ maxHeight }) =>\n            maxHeight &&\n            css`\n                max-height: ${maxHeight}vh;\n            `}\n        ${({ minHeight }) =>\n            minHeight &&\n            css`\n                min-height: ${minHeight}vh;\n            `}\n    display: flex;\n        overflow: hidden;\n        border-radius: 10px;\n        ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      max-height: 65vh;\n      margin: 0;\n    `}\n        ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      max-height: 66vh;\n      ${\n          mobile &&\n          css`\n              width: 100vw;\n              border-radius: 20px;\n              border-bottom-left-radius: 0;\n              border-bottom-right-radius: 0;\n          `\n      }\n    `}\n    }\n`;\n\nconst HiddenCloseButton = styled.button`\n    margin: 0;\n    padding: 0;\n    width: 0;\n    height: 0;\n    border: none;\n`;\n\nexport default function Modal({\n    isOpen,\n    onDismiss,\n    minHeight = false,\n    maxHeight = 50,\n    initialFocusRef,\n    children,\n}) {\n    const transitions = useTransition(isOpen, null, {\n        config: { duration: 200 },\n        from: { opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    });\n\n    // const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }));\n    // const bind = useGesture({\n    //     onDrag: (state) => {\n    //         let velocity = state.velocity;\n    //         if (velocity < 1) {\n    //             velocity = 1;\n    //         }\n    //         if (velocity > 8) {\n    //             velocity = 8;\n    //         }\n    //         set({\n    //             xy: state.down ? state.movement : [0, 0],\n    //             config: { mass: 1, tension: 210, friction: 20 },\n    //         });\n    //         if (velocity > 3 && state.direction[1] > 0) {\n    //             onDismiss();\n    //         }\n    //     },\n    // });\n\n    if (isMobile) {\n        return transitions.map(\n            ({ item, key, props }) =>\n                item && (\n                    <StyledDialogOverlay\n                        key={key}\n                        style={props}\n                        onDismiss={onDismiss}\n                        initialFocusRef={initialFocusRef}\n                        mobile={isMobile}\n                    >\n                        <Spring // animation for entrance and exit\n                            from={{\n                                transform: isOpen\n                                    ? 'translateY(200px)'\n                                    : 'translateY(100px)',\n                            }}\n                            to={{\n                                transform: isOpen\n                                    ? 'translateY(0px)'\n                                    : 'translateY(200px)',\n                            }}\n                        >\n                            {(props) => (\n                                <animated.div\n                                    // {...bind()}\n                                    // style={{\n                                    //     transform: `translate3d(${0}px,${ y > 0 ? y : 0 }px,0)`,\n                                    // }}\n                                >\n                                    <StyledDialogContent\n                                        style={props}\n                                        hidden={true}\n                                        minHeight={minHeight}\n                                        maxHeight={maxHeight}\n                                        mobile={isMobile}\n                                    >\n                                        <HiddenCloseButton\n                                            onClick={onDismiss}\n                                        />\n                                        {children}\n                                    </StyledDialogContent>\n                                </animated.div>\n                            )}\n                        </Spring>\n                    </StyledDialogOverlay>\n                )\n        );\n    } else {\n        return transitions.map(\n            ({ item, key, props }) =>\n                item && (\n                    <StyledDialogOverlay\n                        key={key}\n                        style={props}\n                        onDismiss={onDismiss}\n                        initialFocusRef={initialFocusRef}\n                        mobile={isMobile}\n                    >\n                        <StyledDialogContent\n                            hidden={true}\n                            minHeight={minHeight}\n                            maxHeight={maxHeight}\n                            isOpen={isOpen}\n                            mobile={isMobile}\n                        >\n                            <HiddenCloseButton onClick={onDismiss} />\n                            {children}\n                        </StyledDialogContent>\n                    </StyledDialogOverlay>\n                )\n        );\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Link = styled.a.attrs({\n    target: '_blank',\n    rel: 'noopener noreferrer',\n})`\n    text-decoration: none;\n    cursor: pointer;\n    color: var(--turquois-text);\n\n    :focus {\n        outline: none;\n        text-decoration: underline;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nexport default Link;\n","var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.33076876.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styled from 'styled-components';\nimport { useCopyClipboard } from '../../utils/helperHooks';\n\nimport Link from '../../components/common/Link';\nimport { FiCopy, FiCheckCircle } from \"react-icons/fi\";\n\nconst CopyIcon = styled(Link)`\n  color: ${({ theme }) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n      text-decoration: none;\n      color: ${({ theme }) => theme.doveGray};\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`;\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard();\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      <TransactionStatusText>\n        {isCopied ? (\n          <FiCheckCircle />\n        ) : (\n          <FiCopy />\n        )}\n      </TransactionStatusText>\n    </CopyIcon>\n  );\n}\n","import React from 'react';\n\nexport const ETHERSCAN_PREFIXES = {\n    1: '',\n    3: 'ropsten.',\n    4: 'rinkeby.',\n    5: 'goerli.',\n    42: 'kovan.',\n};\n\nexport function getEtherscanLink(networkId, data, type) {\n    const prefix = `https://${\n        ETHERSCAN_PREFIXES[networkId] || ETHERSCAN_PREFIXES[1]\n    }etherscan.io`;\n\n    switch (type) {\n        case 'transaction': {\n            return `${prefix}/tx/${data}`;\n        }\n        case 'address':\n        default: {\n            return `${prefix}/address/${data}`;\n        }\n    }\n}\n\nexport const etherscanUrl = (networkId) => {\n    return \"https://\" + ETHERSCAN_PREFIXES[networkId] + \"etherscan.io\";\n};\n\nexport const etherscanAddress = (network, text, address) => {\n    return (\n        <a\n            className=\"address\"\n            href={`${etherscanUrl(network)}/address/${address}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {text}\n        </a>\n    );\n};\n\nexport const etherscanTx = (network, text, tx) => {\n    return (\n        <a\n            href={`${etherscanUrl(network)}/tx/${tx}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {text}\n        </a>\n    );\n};\n\nexport const etherscanToken = (network, text, token, holder = false) => {\n    return (\n        <a\n            href={`${etherscanUrl(network)}/token/${token}${\n                holder ? `?a=${holder}` : ''\n            }`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {text}\n        </a>\n    );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport Copy from '../common/Copy';\nimport { injected } from 'provider/connectors';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { getEtherscanLink } from 'utils/etherscan';\n\nimport Link from '../../components/common/Link';\nimport { useStores } from '../../contexts/storesContext';\n\nconst OptionButton = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    justify-content: center;\n    align-items: center;\n    border-radius: 4px;\n    border: 1px solid var(--active-button-border);\n    background-color: var(--blue-text);\n    color: #FFFFFF;\n    padding: 8px 24px;\n\n    &:hover {\n        cursor: pointer;\n        border: 1px solid var(--blue-onHover-border);\n        background-color: var(--blue-onHover);\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      font-size: 12px;\n    `};\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      padding: 1rem;\n    `};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst InfoCard = styled.div`\n    padding: 1rem;\n    border: 1px solid ${({ theme }) => theme.placeholderGray};\n    border-radius: 20px;\n`;\n\nconst AccountGroupingRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    justify-content: space-between;\n    align-items: center;\n    font-weight: 500;\n    color: ${({ theme }) => theme.textColor};\n\n    div {\n        ${({ theme }) => theme.flexRowNoWrap}\n        align-items: center;\n    }\n\n    &:first-of-type {\n        margin-bottom: 20px;\n    }\n`;\n\nconst AccountSection = styled.div`\n    background-color: var(--panel-background);\n    padding: 0rem 1.5rem;\n    ${({ theme }) =>\n        theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\n`;\n\nconst YourAccount = styled.div`\n    h5 {\n        margin: 0 0 1rem 0;\n        font-weight: 400;\n    }\n\n    h4 {\n        margin: 0;\n        font-weight: 500;\n    }\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-left: 12px;\n        margin-right: 2px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AccountControl = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    align-items: center;\n    min-width: 0;\n\n    font-weight: ${({ hasENS, isENS }) => (hasENS ? (isENS ? 500 : 400) : 500)};\n    font-size: ${({ hasENS, isENS }) =>\n        hasENS ? (isENS ? '1rem' : '0.8rem') : '1rem'};\n\n    a:hover {\n        text-decoration: underline;\n    }\n\n    a {\n        min-width: 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n`;\n\nconst ConnectButtonRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin: 30px;\n`;\n\nconst StyledLink = styled(Link)`\n    color: var(--turquois-text);\n`;\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    right: 1rem;\n    top: 14px;\n    color: var(--header-text);\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\n\nconst WalletAction = styled.div`\n    color: ${({ theme }) => theme.chaliceGray};\n    margin-left: 16px;\n    font-weight: 400;\n    :hover {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`;\n\ninterface Props {\n    toggleWalletModal: any;\n    ENSName: any;\n    openOptions: any;\n}\n\nexport default function AccountDetails(props: Props) {\n    const {\n        toggleWalletModal,\n        ENSName,\n        openOptions,\n    } = props;\n    const {\n        root: { providerStore },\n    } = useStores();\n    const { chainId, account, connector } = providerStore.getActiveWeb3React();\n\n    return (\n        <>\n            <UpperSection>\n                <CloseIcon onClick={toggleWalletModal}>\n                    <CloseColor alt={'close icon'} />\n                </CloseIcon>\n                <HeaderRow>Account</HeaderRow>\n                <AccountSection>\n                    <YourAccount>\n                        <InfoCard>\n                            <AccountGroupingRow>\n                                <div>\n                                    {connector !== injected && (\n                                        <WalletAction\n                                            onClick={() => {\n                                                //@ts-ignore\n                                                connector.close();\n                                            }}\n                                        >\n                                            Disconnect\n                                        </WalletAction>\n                                    )}\n                                    <CircleWrapper>\n                                        <GreenCircle>\n                                            <div />\n                                        </GreenCircle>\n                                    </CircleWrapper>\n                                </div>\n                            </AccountGroupingRow>\n                            <AccountGroupingRow>\n                                {ENSName ? (\n                                    <AccountControl\n                                        hasENS={!!ENSName}\n                                        isENS={true}\n                                    >\n                                        <StyledLink\n                                            hasENS={!!ENSName}\n                                            isENS={true}\n                                            href={getEtherscanLink(\n                                                chainId,\n                                                ENSName,\n                                                'address'\n                                            )}\n                                        >\n                                            {ENSName} ↗{' '}\n                                        </StyledLink>\n                                        <Copy toCopy={ENSName} />\n                                    </AccountControl>\n                                ) : (\n                                    <AccountControl\n                                        hasENS={!!ENSName}\n                                        isENS={false}\n                                    >\n                                        <StyledLink\n                                            hasENS={!!ENSName}\n                                            isENS={false}\n                                            href={getEtherscanLink(\n                                                chainId,\n                                                account,\n                                                'address'\n                                            )}\n                                        >\n                                            {account} ↗{' '}\n                                        </StyledLink>\n                                        <Copy toCopy={account} />\n                                    </AccountControl>\n                                )}\n                            </AccountGroupingRow>\n                        </InfoCard>\n                    </YourAccount>\n\n                    <ConnectButtonRow>\n                        <OptionButton\n                            onClick={() => {\n                                openOptions();\n                            }}\n                        >\n                            Connect to a different wallet\n                        </OptionButton>\n                    </ConnectButtonRow>\n                </AccountSection>\n            </UpperSection>\n        </>\n    );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { transparentize } from 'polished';\nimport Link from '../../components/common/Link';\nimport metamaskIcon from '../../assets/images/metamask.png';\n\nconst InfoCard = styled.button`\n  background-color: ${({ theme, active }) =>\n      active ? theme.activeGray : theme.backgroundColor};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  : 0 4px 8px 0 ${({ theme, clickable }) =>\n      clickable ? transparentize(0.95, theme.shadowColor) : 'none'};\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.royalBlue};\n  }\n  border-color: ${({ theme, active }) =>\n      active ? 'transparent' : theme.placeholderGray};\n`;\n\nconst OptionCard = styled(InfoCard)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 1rem;\n`;\n\nconst OptionCardLeft = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    justify-content: center;\n    height: 100%;\n`;\n\nconst OptionCardClickable = styled(OptionCard)`\n    margin-top: 0;\n    &:hover {\n        cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n        border: ${({ clickable, theme }) =>\n            clickable ? `1px solid ${theme.malibuBlue}` : ``};\n    }\n    opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-right: 8px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst HeaderText = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    color: ${(props) =>\n        props.color === 'blue'\n            ? ({ theme }) => theme.royalBlue\n            : ({ theme }) => theme.textColor};\n    font-size: 1rem;\n    font-weight: 500;\n`;\n\nconst SubHeader = styled.div`\n    color: ${({ theme }) => theme.textColor};\n    margin-top: 10px;\n    font-size: 12px;\n`;\n\nconst IconWrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    align-items: center;\n    justify-content: center;\n    & > img,\n    span {\n        height: ${({ size }) => (size ? size + 'px' : '24px')};\n        width: ${({ size }) => (size ? size + 'px' : '24px')};\n    }\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\n\nexport default function Option({\n    link = null,\n    clickable = true,\n    size = null,\n    onClick = null,\n    color,\n    header,\n    subheader = null,\n    icon,\n    active = false,\n}) {\n    const content = (\n        <OptionCardClickable\n            onClick={onClick}\n            clickable={clickable && !active}\n            active={active}\n        >\n            <OptionCardLeft>\n                <HeaderText color={color}>\n                    {' '}\n                    {active ? (\n                        <CircleWrapper>\n                            <GreenCircle>\n                                <div />\n                            </GreenCircle>\n                        </CircleWrapper>\n                    ) : (\n                        ''\n                    )}\n                    {header}\n                </HeaderText>\n                {subheader && <SubHeader>{subheader}</SubHeader>}\n            </OptionCardLeft>\n            <IconWrapper size={size} active={active}>\n                {<img src={metamaskIcon} alt={'Icon'} />}\n            </IconWrapper>\n        </OptionCardClickable>\n    );\n    if (link) {\n        return <Link href={link}>{content}</Link>;\n    }\n\n    return content;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Option from './Option';\nimport { injected, SUPPORTED_WALLETS } from 'provider/connectors';\nimport { FiZap } from \"react-icons/fi\";\nimport { darken } from 'polished';\n\nconst PendingSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  & > * {\n    width: 100%;\n  }\n`\n\nconst LoadingMessage = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  margin-bottom: 20px;\n  color: ${({ theme, error }) => (error ? theme.salmonRed : 'inherit')};\n  border: 1px solid ${({ theme, error }) => (error ? theme.salmonRed : theme.placeholderGray)};\n\n  & > * {\n    padding: 1rem;\n  }\n`\n\nconst ErrorGroup = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.textColor};\n  background-color: ${({ theme }) => theme.placeholderGray};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, theme.placeholderGray)};\n  }\n`\n\nconst LoadingWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: center;\n`\n\nexport default function PendingView({ uri = '', size, connector, error = false, setPendingError, tryActivation }) {\n  const isMetamask = window.ethereum && window.ethereum.isMetaMask\n\n  return (\n    <PendingSection>\n      <LoadingMessage error={error}>\n        <LoadingWrapper>\n          {!error && <FiZap/>}\n          {error ? (\n            <ErrorGroup>\n              <div>Error connecting.</div>\n              <ErrorButton\n                onClick={() => {\n                  setPendingError(false)\n                  tryActivation(connector)\n                }}\n              >\n                Try Again\n              </ErrorButton>\n            </ErrorGroup>\n          ) :  (\n            'Initializing...'\n          )}\n        </LoadingWrapper>\n      </LoadingMessage>\n      {Object.keys(SUPPORTED_WALLETS).map(key => {\n        const option = SUPPORTED_WALLETS[key]\n        if (option.connector === connector) {\n          if (option.connector === injected) {\n            if (isMetamask && option.name !== 'MetaMask') {\n              return null\n            }\n            if (!isMetamask && option.name === 'MetaMask') {\n              return null\n            }\n          }\n          return (\n            <Option\n              key={key}\n              clickable={false}\n              color={option.color}\n              header={option.name}\n              subheader={option.description}\n              icon={option.iconName}\n            />\n          )\n        }\n        return null\n      })}\n    </PendingSection>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { isMobile } from 'react-device-detect';\nimport { observer } from 'mobx-react';\n\nimport Modal from '../Modal';\nimport AccountDetails from '../AccountDetails';\nimport PendingView from './PendingView';\nimport Option from './Option';\nimport { usePrevious } from 'utils/helperHooks';\nimport Link from '../../components/common/Link';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { injected, SUPPORTED_WALLETS } from 'provider/connectors';\nimport { useStores } from 'contexts/storesContext';\nimport { isChainIdSupported } from '../../provider/connectors';\nimport { useActiveWeb3React } from 'provider/providerHooks';\nimport metamaskIcon from '../../assets/images/metamask.png';\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    color: var(--header-text);\n    right: 1rem;\n    top: 14px;\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\nconst Wrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${({ theme }) => theme.backgroundColor};\n    border-radius: 10px;\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\n\nconst ContentWrapper = styled.div`\n    background-color: var(--panel-background);\n    color: var(--body-text);\n    padding: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst Blurb = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin-top: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\n\nconst OptionGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\n\nconst HoverText = styled.div`\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nconst WALLET_VIEWS = {\n    OPTIONS: 'options',\n    OPTIONS_SECONDARY: 'options_secondary',\n    ACCOUNT: 'account',\n    PENDING: 'pending',\n};\n\nconst WalletModal = observer(\n    ({ pendingTransactions, confirmedTransactions }) => {\n        const {\n            root: { modalStore },\n        } = useStores();\n        const { active, connector, error, activate, account, chainId } = useActiveWeb3React();\n        const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n        const [pendingWallet, setPendingWallet] = useState(false);\n        const [pendingError, setPendingError] = useState(false);\n        const [connectionErrorMessage, setConnectionErrorMessage] = useState(false);\n\n        const walletModalOpen = modalStore.walletModalVisible;\n\n        const toggleWalletModal = () => {\n            modalStore.toggleWalletModal();\n        };\n\n        // always reset to account view\n        useEffect(() => {\n            if (walletModalOpen) {\n                setPendingError(false);\n                setConnectionErrorMessage(false);\n                setWalletView(WALLET_VIEWS.ACCOUNT);\n            }\n        }, [walletModalOpen]);\n        \n        // close modal when a connection is successful\n        const activePrevious = usePrevious(active);\n        const connectorPrevious = usePrevious(connector);\n        useEffect(() => {\n            if (\n                walletModalOpen &&\n                ((active && !activePrevious) ||\n                    (connector && connector !== connectorPrevious && !error))\n            ) {\n                setWalletView(WALLET_VIEWS.ACCOUNT);\n            }\n        }, [\n            setWalletView,\n            active,\n            error,\n            connector,\n            walletModalOpen,\n            activePrevious,\n            connectorPrevious,\n        ]);\n\n        const tryActivation = async (connector) => {\n            setPendingWallet(connector); // set wallet for pending view\n            setWalletView(WALLET_VIEWS.PENDING);\n            activate(connector, undefined, true).catch((e) => {\n                setConnectionErrorMessage(e)\n                console.debug('[Activation Error]', e);\n                setPendingError(true);\n            });\n        };\n\n        // get wallets user can switch too, depending on device/browser\n        function getOptions() {\n            const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n            return Object.keys(SUPPORTED_WALLETS).map((key) => {\n                const option = SUPPORTED_WALLETS[key];\n                // check for mobile options\n                if (isMobile) {\n                    if (!window.web3 && !window.ethereum && option.mobile) {\n                        return (\n                            <Option\n                                onClick={() => {\n                                    option.connector !== connector &&\n                                        !option.href &&\n                                        tryActivation(option.connector);\n                                }}\n                                key={key}\n                                active={\n                                    option.connector &&\n                                    option.connector === connector\n                                }\n                                color={option.color}\n                                link={option.href}\n                                header={option.name}\n                                subheader={null}\n                                icon={option.iconName}\n                            />\n                        );\n                    }\n                    return null;\n                }\n\n                // overwrite injected when needed\n                if (option.connector === injected) {\n                    // don't show injected if there's no injected provider\n                    if (!(window.web3 || window.ethereum)) {\n                        if (option.name === 'MetaMask') {\n                            return (\n                                <Option\n                                    key={key}\n                                    color={'#E8831D'}\n                                    header={'Install Metamask'}\n                                    subheader={null}\n                                    link={'https://metamask.io/'}\n                                />\n                            );\n                        } else {\n                            return null; //dont want to return install twice\n                        }\n                    }\n                    // don't return metamask if injected provider isn't metamask\n                    else if (option.name === 'MetaMask' && !isMetamask) {\n                        return null;\n                    }\n                    // likewise for generic\n                    else if (option.name === 'Injected' && isMetamask) {\n                        return null;\n                    }\n                }\n\n                // return rest of options\n                return (\n                    !isMobile &&\n                    !option.mobileOnly && (\n                        <Option\n                            onClick={() => {\n                                option.connector === connector\n                                    ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                                    : !option.href &&\n                                      tryActivation(option.connector);\n                            }}\n                            key={key}\n                            active={option.connector === connector}\n                            color={option.color}\n                            link={option.href}\n                            header={option.name}\n                            subheader={null} //use option.descriptio to bring back multi-line\n                            icon={option.iconName}\n                        />\n                    )\n                );\n            });\n        }\n\n        function getModalContent() {\n            if (connectionErrorMessage) {\n                return (\n                    <UpperSection>\n                        <CloseIcon onClick={toggleWalletModal}>\n                            <CloseColor alt={'close icon'} />\n                        </CloseIcon>\n                        <HeaderRow>\n                            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0\n                                ? 'Wrong Network'\n                                : 'Error connecting'}\n                        </HeaderRow>\n                        <ContentWrapper>\n                            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0 ? (\n                                <h5>\n                                    Please connect to a valid ethereum network.\n                                </h5>\n                            ) : (\n                                'Error connecting. Try refreshing the page.'\n                            )}\n                        </ContentWrapper>\n                    </UpperSection>\n                );\n            }\n            if (\n                account &&\n                !isChainIdSupported(chainId) &&\n                walletView === WALLET_VIEWS.ACCOUNT\n            ) {\n                return (\n                    <UpperSection>\n                        <CloseIcon onClick={toggleWalletModal}>\n                            <CloseColor alt={'close icon'} />\n                        </CloseIcon>\n                        <HeaderRow>{'Wrong Network'}</HeaderRow>\n                        <ContentWrapper>\n                            <h5>\n                                Please connect to a valid ethereum network.\n                            </h5>\n                        </ContentWrapper>\n                    </UpperSection>\n                );\n            }\n            if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n                return (\n                    <AccountDetails\n                        toggleWalletModal={toggleWalletModal}\n                        pendingTransactions={pendingTransactions || []}\n                        confirmedTransactions={confirmedTransactions || []}\n                        openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n                    />\n                );\n            }\n            return (\n                <UpperSection>\n                    <CloseIcon onClick={toggleWalletModal}>\n                        <CloseColor alt={'close icon'} />\n                    </CloseIcon>\n                    {walletView !== WALLET_VIEWS.ACCOUNT ? (\n                        <HeaderRow color=\"blue\">\n                            <HoverText\n                                onClick={() => {\n                                    setPendingError(false);\n                                    setWalletView(WALLET_VIEWS.ACCOUNT);\n                                }}\n                            >\n                                Back\n                            </HoverText>\n                        </HeaderRow>\n                    ) : (\n                        <HeaderRow>\n                            <HoverText>Connect to a wallet</HoverText>\n                        </HeaderRow>\n                    )}\n                    <ContentWrapper>\n                        {walletView === WALLET_VIEWS.PENDING ? (\n                            <PendingView\n                                size={220}\n                                connector={pendingWallet}\n                                error={pendingError}\n                                setPendingError={setPendingError}\n                                tryActivation={tryActivation}\n                            />\n                        ) : (\n                            <OptionGrid>{getOptions()}</OptionGrid>\n                        )}\n                        {walletView !== WALLET_VIEWS.PENDING && (\n                            <Blurb>\n                                <span style={{ color: '#90a4ae' }}>\n                                    New to Ethereum? &nbsp;\n                                </span>{' '}\n                                <Link href=\"https://ethereum.org/use/#3-what-is-a-wallet-and-which-one-should-i-use\">\n                                    Learn more about wallets\n                                </Link>\n                            </Blurb>\n                        )}\n                    </ContentWrapper>\n                </UpperSection>\n            );\n        }\n\n        return (\n            <Modal\n                style={{ userSelect: 'none' }}\n                isOpen={walletModalOpen}\n                onDismiss={toggleWalletModal}\n                minHeight={null}\n                maxHeight={90}\n            >\n                <Wrapper>{getModalContent()}</Wrapper>\n            </Modal>\n        );\n    }\n);\n\nexport default WalletModal;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Box = styled.div\n`\n  border: 1px solid #E1E3E7;\n  padding: 10px 0px;\n  background: white;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  box-shadow: ${({ theme }) => theme.borderStyle};\n`\n\nexport default Box;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { shortenAddress } from 'utils/address';\nimport WalletModal from 'components/WalletModal';\nimport { isChainIdSupported } from 'provider/connectors';\nimport { useStores } from '../../contexts/storesContext';\nimport Box from '../../components/common/Box';\n\nconst WrongNetworkButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--wrong-network);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst AccountButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n  cursor: pointer;\n`;\n\nconst ConnectButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--blue-text);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst Web3ConnectStatus = observer((props) => {\n    \n    const {\n        root: { modalStore, transactionStore, providerStore, configStore },\n    } = useStores();\n    const {\n        chainId,\n        account,\n        error,\n    } = providerStore.getActiveWeb3React();\n    \n    let pending = undefined;\n    let confirmed = undefined;\n\n    if (chainId && account && isChainIdSupported(chainId)) {\n        pending = transactionStore.getPendingTransactions(account);\n        confirmed = transactionStore.getConfirmedTransactions(account);\n    }\n\n    const toggleWalletModal = () => {\n        modalStore.toggleWalletModal();\n    };\n\n    function getWeb3Status() {\n        console.debug('[GetWeb3Status]', {\n            account,\n            chainId: chainId,\n            error,\n        });\n        // Wrong network\n        if (account && chainId && !isChainIdSupported(chainId)) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else if (account) {\n            return (\n              <div style={{display: \"flex\"}}>\n                  <AccountButton onClick={toggleWalletModal}>\n                    {shortenAddress(account)}\n                  </AccountButton>\n                  <AccountButton onClick={toggleWalletModal} style={{fontSize: \"14px\"}}>\n                    {configStore.getActiveChainName().replace(/^./, configStore.getActiveChainName()[0].toUpperCase())}\n                  </AccountButton>\n              </div>\n            );\n        } else if (error) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else {\n            return (\n                <ConnectButton\n                    onClick={toggleWalletModal}\n                    active={true}\n                    >\n                    {props.text}\n                </ConnectButton>\n                \n            );\n        }\n    }\n\n    return (\n        <>\n            {getWeb3Status()}\n            <WalletModal\n                pendingTransactions={pending}\n                confirmedTransactions={confirmed}\n            />\n        </>\n    );\n});\n\nexport default Web3ConnectStatus;\n","export default __webpack_public_path__ + \"static/media/DXdao.22782c18.svg\";","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport Web3ConnectStatus from '../Web3ConnectStatus';\nimport { useStores } from '../../contexts/storesContext';\nimport { FiSettings, FiUser, FiBarChart2 } from \"react-icons/fi\";\nimport dxdaoIcon from \"assets/images/DXdao.svg\"\nimport Web3 from 'web3';\nimport { bnum } from '../../utils/helpers';\nimport Box from '../../components/common/Box';\n\nconst NavWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px 0px 0px 0px;\n`;\n\nconst NavSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItem = styled.div`\n  display: flex;\n  align-items: center;\n  color: var(--nav-text-light);\n  font-size: 16px;\n  line-height: 19px;\n  cursor: pointer;\n`;\n\nconst ItemBox = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n`;\n\nconst Header = observer(() => {\n  const NavItem = withRouter(\n    ({ route, history, children }) => {\n      return (\n        <MenuItem\n          onClick={() => {\n            history.push(route);\n          }}\n        >\n          {children}\n        </MenuItem>\n      );\n    }\n  );\n  \n  const {\n      root: { userStore, providerStore, daoStore, blockchainStore, configStore },\n  } = useStores();\n  \n  const votingMachines = configStore.getNetworkConfig().votingMachines;\n  const userInfo = userStore.getUserInfo();\n  const { active, account } = providerStore.getActiveWeb3React();\n  const ethBalance = active && userInfo.ethBalance ?\n    parseFloat(Number(Web3.utils.fromWei(userInfo.ethBalance.toString())).toFixed(2))\n    : 0;\n  const dxdBalance = active && userInfo.dxdBalance ?\n    parseFloat(Number(Web3.utils.fromWei(userInfo.dxdBalance.toString())).toFixed(2))\n    : 0;\n  const genBalance = active && userInfo.genBalance ?\n    parseFloat(Number(Web3.utils.fromWei(userInfo.genBalance.toString())).toFixed(2))\n    : 0;\n    \n   const repPercentage = active && daoStore.getDaoInfo().totalRep\n    ? bnum(userInfo.repBalance).times(100).div(bnum(daoStore.getDaoInfo().totalRep)).toFixed(4)\n    : bnum(0);\n\n  return (\n    <NavWrapper>\n      <NavSection>\n        <NavItem route=\"/?\">\n          <img alt=\"dxdao\" src={dxdaoIcon}/>\n        </NavItem>\n      </NavSection>\n      { active && blockchainStore.initialLoadComplete ?\n        <NavSection>\n          {votingMachines.dxd ? <ItemBox> {dxdBalance} DXD </ItemBox> : <div/> }\n          {votingMachines.gen ? <ItemBox> {genBalance} GEN </ItemBox> : <div/> }\n          <ItemBox> {repPercentage.toString()} % REP </ItemBox>\n          <Web3ConnectStatus text=\"Connect Wallet\" />\n          <a href={`${window.location.pathname}#/info`}><FiBarChart2 style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n          <a href={`${window.location.pathname}#/config`}><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n          <a href={`${window.location.pathname}#/user/${account}`}><FiUser style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n        </NavSection>\n      : <NavSection>\n          <Web3ConnectStatus text=\"Connect Wallet\" />\n        </NavSection>\n      }\n    </NavWrapper>\n  );\n});\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 24px 0px 32px;\n  color: var(--footer-text-gray);\n  flex-grow: 1;\n`;\n\nconst LeftFooter = styled.div`\nmargin-top: auto;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FooterItem = styled.div`\n  a {\n    text-decoration: none;\n    color: var(--footer-text-gray);\n    cursor: pointer;\n  }\n  a:hover {\n    color: var(--text-gray-onHover);\n  }a\n    \n`;\n\nconst FooterDivider = styled.div`\n  background: var(--footer-text-gray);\n  width: 4px;\n  height: 4px;\n  border-radius: 2px;\n  line-height: 24px;\n  margin: 7px;\n`;\n\nconst Footer = () => {\n  let history = useHistory();\n\n  return (\n    <FooterWrapper>\n      <LeftFooter>\n        <FooterItem>\n          <a href=\"https://dxdao.eth.link/#/\" target=\"_blank\" > Website </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/forum')}}  target=\"_self\" > Forum </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote\" target=\"_blank\" > Source Code </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/faq')}} > FAQ </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote/issues/new/choose\" target=\"_blank\" > Submit Issue </a>\n        </FooterItem>\n      </LeftFooter>\n    </FooterWrapper>\n\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from './contexts/storesContext';\nimport { FiZapOff, FiZap } from \"react-icons/fi\";\nimport { useLocation } from 'react-router-dom';\nimport Box from './components/common/Box';\n\nconst PageRouterWrapper = styled.div`\n  margin-top: 20px;\n`\n\nconst LoadingBox = styled(Box)`\n  \n .loader {\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 18px;\n    color: var(--dark-text-gray);\n    padding: 25px 0px;\n      \n    .svg {\n      height: 30px;\n      width: 30px;\n      margin-bottom: 10px;\n    }\n  }\n`\n\nconst PageRouter = observer(({ children }) => {\n    \n    const {\n        root: { providerStore, blockchainStore, configStore, ipfsService, etherscanService, pinataService, coingeckoService },\n    } = useStores();\n    let needsLoading = true;\n    \n    const { pathname } = useLocation();\n    const noLoading = ['/faq', '/config', '/forum'];\n    \n    // Start or auth services\n    ipfsService.start();\n    etherscanService.isAuthenticated();\n    pinataService.isAuthenticated();\n    coingeckoService.loadPrices();\n\n    const { active: providerActive } = providerStore.getActiveWeb3React();\n    if (!providerActive)\n      return (\n        <PageRouterWrapper>\n          <LoadingBox>\n            <div className=\"loader\"> <FiZapOff/> <br/> Connect to metamask </div>\n          </LoadingBox>\n        </PageRouterWrapper>\n      );\n    else if (!blockchainStore.initialLoadComplete && noLoading.indexOf(pathname) < 0)\n      return (\n        <PageRouterWrapper>\n          <LoadingBox>\n            <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n          </LoadingBox>\n        </PageRouterWrapper>\n      );\n    else {\n      if (configStore.getLocalConfig().pinOnStart)\n        pinataService.updatePinList();\n      return <PageRouterWrapper> {children} </PageRouterWrapper>;\n    }\n});\n\nexport default PageRouter;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst Button = styled.div`\n    background-color: ${({ theme }) => theme.activeButtonBackground};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 10px;\n    margin: 5px;\n`;\n\nconst ButtonWithRouter = withRouter(\n  ({ route, history, children }) => {\n    return (\n      <Button onClick={() => { history.push(route)}} >\n        {children}\n      </Button>\n    );\n  }\n);\nconst ActiveButton = ({ children, onClick = undefined, route = undefined }) => {\n    if (route) {\n      return <ButtonWithRouter route={route}>{children}</ButtonWithRouter>\n    } else {\n      return <Button onClick={onClick}>{children}</Button>;\n    }\n};\n\nexport default ActiveButton;\n","import moment from 'moment';\nimport { BigNumber } from './bignumber';\nimport { bnum } from './helpers';\n\nexport const formatDate = (date: Date) => {\n    return moment(date).format('DD.MM - HH:mm');\n};\n\nexport const timeToTimestamp = (timestamp: BigNumber) => {\n    if (timestamp.toNumber() > moment().unix())\n      return moment().to( moment.unix(timestamp.toNumber()) ).toString();\n    else\n      return \"\";\n};\n\nexport const addZero = (value) => {\n    return value > 9 ? value : `0${value}`;\n};\n","import { BigNumber } from './bignumber';\nimport { bnum } from './helpers';\n\nexport function formatFee(fee: BigNumber) {\n    return fee.times(100).toString() + '%';\n}\n\nexport function formatPercentage(\n    value: BigNumber,\n    decimals: number,\n    useLowerLimit = true\n): string {\n    if (value.lte(0.01) && value.gt(0) && useLowerLimit) {\n        return '<0.01%';\n    }\n    return `${value.times(100).decimalPlaces(decimals).toString()}%`;\n}\n\nexport function fromPercentage(value: BigNumber | string): BigNumber {\n    const bn = bnum(value.toString());\n    return bn.div(100);\n}\n\nexport function toPercentage(value: BigNumber | string): BigNumber {\n    const bn = bnum(value.toString());\n    return bn.times(100);\n}\n\nexport const normalizePriceValues = (\n    inputValue: BigNumber,\n    outputValue: BigNumber\n): {\n    normalizedInput: BigNumber;\n    normalizedOutput: BigNumber;\n} => {\n    const multiplier = bnum(1).div(inputValue);\n    return {\n        normalizedInput: bnum(1),\n        normalizedOutput: outputValue.times(multiplier),\n    };\n};\n\nexport const formatCurrency = (balance: BigNumber): string => {\n    const fmt = {\n      groupSize: 3,\n      groupSeparator: ' ',\n      decimalSeparator: '.'\n    };\n    return balance.toFormat(2, BigNumber.ROUND_DOWN, fmt);\n};\n\nexport const numDigits = (value: BigNumber): number => {\n    return value.toString().length;\n};\n\nexport const roundUpToScale = (\n    value: BigNumber\n): BigNumber => {\n    const placesValue = numDigits(value.integerValue())-1;\n    const scaledValue = value\n        .shiftedBy(-placesValue);\n    return scaledValue.integerValue(BigNumber.ROUND_UP).shiftedBy(placesValue);\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\nimport { timeToTimestamp } from '../utils/date';\nimport { normalizeBalance } from '../utils/token';\nimport { formatPercentage } from '../utils/number';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProposalsTableWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst ProposalsFilter = styled.select`\n  background-color: ${(props) => props.color || '#536DFE'};\n  border-radius: 4px;\n  color: white;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 34px;\n  text-align: center;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n  border: 0px;\n`;\n\nconst ProposalsNameFilter = styled.input`\n  background-color: white;\n  border: 1px solid #536DFE;\n  border-radius: 4px;\n  color: #536DFE;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\nconst ProposalTableHeaderActions = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  \n  span {\n    font-size: 20px;\n    padding: 10px 5px 5px 5px;\n  }\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: var(--light-text-gray);\n  padding: 20px 24px 8px 24px;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst TableHeader = styled.div`\n  width: ${(props) => props.width || '25%'};\n  text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n  overflow-y: scroll;\n  height: 350px;\n  \n  h3 {\n    text-align: center;\n    margin-top: 30px;\n    color: var(--dark-text-gray);\n  }\n`;\n\nconst TableRow = styled.div`\n  font-size: 16px;\n  line-height: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--line-gray);\n  padding: 16px 24px;\n  color: var(--dark-text-gray);\n  text-align: right;\n  cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  color: ${(props) => props.color};\n  width: ${(props) => props.width || '25%'};\n  justify-content: ${(props) => props.align};\n  font-weight: ${(props) => props.weight};\n  white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n  overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n  text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst ProposalsPage = observer(() => {\n    const {\n        root: { providerStore, daoStore, blockchainStore, configStore },\n    } = useStores();\n\n    const schemes = daoStore.getAllSchemes();\n    const votingMachines = configStore.getNetworkConfig().votingMachines;\n    const { library, active } = providerStore.getActiveWeb3React();\n    const [stateFilter, setStateFilter] = React.useState(\"Any Status\");\n    const [schemeFilter, setSchemeFilter] = React.useState(\"All Schemes\");\n    const [titleFilter, setTitleFilter] = React.useState(\"\");\n    const allProposals = daoStore.getAllProposals().map((cacheProposal) => {\n      const {status, boostTime, finishTime} = daoStore.getProposalStatus(cacheProposal.id);\n      cacheProposal.status = status; \n      cacheProposal.boostTime = boostTime; \n      cacheProposal.finishTime = finishTime;\n      return cacheProposal;\n    }).sort(function(a, b) { return a.finishTime - b.finishTime; })\n    .sort(function(a, b) { return b.stateInVotingMachine - a.stateInVotingMachine });\n    \n    function onStateFilterChange(newValue) { setStateFilter(newValue.target.value) }\n    function onTitleFilterChange(newValue) { setTitleFilter(newValue.target.value) }\n    function onSchemeFilterChange(newValue) { setSchemeFilter(newValue.target.value) }\n    \n    console.debug(\"All Proposals\", allProposals, allProposals.length, daoStore);\n\n    return (\n      <ProposalsTableWrapper>\n        <ProposalTableHeaderActions>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ProposalsNameFilter\n              type=\"text\"\n              placeholder=\"Search by proposal title\"\n              name=\"titleFilter\"\n              id=\"titleFilter\"\n              onChange={onTitleFilterChange}\n            ></ProposalsNameFilter>\n            <ProposalsFilter name=\"stateFilter\" id=\"stateSelector\" onChange={onStateFilterChange}>\n              <option value=\"Any Status\">Any Status</option>\n              <option value=\"Pending Boost\">Pending Boost</option>\n              <option value=\"Pre Boosted\">Pre Boosted</option>\n              <option value=\"Boosted\">Boosted</option>\n              <option value=\"In Queue\">Queue</option>\n              <option value=\"Quiet Ending Period\">Quiet Ending Period</option>\n              <option value=\"Passed\">Passed</option>\n              <option value=\"Pending Execution\">Pending Execution</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"Executed\">Executed</option>\n              <option value=\"Expired in Queue\">Expired</option>\n            </ProposalsFilter>\n            <ProposalsFilter name=\"schemeFilter\" id=\"schemeSelector\" onChange={onSchemeFilterChange}>\n              <option value=\"All Schemes\">All Schemes</option>\n              {schemes.map((scheme) => {\n                return <option key={scheme.address} value={scheme.address}>{scheme.name}</option>\n              })}\n            </ProposalsFilter>\n          </div>\n\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ActiveButton route=\"/new\">+ New Proposal</ActiveButton>\n          </div>\n        </ProposalTableHeaderActions>\n        <ProposalTableHeaderWrapper>\n          <TableHeader width=\"35%\" align=\"left\"> Title </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Scheme </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Status </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Stakes </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Votes  </TableHeader>\n        </ProposalTableHeaderWrapper>\n        { (allProposals.length === 0) ?\n          <TableRowsWrapper>\n            <h3>No Proposals Found</h3>\n          </TableRowsWrapper>\n          :\n          <TableRowsWrapper>\n            { allProposals.map((proposal, i) => {\n              if (\n                proposal \n                && ((stateFilter == 'Any Status') || (stateFilter != 'Any Status' && proposal.status == stateFilter))\n                && ((titleFilter.length == 0) || ((titleFilter.length > 0) && (proposal.title.indexOf(titleFilter) >= 0)))\n                && ((schemeFilter == 'All Schemes') || (proposal.scheme == schemeFilter))\n              ) {\n                const positiveStake = normalizeBalance(proposal.positiveStakes, 18);\n                const negativeStake = normalizeBalance(proposal.negativeStakes, 18);\n                const positiveVotesPercentage = formatPercentage(\n                  proposal.positiveVotes.div(proposal.repAtCreation), 2\n                );\n                const negativeVotesPercentage =  formatPercentage(\n                  proposal.negativeVotes.div(proposal.repAtCreation), 2\n                );\n                const timeToBoost = timeToTimestamp(proposal.boostTime);\n                const timeToFinish = timeToTimestamp(proposal.finishTime);\n                \n                const votingMachineTokenName = \n                (votingMachines.gen && daoStore.getVotingMachineOfProposal(proposal.id) == votingMachines.gen.address)\n                ? 'GEN' : 'DXD';\n                return (\n                  <Link key={\"proposal\"+i} to={\"/proposal/\"+proposal.id} style={{textDecoration: \"none\"}}>\n                    <TableRow>\n                      <TableCell width=\"35%\" align=\"left\" weight='500' wrapText=\"true\">\n                        {proposal.title.length > 0 ? proposal.title : proposal.id}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        {daoStore.getCache().schemes[proposal.scheme].name}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        <span style={{textAlign:\"center\"}}>\n                          {proposal.status} <br/>\n                          {(timeToBoost != \"\") ? <small>Boost {timeToBoost} <br/></small> : <span></span>}\n                          {(timeToFinish != \"\") ? <small>Finish {timeToFinish} </small> : <span></span>}\n                        </span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\"> \n                        <span style={{color: \"green\", flex:\"3\", textAlign:\"right\"}}>{positiveStake.toString()} {votingMachineTokenName} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"3\", textAlign:\"left\"}}> {negativeStake.toString()} {votingMachineTokenName}</span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\"> \n                        <span style={{color: \"green\", flex:\"3\", textAlign:\"right\"}}>{positiveVotesPercentage} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"3\", textAlign:\"left\"}}> {negativeVotesPercentage}</span>\n                      </TableCell>\n                    </TableRow>\n                  </Link>);\n                } else {\n                  return null;\n                }\n              }\n            )}\n          </TableRowsWrapper>\n        }\n      </ProposalsTableWrapper>\n    );\n});\n\nexport default ProposalsPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FaQuestionCircle } from \"react-icons/fa\";\n\n\nconst QuestionLink = styled.a`\n\n  color: var(--dark-text-gray);\n  \n  svg {\n    height: 15px;\n  }\n  svg:hover {\n    color: var(--text-gray-onHover);\n  }\n`;\n\nconst QuestionIcon = ({ question }) => {\n  return (\n    <QuestionLink href={\"/#/faq?question=\"+question} target=\"_self\">\n      <FaQuestionCircle> </FaQuestionCircle>\n    </QuestionLink>\n  );\n}\n\nexport default QuestionIcon;\n","\nconst ProposalTemplates = [\n    {\n      name: \"Contributor Proposal\",\n      title: \"[NAME] Contributor Proposal [DATE - DATE]\",\n      description: \n`# Background\n  - If this is your first contributor proposal, state any context for making the proposal, including:\n    - What position you will be filling – i.e. developer, marketing, governance, etc.\n    - Who you have been in contact with regarding the position (add their DAOtalk usernames)\n  - If you are a continuing contributor, state which products and areas you are working on / any other relevant background information\n# Timeframe\n  - State the date range, typically 2 months (2.5 months for first-time workers)\n# Scope of Contribution\n  - **Goals** :\n    - State the products and /or strategy areas you will be working under. E.g. Omen and Governance. Include both short-term goals that you seek to accomplish during the working period and long-term goals.\n  - **Responsibilities:**\n    - List the specific deliverables you will be either completing and / or working on during the working period. Try to state which deliverables you intend to complete within the period and which are long-term or ongoing projects.\n\n# Reflection\n- If You Are A Returning Contributor, Write a Self-Reflection\n  - State what you did well, what you did okay, and what you need to improve on\n# Compensation\n  - Experience Level : 1-5\n  - Time commitment :  Percent (%) of time\n  - [ETH/DAI AMT] : For 2 months of work at level \\_, to be sent half on the first payment proposal and half on the second payment proposal\n  - [DXD AMT] : Vested for 2 years with a 1 year cliff starting the [DATE WORK PERIOD STARTS]\n  - [% AMT REP] : For 2 months of work , to be sent half on the first payment proposal and half on the second payment proposal\n# Work Experience\n  - Prior DXdao work proposals (if applicable)\n  - Past Work for DXdao\n    - If a developer, Github links\n    - If a non-tech worker, doc links or described deliverables\n  - If new, past relevant work experience\n    - Developers : Github profile link\n    - Non-tech : suggested Linkedin / other references`\n    },{\n      name: \"Payment Proposal\",\n      title: \"[NAME] Payment Proposal [DATE - DATE]\",\n      description: \n`# Timeframe\n  - State the contributor proposal date range\n# Background\n  - State the context for making the contributor payment proposal, including:\n    - What position you will be filling – i.e. developer, marketing, governance, etc.\n    - Proposed Scope of Contribution\n    - Self-Reflection on Scope of Contribution\n    - Include the URL to the original proposal forum post\n# Deliverables\n- Include information around deliverables that were completed during your worker period\n    \n# Compensation\n  - Experience Level : 1-5\n  - Time commitment : Percent (%) of time\n  - [ETH/DAI AMT] : For second half payment proposal\n  - [DXD AMT] : Vested for 2 years with a 1 year cliff starting the [DATE WORK PERIOD STARTS]\n  - [% AMT REP]: For 2 second half payment proposal\n# Work Experience\n  - Prior DXdao work proposals (if applicable)\n  - Past Work for DXdao\n    - If a developer, Github links\n    - If a non-tech worker, doc links or described \n  - If new, past relevant work experience\n    - Developers : Github profile link\n    - Non-tech : suggested Linkedin / other references`\n    },{\n      name: \"Signal Proposal\",\n      title: \"Signal Proposal for [DAO_ACTION]\",\n      description: \n`## Description\n\n## Proposition\n\n## Action Plan`\n    }\n  ];\n\nexport default ProposalTemplates;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport { getTokenData } from '../config';\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE, ERC20_TRANSFER_SIGNATURE, sleep } from '../utils/helpers';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport MDEditor, { commands } from '@uiw/react-md-editor';\nimport { useHistory } from \"react-router-dom\";\nimport contentHash from 'content-hash';\nimport ProposalTemplates from '../config/proposalTemplates';\nimport { TXEvents } from '../enums';\n\nconst NewProposalFormWrapper = styled(Box)`\n    width: cacl(100% -40px);\n    display: flex;\n    padding: 10px 10px;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst SchemeInput = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n    \n    label {\n      text-align: center;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      padding: 10px 10px;\n    }\n\n`;\nconst PlaceHolders = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n    padding-bottom: 0px;\n`\nconst TitleInput = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n\n    input {\n      margin-top: 5px;\n      width: 100%;\n      height: 32px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n      padding: 0px 5px;\n    }\n    \n    select {\n      margin-left: 5px;\n      background-color: white;\n      min-width: 150px;\n      height: 34px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n    }\n`;\n\nconst TextActions = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: column;\n    margin: 10px 0px;\n    line-height: 30px;\n    \n`;\n\nconst CallRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n    \n    span {\n      text-align: center;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      padding: 10px 10px;\n    }\n`;\n\nconst RemoveButton = styled.div`\n    background-color: grey;\n    border: 1px solid black;\n    border-radius: 10px;\n    color: white;\n    height: 25px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 25px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 5px;\n    margin: 5px;\n`;\n\nconst AddButton = styled.div`\n    background-color: var(--blue-text);\n    border: 1px solid black;\n    border-radius: 10px;\n    color: white;\n    height: 25px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 25px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 5px;\n    margin: 5px;\n`;\n\nconst CallInput = styled.input`\n  width: ${(props) => props.width || '25%'};\n  height: 34px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n`;\n\nconst SelectEditable = styled.div`\n\n  position:relative;\n  background-color:white;\n  border:solid grey 1px; \n  width:120px;\n  height:18px;\n\n  select {\n    position:absolute; top:0px; left:0px; font-size:14px; border:none; width:120px; margin:0;\n  }\n  input {\n    position:absolute; top:0px; left:0px; width:100px; padding:1px; font-size:12px; border:none;\n  }\n  select:focus, .select-editable input:focus {\n    outline:none;\n  }\n`\n\nconst NewProposalPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        root: { providerStore, daoStore, configStore, daoService, ipfsService, pinataService, blockchainStore },\n    } = useStores();\n    \n    const { active, account } = providerStore.getActiveWeb3React();\n    \n    const schemes = daoStore.getAllSchemes();\n    const networkConfig = configStore.getNetworkConfig();\n    const schemeInLocalStorage = localStorage.getItem('dxvote-newProposal-scheme');\n\n    const defaultSchemeToUse = schemeInLocalStorage\n      ? schemes.findIndex((scheme) => scheme.address == schemeInLocalStorage)\n      : schemes.findIndex((scheme) => scheme.name == \"MasterWalletScheme\");\n\n    const [schemeToUse, setSchemeToUse] =\n      React.useState(defaultSchemeToUse > -1 ? schemes[defaultSchemeToUse] : schemes[0]);\n    const [titleText, setTitleText] = React.useState(localStorage.getItem('dxvote-newProposal-title'));\n    const [ipfsHash, setIpfsHash] = React.useState(\"\");\n    const [descriptionText, setDescriptionText] = React.useState(localStorage.getItem('dxvote-newProposal-description'));\n    const [calls, setCalls] = React.useState(\n      localStorage.getItem('dxvote-newProposal-calls') ? \n        JSON.parse(localStorage.getItem('dxvote-newProposal-calls'))\n      : []\n    );\n    \n    const [contributionRewardCalls, setContributionRewardCalls] = React.useState({\n      beneficiary: \"ZERO_ADDRESS\",\n      repChange: \"0\",\n      ethValue: \"0\",\n      externalToken: ZERO_ADDRESS,\n      tokenValue: \"0\"\n    });\n    \n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n\n    const [submitionState, setSubmitionState] = React.useState(0);\n    // 0 = Proposal Description not uploaded\n    // 1 = Uploading proposal description\n    // 2 = Proposal description uploaded\n    // 3 = Submiting new proposal tx\n    // 4 = Proposal creation tx submited\n    // 5 = Proposal creation tx receipt received\n    \n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    \n    if (ProposalTemplates[0].name != \"Custom\")\n      ProposalTemplates.unshift({name: \"Custom\", title: \"\", description: \"\" });\n\n    const uploadToIPFS = async function() {\n      if (titleText.length == 10) {\n        setErrorMessage(\"Title has to be at mimimum 10 characters length\");\n      } else if (descriptionText.length == 0) {\n        setErrorMessage(\"Description has to be at mimimum 100 characters length\");\n      } else {\n        setSubmitionState(1);\n        setErrorMessage(\"\");\n\n        const bodyTextToUpload = (schemeToUse.type == \"ContributionReward\" || schemeToUse.type == \"GenericMulticall\")\n          ? JSON.stringify({\n              description: descriptionText,\n              title: titleText,\n              url: \"\"\n            })\n          : descriptionText;\n          \n        const hash = await ipfsService.add(bodyTextToUpload);\n        setIpfsHash(hash);\n        \n        if (pinataService.auth) {\n          const pinataPin = await pinataService.pin(hash);\n          console.debug('[PINATA PIN]', pinataPin.data)\n        }\n        const ipfsPin = await ipfsService.pin(hash);\n        console.debug('[IPFS PIN]', ipfsPin)\n        \n        let uploaded = false;\n        while (!uploaded) {\n          const ipfsContent = await ipfsService.getContent(hash);\n          console.debug('[IPFS CONTENT]', ipfsContent);\n          if (ipfsContent == bodyTextToUpload)\n            uploaded = true;\n          await sleep(1000);\n        }\n\n        setSubmitionState(2);\n      }\n    }\n    \n    const createProposal = async function() {\n      console.debug('[RAW PROPOSAL]', schemeToUse, calls, titleText, ipfsHash);\n      setSubmitionState(3);\n\n      const { library } = providerStore.getActiveWeb3React();\n      \n      let to = [], data = [], value = [];\n      try {\n        \n        if ((schemeToUse.type != \"ContributionReward\")) {\n          const callToController = (schemeToUse.controllerAddress == networkConfig.controller);\n          \n          to = calls.map((call) => {\n            return callToController ? networkConfig.controller : call.to;\n          });\n\n          data = calls.map((call) => {\n            if (call.to == \"\")\n              return \"\";\n            \n            let callData;\n            \n            if (call.callType == \"simple\") {\n              let callDataFunctionSignature = \"0x0\";\n              let callDataFunctionParamsEncoded = \"\";\n              \n              if (call.functionName.length == 0) {\n                callDataFunctionSignature = \"0x0\";\n              } else {\n                callDataFunctionSignature = library.eth.abi.encodeFunctionSignature(call.functionName)\n              }\n              \n              if (call.functionParams.length > 0) {\n                const parameters = (call.functionName.length > 0 && call.functionParams.length > 0)\n                  ? call.functionName.substring(\n                    call.functionName.indexOf(\"(\") + 1, call.functionName.lastIndexOf(\")\")).split(\",\")\n                  : [];\n                callDataFunctionParamsEncoded = parameters.length > 0 ? library.eth.abi.encodeParameters(\n                    parameters,\n                    call.functionParams\n                  ).substring(2)\n                  : \"\";\n              }\n              callData = callDataFunctionSignature + callDataFunctionParamsEncoded;\n            } else {\n              callData = call.functionParams[0];\n            }\n            if (callToController && call.to != networkConfig.controller) {\n              return daoService.encodeControllerGenericCall(\n                call.to,\n                callData,\n                call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n                : call.value\n              )\n            } else {\n              return callData;\n            }\n          });\n\n          value = calls.map((call) => {\n            return callToController ? \"0\"\n            : call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n              : call.value\n          });\n        }\n        \n        const proposalData = (schemeToUse.type == \"ContributionReward\")\n        ? {\n          beneficiary: contributionRewardCalls.beneficiary,\n          reputationChange: contributionRewardCalls.repChange,\n          ethValue: contributionRewardCalls.ethValue,\n          externalToken: contributionRewardCalls.externalToken,\n          tokenValue: contributionRewardCalls.tokenValue,\n          descriptionHash: contentHash.fromIpfs(ipfsHash)\n        } : {\n          to, data, value, titleText, descriptionHash: contentHash.fromIpfs(ipfsHash) \n        };\n      \n        console.debug('[PROPOSAL]', schemeToUse.address, proposalData);\n      \n        daoStore.createProposal(\n          schemeToUse.address,\n          schemeToUse.type,\n          proposalData,\n        ).on(TXEvents.TX_HASH, (hash) => {\n            console.debug(\"[TX_SUBMITTED]\", hash);\n            setSubmitionState(4);\n            setErrorMessage(\"\");\n          })\n          .on(TXEvents.RECEIPT, (hash) => {\n            console.debug(\"[TX_RECEIPT]\", hash);\n            setSubmitionState(5);\n          })\n          .on(TXEvents.TX_ERROR, (txerror) => {\n            console.error(\"[TX_ERROR]\", txerror);\n            setSubmitionState(2);\n            setErrorMessage(txerror.message);\n          })\n          .on(TXEvents.INVARIANT, (error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          })\n          .catch((error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          });\n      } catch (error) {\n        console.error('[PROPOSAL_ERROR]', error);\n        setSubmitionState(2);\n        setErrorMessage(error.message);\n      }\n      \n    }\n    \n    function onDescriptionChange(newValue) {\n      if (submitionState < 1) {\n        setDescriptionText(newValue);\n        localStorage.setItem('dxvote-newProposal-description', newValue);\n      }\n    }\n    \n    function onTitleChange(newValue) {\n      if (submitionState < 1) {\n        setTitleText(newValue.target.value);\n        localStorage.setItem('dxvote-newProposal-title', newValue.target.value);\n      }\n    }\n    \n    let callToAny = false;\n    let callAnyFunction = false;\n    let allowedToCall = [];\n    \n    if (schemeToUse.controllerAddress == networkConfig.controller) {\n      allowedToCall.push({ value: networkConfig.controller, name: `DXController ${networkConfig.controller}` });\n    }\n    // TO DO: Check that the permission regsitry is allowed, we assume it is\n    allowedToCall.push({ value: networkConfig.permissionRegistry, name: `PermissionRegistry ${networkConfig.permissionRegistry}` });\n    \n    // Add ERC20 tokens\n    // if (networkConfig.tokens)\n    //   Object.keys(networkConfig.tokens).map((tokenAddress) => {\n    //     allowedToCall.push({\n    //       value: tokenAddress,\n    //       name: `${networkConfig.tokens[tokenAddress].name} ${tokenAddress}`\n    //     });\n    //   });\n      \n    function setCallsInState(calls) {\n      localStorage.setItem('dxvote-newProposal-calls', JSON.stringify(calls));\n      setCalls(calls);\n      forceUpdate();\n    }\n    \n    function setContributionRewardCallsInState(contributionRewardCalls) {\n      setContributionRewardCalls(contributionRewardCalls);\n      forceUpdate();\n    }\n\n    function addCall() {\n      calls.push({\n        callType: schemeToUse.type == \"WalletScheme\" ? \"simple\" : \"advanced\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        value: \"\"\n      })\n      setCallsInState(calls);\n    };\n    \n    function removeCall(proposalIndex) {\n      calls.splice(proposalIndex, 1);\n      setCallsInState(calls);\n    };\n    \n    function changeCallType(proposalIndex) {\n      calls[proposalIndex] = {\n        callType: calls[proposalIndex].callType === \"simple\" ? \"advanced\" : \"simple\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        value: \"\"\n      }\n      setCallsInState(calls);\n    };\n    \n    function onToSelectChange(callIndex, event) {\n      const toAddress = event.target.value;\n\n      calls[callIndex].to = toAddress;\n      \n      if (toAddress && toAddress.length > 0) {\n        calls[callIndex].allowedFunctions = [];\n        if (toAddress == networkConfig.controller) {\n          calls[callIndex].allowedFunctions.push({\n            value: \"mintReputation(uint256,address,address)\",\n            params: \"uint256 _amount,address _to,address _avatar\"\n          });\n          calls[callIndex].allowedFunctions.push({\n            value: \"burnReputation(uint256,address,address)\",\n            params: \"uint256 _amount,address _from,address _avatar\"\n          });\n          calls[callIndex].allowedFunctions.push({\n            value: \"registerScheme(address,bytes32,bytes4,address)\",\n            params: \"address _scheme,bytes32 _paramsHash,bytes4 _permissions,address _avatar\"\n          });\n          calls[callIndex].allowedFunctions.push({\n            value: \"unregisterScheme(address,address)\",\n            params: \"address _scheme,address _avatar\"\n          });\n          calls[callIndex].allowedFunctions.push({\n            value: \"genericCall(address,bytes,addres,uint256)\",\n            params: \"address _contract,bytes calldata _data,Avatar _avatar,uint256 _value\"\n          });\n        } else if (toAddress == networkConfig.permissionRegistry) {\n          if (schemeToUse.controllerAddress == networkConfig.controller) {\n            calls[callIndex].allowedFunctions.push({\n              value: \"setTimeDelay(uint256)\",\n              params: \"uint256 newTimeDelay\"\n            });\n            calls[callIndex].allowedFunctions.push({\n              value: \"setAdminPermission(address,address,address,bytes4,uint256,bool)\",\n              params: \"address asset, address from,address to,bytes4 functionSignature,uint256 valueAllowed,bool allowed\"\n            });\n          } else {\n            calls[callIndex].allowedFunctions.push({\n              value: \"setPermission(address,address,bytes4,uint256,bool)\",\n              params: \"address asset,address to,bytes4 functionSignature,uint256 valueAllowed,bool allowed\"\n            });\n          }\n        } else if ((toAddress == networkConfig.votingMachineToken) || getTokenData(toAddress)) {\n          calls[callIndex].allowedFunctions.push({ value: \"transfer(address,uint256)\", params: `address to,uint256 value` });\n          calls[callIndex].allowedFunctions.push({ value: \"approve(address,uint256)\", params: `address to,uint256 value` });\n          calls[callIndex].allowedFunctions.push({ value: \"transferFrom(address,address,uint256)\", params: `address from,address to,uint256 value` });\n        } else {\n          schemeToUse.callPermissions.map((callPermission) => {\n            if (callPermission.fromTime > 0)\n              if ((callPermission.asset == ZERO_ADDRESS) && (callPermission.to == toAddress)){\n                if (callPermission.functionSignature == ANY_FUNC_SIGNATURE)\n                  callAnyFunction = true;\n                else\n                  calls[callIndex].allowedFunctions.push({ value: callPermission.functionSignature, params: callPermission.functionSignature });\n              } else if (callPermission.asset == toAddress) {\n                calls[callIndex].allowedFunctions.push({ value: \"transfer(address,uint256)\", params: `address to,uint256 value` });\n                calls[callIndex].allowedFunctions.push({ value: \"approve(address,uint256)\", params: `address to,uint256 value` });\n                calls[callIndex].allowedFunctions.push({ value: \"transferFrom(address,address,uint256)\", params: `address from,address to,uint256 value` });\n              }\n          });\n        }\n      }\n      setCallsInState(calls);\n    }\n    \n    function onFunctionSelectChange(callIndex, functionSelected, params) {\n      calls[callIndex].functionName = functionSelected.target.value;\n      \n      if (calls[callIndex].callType == \"simple\")\n        calls[callIndex].functionParams = params.split(\",\").map(() => \"\");\n        \n      setCallsInState(calls);\n    }\n    \n    function onFunctionParamsChange(callIndex, event, paramIndex) {\n      calls[callIndex].functionParams[paramIndex] = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onValueChange(callIndex, event) {\n      calls[callIndex].value = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onCallDataChange(callIndex, event) {\n      calls[callIndex].data = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onContributionRewardValueChange(key, value) {\n      console.log(key, value)\n      contributionRewardCalls[key] = value;\n      setContributionRewardCallsInState(contributionRewardCalls);\n    }\n    \n    function onSchemeChange(event) {\n      setSchemeToUse(schemes[event.target.value]);\n      localStorage.setItem('dxvote-newProposal-scheme', schemes[event.target.value].address);\n      calls.splice(0, calls.length);\n      setContributionRewardCalls({\n        beneficiary: \"\",\n        repChange: \"0\",\n        ethValue: \"0\",\n        externalToken: ZERO_ADDRESS,\n        tokenValue: \"0\"\n      })\n      setCallsInState(calls);\n    }\n    \n    function onProposalTemplate(event) {\n      if (ProposalTemplates[event.target.value].name != 'Custom') {\n        setTitleText(ProposalTemplates[event.target.value].title);\n        setDescriptionText(ProposalTemplates[event.target.value].description);\n        calls.splice(0, calls.length);\n        setCallsInState(calls);\n      }\n    }\n    schemeToUse.callPermissions.map((callPermission) => {\n      if (callPermission.fromTime > 0)\n        if (callPermission.asset == ZERO_ADDRESS) {\n          if (callPermission.to == ANY_ADDRESS){\n            callToAny = true;\n            allowedToCall.push({ value: \"\", name: \"Custom\" });\n            if (callPermission.functionSignature == ANY_FUNC_SIGNATURE)\n              callAnyFunction = true;\n          }\n          else {\n            if (allowedToCall.findIndex((allowedPermission) => allowedPermission.value == callPermission.to) < 0)\n              allowedToCall.push({ value: callPermission.to, name: callPermission.to });\n          }\n        } else {\n          if (allowedToCall.findIndex((allowedPermission) => allowedPermission.value == callPermission.asset) < 0)\n            allowedToCall.push({ value: callPermission.asset, name: `ERC20 ${callPermission.asset}` });\n        }\n    });\n    \n    return (\n      <NewProposalFormWrapper>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}>\n          <PlaceHolders>\n            <span style={{width: \"100%\"}}>Title</span>\n            <span style={{minWidth: \"150px\"}}>Scheme <Question question=\"2\"/></span>\n            <span style={{minWidth: \"150px\"}}>Template</span>\n          </PlaceHolders>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <TitleInput>\n            <input type=\"text\" placeholder=\"Proposal Title\" onChange={onTitleChange} value={titleText}/>\n            <select name=\"scheme\" id=\"schemeSelector\" onChange={onSchemeChange} defaultValue={defaultSchemeToUse}>\n              {schemes.map((scheme, i) =>{\n                if (scheme.type == \"WalletScheme\" || scheme.type == \"ContributionReward\" ||scheme.type == \"GenericMulticall\")\n                  return <option key={scheme.address} value={i}>{scheme.name}</option>\n              })}\n            </select>\n            <select name=\"proposalTemplate\" id=\"proposalTemplateSelector\" onChange={onProposalTemplate}>\n              {ProposalTemplates.map((template, i) =>{\n                return <option key={\"proposalTemplate\"+i} value={i}>{template.name}</option>\n              })}\n            </select>\n          </TitleInput>\n        </div>\n        {(submitionState < 1) ?\n          <MDEditor\n            value={descriptionText}\n            disabled={submitionState > 0}\n            onChange={onDescriptionChange}\n            preview=\"edit\"\n            height=\"300\"\n            minheights=\"300\"\n            maxheights=\"1000\"\n            commands={[\n              commands.bold,\n              commands.italic,\n              commands.strikethrough,\n              commands.hr,\n              commands.title,\n              commands.divider,\n              commands.link,\n              commands.quote,\n              commands.code,\n              commands.image,\n              commands.unorderedListCommand,\n              commands.orderedListCommand,\n              commands.checkedListCommand,\n            ]}\n          />\n          : <div/>\n        }\n        <h2>Description Preview</h2>\n        <MDEditor.Markdown source={descriptionText} style={{\n          backgroundColor: \"white\",\n          borderRadius: \"5px\",\n          border: \"1px solid gray\",\n          padding: \"20px 10px\"\n        }} />\n        {(schemeToUse.type == \"ContributionReward\" || schemeToUse.type == \"GenericMulticall\")\n          || (schemeToUse.type == \"WalletScheme\" && schemeToUse.controllerAddress == networkConfig.controller)\n          ? <h2>Calls executed from the avatar <Question question=\"9\"/></h2>\n          : <h2>Calls executed from the scheme <Question question=\"9\"/></h2>\n        }\n      \n        {(schemeToUse.type == \"ContributionReward\")\n        ? \n        // If scheme to use is COntribution Rewar display a different form with less fields\n        <div>\n          <CallRow>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Beneficiary Account</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>REP Change</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>ETH Value (in WEI)</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Address of Token</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Token Amount (in WEI)</span>\n          </CallRow>\n          <CallRow>\n            <CallInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"beneficiary\", event.target.value)}\n              value={contributionRewardCalls.beneficiary}\n              width=\"50%\"\n            />\n            <CallInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"repChange\", event.target.value)}\n              value={contributionRewardCalls.repChange}\n              width=\"50%\"\n            />\n            <CallInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"ethValue\", event.target.value)}\n              value={contributionRewardCalls.ethValue}\n              width=\"50%\"\n            />\n            <CallInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"externalToken\", event.target.value)}\n              value={contributionRewardCalls.externalToken}\n              width=\"50%\"\n            />\n            <CallInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"tokenValue\", event.target.value)}\n              value={contributionRewardCalls.tokenValue}\n              width=\"50%\"\n            />\n          </CallRow>\n        </div>\n        \n        : \n        // If the scheme is GenericMulticall allow only advanced encoded calls\n        // At last if the scheme used is a Wallet Scheme type allow a complete edition of the calls :)\n          <div>\n            {calls.map((call, i) => \n              <CallRow key={\"call\"+i}>\n                <span>#{i}</span>\n\n                <CallInput\n                  list=\"allowedCalls\"\n                  value={calls[i].to}\n                  onChange={(value) => {onToSelectChange(i, value)}}\n                  width=\"20%\"\n                />\n                {(schemeToUse.type == \"WalletScheme\")\n                  ? <datalist id=\"allowedCalls\">\n                    {allowedToCall.map((allowedCall, allowedCallIndex) =>{\n                      return (\n                        <option key={\"toCall\"+allowedCallIndex} value={allowedCall.value}>\n                          {allowedCall.name}\n                        </option>\n                      );\n                    })}\n                  </datalist>\n                  : <div/>\n                }\n                \n                { call.callType === \"simple\" ?\n                  \n                  <div style={{display: \"flex\", width: call.callType === \"simple\" ? \"60%\" : \"50%\"}}>\n                    <CallInput\n                      list=\"allowedFunctions\"\n                      value={calls[i].functionName}\n                      onChange={(event) => {\n                        const selectedFunction = calls[i].allowedFunctions\n                          .find((allowedFunc) => allowedFunc.value == event.target.value);\n                        onFunctionSelectChange(\n                          i,\n                          event,\n                          selectedFunction ? selectedFunction.params : \"\"\n                        )\n                      }}\n                      width=\"40%\"\n                    />\n                    <datalist id=\"allowedFunctions\">\n                      {calls[i].allowedFunctions.map((allowedFunc, allowedFuncIndex) =>{\n                        return (\n                          <option key={\"functionToCall\"+allowedFuncIndex} value={allowedFunc.value}/>\n                        );\n                      })}\n                    </datalist>\n                    \n                    <div style={{display: \"flex\", width: \"100%\", flexDirection: \"column\", paddingRight: \"10px\"}}>\n                      {calls[i].functionParams.length == 0 ?\n                        <CallInput \n                          key={\"functionParam00\"}\n                          disabled\n                          type=\"text\"\n                          placeholder=\"Select address to call and function\"\n                          width=\"100%\"\n                          style={{marginTop: \"0px\"}}\n                        /> : <div/>\n                      }\n                      {calls[i].functionParams.map((funcParam, funcParamIndex) => {\n                        if (funcParam == \" address _avatar\" || funcParam == \" Avatar _avatar\" ) {\n                          calls[i].functionParams[funcParamIndex] = networkConfig.avatar;\n                        } else {\n                          let placeholder = \"\";\n                          if (calls[i].functionName.indexOf(',') > 0) {\n                            placeholder = calls[i].functionName.substring(\n                              calls[i].functionName.indexOf(\"(\") + 1, calls[i].functionName.lastIndexOf(\")\")\n                            ).split(\",\")[funcParamIndex]\n                          }\n                          return (\n                            <CallInput \n                              key={\"functionParam\"+funcParamIndex}\n                              type=\"text\"\n                              onChange={(value) => onFunctionParamsChange(i, value, funcParamIndex)}\n                              value={calls[i].functionParams[funcParamIndex]}\n                              placeholder={placeholder}\n                              width=\"100%\"\n                              style={{marginTop: funcParamIndex > 0 ? \"5px\": \"0px\"}}\n                            />\n                          );\n                        }\n                      })}\n                    </div>\n                  </div>\n                :\n                  <CallInput \n                    type=\"text\"\n                    onChange={(value) => onFunctionParamsChange(i, value, 0)}\n                    value={calls[i].functionParams}\n                    placeholder=\"0x...\"\n                    width=\"100%\"\n                  />\n                }\n                \n                <CallInput\n                  type=\"text\"\n                  onChange={(value) => onValueChange(i, value)}\n                  value={calls[i].value}\n                  width=\"10%\"\n                  placeholder={calls[i].callType === \"advanced\" ? \"WEI\" : \"ETH\"}\n                />\n                \n                <RemoveButton onClick={() => {removeCall(i)}}>X</RemoveButton>\n                { schemeToUse.type == \"WalletScheme\"\n                  ? <RemoveButton onClick={() => {changeCallType(i)}}>\n                    {calls[i].callType === \"advanced\" ? \"Simple\" : \"Advanced\"}\n                    </RemoveButton>\n                  : <div/>\n                }\n              </CallRow>\n            )}\n            \n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n              <ActiveButton onClick={addCall}>Add Call</ActiveButton>\n            </div>\n            \n          </div>\n        }\n        \n        {\n          (errorMessage.length > 0) ?\n            <TextActions>\n              <span>\n                {errorMessage}\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        { (submitionState > 1) ?\n            <TextActions>\n              <span>\n                Uploaded to IPFS:\n                  <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\">https://ipfs.io/ipfs/{ipfsHash}</a>\n                <br/>\n                Check before submitting proposal\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        \n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n          {\n            (submitionState == 0) ?\n              <ActiveButton onClick={uploadToIPFS}> Upload to IPFS </ActiveButton>\n            : (submitionState == 1) ?\n              <ActiveButton> Uploading descritpion to IPFS.. </ActiveButton>\n            : (submitionState == 2) ?\n              <ActiveButton onClick={createProposal}>Submit Proposal</ActiveButton>\n            : (submitionState == 3) ?\n              <ActiveButton>Submiting TX...</ActiveButton>\n            : (submitionState == 4) ?\n              <ActiveButton>Waiting for TX...</ActiveButton>\n            :\n              <ActiveButton route=\"/\">Back to Proposals</ActiveButton>\n          }\n        </div>\n        \n      </NewProposalFormWrapper>\n    );\n});\n\nexport default NewProposalPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Copy from './Copy';\nimport { useStores } from '../../contexts/storesContext';\nimport { FiExternalLink } from \"react-icons/fi\";\n\nconst AddressLink = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  a {\n    padding: 2px 5px;\n    font-family: var(--roboto);\n    line-height: 17px;\n    letter-spacing: 0.2px;\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst BlockchainLink = ({ text, size = 'default', type = 'default', toCopy, onlyIcon}) => {\n  \n    const {\n        root: { configStore },\n    } = useStores();\n    \n    const networkName = configStore.getActiveChainName();\n\n    function formarText(toFormat) {\n        const start = toFormat.slice(0, 6);\n        const end = toFormat.slice(-4);\n\n        switch (size) {\n          case \"short\":\n            return `${start}..`;\n          case \"long\":\n            return toFormat;\n          default:\n            return `${start}...${end}`;\n        }\n    }\n    \n    function href() {\n        switch (type) {\n          case \"user\":\n            return `${window.location.pathname}#/user/${text}`;\n          case \"address\":\n            if (networkName == 'arbitrum')\n              return `https://explorer.arbitrum.io/#/address/${text}`\n            else if (networkName == 'arbitrumTestnet')\n              return `https://rinkeby-explorer.arbitrum.io/#/address/${text}`\n            else if (networkName == 'mainnet')\n              return `https://etherscan.io/address/${text}`\n            else if (networkName == 'xdai')\n              return `https://blockscout.com/xdai/mainnet/address/${text}`\n            else\n              return `https://${networkName}.etherscan.io/address/${text}`\n          default:\n            if (networkName == 'arbitrum')\n              return `https://explorer.arbitrum.io/#/tx/${text}`\n            else if (networkName == 'arbitrumTestnet')\n              return `https://rinkeby-explorer.arbitrum.io/#/tx/${text}`\n            else if (networkName == 'mainnet')\n              return `https://etherscan.io/tx/${text}`\n            else if (networkName == 'xdai')\n              return `https://blockscout.com/xdai/mainnet/tx/${text}`\n            else\n              return `https://${networkName}.etherscan.io/tx/${text}`\n        }\n    }\n\n    return (\n        <AddressLink>\n          <a href={href()} target=\"_blank\">{ onlyIcon ? <FiExternalLink/> : formarText(text)}</a>\n          {toCopy ? <Copy toCopy={text} /> : <div/> }\n        </AddressLink>\n    );\n};\n\nexport default BlockchainLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useHistory } from \"react-router-dom\";\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport { useLocation } from 'react-router-dom';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Box from '../components/common/Box';\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst UserPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        root: { daoStore, blockchainStore },\n    } = useStores();\n    const userAddress = useLocation().pathname.split(\"/\")[2];\n    const userEvents = daoStore.getUserEvents(userAddress);\n    const userInfo = daoStore.getUser(userAddress);\n    const governanceInfo = daoStore.getGovernanceInfo().ranking.find(user => user.address == userAddress);\n    let proposalsToRedeem = [];\n    \n    userEvents.votes.map((vote) => {\n      const proposal = daoStore.getProposal(vote.proposalId);\n      const voteParameters = daoStore.getVotingParametersOfProposal(vote.proposalId);\n      if ((\n        (proposal.stateInVotingMachine == 1) \n        ||\n        (\n          voteParameters.votersReputationLossRatio > 0\n          && vote.timestamp < proposal.boostedPhaseTime\n          && proposal.winningVote == vote.vote\n        )\n      ) && (proposalsToRedeem.indexOf(vote.proposalId) < 0)) {\n          proposalsToRedeem.push(vote.proposalId);\n      }\n    })\n    \n    userEvents.stakes.map((stake) => {\n      const proposal = daoStore.getProposal(stake.proposalId);\n      if (proposalsToRedeem.indexOf(stake.proposalId) < 0 && proposal.winningVote == stake.vote)\n        proposalsToRedeem.push(stake.proposalId);\n    });\n    \n    userEvents.redeems.map((redeem) => {\n      if (proposalsToRedeem.indexOf(redeem.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeem.proposalId) , 1);\n    });\n    \n    userEvents.redeemsRep.map((redeemRep) => {\n      if (proposalsToRedeem.indexOf(redeemRep.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeemRep.proposalId) , 1);\n    });\n\n    return (\n      <Box style={{padding: \"10px 20px\"}}>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <h2 style={{ display: \"flex\", alignItems:\"center\"}}>\n            User: <BlockchainLink size=\"long\" text={userAddress} toCopy/>\n          </h2>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n          </div>\n        </div>\n        \n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {userInfo.repPercentage.toFixed(2)} % REP\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 1).length} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 2).length} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.newProposalEvents.length} Proposals\n          </InfoBox>\n        </div>\n        \n        <h2> Redeems Left </h2>\n        {proposalsToRedeem.length == 0 ? <span> No redeems left </span> : <div/>}\n        {proposalsToRedeem.map((proposalId, i) => {\n          return(\n            <span\n              key={\"proposalLink\"+i}\n              onClick={() => { history.push(`/proposal/${proposalId}`)}}\n              style={{  \n                padding: \"6px 0px\", cursor: \"pointer\"\n              }}\n            >\n              <span> Proposal {proposalId} </span>\n            </span>\n          );\n        })}\n        \n        <h2> History </h2>\n        {userEvents.history.map((historyEvent, i) => {\n          return(\n            <div key={\"userHistoryEvent\"+i} style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"6px 0px\",\n              borderBottom: i < userEvents.history.length - 1 ? \"1px solid\": \"\"\n            }}>\n              <span> {historyEvent.text} </span> \n              <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n            </div>\n          );\n        })}\n      </Box>\n    );\n});\n\nexport default UserPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport moment from 'moment';\nimport { FiPlayCircle, FiFastForward } from \"react-icons/fi\";\nimport Slider from '@material-ui/core/Slider';\nimport MDEditor from '@uiw/react-md-editor';\nimport { useHistory } from \"react-router-dom\";\nimport contentHash from 'content-hash';\nimport { bnum } from '../utils/helpers';\nimport { timeToTimestamp } from '../utils/date';\nimport { calculateStakes } from '../utils/proposals';\nimport { formatBalance } from '../utils/token';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\nimport {\n  WalletSchemeProposalState,\n  VotingMachineProposalState\n} from '../enums';\n\nconst ProposalInformationWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoSidebarBox = styled(Box)`\n  max-width: 400px;\n  min-width: 300px;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  padding: 10px 15px;\n`;\n\nconst ProposalInfoSection = styled.div`\n  max-width: 900px;\n  width: 100%;\n  flex-direction: column;\n  margin-right: 15px;\n`\n\nconst ProposalInfoBox = styled(Box)`\n  max-width: 900px;\n  overflow-wrap: break-word;\n  padding: 20px 15px 10px 15px;\n  justify-content: flex-start;\n  overflow: auto;\n`\n\nconst SidebarDivider = styled.div`\n  border-bottom: 1px solid gray;\n  margin: 5px 10px;\n`;\n\nconst SidebarRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 5px 0px;\n\n  .timeText {\n    font-size: 20;\n    margin-left: -10px;\n    width:100%;\n    padding-top: 5px;\n  }\n  \n  span {\n    margin-bottom: 5px;\n  }\n`;\n\nconst AmountInput = styled.input`\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: 60px;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\n\nconst AmountBadge = styled.span`\n    background-color: ${(props) => props.color || 'inherit'};\n    border-radius: 50%;\n    color: white;\n    padding: 2px 6px;\n    text-align: center;\n    margin: 5px;\n`;\n\nconst ActionButton = styled.div`\n    background-color: ${(props) => props.color || '#536DFE'};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    width: max-content;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    padding: 0px 10px;\n    margin: 5px;\n    \n    display: flex;\n    align-items: center;\n    \n    svg {\n      margin-right: 4px;\n    }\n`;\n\nconst AmountSlider = styled(Slider)({\n    maxWidth: \"40%\",\n    margin: \"auto\"\n});\n\n\nconst voteMarks = [\n  { value: 0, label: 'NO', },\n  { value: 50, label: '', },\n  { value: 100, label: 'YES', },\n];\n\nconst ProposalPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        root: { providerStore, daoStore, configStore, daoService, ipfsService, userStore, blockchainStore },\n    } = useStores();\n    const votingMachines = configStore.getNetworkConfig().votingMachines;\n    const proposalId = useLocation().pathname.split(\"/\")[2];\n    const proposal = daoStore.getProposal(proposalId);\n    \n    if (!proposal)\n      history.push('/')\n    \n    const votingMachineUsed = daoStore.getVotingMachineOfProposal(proposalId);\n    const scheme = daoStore.getScheme(proposal.scheme);\n    const { dxdApproved, genApproved } = userStore.getUserInfo(); \n    const { active, account, library } = providerStore.getActiveWeb3React();\n    const [stakeAmount, setStakeAmount] = React.useState(100);\n    const [votePercentage, setVotePercentage] = React.useState(0);\n    const [proposalDescription, setProposalDescription] = React.useState(\n      \"## Getting proposal description from IPFS...\"\n    );\n    const [proposalTitle, setProposalTitle] = React.useState(\n      proposal.title.length > 0 ? proposal.title : \"Getting proposal title from IPFS...\"\n    );\n    \n    const votingMachineTokenName = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? 'GEN' : 'DXD';\n    const votingMachineTokenApproved = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? genApproved : dxdApproved;\n      \n    const proposalEvents = daoStore.getProposalEvents(proposalId);\n    console.debug(\"[Scheme]\", scheme);\n    \n    let votedAmount = bnum(0);\n    let positiveVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"1\").length;\n    let negativeVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"2\").length;\n    let stakedAmount = bnum(0);\n    let positiveStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"1\").length;\n    let negativeStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"2\").length;\n    \n    const {\n      userRep: userRepAtProposalCreation\n    } = configStore.getActiveChainName().indexOf('arbitrum') > -1 ?\n      daoService.getRepAt(proposal.creationEvent.l2BlockNumber, true)\n      : daoService.getRepAt(proposal.creationEvent.l1BlockNumber);\n\n    const {status, boostTime, finishTime} = daoStore.getProposalStatus(proposalId);\n\n    const totalRepAtProposalCreation = proposal.repAtCreation;\n    // @ts-ignore\n    try {\n      if (proposalDescription == \"## Getting proposal description from IPFS...\")\n        ipfsService.getContent(contentHash.decode(proposal.descriptionHash)).then((data) => {\n          if (scheme.type == 'WalletScheme') {\n            setProposalDescription(data);\n          } else {\n            setProposalTitle(JSON.parse(data).title);\n            setProposalDescription(JSON.parse(data).description);\n          }\n        });\n    } catch (error) {\n      console.error(\"[IPFS ERROR]\",error);\n      setProposalTitle(\"Error getting proposal title from ipfs\");\n      setProposalDescription(\"Error getting proposal description from IPFS\");\n    }\n    \n    proposalEvents.votes.map((vote) => {\n      if (vote.voter === account) {\n        votedAmount = bnum(vote.amount);\n      };\n    });\n      \n    proposalEvents.stakes.map((stake) => {\n      if (stake.staker === account && stake.vote.toString() == \"1\") {\n        stakedAmount = stakedAmount.plus(stake.amount);\n      } else if (stake.staker === account && stake.vote.toString() == \"2\") {\n        stakedAmount = stakedAmount.minus(stake.amount);\n      }\n    });\n    \n    console.debug(\"[Proposal]\", proposal);\n    console.debug(\"[Proposal events]\", proposalEvents);\n    \n    const executionTimeoutTime = scheme.type == \"WalletScheme\"\n      ? proposal.submittedTime.plus(scheme.maxSecondsForExecution)\n      : bnum(0);\n    \n    let proposalCallTexts = new Array(proposal.to.length);\n    for (var p = 0; p < proposal.to.length; p++) {\n      if (\n        scheme.controllerAddress === configStore.getNetworkConfig().controller\n        || proposal.to[p] === configStore.getNetworkConfig().controller\n      ) {\n        const decodedGenericCall = daoService.decodeControllerCall(proposal.callData[p]);\n        proposalCallTexts[p] = decodedGenericCall;\n      } else {\n        proposalCallTexts[p] =\n          \"Call to \"+proposal.to[p]+\" with data of \"+proposal.callData[p]+\n          \" uinsg value of \"+library.utils.fromWei(proposal.values[p].toString());\n      }\n    }\n    \n    const votingParameters = daoStore.getVotingParametersOfProposal(proposalId);\n\n    const canRedeemToken = (proposalEvents.redeems.findIndex((redeem) => redeem.beneficiary === account) < 0)\n      && (stakedAmount.gt('0'));\n\n    const vote = proposalEvents.votes.find((vote) => vote.voter === account);\n    const canRedeemRep = vote\n      ? (proposalEvents.redeemsRep.findIndex((redeemRep) => redeemRep.beneficiary === account) < 0)\n        && (\n          ((votingParameters.votersReputationLossRatio > 0) && (vote.timestamp < proposal.boostedPhaseTime))\n          || (proposal.stateInVotingMachine == 1)\n        )\n      : false;\n\n    const canRedeem = (canRedeemToken || canRedeemRep);\n\n    const {stakeToBoost, stakeToUnBoost, recommendedStakeToBoost, recommendedStakeToUnBoost } = calculateStakes(\n      votingParameters.thresholdConst,\n      scheme.boostedProposals,\n      daoStore.getAmountOfProposalsPreBoostedInScheme(scheme.address),\n      proposal.positiveStakes,\n      proposal.negativeStakes,\n    )\n    \n    const timeToBoost = timeToTimestamp(boostTime);\n    const timeToFinish = timeToTimestamp(finishTime);\n  \n    const boostedVoteRequiredPercentage = scheme.boostedVoteRequiredPercentage / 1000;\n\n    const repPercentageAtCreation = userRepAtProposalCreation.times(100).div(totalRepAtProposalCreation).toFixed(4);\n    \n    function onStakeAmountChange(event) {\n      setStakeAmount(event.target.value);\n    }\n    \n    function onVoteValueChange(event) {\n      setVotePercentage(event.target.value < repPercentageAtCreation ? event.target.value : repPercentageAtCreation);\n    }\n    \n    if (repPercentageAtCreation > 0 && votePercentage === 0) {\n      setVotePercentage(repPercentageAtCreation);\n    }\n    \n    const submitVote = function(decision) {\n      const repAmount = (totalRepAtProposalCreation.times(bnum(votePercentage))).div('100');\n      daoStore.vote(decision, repAmount.toFixed(0), proposalId);\n    };\n    \n    const submitStake = function(decision) {\n      daoStore.stake(decision, library.utils.toWei(stakeAmount.toString()), proposalId);\n    };\n    \n    const redeem = function() {\n      daoStore.redeem(proposalId, account);\n    }\n    \n    const approveVotingMachineToken = function() {\n      daoStore.approveVotingMachineToken(votingMachineUsed);\n    };\n    \n    const executeProposal = function() {\n      daoStore.execute(proposalId);\n    };\n\n    const finishTimeReached = finishTime.toNumber() < moment().unix();\n\n    return (\n      <ProposalInformationWrapper>\n        <ProposalInfoSection>\n          <ProposalInfoBox>\n            <h1 style={{margin: \"0px\"}}> {proposalTitle} </h1>\n            <MDEditor.Markdown source={ proposalDescription } style={{\n              padding: \"20px 10px\",\n              lineBreak: \"anywhere\",\n              whiteSpace: \"pre-line\"\n            }} />\n            {proposal.descriptionHash.length > 0 &&\n              <h3 style={{margin: \"0px\"}}>\n                <small>\n                  IPFS Document: <a target=\"_blank\" href={`https://ipfs.io/ipfs/${contentHash.decode(proposal.descriptionHash)}`}>\n                  ipfs://{contentHash.decode(proposal.descriptionHash)}\n                  </a>\n                </small>\n              </h3>\n            }\n            <h2> Calls  <Question question=\"9\"/></h2>\n            {proposalCallTexts.map((proposalCallText, i) => {\n              return(\n              <div key={\"proposalCallText\"+i}>\n                <span> {proposalCallText} </span> \n                {i < proposalCallTexts.length - 1 ? <hr/> : <div/>}\n              </div>);\n            })}\n          </ProposalInfoBox>\n          <ProposalInfoBox style={{marginTop: \"15px\"}}>\n            <h1 style={{margin: \"0px\"}}> History </h1>\n            \n            {proposalEvents.history.map((historyEvent, i) => {\n              return(\n                <div key={\"proposalHistoryEvent\"+i} style={{\n                  display: \"flex\", alignItems:\"center\", padding:\"4px 0px\",\n                  borderBottom: i < proposalEvents.history.length - 1 ? \" 1px --medium-gray\": \"\"\n                }}>\n                  <span> {historyEvent.text} </span> \n                  <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n                  {i < proposalEvents.history.length - 1 ? <hr/> : <div/>}\n                </div>\n              );\n            })}\n          </ProposalInfoBox>\n        </ProposalInfoSection>\n        <InfoSidebarBox>\n          <h2 style={{margin: \"10px 0px 0px 0px\", textAlign: \"center\"}}>{status} <Question question=\"3\"/></h2>\n          <SidebarRow style={{\n            margin: \"0px 10px\",\n            flexDirection: \"column\"\n          }}>\n            {(boostTime.toNumber() > moment().unix()) ?\n              <span className=\"timeText\"> Boost {timeToBoost} </span> \n              : <div></div>\n            }\n            {(finishTime.toNumber() > moment().unix()) ?\n              <span className=\"timeText\">\n                Finish {timeToFinish} </span>\n              : <div></div>}\n          </SidebarRow>\n          { proposal.stateInScheme < 3 ? \n            <SidebarRow style={{flexDirection:\"column\", alignItems:\"center\"}}>\n              {status === \"Pending Boost\" ? \n                <ActionButton color=\"blue\" onClick={executeProposal}><FiFastForward/> Boost </ActionButton>\n                : status === \"Quiet Ending Period\" && timeToFinish === \"\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Finish </ActionButton>\n                : status === \"Pending Execution\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Execute </ActionButton>\n                : status === \"Execution Timeout\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Execute </ActionButton>\n                : status === \"Expired in Queue\" && proposal.stateInScheme == \"1\" ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Finish </ActionButton>\n                : <div/>\n              }\n            </SidebarRow>\n            : <div/>\n          }\n          \n          { ((status == \"Pending Execution\") && (executionTimeoutTime.toNumber() > 0)) ?\n            <span style={{textAlign: \"center\"}}> <strong> Execution Timeout Date </strong> <br/> <small>{moment.unix(executionTimeoutTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")}</small> </span>\n            : <div/>\n          }\n          \n          <SidebarDivider/> \n\n          <SidebarRow style={{ margin: \"0px 10px\", padding: \"10px 0px\", flexDirection: \"column\" }}>\n            <span style={{ display: \"flex\", height: \"17px \"}}>\n              <strong>Proposer</strong> <small><BlockchainLink type=\"user\" text={proposal.proposer} toCopy/></small>\n            </span>\n            <span> <strong>Scheme</strong> <small>{scheme.name}</small></span>\n            <span><strong>State in Voting Machine </strong>\n              <small>{VotingMachineProposalState[proposal.stateInVotingMachine]}</small>\n            </span>\n            <span><strong>State in Scheme </strong>\n              <small>{WalletSchemeProposalState[proposal.stateInScheme]}</small>\n            </span>\n            <span> <strong>Submitted Date</strong> <small>{\n              moment.unix(proposal.submittedTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            <span> <strong>Boost Date</strong> <small>{\n              boostTime.toNumber() > 0 ?\n                moment.unix(boostTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n              : \"-\"\n            }</small> </span>\n            <span> <strong>Finish Date</strong> <small>{\n              moment.unix(finishTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            \n            { (boostedVoteRequiredPercentage > 0) ?\n              <span> <strong> Required Boosted Vote: </strong> <small>{boostedVoteRequiredPercentage}%</small> </span>\n              : <div/>\n            }\n          </SidebarRow>\n          \n          <SidebarDivider/> \n        \n          <SidebarRow>\n            <strong>Votes <Question question=\"4\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}> \n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveVotesCount}</AmountBadge>\n              {proposal.positiveVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <br/> \n              {proposalEvents.votes && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`voteUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n                    </small>\n                  );\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {proposal.negativeVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <AmountBadge color=\"red\">{negativeVotesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`voteDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toNumber().toFixed(2)} %\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {repPercentageAtCreation > 0\n            ? <small>{repPercentageAtCreation} % REP at proposal creation</small>\n            : <div/>\n          }\n          \n          { (\n              ((proposal.stateInVotingMachine == \"3\") || (proposal.stateInVotingMachine == \"4\"))\n              && (votingParameters.votersReputationLossRatio.toNumber() > 0)\n              && (finishTime.toNumber() > 0)\n            ) ? <small>Voter REP Loss Ratio: {votingParameters.votersReputationLossRatio.toString()}%</small>\n            : <div/> \n          }\n          \n          {!finishTimeReached && votedAmount.toNumber() === 0 && repPercentageAtCreation > 0 && proposal.stateInVotingMachine >= 3 ?\n            <SidebarRow>\n              \n              <AmountInput\n                type=\"number\"\n                placeholder=\"REP\"\n                name=\"votePercentage\"\n                max={repPercentageAtCreation}\n                value={votePercentage}\n                min=\"0\"\n                step={votePercentage > 10 ? \"1\" : votePercentage > 1 ? \"0.01\" : votePercentage > 0.1 ? \"0.001\" : \"0.00001\"}\n                id=\"votePercentage\"\n                onChange={onVoteValueChange}\n                style={{flex: 2}}\n              />\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitVote(1)}><FiThumbsUp /></ActionButton>\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitVote(2)}><FiThumbsDown /></ActionButton>\n              \n            </SidebarRow>\n          : votedAmount.toNumber() !== 0 ?\n            <SidebarRow>\n              Already voted {(votedAmount.toNumber() > 0) ? \"for\" : \"against\"} with { (votedAmount.times(\"100\").div(totalRepAtProposalCreation)).toFixed(2)} % REP\n            </SidebarRow>\n          : <div/>\n          }\n          \n          <SidebarDivider/> \n          \n          <SidebarRow>\n            <strong>Stakes <Question question=\"5\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveStakesCount}</AmountBadge>\n              {formatBalance(proposal.positiveStakes).toString()} {votingMachineTokenName}\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`stakeUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(bnum(stakeEvent.amount)).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {formatBalance(proposal.negativeStakes).toString()} {votingMachineTokenName}\n              <AmountBadge color=\"red\">{negativeStakesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`stakeDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(stakeEvent.amount).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {stakedAmount.toNumber() > 0\n            ? <SidebarRow>\n            Already staked {(stakedAmount.toNumber() > 0) ? \"for\" : \"against\"} with {formatBalance(stakedAmount).toString()} {votingMachineTokenName}\n            </SidebarRow>\n            : <div></div>\n          }\n\n          {!finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4) && votingMachineTokenApproved.toString() === \"0\" ?\n            <SidebarRow>\n              <small>Approve {votingMachineTokenName} to stake</small>\n              <ActionButton color=\"blue\" onClick={() => approveVotingMachineToken()}>Approve {votingMachineTokenName}</ActionButton>\n            </SidebarRow>\n            : !finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4)  ?\n              <div>\n                {Number(recommendedStakeToBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToBoost, 18, 1, false).toString()} {votingMachineTokenName} to boost</small> : <span/>}\n                {Number(recommendedStakeToUnBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToUnBoost, 18, 1, false).toString()} {votingMachineTokenName} to unboost</small> : <span/>}\n                <SidebarRow>\n                  <AmountInput\n                    type=\"number\"\n                    placeholder={votingMachineTokenName}\n                    name=\"stakeAmount\"\n                    id=\"stakeAmount\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    onChange={onStakeAmountChange}\n                    style={{flex: 2}}\n                  />\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitStake(1)}><FiThumbsUp /></ActionButton>\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitStake(2)}><FiThumbsDown /></ActionButton>\n                </SidebarRow>\n              </div>\n            : <div></div>\n          }\n          \n          {proposal.stateInVotingMachine < 3 && canRedeem\n            ? <SidebarRow style={{ borderTop: \"1px solid gray\",  margin: \"0px 10px\", justifyContent: \"center\" }}>\n              <ActionButton color=\"blue\" onClick={() => redeem()}>Redeem</ActionButton>\n            </SidebarRow>\n            : <div></div>\n          }\n          \n        </InfoSidebarBox>\n      </ProposalInformationWrapper>\n    );\n    \n});\n\nexport default ProposalPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { bnum, parseCamelCase, ZERO_ADDRESS } from '../utils/helpers';\nimport { formatBalance } from '../utils/token';\nimport { formatCurrency } from '../utils/number';\nimport { getTokenData } from '../config';\n\nconst FinanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    color: var(--dark-text-gray);\n    flex-wrap: wrap;\n`;\n\nconst FinanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: ${(props) => props.align};;\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst FinanceInformation = observer(() => {\n    const {\n        root: { providerStore, daoStore, configStore, coingeckoService },\n    } = useStores();\n    const { active: providerActive, library } = providerStore.getActiveWeb3React();\n\n    const daoInfo = daoStore.getDaoInfo();\n    const networkConfig = configStore.getNetworkConfig();\n    const schemes = daoStore.getAllSchemes();\n    const prices = coingeckoService.getPrices();\n\n    let assets = {\n      total: [{\n        address: ZERO_ADDRESS,\n        name: \"ETH\",\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }],\n      avatar: [{\n        address: ZERO_ADDRESS,\n        name: \"ETH\",\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }]\n    };\n    Object.keys(daoInfo.tokenBalances).map((tokenAddress) => {\n      const tokenData = getTokenData(tokenAddress);\n      assets.avatar.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n      assets.total.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n    });\n    \n    schemes.map((scheme) => {\n      if (scheme.controllerAddress != ZERO_ADDRESS)\n        return;\n        \n      const tokenBalances = scheme.tokenBalances;\n      if (!assets[scheme.name])\n        assets[scheme.name] = [{\n          address: ZERO_ADDRESS,\n          name: \"ETH\",\n          amount: bnum(scheme.ethBalance),\n          decimals: 18\n        }]\n      \n      Object.keys(tokenBalances).map((tokenAddress) => {\n        const tokenData = getTokenData(tokenAddress);\n\n        assets[scheme.name].push({\n          address: tokenAddress,\n          name: tokenData.name,\n          amount: bnum(tokenBalances[tokenAddress]),\n          decimals: tokenData.decimals\n        })\n        const indexOfAssetInTotal = assets.total.findIndex((asset) => asset.address == tokenAddress);\n        if (indexOfAssetInTotal > -1) {\n          assets.total[indexOfAssetInTotal].amount = assets.total[indexOfAssetInTotal].amount.plus(\n            bnum(tokenBalances[tokenAddress])\n          );\n        } else {\n          assets.total.push({\n            address: tokenAddress,\n            name: tokenData.name,\n            amount: bnum(tokenBalances[tokenAddress]),\n            decimals: tokenData.decimals,\n          })\n        }\n        \n      });\n    });\n    \n    return (\n      <FinanceInfoWrapper>\n        { Object.keys(assets).map((assetHolder, i) => {\n          const assetsOfHolder = assets[assetHolder];\n          return (\n            <div style={{width: i > 0 ? \"50%\" : \"100%\"}}>\n              <h2 style={{textAlign: \"center\"}}>{parseCamelCase(assetHolder)}</h2>\n              <FinanceTableHeaderWrapper>\n              <TableHeader width=\"33%\" align=\"center\"> Asset </TableHeader>\n              <TableHeader width=\"34%\" align=\"center\"> Balance </TableHeader>\n              <TableHeader width=\"33%\" align=\"center\"> USD Value </TableHeader>\n\n              </FinanceTableHeaderWrapper>\n              <TableRowsWrapper>\n              {assetsOfHolder.map((asset, i) => {\n                if (asset && formatBalance(asset.amount, asset.decimals, 2) > 0) {\n                  return (\n                    <TableRow key={`asset${i}`}>\n                      <TableCell width=\"33%\" align=\"center\" weight='500'>\n                        {asset.name} <BlockchainLink size=\"long\" type=\"address\" text={asset.address} onlyIcon/>\n                      </TableCell>\n                      <TableCell width=\"34%\" align=\"center\"> \n                        {formatBalance(asset.amount, asset.decimals, 2).toString()}\n                      </TableCell>\n                      <TableCell width=\"33%\" align=\"center\"> \n                        {(prices[asset.address] && prices[asset.address].usd) ?\n                          formatCurrency(\n                            bnum(\n                              Number(formatBalance(asset.amount, asset.decimals, 2)) * prices[asset.address].usd\n                            )\n                          )\n                          : \"-\"\n                        }\n                      </TableCell>\n                    </TableRow>);\n                } else {\n                  return <div/>\n                }\n              })}\n              </TableRowsWrapper>\n            </div>\n          );\n        })}\n      </FinanceInfoWrapper>\n    );\n});\n\nexport default FinanceInformation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport { bnum } from '../utils/helpers';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\n\nconst SchemesInformationWrapper = styled.div`\n  width: 100%;\n  background: white;\n  font-weight: 400;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--dark-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 16px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    align-items: center;\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n`;\n\nconst TableCell = styled.div`\n    a {\n        text-decoration: none;\n        width: 100%;\n\n        &:hover{\n            color: var(--turquois-text-onHover);\n        }\n    }\n    color: ${(props) => props.color};\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst SchemesInformation = observer(() => {\n    const {\n        root: { providerStore, daoStore, blockchainStore },\n    } = useStores();\n    const { active: providerActive, library } = providerStore.getActiveWeb3React();\n    \n    const loading = (\n      !blockchainStore.initialLoadComplete\n    );\n    \n    const schemes = daoStore.getAllSchemes();\n    return (\n      <SchemesInformationWrapper>\n        <ProposalTableHeaderWrapper>\n            <TableHeader width=\"15%\" align=\"left\"> Name </TableHeader>\n            <TableHeader width=\"40%\" align=\"center\"> Configuration <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"25%\" align=\"center\"> Permissions <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <span>Boosted</span> - <span>Active</span> - <span>Total</span>\n            </TableHeader>\n        </ProposalTableHeaderWrapper>\n        <TableRowsWrapper>\n        {schemes.map((scheme, i) => {\n          const schemeProposals = daoStore.getSchemeProposals(scheme.address);\n          const votingMachineParameters = daoStore.getVotingParametersOfScheme(scheme.address);\n          if (votingMachineParameters)\n            return (\n              <div key={\"scheme\"+i}>\n                <TableRow>\n                  <TableCell width=\"15%\" align=\"left\" weight='500' wrapText=\"true\">\n                    {scheme.name}<br/>\n                    <BlockchainLink size=\"short\" text={scheme.address} toCopy/>\n                  </TableCell>\n                  <TableCell width=\"40%\" align=\"center\">\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max time for execution: {\n                          moment.duration(scheme.maxSecondsForExecution.toString(), 'seconds').humanize()\n                        }<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max REP % to change in proposal: {scheme.maxRepPercentageChange.toString()} %<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Required Percentage for boosted approval: {bnum(scheme.boostedVoteRequiredPercentage).div(\"1000\").toString()} %<br/></small>\n                      : <div/>\n                    }\n                    \n                    <small>Required Percentage for queue approval: {votingMachineParameters.queuedVoteRequiredPercentage.toString()} %</small><br/>\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Rep Proposing Reward: {\n                      Number(library.utils.fromWei(votingMachineParameters.proposingRepReward.toString())).toFixed(2)\n                    } REP</small><br/>\n                    <small>Reputation Loss Ratio: {votingMachineParameters.votersReputationLossRatio.toString()} %</small><br/>\n                    <small>Minimum Dao Boost: {\n                      Number(library.utils.fromWei(votingMachineParameters.minimumDaoBounty.toString())).toFixed(2)\n                    } DXD</small><br/>\n                    <small>Proposal Boost Bounty Const: {votingMachineParameters.daoBountyConst.toString()}</small><br/>\n                    <small>Boost Threshold Constant: {votingMachineParameters.thresholdConst.div(10**12).toString()}</small><br/>\n                    <small>Boost Limit Exponent Value: {votingMachineParameters.limitExponentValue.toString()}</small>\n                    \n                  </TableCell>\n                  <TableCell width=\"25%\" align=\"center\" wrapText>\n                    <strong>Controller Permissions</strong><br/>\n                    <small>{scheme.permissions.canGenericCall ? 'Can' : 'Cant'} make generic call</small><br/>\n                    <small>{scheme.permissions.canUpgrade ? 'Can' : 'Cant'} upgrade controller</small><br/>\n                    <small>{scheme.permissions.canChangeConstraints ? 'Can' : 'Cant'} change constraints</small><br/>\n                    <small>{scheme.permissions.canRegisterSchemes ? 'Can' : 'Cant'} register schemes</small>\n                    <br/><br/>\n                    <strong>Call Permissions</strong><br/>\n\n                    {scheme.callPermissions.map((callPermission, i) => {\n                      if (callPermission.fromTime > 0)\n                        return (\n                          <small key={`callPermission${i}`}>\n                            Address: {callPermission.to == \"0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\" ? \"Any Address\" : callPermission.to}<br/>\n                            Function: {callPermission.functionSignature == \"0xaaaaaaaa\" ? \"Any\" : callPermission.functionSignature}<br/>\n                            Value: {callPermission.value == \"115792089237316195423570985008687907853269984665640564039457584007913129639935\" ? \"Any\": callPermission.value}<br/>\n                          <br/></small>\n                        );\n                    })}\n                  </TableCell>\n\n                  <TableCell width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-around\"}}> \n                    <span>{scheme.boostedProposals}</span>\n                    -\n                    <span>{schemeProposals.filter((proposal) => {\n                      return (proposal.stateInVotingMachine > 2)\n                    }).length}</span>\n                    -\n                    <span>{scheme.proposalIds ? scheme.proposalIds.length : 0}</span>\n                  </TableCell>\n                </TableRow>\n              </div>\n            );\n          }\n        )}\n        </TableRowsWrapper>\n      </SchemesInformationWrapper>\n    );\n});\n\nexport default SchemesInformation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { FaTrophy, FaMedal } from \"react-icons/fa\";\nimport { bnum } from '../utils/helpers';\nimport { Chart } from \"react-google-charts\";\n\nconst GovernanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    color: var(--dark-text-gray);\n`;\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst GovernanceTableHeaderActions = styled.div`\n    padding: 0px 10px 10px 10px;\n    color: var(--dark-text-gray);\n    border-bottom: 1px solid var(--line-gray);\n    font-weight: 500;\n    font-size: 18px;\n    letter-spacing: 1px;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    \n    span {\n      font-size: 20px;\n      padding: 10px 5px 5px 5px;\n    }\n`;\n\nconst GovernanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst GovernanceInformation = observer(() => {\n    const {\n        root: { providerStore, daoStore, configStore },\n    } = useStores();\n    const { active: providerActive, library } = providerStore.getActiveWeb3React();\n    const daoInfo = daoStore.getDaoInfo();\n    const governanceInfo = daoStore.getGovernanceInfo();\n    console.log(governanceInfo);\n    function toNumber(weiNumber) {\n      return bnum(weiNumber).div(10**18).toFixed(0)\n    }\n    return (\n      <GovernanceInfoWrapper>\n        <h1 style={{textAlign: \"center\"}}>Stats</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {toNumber(daoInfo.totalRep)} REP\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalPositiveVotes} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalNegativeVotes} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalProposalsCreated} Proposals\n          </InfoBox>\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Reputation Charts</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n          <Chart\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.rep}\n            options={{\n              legend: 'none',\n              pieSliceText: 'none',\n              pieStartAngle: 100,\n              title: \"Reputation Distribution\",\n              sliceVisibilityThreshold: 0.001, // 0.1%\n            }}\n          />\n          <Chart\n            width=\"100%\"\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.repEvents}\n            options={{\n              hAxis: { title: 'Block Number', },\n              vAxis: { title: 'Reputation', },\n              title: \"Reputation over Time\",\n              legend: 'none'\n            }}\n          />\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Governance Ranking</h1>\n\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            Create Proposal<br/>\n            <strong>1 to 30 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Winning Option<br/>\n            <strong>3 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Losing Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n          <InfoBox>\n            Stake Winning Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n        </div>\n        <GovernanceTableHeaderWrapper>\n          <TableHeader width=\"5%\" align=\"center\"> # </TableHeader>\n          <TableHeader width=\"35%\" align=\"center\"> Address </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Proposals Created </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Voted </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Staked </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Score </TableHeader>\n        </GovernanceTableHeaderWrapper>\n        <TableRowsWrapper>\n        {governanceInfo.ranking.map((user, i) => {\n          return (\n            <TableRow key={`user${i}`}>\n              <TableCell width=\"5%\" align=\"center\" weight='500'> {i + 1}\n              {i == 0 ? <FaTrophy style={{color:\"gold\"}}/> :\n              i == 1 ? <FaTrophy style={{color:\"silver\"}}/> :\n              i == 2 ? <FaTrophy style={{color:\"#CD7F32\"}}/> :\n              i < 6 ? <FaMedal style={{color:\"gold\"}}/> :\n              i < 9 ? <FaMedal style={{color:\"silver\"}}/> :\n              i < 12 ? <FaMedal style={{color:\"#CD7F32\"}}/> :\n              <div/>}\n              </TableCell>\n              <TableCell width=\"35%\" align=\"center\" weight='500'>\n                <BlockchainLink size=\"long\" type=\"address\" text={user.address}/>\n              </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.proposals} </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctVotes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongVotes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctStakes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongStakes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.score.toFixed(0)} </TableCell>\n            </TableRow>\n          );\n        })}\n        </TableRowsWrapper>\n      </GovernanceInfoWrapper>\n    );\n});\n\nexport default GovernanceInformation;\n","import React from 'react';\nimport styled from 'styled-components'; \nimport { useLocation } from 'react-router-dom';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\n\nimport FinanceInformation from '../components/FinanceInformation';\nimport SchemesInformation from '../components/SchemesInformation';\nimport GovernanceInformation from '../components/GovernanceInformation';\nimport ProposalsTable from '../components/ProposalsTable';\n\nconst InfoPageWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst InfoNavigation = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n`;\nconst InfoPage = () => {\n    const searchPath = useLocation().search;\n    return (\n      <InfoPageWrapper>\n        <InfoNavigation>\n          <ActiveButton route=\"/info?view=governance\">Governance</ActiveButton>\n          <ActiveButton route=\"/info?view=finance\">Finance</ActiveButton>\n          <ActiveButton route=\"/info?view=schemes\">Schemes</ActiveButton>\n        </InfoNavigation>\n        <div>\n          { searchPath === \"?view=schemes\" ?\n            <SchemesInformation/>\n          : searchPath === \"?view=governance\" ?\n            <GovernanceInformation/>\n          : <FinanceInformation/>\n          }\n        </div>\n      </InfoPageWrapper>\n    );\n};\n\nexport default InfoPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useStores } from '../contexts/storesContext';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport { FiCheckCircle, FiX } from \"react-icons/fi\";\nimport Box from '../components/common/Box';\n\nconst Row = styled.div`\n  flex-direction: row;\n  flex: auto;\n  display: flex;\n  padding-top: 15px;\n  justify-content: space-around;\n`\n\nconst InputBox = styled.input`\n  background-color: white;\n  border: 1px solid var(--medium-gray );\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  padding: 0px 10px;\n  margin: 5px;\n`;\n\nconst ConfigPage = observer(() => {\n    const {\n        root: { providerStore, configStore, blockchainStore, pinataService, etherscanService },\n    } = useStores();\n    const { active: providerActive } = providerStore.getActiveWeb3React();\n    const loading = !blockchainStore.initialLoadComplete;\n    \n    const [etherscanApiStatus, setEtherscanApiStatus] = React.useState(etherscanService.auth);\n    const [pinataKeyStatus, setPinataKeyStatus] = React.useState(pinataService.auth);\n\n    const [localConfig, setLocalConfig] = React.useState(configStore.getLocalConfig());\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n    \n    function onApiKeyValueChange(value, key) {\n      localConfig[key] = value;\n      setLocalConfig(localConfig)\n      forceUpdate();\n    }\n    \n    function saveConfig() {\n      configStore.setLocalConfig(localConfig);\n    }\n    \n    async function testApis() {\n      await pinataService.isAuthenticated();\n      await etherscanService.isAuthenticated();\n      setPinataKeyStatus(pinataService.auth);  \n      setEtherscanApiStatus(etherscanService.auth);\n    }\n    \n    async function pinDXvoteHashes() {\n      pinataService.updatePinList();\n    }\n  \n    return (\n      <Box style={{alignItems: \"center\"}}>\n        <h2>API Keys <Question question=\"8\"/></h2>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Etherscan:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"etherscan\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"etherscan\")}\n            value={localConfig.etherscan}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {etherscanApiStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Pinata:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"pinata\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"pinata\")}\n            value={localConfig.pinata}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {pinataKeyStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{height: \"34px\", padding:\"10px 10px\"}}>Pin DXdao hashes on start</span>\n          <InputBox\n            type=\"checkbox\"\n            checked={localConfig.pinOnStart}\n            onChange={(event) => onApiKeyValueChange(event.target.checked, \"pinOnStart\")}\n            style={{width: \"20px\"}}\n          ></InputBox>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <ActiveButton onClick={saveConfig}>Save</ActiveButton>\n          <ActiveButton onClick={testApis}>Test Apis</ActiveButton>\n          <ActiveButton onClick={pinDXvoteHashes}>Pin Dxvote Hashes</ActiveButton>\n        </Row>\n      </Box>\n    );\n});\n\nexport default ConfigPage;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useStores } from '../contexts/storesContext';\nimport { observer } from 'mobx-react';\nimport Box from '../components/common/Box';\nimport { useLocation } from 'react-router-dom';\nimport MDEditor from '@uiw/react-md-editor';\nimport { ZERO_ADDRESS } from '../utils/helpers';\n\nconst FAQPage = observer(() => {\n    \n  const questionId = useLocation().search.indexOf(\"=\") > -1 ? useLocation().search.split(\"=\")[1] : 0;\n  \n  const {\n      root: { configStore, daoStore },\n  } = useStores();\n  \n  const FAQBox = styled(Box)`\n    padding: 20px 30px;\n    p {\n      line-height: 28px;\n      font-size: 20px;\n    }\n    h2 {\n      margin:10px 0px;\n    }\n    h3 {\n      margin: 5px 0px;\n    }\n    h4 {\n      margin: 0px;\n    }\n  `\n  useEffect(() => {\n    if (questionId > 0)\n      document.querySelectorAll(\"#FAQBody div h1\")[questionId].scrollIntoView();\n  }, []);\n   \n  const networkConfig = configStore.getNetworkConfig();\n  const schemes = daoStore.getCache().schemes;\n  let schemeAddresses = \"\";\n  for (let i = 0; i < Object.keys(schemes).length; i++) {\n    schemeAddresses += \"   - \"+schemes[Object.keys(schemes)[i]].name+\": \"+schemes[Object.keys(schemes)[i]].address+\"\\n\";\n  }\n\n   const FAQBody = \n`# Where are the dao funds held?\nMost of the ETH and tokens are held in the DXdao avatar address, this is the safest place for the funds to be, the access to this funds is usually slow and it take day for a proposal to move funds from this address. The Wallet Schemes can also hold funds too, but only the ones that dont make calls from the avatar.\n\n## DXdao Addresses\n\n- Avatar: ${networkConfig.avatar}\n- Controller: ${networkConfig.controller}\n- Reputation: ${networkConfig.reputation}\n- Permission Registry: ${networkConfig.permissionRegistry}\n- Reputation: ${networkConfig.reputation}\n- Schemes:\n${schemeAddresses}\n\n# What is a Wallet Scheme?\nA wallet scheme is a smart contract that manage the access to DXdao funds, in order to make transfers or calls from the DXdao avatar or the scheme itself the scheme needs to execute a proposal. The proposals are executed after it reaches a certain amount of votes or stakes over time, the amount of votes, staked and time that has to passed depends on the scheme configuration. An scheme who will have access to the DXdao avatar funds will usually take more votes, stakes and time than a scheme who make calls form itself, this means that funds can be allocated in the schemes as well, but this schemes will have only access to the funds held by themselves.\n\n# Proposal States\n## In Queue\nA proposal that needs the queuedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Pre Boosted\nA proposal that has enough stakes to pass be boosted state but cant be boosted just yet.\n\n## Pending Boost\nA proposal that has enough stakes to pass to boosted state.\n\n## Boosted\nA proposal that needs the boostedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Quiet Ending Period\nA proposal that changed the winning option in the amount of seconds specified as quietEndingPeriod before finishing, this will extend the proposal time for quietEndingPeriod seconds. The quietEndingPeriod is specified in the scheme configuration where the proposal was submitted.\n\n## Pending Execution\nA proposal that got enough votes and is ready to be executed.\n\n## Execution Failed\nA proposal that was executed after it passed but it execution failed.\n\n## Execution Succeded\nA proposal that was executed after it passed but it execution succeeded.\n\n## Expired in Queue\nA proposal that spent too much time in Queue state and didnt get enough votes to pass.\n\n# How does voting works?\nA proposal needs a minimum amount of votes to pass, and that depends on the state of the proposal at the moment of execution. If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed. If a proposal reaches the queuedVoteRequiredPercentage percentage amount of votes it gets executed instantly. This means that any proposal in Queued state will need that amount of votes to pass.\n\n# How does staking works?\nA proposal can receives a financial stake in DXD to speed up the voting process. If a proposal receives enough positive stakes to boost it will enter pre-boosted state, once the pre-boosted state finish if the proposal still has enough DXD staked to boost it will be boosted in the next voting machine action (vote, stake, or voting machine execution). If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed.\n\n# How do I get DXD?\nYou can get rinkeby DXD buying DXD in dxtrust rinkeby here: https://levelkdev.github.io/dxtrust/\n\n# How are proposals created?\nEach proposal has a title, description and calls to be exected by the wallet scheme where it is proposed. The description of the proposal is stored in IPFS, and we save the hash of the IPFS description in the blokchain next to the proposal title and calls. When creating a proposal you first need to submit the description to IPFS and once you get the IPFS hash of the description the proposal can be submited by sending a transaction to the wallet scheme smart contract.\n\n# External APIs\nThe app allows you to add external API services. Use Pinata to help DXdao by pinning the proposal description and important documents in you pinata account. Use Etherscan to decode proposal calls and know what the proposal will execute.\n\n# Schemes Configuration\n## Scheme Parameters\n### name\nThe name of the scheme, this will be used to identify the scheme by name in DXvote dapp.\n\n### callToController\nIf the scheme make calls to the controller or not. A Scheme that makes calls to a controller will make calls from the dxdao avatar (which gives access to the dxdao funds) and a scheme that do not call the controller will make call directly from itself, which means that it will have access only to the funds held in the scheme address.\n\n### maxSecondsForExecution\nThis is the amount of time that a proposal has to be executed in the scheme, this is useful to \"clean\" proposals that weren't successful or weren't able to be executed for some reason. This means that if a proposal passes in 3 days in the voting machine and the maxSecondsForExecution are 6 days it will have 3 days to be executed, after that it will be marked in ExecutionTimeout state and wont be able to be executed again, reaching a state of termination.\n\n### maxRepPercentageToMint\nThis is the maximum amount of rep in percentage allowed to be minted by proposal, the value can be between 0-100, if a proposal execution mints 5% of REP and the maxRepPercentageToMint equals 3, it will fail.\n\n## Controller Permissions\nThis are four values that determine what the scheme can do in the dxdao controller contract, the most powerful contract in the stack, the only two values that we use from it are canRegisterSchemes and canGenericCall. canRegisterSchemes allows the addition/removal of schemes and the canGenericCall allows the execution of calls in the avatar contract.\n\n## Permission Registry Permissions\nThis permissions are checked before a proposal execution to check that the total value transferred by asset and the functions to be called are allowed. If a scheme make calls to the controller the permissions are checked from the avatar address. The permissions are set by asset, specifying the sender and receiver addresses, the signature of the function to be used and the value to be transferred. It allows the use of \"wildcard\" permissions by using 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa for any address and 0xaaaaaaaa for any signature. It also allows the use of global transfer limits, by setting the limit by asset using the scheme as receiver address, any value recorded here will be used as global transfer limit in the proposal check.\n\n## Voting Machine Params\n### queuedVoteRequiredPercentage\nThe percentage of votes required to execute a proposal in queued state.\n\n### boostedVoteRequiredPercentage\nThe percentage of votes required to execute a proposal in boosted state.\n\n### queuedVotePeriodLimit\nThe amount of time that a proposal will be in queue state (not boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### boostedVotePeriodLimit\nThe amount of time that a proposal will be in boost state (after pre-boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### preBoostedVotePeriodLimit\nThe amount of time that a proposal will be in pre-boosted state. A proposal gets into pre-boosted state when it has enough.\n\n### thresholdConst\nThe constant used to calculate the needed upstakes in a proposal to reach boosted state, where the upstakes needed equal to downStakes * (thresholdConst ** (numberOfBoostedProposals)) taking in count the number of boosted proposals at the moment of the pre-boost to boosted state change.\n\n### quietEndingPeriod\nThe amount of time a proposal has to have the same winning option before it finish, if the winning option change during that time the proposal finish time will be extended till the winning option doesn't change during that time.\n\nproposingRepReward\nThe fixed amount of REP that will be minted to the address who created the proposal.\n\n### votersReputationLossRatio\nThe percentage of REP a voter will loose if the voter voted a proposal in queue state for the loosing option.\n\n### minimumDaoBounty\nThe minimum amount to be set as downstake when a proposal is created.\n\n### daoBountyConst\nThe downstake for proposal is calculated when the proposal is created, by using the formula: (daoBountyConst * averageBoostDownstakes) / 100. If the value calculated is higher than minimumDaoBounty then this value will be used, if not the start downstake of the proposal will be minimumDaoBounty.\n`\n\n  return (\n    <FAQBox id=\"FAQBody\">\n      <MDEditor.Markdown source={ FAQBody } style={{\n        padding: \"20px 10px\"\n      }} />\n    </FAQBox>\n  );\n});\n\nexport default FAQPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../components/common/Box';\nimport { FiZap } from \"react-icons/fi\";\n\nconst ForumPage = () => {\n  \n  const LoadingBox = styled.div`\n   .loader {\n      text-align: center;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      color: var(--dark-text-gray);\n      padding: 25px 0px;\n        \n      .svg {\n        height: 30px;\n        width: 30px;\n        margin-bottom: 10px;\n      }\n    }\n  `\n    \n  const [loading, setLoading] = React.useState(true);\n\n  function postMessageReceived(e) {\n    if (!e) {\n      return;\n    }\n  \n    if (e.data && e.data.type === \"discourse-resize\" && e.data.embedId) {\n      var elem = document.getElementById(e.data.embedId);\n      if (elem) {\n        elem.height = e.data.height + \"px\";\n      }\n    }\n    if (loading){\n      setLoading(false);\n    }\n  }\n  window.addEventListener(\"message\", postMessageReceived, false);\n\n  var lists = document.querySelectorAll(\"d-topics-list\");\n  for (var i = 0; i < lists.length; i++) {\n    var list = lists[i];\n    var url = list.getAttribute(\"discourse-url\");\n    if (!url || url.length === 0) {\n      console.error(\"Error, `discourse-url` was not found\");\n      continue;\n    }\n    var frameId = \"de-\" + Math.random().toString(36).substr(2, 9);\n    var params = [\"discourse_embed_id=\" + frameId];\n    list.removeAttribute(\"discourse-url\");\n\n    for (var j = 0; j < list.attributes.length; j++) {\n      var attr = list.attributes[j];\n      params.push(attr.name.replace(\"-\", \"_\") + \"=\" + attr.value);\n    }\n\n    var iframe = document.createElement(\"iframe\");\n    iframe.src = url + \"/embed/topics?\" + params.join(\"&\");\n    iframe.id = frameId;\n    iframe.width = \"100%\";\n    iframe.frameBorder = 0;\n    iframe.scrolling = \"no\";\n    console.log(iframe)\n    list.appendChild(iframe);\n  }\n\n  return (\n    <Box style={{padding: \"0px\"}}>\n      { loading ?\n        <LoadingBox>\n        <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n        </LoadingBox>\n      :\n        <d-topics-list discourse-url=\"https://daotalk.org/\" category=\"15\" per-page=\"10000\" template=\"complete\"></d-topics-list>\n      }\n    </Box>\n  );\n};\n\nexport default ForumPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { createWeb3ReactRoot } from '@web3-react/core';\nimport Web3ReactManager from 'components/Web3ReactManager';\nimport Web3 from 'web3';\nimport moment from 'moment';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'index.css';\nimport ThemeProvider, { GlobalStyle } from './theme';\n\nimport { web3ContextNames } from 'provider/connectors';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PageRouter from './PageRouter';\n\nimport ProposalsPage from './pages/Proposals';\nimport NewProposalPage from './pages/NewProposal';\nimport UserPage from './pages/User';\nimport ProposalPage from './pages/Proposal';\nimport InfoPage from './pages/Info';\nimport ConfigPage from './pages/Configuration';\nimport FAQPage from './pages/FAQ';\nimport ForumPage from './pages/Forum';\n\nmoment.updateLocale('en', {\n  relativeTime : {\n    s: \"1 second\",\n    m: \"1 minute\",\n    h: \"1 hour\",\n    d:  \"1 day\",\n  }\n});\n\nconst Web3ProviderInjected = createWeb3ReactRoot(web3ContextNames.injected);\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nconst Root = (\n  <Web3ProviderInjected getLibrary={getLibrary}>\n    <ThemeProvider>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Web3ReactManager>\n            <Header />\n            <PageRouter>\n              <Route exact path=\"/\"> <ProposalsPage /> </Route>\n              <Route exact path=\"/new\"> <NewProposalPage /> </Route>\n              <Route exact path=\"/info\"> <InfoPage /> </Route>\n              <Route exact path=\"/config\"> <ConfigPage /> </Route>\n              <Route exact path=\"/faq\"> <FAQPage /> </Route>\n              <Route exact path=\"/forum\"> <ForumPage /> </Route>\n              <Route exact path=\"/user/:address\"> <UserPage /> </Route>\n              <Route exact path=\"/proposal/:proposalId\"> <ProposalPage /> </Route>\n            </PageRouter>\n            <Footer />\n          </Web3ReactManager>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  </Web3ProviderInjected>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { bnum } from './helpers';\n\nexport const decodeSchemeParameters = function(rawParameters) {\n    return {\n        queuedVoteRequiredPercentage: bnum(rawParameters.queuedVoteRequiredPercentage.toString()),\n        queuedVotePeriodLimit: bnum(rawParameters.queuedVotePeriodLimit.toString()),\n        boostedVotePeriodLimit: bnum(rawParameters.boostedVotePeriodLimit.toString()),\n        preBoostedVotePeriodLimit: bnum(rawParameters.preBoostedVotePeriodLimit.toString()),\n        thresholdConst: bnum(rawParameters.thresholdConst.toString()),\n        limitExponentValue: bnum(rawParameters.limitExponentValue.toString()),\n        quietEndingPeriod: bnum(rawParameters.quietEndingPeriod.toString()),\n        proposingRepReward: bnum(rawParameters.proposingRepReward.toString()),\n        votersReputationLossRatio: bnum(rawParameters.votersReputationLossRatio.toString()),\n        minimumDaoBounty: bnum(rawParameters.minimumDaoBounty.toString()),\n        daoBountyConst: bnum(rawParameters.daoBountyConst.toString()),\n        activationTime: bnum(rawParameters.activationTime.toString())\n      };\n  }\n","const { getNetworkConfig } = require('../config');\nconst PermissionRegistry = require(\"./PermissionRegistry\");\nconst DxController = require(\"./DxController\");\nconst DxAvatar = require(\"./DxAvatar\");\nconst DxReputation = require(\"./DxReputation\");\nconst DXDVotingMachine = require(\"./DXDVotingMachine\");\nconst GenesisProtocol = require(\"./GenesisProtocol\");\nconst ERC20 = require(\"./ERC20\");\nconst Multicall = require(\"./Multicall\");\n\nexport const getContracts = async function(network: string, web3: any) {\n  const networkConfig = getNetworkConfig(network);\n  const avatar = await new web3.eth.Contract(DxAvatar.abi, networkConfig.avatar);\n  const controller = await new web3.eth.Contract(DxController.abi, networkConfig.controller);\n  const reputation = await new web3.eth.Contract(DxReputation.abi, networkConfig.reputation);\n  const permissionRegistry = await new web3.eth.Contract(PermissionRegistry.abi, networkConfig.permissionRegistry);\n  const multicall = await new web3.eth.Contract(Multicall.abi, networkConfig.utils.multicall);\n\n  let votingMachines = {};\n\n  if (networkConfig.votingMachines.gen)\n    votingMachines[networkConfig.votingMachines.gen.address] = {\n      name: \"GenesisProtocol\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen.token)\n    }\n    \n  if (networkConfig.votingMachines.gen2)\n    votingMachines[networkConfig.votingMachines.gen2.address] = {\n      name: \"GenesisProtocol2\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen2.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen2.token)\n    }\n  \n  if (networkConfig.votingMachines.dxd)\n    votingMachines[networkConfig.votingMachines.dxd.address] = {\n      name: \"DXDVotingMachine\",\n      contract: await new web3.eth.Contract(DXDVotingMachine.abi, networkConfig.votingMachines.dxd.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.dxd.token)\n    }\n  \n  return { votingMachines, avatar, controller, reputation, permissionRegistry, multicall };\n  \n}\n","import axios from 'axios';\nimport { bnum, ZERO_HASH, ZERO_ADDRESS, sleep } from '../utils/helpers';\nimport { decodePermission } from '../utils/permissions';\nimport { decodeSchemeParameters } from '../utils/scheme';\nimport {\n  getEvents,\n  getRawEvents,\n  sortEvents,\n  executeMulticall,\n  isNode,\n  descriptionHashToIPFSHash,\n  ipfsHashToDescriptionHash\n} from './helpers';\nimport { DaoNetworkCache } from '../types';\nimport WalletSchemeJSON from '../contracts/WalletScheme.json';\nimport { getContracts } from '../contracts';\nimport { getSchemeTypeData } from '../config';\n\nexport const updateNetworkCache = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  console.debug('[Cache Update]', fromBlock, toBlock);\n  const networkContracts = await getContracts(networkName, web3);\n  \n  (await Promise.all([\n    updateDaoInfo(networkCache, networkContracts, web3),\n    updateReputationEvents(networkCache, networkContracts.reputation, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n  \n  await Promise.all(Object.keys(networkContracts.votingMachines).map(async (votingMachineAddress) => {\n  \n    if (!networkCache.votingMachines[votingMachineAddress])\n      networkCache.votingMachines[votingMachineAddress] = {\n        name: networkContracts.votingMachines[votingMachineAddress].name,\n        events: {\n          votes: [],\n          stakes: [],\n          redeems: [],\n          redeemsRep: [],\n          proposalStateChanges: [],\n          newProposal: []\n        },\n        token: {\n          address: networkContracts.votingMachines[votingMachineAddress].token._address,\n          totalSupply: bnum(0)\n        },\n        votingParameters: {}\n      };\n  \n    networkCache = await updateVotingMachine(\n      networkCache,\n      networkContracts.avatar._address,\n      networkContracts.votingMachines[votingMachineAddress].contract,\n      networkContracts.multicall,\n      fromBlock,\n      toBlock,\n      web3\n    );\n  \n  }));\n  \n  networkCache = await updateSchemes(networkCache, networkName, fromBlock, toBlock, web3);\n  \n  (await Promise.all([\n    updatePermissionRegistry(networkCache, networkName, fromBlock, toBlock, web3),\n    updateProposals(networkCache, networkName, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n\n  networkCache.l1BlockNumber = Number(toBlock);\n  networkCache.l2BlockNumber = 0;\n  \n  console.debug('Total Proposals', Object.keys(networkCache.proposals).length);\n\n  return networkCache;\n}\n\n// Update the DAOinfo field in cache\nexport const updateDaoInfo = async function (\n  networkCache: DaoNetworkCache, allContracts: any, web3: any\n): Promise<DaoNetworkCache> {\n  let callsToExecute = [\n    [allContracts.reputation, \"totalSupply\", []],\n    [allContracts.multicall, \"getEthBalance\", [allContracts.avatar._address]]\n  ];\n  const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n  networkCache.daoInfo.address = allContracts.avatar._address;\n  networkCache.daoInfo.repEvents = !networkCache.daoInfo.repEvents ? [] : networkCache.daoInfo.repEvents;\n  networkCache.daoInfo.totalRep = bnum(callsResponse.decodedReturnData[0]);\n  networkCache.daoInfo.ethBalance = bnum(callsResponse.decodedReturnData[1]);\n  if (!networkCache.daoInfo.tokenBalances)\n    networkCache.daoInfo.tokenBalances = {};\n  return networkCache;\n}\n\n// Get all Mint and Burn reputation events to calculate rep by time off chain\nexport const updateReputationEvents = async function (\n  networkCache: DaoNetworkCache, reputation: any, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n\n  if (!networkCache.daoInfo.repEvents)\n    networkCache.daoInfo.repEvents = [];\n\n  let reputationEvents = sortEvents( await getEvents(web3, reputation, fromBlock, toBlock, 'allEvents'));\n\n  reputationEvents.map((reputationEvent) => {\n    switch (reputationEvent.event) {\n      case \"Mint\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._to,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n        if (!networkCache.users[reputationEvent.returnValues._to]) {\n          networkCache.users[reputationEvent.returnValues._to] = {\n            repBalance: bnum(reputationEvent.returnValues._amount),\n            proposalsCreated: []\n          }\n        } else {\n          networkCache.users[reputationEvent.returnValues._to].repBalance = \n            bnum(networkCache.users[reputationEvent.returnValues._to].repBalance).plus(reputationEvent.returnValues._amount)\n        }\n      break;\n      case \"Burn\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._from,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n        networkCache.users[reputationEvent.returnValues._from].repBalance =\n          bnum(networkCache.users[reputationEvent.returnValues._from].repBalance)\n          .minus(reputationEvent.returnValues._amount)\n      break;\n    }\n  });\n  \n  return networkCache;\n}\n\n// Update all voting machine information, events, token and voting parameters used.\nexport const updateVotingMachine = async function (\n  networkCache: DaoNetworkCache,\n  avatarAddress: string,\n  votingMachine: any,\n  multicall: any,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n\n  let newVotingMachineEvents = sortEvents(\n    await getEvents(web3, votingMachine, fromBlock, toBlock, 'allEvents')\n  );\n  const votingMachineEventsInCache = networkCache.votingMachines[votingMachine._address].events;\n  const votingMachineParamsHash = [];\n\n  newVotingMachineEvents.map((votingMachineEvent) => {\n    const proposalCreated = votingMachineEventsInCache.newProposal\n      .findIndex(newProposalEvent => votingMachineEvent.returnValues._proposalId == newProposalEvent.proposalId) > -1;\n    \n    if (votingMachineEvent.returnValues._organization == avatarAddress\n      || (votingMachineEvent.event == \"StateChange\" && proposalCreated))\n      switch (votingMachineEvent.event) {\n        case \"NewProposal\":\n          votingMachineEventsInCache.newProposal.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            proposer: votingMachineEvent.returnValues._proposer,\n            paramHash: votingMachineEvent.returnValues._paramsHash,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n          \n        if (votingMachineParamsHash.indexOf(votingMachineEvent.returnValues._paramsHash) < 0)\n          votingMachineParamsHash.push(votingMachineEvent.returnValues._paramsHash);\n        break;\n        case \"StateChange\":\n          votingMachineEventsInCache.proposalStateChanges.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            state: votingMachineEvent.returnValues._proposalState,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"VoteProposal\":\n          \n          const preBoosted = votingMachineEventsInCache.proposalStateChanges\n            .findIndex(i => i.state === \"5\") >= 0;\n\n          votingMachineEventsInCache.votes.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            voter: votingMachineEvent.returnValues._voter,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._reputation,\n            preBoosted: preBoosted,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Stake\":\n        votingMachineEventsInCache.stakes.push({\n          event: votingMachineEvent.event,\n          signature: votingMachineEvent.signature,\n          address: votingMachineEvent.address,\n            staker: votingMachineEvent.returnValues._staker,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._amount,\n            amount4Bounty: bnum(\"0\"),\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Redeem\":\n          votingMachineEventsInCache.redeems.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"RedeemReputation\":\n          votingMachineEventsInCache.redeemsRep.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n      }\n  });\n  \n  const callsToExecute = [];\n  for (let i = 0; i < votingMachineParamsHash.length; i++) {\n    callsToExecute.push([\n      votingMachine,\n      \"parameters\",\n      [votingMachineParamsHash[i]]\n    ]);\n  }\n\n  const callsResponse = await executeMulticall(web3, multicall, callsToExecute);\n\n  for (let i = 0; i < callsResponse.returnData.length; i++) {\n    networkCache.votingMachines[votingMachine._address].votingParameters[ votingMachineParamsHash[i] ] =\n      decodeSchemeParameters(web3.eth.abi.decodeParameters(\n        [\n          {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n          {type: 'uint256', name: 'queuedVotePeriodLimit' },\n          {type: 'uint256', name: 'boostedVotePeriodLimit' },\n          {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n          {type: 'uint256', name: 'thresholdConst' },\n          {type: 'uint256', name: 'limitExponentValue' },\n          {type: 'uint256', name: 'quietEndingPeriod' },\n          {type: 'uint256', name: 'proposingRepReward' },\n          {type: 'uint256', name: 'votersReputationLossRatio' },\n          {type: 'uint256', name: 'minimumDaoBounty' },\n          {type: 'uint256', name: 'daoBountyConst' },\n          {type: 'uint256', name: 'activationTime' }\n        ], callsResponse.returnData[i])\n      );\n    }\n  \n  networkCache.votingMachines[votingMachine._address].events = votingMachineEventsInCache;\n\n  return networkCache;\n}\n\n// Gets all teh events form the permission registry and stores the permissions set.\nexport const updatePermissionRegistry = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  const allContracts = await getContracts(networkName, web3);\n  if (allContracts.permissionRegistry._address != ZERO_ADDRESS) {\n  \n    let permissionRegistryEvents = sortEvents(\n      await getEvents(web3, allContracts.permissionRegistry, fromBlock, toBlock, 'allEvents')\n    );\n    permissionRegistryEvents.map((permissionRegistryEvent) => {\n      const eventValues = permissionRegistryEvent.returnValues;\n      \n      if (eventValues.from == allContracts.avatar._address) {\n        \n        Object.keys(networkCache.schemes).map((schemeAddress) => {\n          if (networkCache.schemes[schemeAddress].controllerAddress == allContracts.controller._address) {\n            networkCache.schemes[schemeAddress].callPermissions.push({\n              asset: eventValues.asset,\n              to: eventValues.to,\n              functionSignature: eventValues.functionSignature,\n              value: eventValues.value,\n              fromTime: eventValues.fromTime\n            })\n          }\n        });\n\n      } else if (networkCache.schemes[eventValues.from]){\n        \n        networkCache.schemes[eventValues.from].callPermissions.push({\n          asset: eventValues.asset,\n          to: eventValues.to,\n          functionSignature: eventValues.functionSignature,\n          value: eventValues.value,\n          fromTime: eventValues.fromTime\n        })\n        \n      } else {\n        console.error('[Scheme does not exist]', eventValues.from);\n      }\n      \n    });\n  }\n  \n  return networkCache;\n}\n\n// Update all the schemes information\nexport const updateSchemes = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  const allContracts = await getContracts(networkName, web3);\n\n  let controllerEvents = sortEvents(\n    await getEvents(web3, allContracts.controller, fromBlock, toBlock, 'allEvents')\n  );\n  \n  for (let controllerEventsIndex = 0; controllerEventsIndex < controllerEvents.length; controllerEventsIndex++) {\n    const controllerEvent = controllerEvents[controllerEventsIndex];\n    \n    const schemeAddress = controllerEvent.returnValues._scheme;\n    \n    // Add or update the scheme information, register scheme is used to add and updates scheme parametersHash\n    if (controllerEvent.event == \"RegisterScheme\") {\n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      console.debug('Register Scheme event for ', schemeAddress, schemeTypeData.name);\n      \n      let callsToExecute = [\n        [allContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [allContracts.controller, \"getSchemePermissions\", [schemeAddress, allContracts.avatar._address]],\n        [allContracts.controller, \"getSchemeParameters\", [schemeAddress, allContracts.avatar._address]]\n      ];\n      \n      if (schemeTypeData.type == 'WalletScheme') {\n        const walletSchemeContract = await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress);\n        callsToExecute.push([walletSchemeContract, \"controllerAddress\", []]);\n        callsToExecute.push([walletSchemeContract, \"schemeName\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxSecondsForExecution\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxRepPercentageChange\", []]);\n      }\n      \n      const callsResponse1 = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const ethBalance = callsResponse1.decodedReturnData[0];\n      const permissions = decodePermission(callsResponse1.decodedReturnData[1]);\n      const paramsHash = schemeTypeData.voteParams\n        ? schemeTypeData.voteParams\n        : callsResponse1.decodedReturnData[2];\n\n      const controllerAddress = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[3]\n        : allContracts.avatar._address;\n      const schemeName = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[4]\n        : schemeTypeData.name;\n      const maxSecondsForExecution = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[5]\n        : 0;\n      const maxRepPercentageChange = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[6]\n        : 0;\n      \n      callsToExecute = [];\n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([\n          votingMachine,\n          \"getBoostedVoteRequiredPercentage\",\n          [schemeAddress, allContracts.avatar._address, paramsHash]\n        ]);\n      }\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        callsToExecute.push([\n          votingMachine,\n          \"parameters\",\n          [paramsHash]\n        ]);\n      }\n\n      const callsResponse2 = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse2.returnData[0])['0']\n        : 0;\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        try {\n          networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash] =\n          decodeSchemeParameters(web3.eth.abi.decodeParameters(\n            [\n              {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n              {type: 'uint256', name: 'queuedVotePeriodLimit' },\n              {type: 'uint256', name: 'boostedVotePeriodLimit' },\n              {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n              {type: 'uint256', name: 'thresholdConst' },\n              {type: 'uint256', name: 'limitExponentValue' },\n              {type: 'uint256', name: 'quietEndingPeriod' },\n              {type: 'uint256', name: 'proposingRepReward' },\n              {type: 'uint256', name: 'votersReputationLossRatio' },\n              {type: 'uint256', name: 'minimumDaoBounty' },\n              {type: 'uint256', name: 'daoBountyConst' },\n              {type: 'uint256', name: 'activationTime' }\n            ], callsResponse2.returnData[1])\n          );\n        } catch (error) {\n          console.error(\"Error getting parameters configuration for\", schemeTypeData.name);\n        }\n      }\n    \n      if (!networkCache.schemes[schemeAddress]) {\n        networkCache.schemes[schemeAddress] = {\n          address: schemeAddress,\n          registered: true,\n          controllerAddress,\n          name: schemeName,\n          type: schemeTypeData.type,\n          ethBalance: ethBalance,\n          tokenBalances: {},\n          votingMachine: schemeTypeData.votingMachine,\n          paramsHash: paramsHash,\n          permissions,\n          boostedVoteRequiredPercentage,\n          callPermissions: [],\n          proposalIds: [],\n          boostedProposals: 0,\n          maxSecondsForExecution,\n          maxRepPercentageChange,\n          newProposalEvents: []\n        };\n      } else {\n        networkCache.schemes[schemeAddress].paramsHash = paramsHash;\n        networkCache.schemes[schemeAddress].permissions = permissions;\n        networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n      }\n    \n    // Mark scheme as not registered but save all previous data\n    } else if (\n      controllerEvent.event == \"UnregisterScheme\" && \n      // This condition is added to skip the first scheme added (that is the dao creator account)\n      (controllerEvent.returnValues._sender != schemeAddress)\n    ) {\n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      console.debug('Unregister scheme event', schemeAddress, schemeTypeData.name);\n      let callsToExecute = [\n        [allContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, allContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n      }\n      const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n      \n      // Update the scheme values a last time\n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].registered = false;\n    }\n    \n  };\n  \n  // Update registered schemes\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    if (networkCache.schemes[schemeAddress].registered) {\n      \n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      let callsToExecute = [\n        [allContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, allContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n        callsToExecute.push([\n          votingMachine,\n          \"boostedVoteRequiredPercentage\",\n          [web3.utils.soliditySha3(schemeAddress, allContracts.avatar._address), networkCache.schemes[schemeAddress].paramsHash]\n        ])\n      }\n      const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n        \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse.returnData[3])['0']\n        : 0;\n      \n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n    }\n\n  }));\n  \n  return networkCache;\n};\n\n// Update all the proposals information\nexport const updateProposals = async function (\n  networkCache: DaoNetworkCache, networkName: string, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n  \n  const allContracts = await getContracts(networkName, web3);\n  const avatarAddress = allContracts.avatar._address;\n  const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', avatarAddress);\n  \n  // Get new proposals\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    \n    const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n    const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n  \n    let schemeEvents = [];\n    for (let i = 0; i < schemeTypeData.newProposalTopics.length; i++) {\n      schemeEvents = schemeEvents.concat(await getRawEvents(\n        web3,\n        schemeAddress,\n        fromBlock,\n        toBlock,\n        schemeTypeData.newProposalTopics[i]\n      ));\n    }\n    \n    console.debug(\"Getting proposals of\", schemeTypeData.name, schemeEvents.length);\n    \n    let schemeEventsBatchs = [];\n    let schemeEventsBatchsIndex = 0;\n    for (var i = 0; i < schemeEvents.length; i += 50)\n      schemeEventsBatchs.push(schemeEvents.slice(i, i + 50));\n    \n    while(schemeEventsBatchsIndex < schemeEventsBatchs.length) {\n      \n      try {\n        console.debug(\"Getting proposals in event batch index\", schemeEventsBatchsIndex, \"in\", schemeTypeData.name,);\n        await Promise.all(schemeEventsBatchs[schemeEventsBatchsIndex].map(async (schemeEvent) => {\n          const proposalId = (schemeEvent.topics[1] == avatarAddressEncoded)\n          ? web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[2])\n          : web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[1]);\n          // Get all the proposal information from the scheme and voting machine\n          let callsToExecute = [\n            [ \n              votingMachine,\n              \"proposals\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                1] ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                2] ],\n            [ \n              votingMachine,\n              \"proposalStatus\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"getProposalTimes\",\n              [proposalId]\n            ]\n          ];\n\n          if (schemeTypeData.type == 'WalletScheme') {\n            callsToExecute.push([ \n              await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n              \"getOrganizationProposal\", [proposalId]\n            ]);\n          }\n          \n          const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n          \n          const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n            [\n              {type: 'bytes32', name: 'organizationId' },\n              {type: 'address', name: 'callbacks' },\n              {type: 'uint256', name: 'state' },\n              {type: 'uint256', name: 'winningVote' },\n              {type: 'address', name: 'proposer' },\n              {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n              {type: 'bytes32', name: 'paramsHash' },\n              {type: 'uint256', name: 'daoBountyRemain' },\n              {type: 'uint256', name: 'daoBounty' },\n              {type: 'uint256', name: 'totalStakes' },\n              {type: 'uint256', name: 'confidenceThreshold' },\n              {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n            ],\n            callsResponse.returnData[0]\n          );\n          const positiveVotes = callsResponse.returnData[1];\n          const negativeVotes = callsResponse.returnData[2];\n          \n          const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n            ['uint256','uint256','uint256','uint256'], \n            callsResponse.returnData[3]\n          );\n          const proposalTimes = callsResponse.decodedReturnData[4];\n          \n          let schemeProposalInfo = {\n            to: [],\n            callData: [],\n            value: [],\n            state: 0,\n            title: \"\",\n            descriptionHash: \"\",\n            submittedTime: 0\n          };\n          let decodedProposer;\n          let creationLogDecoded;\n          \n          if (schemeTypeData.type == 'WalletScheme') {\n            schemeProposalInfo = web3.eth.abi.decodeParameters(\n                [ \n                  {type: 'address[]', name: 'to' },\n                  {type: 'bytes[]', name: 'callData' },\n                  {type: 'uint256[]', name: 'value' },\n                  {type: 'uint256', name: 'state' },\n                  {type: 'string', name: 'title' },\n                  {type: 'string', name: 'descriptionHash' },\n                  {type: 'uint256', name: 'submittedTime' }\n                ],\n                callsResponse.returnData[5]\n              );\n          } else {\n            const transactionReceipt = await web3.eth.getTransactionReceipt(schemeEvent.transactionHash);\n            try {\n              schemeTypeData.newProposalTopics.map((newProposalTopic, i) => {\n                transactionReceipt.logs.map((log) => {\n                  if (log.topics[0] == \"0x75b4ff136cc5de5957574c797de3334eb1c141271922b825eb071e0487ba2c5c\") {\n                    decodedProposer = web3.eth.abi.decodeParameters([\n                      { type:'uint256', name: \"_numOfChoices\"},\n                      { type:'address', name: \"_proposer\"},\n                      { type:'bytes32', name: \"_paramsHash\"}\n                    ], log.data)._proposer\n                  }\n                  if (!creationLogDecoded && (log.topics[0] == newProposalTopic[0])) {\n                    creationLogDecoded = web3.eth.abi.decodeParameters(schemeTypeData.creationLogEncoding[i], log.data)\n                    if (creationLogDecoded._descriptionHash.length > 0 && creationLogDecoded._descriptionHash != ZERO_HASH) {\n                      schemeProposalInfo.descriptionHash = ipfsHashToDescriptionHash(creationLogDecoded._descriptionHash);\n                    }\n                  }\n                  \n                })\n              });\n              \n            } catch (error) {\n              console.error('Error on adding content hash from tx', schemeEvent.transactionHash);\n            }\n            \n            if (schemeTypeData.type == 'SchemeRegistrar') {\n              \n              schemeProposalInfo.to = [schemeTypeData.contractToCall];\n              schemeProposalInfo.value = [0];\n              \n              if (creationLogDecoded._parametersHash) {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'registerScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'bytes32', name: '_paramsHash' },\n                      { type: 'bytes4', name: '_permissions' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    creationLogDecoded._parametersHash,\n                    creationLogDecoded._permissions,\n                    avatarAddress\n                  ]\n                )];\n              } else {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'unregisterScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    avatarAddress\n                  ]\n                )];\n              }\n              \n            } else if (schemeTypeData.type == \"ContributionReward\") {\n              \n              if (creationLogDecoded._reputationChange > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._reputationChange,\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              } else if (creationLogDecoded._reputationChange < 0) {\n\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'burnReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_from' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    bnum(creationLogDecoded._reputationChange).times(-1),\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[0] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintTokens',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_beneficiary' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[0],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[1] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'sendEther',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amountInWei' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[1],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[2] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'externalTokenTransfer',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_externalToken' },\n                      { type: 'address', name: '_to' },\n                      { type: 'uint256', name: '_value' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._externalToken,\n                    creationLogDecoded._beneficiary,\n                    creationLogDecoded._rewards[2],\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n            } else if (schemeTypeData.type == \"GenericScheme\") {\n              \n              schemeProposalInfo.to = [allContracts.controller._address];\n              schemeProposalInfo.value = [0];\n              schemeProposalInfo.callData = [\n                web3.eth.abi.encodeFunctionCall({\n                  name: 'genericCall',\n                  type: 'function',\n                  inputs: [\n                    { type: 'address', name: '_contract' },\n                    { type: 'bytes', name: '_data' },\n                    { type: 'address', name: '_avatar' },\n                    { type: 'uint256', name: '_value' },\n                  ]\n                },[\n                  schemeTypeData.contractToCall,\n                  creationLogDecoded._data,\n                  avatarAddress,\n                  creationLogDecoded._value\n                ]\n              )];\n              \n            } else if (schemeTypeData.type == \"GenericMulticall\") {\n              for (let callIndex = 0; callIndex < creationLogDecoded._contractsToCall.length; callIndex++) {\n                schemeProposalInfo.to.push(allContracts.controller._address);\n                schemeProposalInfo.value.push(0)\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'genericCall',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_contract' },\n                      { type: 'bytes', name: '_data' },\n                      { type: 'address', name: '_avatar' },\n                      { type: 'uint256', name: '_value' },\n                    ]\n                  },[\n                    creationLogDecoded._contractsToCall[callIndex],\n                    creationLogDecoded._callsData[callIndex],\n                    avatarAddress,\n                    creationLogDecoded._values[callIndex],\n                  ]\n                ));\n              }\n              \n            }\n          }\n          \n          networkCache.proposals[proposalId] = {\n            id: proposalId,\n            scheme: schemeAddress,\n            to: schemeProposalInfo.to,\n            title: schemeProposalInfo.title,\n            callData: schemeProposalInfo.callData,\n            values: schemeProposalInfo.value.map((value) => bnum(value)),\n            stateInScheme: schemeProposalInfo.state,\n            stateInVotingMachine: votingMachineProposalInfo.state,\n            descriptionHash: schemeProposalInfo.descriptionHash,\n            creationEventSender: (await web3.eth.getTransaction(schemeEvent.transactionHash)).from,\n            creationEvent: {\n              event: schemeEvent.event,\n              signature: schemeEvent.signature,\n              address: schemeEvent.address,\n              tx: schemeEvent.transactionHash,\n              l1BlockNumber: schemeEvent.l1BlockNumber,\n              l2BlockNumber: schemeEvent.l2BlockNumber,\n              timestamp: schemeEvent.timestamp,\n              transactionIndex: schemeEvent.transactionIndex,\n              logIndex: schemeEvent.logIndex\n            },\n            repAtCreation: bnum(await allContracts.reputation.methods.totalSupplyAt(schemeEvent.l1BlockNumber).call()),\n            winningVote: votingMachineProposalInfo.winningVote,\n            proposer: decodedProposer ? decodedProposer : votingMachineProposalInfo.proposer,\n            currentBoostedVotePeriodLimit: votingMachineProposalInfo.currentBoostedVotePeriodLimit,\n            paramsHash: votingMachineProposalInfo.paramsHash,\n            daoBountyRemain: bnum(votingMachineProposalInfo.daoBountyRemain),\n            daoBounty: bnum(votingMachineProposalInfo.daoBounty),\n            totalStakes: bnum(votingMachineProposalInfo.totalStakes),\n            confidenceThreshold: votingMachineProposalInfo.confidenceThreshold,\n            secondsFromTimeOutTillExecuteBoosted: votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted,\n            submittedTime: bnum(proposalTimes[0]),\n            boostedPhaseTime: bnum(proposalTimes[1]),\n            preBoostedPhaseTime: bnum(proposalTimes[2]),\n            daoRedeemItsWinnings: votingMachineProposalInfo.daoRedeemItsWinnings,\n            shouldBoost: false,\n            positiveVotes: bnum(positiveVotes),\n            negativeVotes: bnum(negativeVotes),\n            preBoostedPositiveVotes: bnum(proposalStatusWithVotes[0]),\n            preBoostedNegativeVotes: bnum(proposalStatusWithVotes[1]),\n            positiveStakes: bnum(proposalStatusWithVotes[2]),\n            negativeStakes: bnum(proposalStatusWithVotes[3])\n          };\n          \n          networkCache.schemes[schemeAddress].proposalIds.push(proposalId);\n          networkCache.schemes[schemeAddress].newProposalEvents.push({\n            proposalId: proposalId,\n            event: schemeEvent.event,\n            signature: schemeEvent.signature,\n            address: schemeEvent.address,\n            tx: schemeEvent.transactionHash,\n            l1BlockNumber: schemeEvent.l1BlockNumber,\n            l2BlockNumber: schemeEvent.l2BlockNumber,\n            timestamp: schemeEvent.timestamp,\n            transactionIndex: schemeEvent.transactionIndex,\n            logIndex: schemeEvent.logIndex\n          });\n          \n          if (schemeProposalInfo.descriptionHash.length > 1){\n            networkCache.ipfsHashes.push({\n              hash: descriptionHashToIPFSHash(schemeProposalInfo.descriptionHash),\n              type: 'proposal',\n              name: proposalId\n            });\n          }\n          // Save proposal created in users\n          if (!networkCache.users[votingMachineProposalInfo.proposer]) {\n            networkCache.users[votingMachineProposalInfo.proposer] = {\n              repBalance: bnum(0),\n              proposalsCreated: [proposalId]\n            }\n          } else {\n            networkCache.users[votingMachineProposalInfo.proposer].proposalsCreated.push(proposalId);\n          }\n        }));\n        \n        schemeEventsBatchsIndex ++;\n      } catch (error) {\n        console.error('Error:',error.message);\n        console.debug('Trying again getting proposal info of schemeEventsBatchs index',schemeEventsBatchsIndex);\n      }\n    }\n    \n  }));\n  \n  let retryIntent = 0;\n  // Update proposals title\n  for (let proposalIndex = 0; proposalIndex < Object.keys(networkCache.proposals).length; proposalIndex++) {\n    const proposal = networkCache.proposals[Object.keys(networkCache.proposals)[proposalIndex]];\n    if (retryIntent > 3) {\n      retryIntent = 0;\n      continue;\n    }\n    if (\n      networkCache.schemes[proposal.scheme].type != \"WalletScheme\"\n      && proposal.descriptionHash && proposal.descriptionHash.length > 0\n      // Try to get title if cache is running in node script or if proposal was submitted in last 100000 blocks\n      && (proposal.title.length == 0\n        && (isNode() || proposal.creationEvent.l1BlockNumber > Number(toBlock) - 100000)\n      )\n    )\n      try {\n        console.debug('Getting title from proposal', proposal.id, proposal.descriptionHash);\n        const response = await axios.request({\n          url:'https://ipfs.io/ipfs/'+descriptionHashToIPFSHash(proposal.descriptionHash),\n          method: \"GET\",\n          timeout: 5000\n        });\n        if (response && response.data && response.data.title) {\n          networkCache.proposals[proposal.id].title = response.data.title;\n        } else {\n          console.error('Couldnt not get title from', proposal.descriptionHash);\n        }\n        await sleep(1000);\n      } catch (error) {\n        console.error('Error getting title from', proposal.descriptionHash, 'waiting 2 seconds and trying again..');\n        proposalIndex --;\n        retryIntent ++;\n        await sleep(2000);\n      }\n  }\n\n  // Update existent active proposals\n  await Promise.all(Object.keys(networkCache.proposals).map(async (proposalId) => {\n    \n    if (networkCache.proposals[proposalId].stateInVotingMachine > 2) {\n  \n      const schemeAddress = networkCache.proposals[proposalId].scheme;\n      const schemeTypeData = getSchemeTypeData(networkName, schemeAddress);\n      const votingMachine = allContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      // Get all the proposal information from the scheme and voting machine\n      let callsToExecute = [\n        [ \n          votingMachine,\n          \"proposals\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 1]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 2]\n        ],\n        [ \n          votingMachine,\n          \"proposalStatus\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"getProposalTimes\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"shouldBoost\",\n          [proposalId]\n        ]\n      ];\n  \n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([ \n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"getOrganizationProposal\", [proposalId]\n        ]);\n      }\n  \n      const callsResponse = await executeMulticall(web3, allContracts.multicall, callsToExecute);\n  \n      const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n        [\n          {type: 'bytes32', name: 'organizationId' },\n          {type: 'address', name: 'callbacks' },\n          {type: 'uint256', name: 'state' },\n          {type: 'uint256', name: 'winningVote' },\n          {type: 'address', name: 'proposer' },\n          {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n          {type: 'bytes32', name: 'paramsHash' },\n          {type: 'uint256', name: 'daoBountyRemain' },\n          {type: 'uint256', name: 'daoBounty' },\n          {type: 'uint256', name: 'totalStakes' },\n          {type: 'uint256', name: 'confidenceThreshold' },\n          {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n        ],\n        callsResponse.returnData[0]\n      );\n      const positiveVotes = callsResponse.returnData[1];\n      const negativeVotes = callsResponse.returnData[2];\n  \n      const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n        ['uint256','uint256','uint256','uint256'], \n        callsResponse.returnData[3]\n      );\n      const proposalTimes = callsResponse.decodedReturnData[4];\n      const proposalShouldBoost = callsResponse.decodedReturnData[5];\n  \n      const schemeProposalInfo = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(\n          [ \n            {type: 'address[]', name: 'to' },\n            {type: 'bytes[]', name: 'callData' },\n            {type: 'uint256[]', name: 'value' },\n            {type: 'uint256', name: 'state' },\n            {type: 'string', name: 'title' },\n            {type: 'string', name: 'descriptionHash' },\n            {type: 'uint256', name: 'submittedTime' }\n          ],\n          callsResponse.returnData[6]\n        )\n        : {\n          to: \"\",\n          callData: [],\n          value: [],\n          state: 0,\n          title: \"\",\n          descriptionHash: \"\",\n          submittedTime: 0\n        };\n  \n      networkCache.proposals[proposalId].stateInScheme = schemeProposalInfo.state;\n      networkCache.proposals[proposalId].stateInVotingMachine = votingMachineProposalInfo.state;\n      networkCache.proposals[proposalId].winningVote = votingMachineProposalInfo.winningVote;\n      networkCache.proposals[proposalId].currentBoostedVotePeriodLimit = votingMachineProposalInfo.currentBoostedVotePeriodLimit;\n      networkCache.proposals[proposalId].daoBountyRemain = bnum(votingMachineProposalInfo.daoBountyRemain);\n      networkCache.proposals[proposalId].daoBounty = bnum(votingMachineProposalInfo.daoBounty);\n      networkCache.proposals[proposalId].totalStakes = bnum(votingMachineProposalInfo.totalStakes);\n      networkCache.proposals[proposalId].confidenceThreshold = votingMachineProposalInfo.confidenceThreshold;\n      networkCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted;\n      networkCache.proposals[proposalId].boostedPhaseTime = bnum(proposalTimes[1]);\n      networkCache.proposals[proposalId].preBoostedPhaseTime = bnum(proposalTimes[2]);\n      networkCache.proposals[proposalId].daoRedeemItsWinnings = votingMachineProposalInfo.daoRedeemItsWinnings;\n      networkCache.proposals[proposalId].shouldBoost = proposalShouldBoost;\n      networkCache.proposals[proposalId].positiveVotes = bnum(positiveVotes);\n      networkCache.proposals[proposalId].negativeVotes = bnum(negativeVotes);\n      networkCache.proposals[proposalId].preBoostedPositiveVotes = bnum(proposalStatusWithVotes[0]);\n      networkCache.proposals[proposalId].preBoostedNegativeVotes = bnum(proposalStatusWithVotes[1]);\n      networkCache.proposals[proposalId].positiveStakes = bnum(proposalStatusWithVotes[2]);\n      networkCache.proposals[proposalId].negativeStakes = bnum(proposalStatusWithVotes[3]);\n  \n      // Save proposal created in users if not saved already\n      if (!networkCache.users[networkCache.proposals[proposalId].proposer]) {\n        networkCache.users[networkCache.proposals[proposalId].proposer] = {\n          repBalance: bnum(0),\n          proposalsCreated: [proposalId]\n        }\n      } else if (networkCache.users[networkCache.proposals[proposalId].proposer].proposalsCreated.indexOf(proposalId) < 0) {\n        networkCache.users[networkCache.proposals[proposalId].proposer].proposalsCreated.push(proposalId);\n      }\n  \n    }\n  \n  }));\n  \n  return networkCache;\n};\n","\nconst binaryToHex = function(binaryString) {\n  const lookup = {\n    \"0000\": \"0\",\n    \"0001\": \"1\",\n    \"0010\": \"2\",\n    \"0011\": \"3\",\n    \"0100\": \"4\",\n    \"0101\": \"5\",\n    \"0110\": \"6\",\n    \"0111\": \"7\",\n    \"1000\": \"8\",\n    \"1001\": \"9\",\n    \"1010\": \"A\",\n    \"1011\": \"B\",\n    \"1100\": \"C\",\n    \"1101\": \"D\",\n    \"1110\": \"E\",\n    \"1111\": \"F\"\n  };\n  var ret = \"\";\n  binaryString = binaryString.split(\" \");\n  for (var i = 0; i < binaryString.length; i++) {\n    ret += lookup[ binaryString[ i ] ];\n  }\n  return ret;\n};\n\nconst hexToBinary = function(hexString) {\n  hexString = hexString.replace(/^0x+/, '');\n  const lookup = {\n    \"0\": \"0000\",\n    \"1\": \"0001\",\n    \"2\": \"0010\",\n    \"3\": \"0011\",\n    \"4\": \"0100\",\n    \"5\": \"0101\",\n    \"6\": \"0110\",\n    \"7\": \"0111\",\n    \"8\": \"1000\",\n    \"9\": \"1001\",\n    \"a\": \"1010\",\n    \"b\": \"1011\",\n    \"c\": \"1100\",\n    \"d\": \"1101\",\n    \"e\": \"1110\",\n    \"f\": \"1111\",\n    \"A\": \"1010\",\n    \"B\": \"1011\",\n    \"C\": \"1100\",\n    \"D\": \"1101\",\n    \"E\": \"1110\",\n    \"F\": \"1111\"\n  };\n\n  var ret = \"\";\n  for (var i = 0, len = hexString.length; i < len; i++) {\n    if (hexString[ i ] != \"0\")\n      ret += lookup[ hexString[ i ] ];\n  }\n  return ret;\n};\n\n// All 0: Not registered,\n// 1st bit: Flag if the scheme is registered,\n// 2nd bit: Scheme can register other schemes\n// 3rd bit: Scheme can add/remove global constraints\n// 4th bit: Scheme can upgrade the controller\n// 5th bit: Scheme can call genericCall on behalf of the organization avatar\nexport const encodePermission = function(permissions) {\n  const canGenericCall = permissions.canGenericCall || false;\n  const canUpgrade = permissions.canUpgrade || false;\n  const canChangeConstraints = permissions.canChangeConstraints || false;\n  const canRegisterSchemes = permissions.canRegisterSchemes || false;\n  const permissionBytes = `000${canGenericCall ? 1 : 0} ${canUpgrade ? 1 : 0}${canChangeConstraints ? 1 : 0}${canRegisterSchemes ? 1 : 0}1`;\n  return \"0x000000\" + binaryToHex(permissionBytes);\n}\nexport const decodePermission = function(permission) {\n  permission = hexToBinary(permission);\n  return {\n    canGenericCall: permission.length > 3 && permission[ 4 ] == \"1\",\n    canUpgrade: permission.length > 3 && permission[ 5 ] == \"1\",\n    canChangeConstraints: permission.length > 3 && permission[ 6 ] == \"1\",\n    canRegisterSchemes: permission.length > 3 && permission[ 7 ] == \"1\"\n  };\n}\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","// Libraries\nimport { ethers, utils } from 'ethers';\nimport { BigNumber } from './bignumber';\n\n// Utils\nexport const MAX_GAS = utils.bigNumberify('0xffffffff');\nexport const MAX_UINT = utils.bigNumberify(ethers.constants.MaxUint256);\nexport const ZERO_HASH = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const ANY_ADDRESS = \"0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\";\nexport const ANY_FUNC_SIGNATURE = \"0xaaaaaaaa\";\nexport const ERC20_TRANSFER_SIGNATURE = \"0xa9059cbb\";\nexport const DEFAULT_TOKEN_DECIMALS = 18;\n\nexport function bnum(\n    val: string | number | utils.BigNumber | BigNumber\n): BigNumber {\n    return new BigNumber(val.toString());\n}\n\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\n    const scalePow = new BigNumber(decimalPlaces.toString());\n    const scaleMul = new BigNumber(10).pow(scalePow);\n    return input.times(scaleMul);\n}\n\nexport function setPropertyToMaxUintIfEmpty(value?): string {\n    if (!value || value === 0 || value === '') {\n        value = MAX_UINT.toString();\n    }\n    return value;\n}\n\nexport function setPropertyToZeroIfEmpty(value?): string {\n    if (!value || value === '') {\n        value = '0';\n    }\n    return value;\n}\n\nexport function hasMaxApproval(amount: BigNumber): boolean {\n    return amount.gte(bnum(MAX_UINT.div(2).toString()));\n}\n\nexport function isEmpty(str: string): boolean {\n    return !str || 0 === str.length;\n}\n\nexport function roundValue(value, decimals = 4): string {\n    const decimalPoint = value.indexOf('.');\n    if (decimalPoint === -1) {\n        return value;\n    }\n    return value.slice(0, decimalPoint + decimals + 1);\n}\n\nexport function str(value: any): string {\n    return value.toString();\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function parseCamelCase(text)\n{\n  const parsed = text.replace(/([a-z])([A-Z])/g, '$1 $2');\n  return parsed[0].toUpperCase() + parsed.substring(1);\n}\n","import contentHash from 'content-hash';\nimport _ from \"lodash\";\n\nconst MAX_BLOCKS_PER_EVENTS_FETCH : number = Number(process.env.MAX_BLOCKS_PER_EVENTS_FETCH) || 1000000;\n\nexport const getEvents = async function(\n  web3, contract, fromBlock, toBlock, eventsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching events of ${contract._address} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await contract.getPastEvents(eventsToGet, {fromBlock: from, toBlock: to});\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message);\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getRawEvents = async function(\n  web3, contractAddress, fromBlock, toBlock, topicsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching logs of ${contractAddress} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await web3.eth.getPastLogs({\n        address: contractAddress,\n        fromBlock: from,\n        toBlock: to,\n        topics: topicsToGet\n      });\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message)\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getTimestampOfEvents = async function(web3, events) {\n  \n  //// TODO:  See how can we bacth requests can be implemented\n  \n  // async function batchRequest(blocks) {\n  //   const batch = new web3.BatchRequest();\n  //   let requests = [];\n  //   for (let i = 0; i < blocks.length; i++) {\n  //     const request = new Promise((resolve, reject) => {\n  //       batch.add(web3.eth.getBlock.request(blocks[i], (err, data) => {\n  //         console.log(1)\n  //         if (err) return reject(err);\n  //         resolve(data);\n  //       }));\n  //     });\n  //     requests.push(request);\n  //   }\n  //   batch.execute();\n  //   console.log(batch)\n  //   await Promise.all(requests);\n  //   return batch;\n  // };\n\n  let blocksToFetch = [];\n  let timestamps = [];\n  events.map((event) => {\n    if (blocksToFetch.indexOf(event.blockNumber) < 0)\n      blocksToFetch.push(event.blockNumber);\n  })\n  const totalLength = blocksToFetch.length;\n  while (blocksToFetch.length > 0 && totalLength > timestamps.length){\n    // timestamps = (await batchRequest(blocksToFetch)).map((blockResult) => {\n    //   return blockResult.timestamp;\n    // });\n    const blocksToFetchBatch = blocksToFetch.splice(0, 500)\n    await Promise.all(blocksToFetchBatch.map(async (block) => {\n      const blockInfo = (await web3.eth.getBlock(block));\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].blockNumber == blockInfo.number)\n          events[i].timestamp = blockInfo.timestamp;\n        if (blockInfo.l1BlockNumber)\n          events[i].l1BlockNumber = Number(blockInfo.l1BlockNumber);\n      }\n    }));\n  }\n\n  for (let i = 0; i < events.length; i++) {\n    if (events[i].l1BlockNumber){\n      events[i].l2BlockNumber = events[i].blockNumber;\n    } else {\n      events[i].l1BlockNumber = events[i].blockNumber;\n      events[i].l2BlockNumber = 0;\n    }\n  }\n  return events;\n};\n\nexport const sortEvents = function(events) {\n  return _.orderBy( events , [\"l1BlockNumber\", \"l2BlockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\",\"asc\"]);\n};\n\nexport const executeMulticall = async function(web3, multicall, calls) {\n  const rawCalls = calls.map((call) => {\n    return [call[0]._address, web3.eth.abi.encodeFunctionCall(\n      call[0]._jsonInterface.find(method => method.name == call[1]), call[2]\n    )];\n  });\n  \n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\n\n  return {\n    returnData,\n    decodedReturnData:returnData.map((callResult, i) => {\n      return web3.eth.abi.decodeParameters(\n        calls[i][0]._jsonInterface.find(method => method.name == calls[i][1]).outputs,\n        callResult\n      )[\"0\"];\n    })\n  };\n}\n\nexport const isNode = function () {\n  return (typeof module !== 'undefined' && module.exports);\n}\n\nexport const descriptionHashToIPFSHash = function (descriptionHash) {\n  try {\n    if (contentHash.getCodec(descriptionHash) == \"ipfs-ns\")\n      return contentHash.decode(descriptionHash);\n    else if (descriptionHash.length > 1 && descriptionHash.substring(0,2) != \"Qm\")\n      return descriptionHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error decoding descriptionHash', descriptionHash);\n    return \"\";\n  }\n}\n\nexport const ipfsHashToDescriptionHash = function (ipfsHash) {\n  try {\n    if (ipfsHash.length > 1 && ipfsHash.substring(0,2) == \"Qm\")\n      return contentHash.fromIpfs(ipfsHash);\n    else if (contentHash.getCodec(ipfsHash) == \"ipfs-ns\")\n      return ipfsHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error encoding ipfsHash', ipfsHash);\n    return \"\";\n  }\n}\n","const contractsFile = require('./contracts.json');\nconst tokensToFetchPriceFile = require('./tokensToFetchPrice.json');\nconst tokensFile = require('./tokens.json');\nconst Web3 = require('web3');\nimport { ZERO_ADDRESS } from '../utils/helpers';\nimport { NETWORK_IDS } from '../provider/connectors';\n\nconst web3 = new Web3();\n\nexport const getNetworkConfig = function(network) {\n\n\n  let networkConfig;\n\n  if (network === 'localhost') {\n    networkConfig = {\n      fromBlock: 1,\n      avatar: process.env.REACT_APP_AVATAR_ADDRESS.replace(/[\"']/g, \"\"),\n      controller: process.env.REACT_APP_CONTROLLER_ADDRESS.replace(/[\"']/g, \"\"),\n      reputation: process.env.REACT_APP_REPUTATION_ADDRESS.replace(/[\"']/g, \"\"),\n      permissionRegistry: process.env.REACT_APP_PERMISSION_REGISTRY_ADDRESS.replace(/[\"']/g, \"\"),\n      utils: {\n        multicall: process.env.REACT_APP_MULTICALL_ADDRESS.replace(/[\"']/g, \"\"),\n      },\n      votingMachines: {\n        dxd: {\n          address: process.env.REACT_APP_VOTING_MACHINE_ADDRESS.replace(/[\"']/g, \"\"),\n          token: process.env.REACT_APP_VOTING_MACHINE_TOKEN_ADDRESS.replace(/[\"']/g, \"\")\n        }\n      },\n    };\n  } else  if (network == 'mainnet') {\n    networkConfig = contractsFile[network];\n    const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', networkConfig.avatar);\n    \n    networkConfig.daostack = {\n      \n      \"dxSchemes\": {\n        \"0x2E6FaE82c77e1D6433CCaAaF90281523b99D0D0a\": \"DxLockMgnForRep\",\n        \"0x4D8DB062dEFa0254d00a44aA1602C30594e47B12\": \"DxGenAuction4Rep\",\n        \"0x4564BFe303900178578769b2D76B1a13533E5fd5\": \"DxLockEth4Rep\",\n        \"0x1cb5B2BB4030220ad5417229A7A1E3c373cDD2F6\": \"DxLockWhitelisted4Rep\"\n      },\n      \n      \"schemeRegistrar\": {\n        \"address\": \"0xf050F3C6772Ff35eB174A6900833243fcCD0261F\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x9799ec39e42562c5ac7fbb104f1edcaa495e00b45e0db80cce1c0cdc863d0d0f\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewSchemeProposal(address,bytes32,address,address,bytes32,bytes4,string)\"), avatarAddressEncoded],\n          [web3.utils.soliditySha3(\"RemoveSchemeProposal(address,bytes32,address,address,string)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n            { type:'address', name: \"_scheme \"},\n            { type:'bytes32', name: \"_parametersHash\"},\n            { type:'bytes4', name: \"_permissions\"},\n            { type:'string', name: \"_descriptionHash\"}\n          ],[\n            { type:'address', name: \"_scheme \"},\n            { type:'string', name: \"_descriptionHash\"}\n          ]\n        ]\n      },\n      \n      \"contributionReward\": {\n        \"address\": \"0x08cC7BBa91b849156e9c44DEd51896B38400f55B\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x399141801e9e265d79f1f1759dd67932980664ea28c2ba7e0e4dba8719e47118\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewContributionProposal(address,bytes32,address,string,int256,uint256[5],address,address)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'int256', name: \"_reputationChange\"},\n          { type:'uint256[5]', name: \"_rewards\"},\n          { type:'address', name: \"_externalToken\"},\n          { type:'address', name: \"_beneficiary\"}\n        ]]\n      },\n      \n      \"genericSchemes\": {\n        \"addresses\": {\n          \"0x199719EE4d5DCF174B80b80afa1FE4a8e5b0E3A0\": {\n            \"name\": \"DutchXScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0xff6155010292b35fb8daae8b4450cdc41a586bc591e9a76484e88ffba36f94a8\",\n            \"contractToCall\": \"0xb9812E2fA995EC53B5b6DF34d21f9304762C5497\",\n          },\n          \"0x46DF3EA38a680FBc84E744D92b0A8Ec717B2eA7E\":{\n            \"name\": \"GenericSchemeToENS\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x29ddbf85a0d14e08084cd9764c66ff2799d05355edf7f546c5af1c847a2d9734\",\n            \"contractToCall\": \"0x314159265dd8dbb310642f98f50c066173c1259b\",\n          },\n          \"0x9A543aeF934c21Da5814785E38f9A7892D3CDE6E\": {\n            \"name\": \"EnsPublicProviderScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x29ddbf85a0d14e08084cd9764c66ff2799d05355edf7f546c5af1c847a2d9734\",\n            \"contractToCall\": \"0x226159d592e2b063810a10ebf6dcbada94ed68b8\",\n          },\n          \"0x973ce4e81BdC3bD39f46038f3AaA928B04558b08\": {\n            \"name\": \"EnsRegistrarScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x29ddbf85a0d14e08084cd9764c66ff2799d05355edf7f546c5af1c847a2d9734\",\n            \"contractToCall\": \"0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85\",\n          },\n          \"0x9CEA0DD05C4344A769B2F4C2f8890EDa8a700d64\": {\n            \"name\": \"EnsRegistryScheme\",\n            \"votingMachine\": \"0x332B8C9734b4097dE50f302F7D9F273FFdB45B84\",\n            \"voteParams\": \"0x0dc1fb4d230debe146613511601e0df83dd5ac323a7add833de82ead5a19db3a\",\n            \"contractToCall\": \"0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e\",\n          },\n          \"0xc072171dA83CCe311e37BC1d168f54E6A6536DF4\": {\n            \"name\": \"TokenRegistry\",\n            \"votingMachine\": \"0x1C18bAd5a3ee4e96611275B13a8ed062B4a13055\",\n            \"voteParams\": \"0x8452e57c89dc78ec1b1ffc28786655279f9af4ac589dd5988c962e8cf6b4529b\",\n            \"contractToCall\": \"0x93db90445b76329e9ed96ecd74e76d8fbf2590d8\",\n          },\n          \"0xB3ec6089556CcA49549Be01fF446cF40fA81c84D\": {\n            \"name\": \"EnsPublicResolverScheme\",\n            \"votingMachine\": \"0x1C18bAd5a3ee4e96611275B13a8ed062B4a13055\",\n            \"voteParams\": \"0xa81f982cb1c27eb142e5f602e7eb50d125dd6a7e52dac1af5f9decb88278f2fa\",\n            \"contractToCall\": \"0x4976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41\",\n          },\n        },\n        \"newProposalTopics\": [\n          [ web3.utils.soliditySha3(\"NewCallProposal(address,bytes32,bytes,uint256,string)\"), avatarAddressEncoded ]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'bytes', name: \"_data\"},\n          { type:'uint256', name: \"_value\"},\n          { type:'string', name: \"_descriptionHash\"}\n        ]]\n      },\n      \n      \"multicallSchemes\": {\n        \"addresses\": {\n          \"0xef9dC3c39CA40A2a3000ACc5ca0467CE1C250808\": {\n            \"name\": \"Multicall_1\",\n            \"voteParams\": \"0xe5e87e294b422b2aa711bd25a7e8ac59a06bbf723786560c53c50edce980f2fd\"\n          },\n          \"0x34C42c3ee81A03FD9ea773987b4a6eF62f3fc151\": {\n            \"name\": \"Multicall_2\",\n            \"voteParams\": \"0x8a8f5413c9b49a4ed4df33213f474a0ae29328a81b3c40c881e8a3fab0d12b44\"\n          },\n          \"0x0f4775722a72FA85230c63598e661eC52563Fb4E\": {\n            \"name\": \"Multicall_3\",\n            \"voteParams\": \"0xe5e87e294b422b2aa711bd25a7e8ac59a06bbf723786560c53c50edce980f2fd\"\n          }\n        },\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewMultiCallProposal(address,bytes32,bytes[],uint256[],string,address[])\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'bytes[]', name: \"_callsData\"},\n          { type:'uint256[]', name: \"_values\"},\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'address[]', name: \"_contractsToCall\"}\n        ]]\n      }\n    };\n    \n  } else  if (network == 'xdai') {\n    networkConfig = contractsFile[network];\n    const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', networkConfig.avatar);\n    \n    networkConfig.daostack = {\n      \n      \"schemeRegistrar\": {\n        \"address\": \"0x22Ac81BE75cF76281D88A0F3A8Ae59b9abbE9da1\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x1e3e01f4ce01291e53f32570ab772ef6e7301d7223b00c162494e26cc16830df\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewSchemeProposal(address,bytes32,address,address,bytes32,bytes4,string)\"), avatarAddressEncoded],\n          [web3.utils.soliditySha3(\"RemoveSchemeProposal(address,bytes32,address,address,string)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n            { type:'address', name: \"_scheme \"},\n            { type:'bytes32', name: \"_parametersHash\"},\n            { type:'bytes4', name: \"_permissions\"},\n            { type:'string', name: \"_descriptionHash\"}\n          ],[\n            { type:'address', name: \"_scheme \"},\n            { type:'string', name: \"_descriptionHash\"}\n          ]\n        ]\n      },\n      \n      \"contributionReward\": {\n        \"address\": \"0x016Bf002D361bf5563c76230D19B4DaB4d66Bda4\",\n        \"contractToCall\": networkConfig.controller,\n        \"voteParams\": \"0x1e3e01f4ce01291e53f32570ab772ef6e7301d7223b00c162494e26cc16830df\",\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewContributionProposal(address,bytes32,address,string,int256,uint256[5],address,address)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'int256', name: \"_reputationChange\"},\n          { type:'uint256[5]', name: \"_rewards\"},\n          { type:'address', name: \"_externalToken\"},\n          { type:'address', name: \"_beneficiary\"}\n        ]]\n      },\n      \n      \"competitionScheme\": {\n        \"address\": \"0x73753baC5B0fBECfd741436b64163f670E0aCB30\",\n        \"contractToCall\": ZERO_ADDRESS,\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewContributionProposal(address,bytes32,address,string,int256,uint256[3],address,address,address)\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'int256', name: \"_reputationChange\"},\n          { type:'uint256[5]', name: \"_rewards\"},\n          { type:'address', name: \"_externalToken\"},\n          { type:'address', name: \"_beneficiary\"}\n        ]]\n      },\n      \n      \"multicallSchemes\": {\n        \"addresses\": {\n          \"0xaFE59DF878E23623A7a91d16001a66A4DD87e0c0\": {\n            \"name\": \"Multicall_1\",\n            \"voteParams\": \"0x1e3e01f4ce01291e53f32570ab772ef6e7301d7223b00c162494e26cc16830df\",\n            \"votingMachine\": \"0xDA309aDF1c84242Bb446F7CDBa96B570E901D4CF\"\n          }\n        },\n        \"newProposalTopics\": [\n          [web3.utils.soliditySha3(\"NewMultiCallProposal(address,bytes32,bytes[],uint256[],string,address[])\"), avatarAddressEncoded]\n        ],\n        \"creationLogEncoding\": [[\n          { type:'bytes[]', name: \"_callsData\"},\n          { type:'uint256[]', name: \"_values\"},\n          { type:'string', name: \"_descriptionHash\"},\n          { type:'address[]', name: \"_contractsToCall\"}\n        ]]\n      },\n      \n      \"dxSchemes\": {\n        \"0x2b644360a24366B1ebdBf4f69563eAfA4772bCA0\": \"InvalidScheme\",\n        \"0x50d895Df2ea26b4C3aBbFa22906197458F56bAe9\": \"DaoDeployer\",\n        \"0x63F411E7cA67CB296FE2c7B875E072E82A609436\": \"DaoDeployer2\"\n      },\n      \n    };\n    \n  } else {\n    networkConfig = contractsFile[network];\n  };\n  \n\n  return networkConfig;\n\n}\n\nexport const getSchemeTypeData = function(network, schemeAddress) {\n  const networkConfig = getNetworkConfig(network);\n  if (networkConfig.daostack) {\n    if (networkConfig.daostack.schemeRegistrar && networkConfig.daostack.schemeRegistrar.address == schemeAddress) {\n      return {\n        type: \"SchemeRegistrar\",\n        name: \"SchemeRegistrar\",\n        contractToCall: networkConfig.daostack.schemeRegistrar.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.schemeRegistrar.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.schemeRegistrar.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.contributionReward && networkConfig.daostack.contributionReward.address == schemeAddress) {\n      return {\n        type: \"ContributionReward\",\n        name: \"ContributionReward\",\n        contractToCall: networkConfig.daostack.contributionReward.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.contributionReward.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.contributionReward.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.competitionScheme && networkConfig.daostack.competitionScheme.address == schemeAddress) {\n      return {\n        type: \"CompetitionScheme\",\n        name: \"CompetitionScheme\",\n        contractToCall: networkConfig.daostack.competitionScheme.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.competitionScheme.newProposalTopics,\n        creationLogEncoding: networkConfig.daostack.competitionScheme.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.multicallSchemes && Object.keys(networkConfig.daostack.multicallSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericMulticall\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.multicallSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.multicallSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.genericSchemes && Object.keys(networkConfig.daostack.genericSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericScheme\",\n        votingMachine: networkConfig.daostack.genericSchemes.addresses[schemeAddress].votingMachine,\n        contractToCall: networkConfig.daostack.genericSchemes.addresses[schemeAddress].contractToCall,\n        name: networkConfig.daostack.genericSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.genericSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.genericSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.genericSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.dxSchemes && Object.keys(networkConfig.daostack.dxSchemes).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"OldDxScheme\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.dxSchemes[schemeAddress],\n        newProposalTopics: [],\n        creationLogEncoding: []\n      };\n    }\n  }\n  return {\n    type: \"WalletScheme\",\n    votingMachine: networkConfig.votingMachines.dxd.address,\n    name: \"WalletScheme\",\n    newProposalTopics: [[\n      web3.utils.soliditySha3(\"ProposalStateChange(bytes32,uint256)\"),\n      null,\n      '0x0000000000000000000000000000000000000000000000000000000000000001']\n    ],\n    creationLogEncoding: []\n  }\n}\n\nexport const getTokenData = function(tokenAddress) {\n  console.log(tokenAddress)\n  return tokensFile.tokens.find((tokenInFile) => tokenInFile.address == tokenAddress);\n}\n\nexport const getTokensToFetchPrice = function(networkName) {\n  return tokensToFetchPriceFile[networkName];\n}\n"],"sourceRoot":""}