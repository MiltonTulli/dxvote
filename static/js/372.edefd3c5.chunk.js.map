{"version":3,"sources":["../node_modules/prismjs/components/prism-smarty.js"],"names":["Prism","languages","smarty","pattern","alias","lookbehind","inside","hooks","add","env","smartyPattern","smartyLitteralStart","smartyLitteralEnd","smartyLitteralMode","buildPlaceholders","match","tokenizePlaceholders"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AAEC,WAASA,KAAT,EAAgB;AAEhBA,OAAK,CAACC,SAAN,CAAgBC,MAAhB,GAAyB;AACxB,eAAW,kBADa;AAExB,iBAAa;AACZC,aAAO,EAAE,UADG;AAEZC,WAAK,EAAE;AAFK,KAFW;AAMxB,cAAU,kCANc;AAOxB,cAAU,0DAPc;AAQxB,gBAAY,CACX,aADW,EAEX,aAFW,EAGX;AACCD,aAAO,EAAE,kBADV;AAECE,gBAAU,EAAE;AAFb,KAHW,EAOX;AACCF,aAAO,EAAE,qBADV;AAECE,gBAAU,EAAE;AAFb,KAPW,CARY;AAoBxB,gBAAY,CACX;AACCF,aAAO,EAAE,oBADV;AAECE,gBAAU,EAAE;AAFb,KADW,EAKX,eALW,EAMX,iBANW,CApBY;AA4BxB,iBAAa;AACZ;AACAF,aAAO,EAAE,0BAFG;AAGZG,YAAM,EAAE;AACP,oBAAY;AACXH,iBAAO,EAAE,iBADE;AAEXE,oBAAU,EAAE;AAFD,SADL;AAKP,oBAAY;AALL;AAHI,KA5BW;AAuCxB,mBAAe,CACd,iBADc,CAvCS;AA0CxB,gBAAY,CACX,kCADW,EAEX,gDAFW,EAGX,gDAHW,CA1CY;AA+CxB,eAAW;AA/Ca,GAAzB,CAFgB,CAoDhB;;AACAL,OAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAASC,GAAT,EAAc;AAChD,QAAIC,aAAa,GAAG,gCAApB;AACA,QAAIC,mBAAmB,GAAG,WAA1B;AACA,QAAIC,iBAAiB,GAAG,YAAxB;AACA,QAAIC,kBAAkB,GAAG,KAAzB;AAEAb,SAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCa,iBAArC,CAAuDL,GAAvD,EAA4D,QAA5D,EAAsEC,aAAtE,EAAqF,UAAUK,KAAV,EAAiB;AACrG;AACA,UAAGA,KAAK,KAAKH,iBAAb,EAAgC;AAC/BC,0BAAkB,GAAG,KAArB;AACA;;AAED,UAAG,CAACA,kBAAJ,EAAwB;AACvB,YAAGE,KAAK,KAAKJ,mBAAb,EAAkC;AACjCE,4BAAkB,GAAG,IAArB;AACA;;AAED,eAAO,IAAP;AACA;;AACD,aAAO,KAAP;AACA,KAdD;AAeA,GArBD,EArDgB,CA4EhB;;AACAb,OAAK,CAACO,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAASC,GAAT,EAAc;AAC/CT,SAAK,CAACC,SAAN,CAAgB,mBAAhB,EAAqCe,oBAArC,CAA0DP,GAA1D,EAA+D,QAA/D;AACA,GAFD;AAIA,CAjFA,EAiFCT,KAjFD,CAAD,C","file":"static/js/372.edefd3c5.chunk.js","sourcesContent":["/* TODO\n\tAdd support for variables inside double quoted strings\n\tAdd support for {php}\n*/\n\n(function(Prism) {\n\n\tPrism.languages.smarty = {\n\t\t'comment': /\\{\\*[\\s\\S]*?\\*\\}/,\n\t\t'delimiter': {\n\t\t\tpattern: /^\\{|\\}$/i,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t'number': /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n\t\t'variable': [\n\t\t\t/\\$(?!\\d)\\w+/,\n\t\t\t/#(?!\\d)\\w+#/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'function': [\n\t\t\t{\n\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/^\\/?(?!\\d)\\w+/,\n\t\t\t/(?!\\d)\\w+(?=\\()/\n\t\t],\n\t\t'attr-name': {\n\t\t\t// Value is made optional because it may have already been tokenized\n\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n\t\t\tinside: {\n\t\t\t\t\"variable\": {\n\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t\"operator\": /=/\n\t\t\t}\n\t\t},\n\t\t'punctuation': [\n\t\t\t/[\\[\\]().,:`]|->/\n\t\t],\n\t\t'operator': [\n\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n\t\t],\n\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/\n\t};\n\n\t// Tokenize all inline Smarty expressions\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;\n\t\tvar smartyLitteralStart = '{literal}';\n\t\tvar smartyLitteralEnd = '{/literal}';\n\t\tvar smartyLitteralMode = false;\n\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'smarty', smartyPattern, function (match) {\n\t\t\t// Smarty tags inside {literal} block are ignored\n\t\t\tif(match === smartyLitteralEnd) {\n\t\t\t\tsmartyLitteralMode = false;\n\t\t\t}\n\n\t\t\tif(!smartyLitteralMode) {\n\t\t\t\tif(match === smartyLitteralStart) {\n\t\t\t\t\tsmartyLitteralMode = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t});\n\n\t// Re-insert the tokens after tokenizing\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty');\n\t});\n\n}(Prism));"],"sourceRoot":""}