{"version":3,"sources":["utils/address.ts","utils/bignumber.ts","utils/enums.ts","utils/constants.ts","utils/date.ts","utils/helperHooks.ts","utils/helpers.ts","utils/number.ts","utils/permissions.ts","utils/proposals.ts","utils/scheme.ts","utils/cache.ts","provider/connectors.ts","stores/Provider.ts","services/ABIService.ts","provider/UncheckedJsonRpcSigner.ts","stores/actions/error.ts","stores/actions/actions.ts","stores/Transaction.ts","services/MulticallService.ts","services/DaoService.ts","services/EventsService.ts","services/IPFSService.ts","services/PinataService.ts","services/EtherscanService.ts","services/CoingeckoService.ts","stores/Modal.ts","stores/ConfigStore.ts","stores/DaoStore.ts","stores/UserStore.ts","contracts/index.ts","cache/index.ts","stores/BlockchainStore.ts","contexts/index.ts","components/Web3ReactManager/index.tsx","provider/providerHooks.ts","serviceWorker.ts","theme/index.tsx","components/Modal/index.tsx","components/common/Link.tsx","assets/images/x.svg","components/common/Copy.tsx","components/AccountDetails/index.tsx","assets/images/metamask.png","components/WalletModal/Option.tsx","components/WalletModal/index.tsx","components/common/Box.tsx","components/Web3ConnectStatus/index.tsx","assets/images/DXdao.svg","components/Header/index.tsx","components/Footer/index.tsx","PageRouter.tsx","components/common/ActiveButton.tsx","pages/Proposals.tsx","components/common/Question.tsx","pages/NewProposal.tsx","components/common/BlockchainLink.tsx","pages/User.tsx","pages/Proposal.tsx","components/FinanceInformation.tsx","components/SchemesInformation.tsx","components/GovernanceInformation.tsx","pages/Info.tsx","pages/Configuration.tsx","pages/FAQ.tsx","pages/Forum.tsx","index.tsx","../node_modules/prismjs/components lazy /^/.//prism/-.*$/ groupOptions: {} namespace object"],"names":["shortenAddress","address","digits","isAddress","Error","substring","value","ethers","utils","getAddress","toLowerCase","BigNumber","config","EXPONENTIAL_AT","ROUNDING_MODE","ROUND_DOWN","DECIMAL_PLACES","FORMAT","groupSize","groupSeparator","decimalSeparator","Web3Errors","TXEvents","VoteDecision","WalletSchemeProposalState","VotingMachineProposalState","MAX_UINT","ZERO_HASH","ZERO_ADDRESS","ANY_ADDRESS","ANY_FUNC_SIGNATURE","ERC20_TRANSFER_SIGNATURE","ERC20_APPROVE_SIGNATURE","DEFAULT_TOKEN_DECIMALS","timeToTimestamp","timestamp","toNumber","moment","unix","to","toString","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useCopyClipboard","timeout","useState","isCopied","setIsCopied","staticCopy","useCallback","text","didCopy","copy","hide","setTimeout","clearTimeout","usePrevious","ref","toCamelCaseString","length","replace","toUpperCase","bnum","val","scale","input","decimalPlaces","scalePow","scaleMul","pow","times","sleep","ms","Promise","resolve","parseCamelCase","parsed","getBlockchainLink","networkName","type","window","location","pathname","formatPercentage","decimals","useLowerLimit","lte","gt","formatCurrency","balance","toFormat","denormalizeBalance","normalizedBalance","normalizeBalance","amount","formatNumberValue","displayPrecision","truncateAt","roundDown","eq","toFixed","result","ROUND_UP","padToDecimalPlaces","formatBalance","precision","minDecimals","split","zerosToPad","pad","i","decodePermission","permission","canRegisterSchemes","hexString","lookup","ret","len","hexToBinary","canChangeConstraints","canUpgrade","canGenericCall","calculateStakes","thresholdConst","boostedProposals","preBoostedProposals","upstakes","downstakes","threshold","div","lt","recommendedThreshold","Number","stakeToBoost","minus","stakeToUnBoost","recommendedStakeToBoost","recommendedStakeToUnBoost","decodeProposalStatus","proposal","proposalStateChangeEvents","votingMachineParams","maxSecondsForExecution","autoBoost","schemeType","timeNow","queuedVotePeriodLimit","boostedVotePeriodLimit","preBoostedVotePeriodLimit","quietEndingPeriod","boostedPhaseTime","submittedTime","preBoostedPhaseTime","stateInVotingMachine","ExpiredInQueue","status","boostTime","finishTime","plus","pendingAction","Executed","stateInScheme","Rejected","find","event","state","ExecutionSucceded","ExecutionTimeout","Submitted","Queued","PreBoosted","shouldBoost","Boosted","QuietEndingPeriod","decodeSchemeParameters","rawParameters","queuedVoteRequiredPercentage","limitExponentValue","proposingRepReward","votersReputationLossRatio","minimumDaoBounty","daoBountyConst","activationTime","web3","require","MAX_BLOCKS_PER_EVENTS_FETCH","process","getEvents","contract","fromBlock","toBlock","eventsToGet","a","maxBlocksPerFetch","events","Math","min","from","console","debug","_address","getPastEvents","eventsFetched","getTimestampOfEvents","concat","error","message","trunc","blocksToLower","max","getRawEvents","contractAddress","topicsToGet","eth","getPastLogs","topics","blocksToFetch","timestamps","map","indexOf","blockNumber","push","totalLength","blocksToFetchBatch","splice","all","block","getBlock","blockInfo","number","l1BlockNumber","l2BlockNumber","sortEvents","_","orderBy","executeMulticall","multicall","calls","rawCalls","call","abi","encodeFunctionCall","_jsonInterface","method","name","methods","aggregate","returnData","decodedReturnData","callResult","decodeParameters","outputs","isNode","module","exports","descriptionHashToIPFSHash","descriptionHash","contentHash","getCodec","decode","ipfsHashToDescriptionHash","ipfsHash","fromIpfs","getSchemeTypeData","networkConfig","schemeAddress","log","daostack","schemeRegistrar","contractToCall","votingMachine","votingMachines","gen","newProposalTopics","voteParams","contributionReward","creationLogEncoding","competitionScheme","multicallSchemes","Object","keys","addresses","genericSchemes","dxSchemes","dxd","soliditySha3","ETH_NETWORKS","NETWORK_NAMES","NETWORK_IDS","NETWORK_ASSET_SYMBOL","ETH_NETWORKS_IDS","network","web3ContextNames","isChainIdSupported","chainId","injected","InjectedConnector","supportedChainIds","SUPPORTED_WALLETS","INJECTED","connector","iconName","description","href","color","primary","METAMASK","ContractType","ERRORS","schema","Avatar","Controller","VotingMachine","DXDVotingMachine","Reputation","WalletScheme","ERC20","PermissionRegistry","Multicall","ContributionReward","SchemeRegistrar","Redeemer","ABIService","context","this","contractType","data","library","providerStore","getActiveWeb3React","contractInterface","Interface","getAbi","functionSignature","functionName","functions","sighash","function","args","inputs","UncheckedJsonRpcSigner","signer","defineReadOnly","provider","transaction","sendUncheckedTransaction","then","hash","nonce","gasLimit","gasPrice","confirmations","wait","waitForTransaction","signMessage","errorCodeMapping","SIGNATURE_REJECTED","isKnownErrorCode","code","codeStr","getErrorByCode","UNKNOWN_ERROR","sendAction","params","action","sender","overrides","preLog","promiEvent","PromiEvent","send","once","emit","TX_HASH","receipt","RECEIPT","confNumber","CONFIRMATION","on","TX_ERROR","INVARIANT","FINALLY","catch","e","FetchCode","ProviderStore","accounts","defaultAccount","web3Contexts","supportedNetworks","chainData","activeChainId","activeFetchLoop","activeAccount","fetchUserBlockchainData","web3React","account","transactionStore","checkPendingTransactions","currentBlockNumber","makeObservable","observable","setCurrentBlockNumber","setActiveAccount","blocknumber","getCurrentBlockNumber","newBlockNumber","oldBlockNumber","getSigner","signerAccount","Contract","blockData","date","Date","format","ContextNotFound","BlockchainActionNoAccount","BlockchainActionNoChainId","getContract","addTransactionRecord","sendTransaction","MulticallService","activeCalls","activeCallsRaw","resetActiveCalls","configStore","multi","getNetworkContracts","response","results","forEach","addCall","addContractCall","abiService","iface","encoded","encode","DaoService","createProposal","vote","approveVotingMachineToken","stake","execute","redeem","callData","controller","avatarAddress","avatar","genericCall","encodeABI","recommendedCalls","getRecommendedCalls","controllerCallDecoded","decodeCall","asset","recommendedCallUsed","recommendedCall","encodeFunctionSignature","callParameters","param","__length__","decodedCallText","decodeText","paramIndex","replaceAll","toName","JSON","stringify","scheme","proposalData","networkContracts","sendRawTransaction","reputationChange","ethValue","tokenValue","externalToken","beneficiary","titleText","decision","proposalId","daoStore","getVotingMachineOfProposal","votingMachineAddress","getCache","token","redeemerAddress","EventsService","activeEventsCalls","eventName","activeEventCall","addEventCall","CID","IPFSService","ipfs","started","IPFS","create","content","add","cid","string","pin","get","file","path","chunk","axios","url","PinataService","auth","ipfsHashes","pinataApiKey","getLocalConfig","pinata","headers","Authorization","hashToPin","pinataMetadata","getActiveChainName","keyValues","EtherscanService","etherscanAPIKey","etherscan","CoingeckoService","prices","tokens","getTokensToFetchPrice","tokenAddresses","pricesResponse","tokenAddress","toChecksumAddress","TransactionStore","txRecords","filter","isTxPending","currentBlock","isStale","getTransactionReceipt","blockNumberChecked","SUCCESS","txHash","record","undefined","records","txRecord","ModalStore","walletModalVisible","toggleWalletModal","setWalletModalVisible","visible","appConfig","ConfigStore","darkMode","toggleDarkMode","activeWeb3","localStorage","getItem","parse","pinOnStart","setItem","ipfsService","getContentFromIPFS","configHash","cacheHash","tokenInFile","contracts","fetchPrice","proposalTemplates","networkTokens","getTokensOfNetwork","defaultValue","permissionRegistry","networkToken","symbol","DaoStore","daoCache","setCache","unparsedCache","daoInfo","ethBalance","repEvents","repEvent","schemes","callPermissions","proposals","values","currentBoostedVotePeriodLimit","daoBountyRemain","daoBounty","totalStakes","confidenceThreshold","secondsFromTimeOutTillExecuteBoosted","positiveVotes","negativeVotes","preBoostedPositiveVotes","preBoostedNegativeVotes","positiveStakes","negativeStakes","votingParameters","paramsHash","unparsedParams","newNetworkCache","parseCache","_schemeName","_schemeAddress","getProposal","schemeInfo","getSchemeProposals","users","totalPositiveVotes","totalPositiveVotesAmount","totalNegativeVotes","totalNegativeVotesAmount","totalPositiveStakes","totalPositiveStakesAmount","totalNegativeStakes","totalNegativeStakesAmount","totalProposalsCreated","cache","rep","sortBy","o","unshift","repTotalSupply","votes","voter","correctVotes","wrongVotes","correctStakes","wrongStakes","totalVoted","totalStaked","score","winningVote","stakes","staker","proposalCreator","proposer","getRepAt","totalSupply","creationEvent","tx","ranking","key","assign","allProposals","proposalEvents","getVotesOfProposal","getStakesOfProposal","redeems","getRedeemsOfProposal","redeemsRep","getRedeemsRepOfProposal","stateChanges","getProposalStateChanges","totalRep","history","transactionIndex","logIndex","userAddress","userRep","repBalance","repPercentage","redeemRep","newProposalEvents","pickBy","newProposal","votingMachineOfProposal","proposalStateChanges","proposalStateChange","getScheme","assetLimits","controllerAddress","assetAddress","callAllowance","getCallAllowance","fromTime","atBlock","inL2","UserStore","userInfo","dxdBalance","dxdApproved","genBalance","genApproved","update","callsToExecute","callsResponse","DxController","DxAvatar","DxReputation","GenesisProtocol","getContracts","reputation","gen2","getUpdatedCache","networkCache","updateDaoInfo","updateReputationEvents","networkCacheUpdated","updateVotingMachine","updateSchemes","updatePermissionRegistry","updateProposals","tokenBalances","reputationEvent","signature","returnValues","_to","_amount","transactionHash","_from","newVotingMachineEvents","votingMachineEventsInCache","votingMachineParamsHash","votingMachineEvent","proposalCreated","findIndex","newProposalEvent","_proposalId","_organization","_proposer","paramHash","_paramsHash","_proposalState","preBoosted","_voter","_vote","_reputation","_staker","amount4Bounty","_beneficiary","permissionRegistryEvent","eventValues","controllerEvents","controllerEventsIndex","controllerEvent","_scheme","schemeTypeData","WalletSchemeJSON","walletSchemeContract","callsResponse1","permissions","schemeName","maxRepPercentageChange","callsResponse2","boostedVoteRequiredPercentage","registered","proposalIds","_sender","avatarAddressEncoded","encodeParameter","schemeEvents","schemeEventsBatchs","schemeEventsBatchsIndex","slice","schemeEvent","decodeParameter","ContributionRewardJSON","votingMachineProposalInfo","proposalStatusWithVotes","proposalTimes","schemeProposalInfo","title","transactionReceipt","newProposalTopic","logs","decodedProposer","creationLogDecoded","_descriptionHash","_parametersHash","_permissions","_reputationChange","_rewards","_externalToken","_data","_value","callIndex","_contractsToCall","_callsData","_values","daoRedeemItsWinnings","retryIntent","proposalIndex","request","proposalShouldBoost","BlockchainStore","initialLoadComplete","contractStorage","eventsStorage","updateStore","fetchData","multicallService","index","lastFetched","executeCalls","multicallResponse","reduceMulticall","entry","has","emitions","entries","oldEntry","reset","active","getCacheIPFSHash","getBlockNumber","lastCheckedBlockNumber","tokensBalancesCalls","addCalls","executeAndUpdateMulticall","tokensBalancesCall","blockchainStore","getCachedValue","rootContext","React","createContext","modalStore","userStore","daoService","eventsService","pinataService","etherscanService","coingeckoService","useContext","Web3ReactManager","children","web3ContextInjected","useWeb3React","networkActive","networkError","setWeb3Context","loadConfig","triedEager","useWeb3ReactCore","activate","tried","setTried","isAuthorized","isMobile","ethereum","useEagerConnect","walletInstalled","reload","suppress","handleChainChanged","handleAccountsChanged","handleNetworkChanged","removeListener","useInactiveListener","BlurWrapper","styled","OverBlurModal","className","Boolean","hostname","match","MEDIA_WIDTHS","upToSmall","upToMedium","upToLarge","mediaWidthTemplates","reduce","accumulator","size","css","white","ThemeProvider","setDarkMode","theme","black","textColor","greyText","backgroundColor","activeButtonBackground","modalBackground","inputBackground","placeholderGray","shadowColor","borderStyle","concreteGray","mercuryGray","silverGray","chaliceGray","doveGray","mineshaftGray","activeGray","buttonOutlineGrey","tokenRowHover","charcoalBlack","zumthorBlue","malibuBlue","royalBlue","loadingBlue","wisteriaPurple","salmonRed","pizazzOrange","warningYellow","bodyText","connectedGreen","metaMaskOrange","textHover","buttonFaded","mediaWidth","flexColumnNoWrap","flexRowNoWrap","GlobalStyle","createGlobalStyle","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","suppressClassNameWarning","mobile","rest","attrs","StyledDialogContent","minHeight","maxHeight","isOpen","slideInAnimation","aria-label","HiddenCloseButton","button","Modal","onDismiss","hidden","onClick","_line","_line2","Link","target","rel","CopyIcon","TransactionStatusText","span","CopyHelper","toCopy","setCopied","_extends","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","ForwardRef","OptionButton","HeaderRow","UpperSection","InfoCard","AccountGroupingRow","AccountSection","YourAccount","GreenCircle","CircleWrapper","AccountControl","ConnectButtonRow","StyledLink","CloseIcon","CloseColor","Close","WalletAction","AccountDetails","openOptions","alt","close","clickable","transparentize","OptionCard","OptionCardLeft","OptionCardClickable","disabled","HeaderText","SubHeader","IconWrapper","Option","link","header","subheader","src","metamaskIcon","Wrapper","ContentWrapper","Blurb","OptionGrid","HoverText","WALLET_VIEWS","WalletModal","observer","walletView","setWalletView","connectionErrorMessage","setConnectionErrorMessage","walletModalOpen","activePrevious","connectorPrevious","tryActivation","getOptions","isMetamask","isMetaMask","option","mobileOnly","style","Box","WrongNetworkButton","AccountButton","ConnectButton","Web3ConnectStatus","display","fontSize","NavWrapper","NavSection","MenuItem","ItemBox","Header","NavItem","withRouter","route","cursor","getUserInfo","parseFloat","Web3","fromWei","dxdaoIcon","margin","FooterWrapper","LeftFooter","FooterItem","FooterDivider","Footer","useHistory","PageRouterWrapper","LoadingBox","PageRouter","useLocation","start","isAuthenticated","providerActive","loadPrices","updatePinList","Button","ButtonWithRouter","ActiveButton","ProposalsTableWrapper","ProposalsFilter","select","ProposalsNameFilter","ProposalTableHeaderActions","ProposalTableHeaderWrapper","TableHeader","align","TableRowsWrapper","TableRow","TableCell","weight","wrapText","ProposalsPage","getAllSchemes","stateFilter","setStateFilter","schemeFilter","setSchemeFilter","titleFilter","setTitleFilter","userEvents","getUserEvents","getAllProposals","cacheProposal","getProposalStatus","sortedProposals","sort","b","flexDirection","justifyContent","placeholder","onChange","newValue","positiveStake","negativeStake","repAtCreation","positiveVotesPercentage","negativeVotesPercentage","timeToBoost","timeToFinish","votingMachineTokenName","voted","staked","created","textDecoration","minWidth","textAlign","flex","QuestionLink","QuestionIcon","question","NewProposalFormWrapper","PlaceHolders","TitleInput","TextActions","CallRow","RemoveButton","TextInput","SelectInput","NewProposalPage","schemeInLocalStorage","networkAssetSymbol","defaultSchemeToUse","schemeToUse","setSchemeToUse","setTitleText","setIpfsHash","descriptionText","setDescriptionText","callsInStorage","dataValues","callInStorage","Array","functionParams","setCalls","repChange","contributionRewardCalls","setContributionRewardCalls","useReducer","x","forceUpdate","submitionState","setSubmitionState","errorMessage","setErrorMessage","getProposalTemplates","getSchemeRecommendedCalls","transferLimits","allowedToCall","allowedPermission","uploadToIPFS","bodyTextToUpload","tags","pinataPin","ipfsPin","uploaded","getContent","ipfsContent","callToController","callType","callDataFunctionSignature","callDataFunctionParamsEncoded","encodeParameters","functionParam","encodeControllerGenericCall","toWei","txerror","setCallsInState","changeCallType","allowedFunctions","onToSelectChange","toAddress","onFunctionSelectChange","onFunctionParamsChange","onContributionRewardValueChange","setContributionRewardCallsInState","Question","template","preview","commands","bold","italic","strikethrough","hr","divider","quote","image","unorderedListCommand","orderedListCommand","checkedListCommand","Markdown","borderRadius","border","padding","allowedCall","allowedCallIndex","selectedFunction","allowedFunction","allowedFunc","allowedFuncIndex","paddingRight","marginTop","funcParam","funcParamIndex","alignItems","AddressLink","BlockchainLink","onlyIcon","end","formarText","InfoBox","UserPage","getUser","proposalsToRedeem","voteParameters","getVotingParametersOfProposal","historyEvent","borderBottom","ProposalInformationWrapper","InfoSidebarBox","ProposalInfoSection","ProposalInfoBox","SidebarDivider","SidebarRow","AmountInput","AmountBadge","ActionButton","ProposalPage","votingMachineUsed","stakeAmount","setStakeAmount","votePercentage","setVotePercentage","proposalDescription","setProposalDescription","proposalTitle","setProposalTitle","votingMachineTokenApproved","getProposalEvents","votedAmount","positiveVotesCount","negativeVotesCount","stakedAmount","positiveStakesCount","negativeStakesCount","userRepAtProposalCreation","totalRepAtProposalCreation","repPercentageAtCreation","executionTimeoutTime","proposalCallTexts","p","decodeWalletSchemeCall","canRedeemToken","canRedeemRep","canRedeem","setCanRedeem","getAmountOfProposalsPreBoostedInScheme","submitVote","repAmount","submitStake","contributionRewardRedeemer","redeemContributionRewardCall","toRedeemResponse","toRedeem","executeProposal","finishTimeReached","lineBreak","whiteSpace","proposalCallText","dangerouslySetInnerHTML","__html","redeemContributionReward","voteEvent","step","maxWidth","stakeEvent","borderTop","FinanceInfoWrapper","FinanceTableHeaderWrapper","FinanceInformation","getDaoInfo","getPrices","assets","total","tokenData","getTokenData","indexOfAssetInTotal","assetHolder","assetsOfHolder","usd","SchemesInformationWrapper","SchemesInformation","schemeProposals","votingMachineParameters","getVotingParametersOfScheme","duration","humanize","GovernanceInfoWrapper","GovernanceTableHeaderWrapper","GovernanceInformation","weiNumber","governanceInfo","getGovernanceInfo","chartType","loader","options","legend","pieSliceText","pieStartAngle","sliceVisibilityThreshold","hAxis","vAxis","user","InfoPageWrapper","InfoNavigation","InfoPage","searchPath","search","Row","InputBox","ConfigPage","etherscanApiStatus","setEtherscanApiStatus","pinataKeyStatus","setPinataKeyStatus","localConfig","setLocalConfig","onApiKeyValueChange","clear","serviceName","checked","FAQPage","questionId","FAQBox","document","querySelectorAll","scrollIntoView","daoAddresses","n","FAQBody","ForumPage","loading","setLoading","addEventListener","lists","list","getAttribute","frameId","random","substr","removeAttribute","j","attributes","attr","iframe","createElement","join","frameBorder","scrolling","appendChild","discourse-url","category","per-page","updateLocale","relativeTime","s","m","h","d","Web3ProviderInjected","createWeb3ReactRoot","Root","getLibrary","exact","Proposals","Forum","FAQ","NewProposal","Info","User","Proposal","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackAsyncContext","req","__webpack_require__","ids","t"],"mappings":"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B,OACA,GAED,sBAAuB,CACtB,OACA,GAED,uBAAwB,CACvB,OACA,GAED,0BAA2B,CAC1B,OACA,GAED,2BAA4B,CAC3B,OACA,GAED,8BAA+B,CAC9B,OACA,GAED,cAAe,CACd,OACA,GAED,iBAAkB,CACjB,OACA,GAED,kBAAmB,CAClB,OACA,GAED,qBAAsB,CACrB,OACA,GAED,eAAgB,CACf,OACA,GAED,kBAAmB,CAClB,OACA,GAED,mBAAoB,CACnB,OACA,GAED,sBAAuB,CACtB,OACA,GAED,aAAc,CACb,OACA,IAED,gBAAiB,CAChB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,6BAA8B,CAC7B,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,uBAAwB,CACvB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,8BAA+B,CAC9B,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,YAAa,CACZ,OACA,IAED,eAAgB,CACf,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,0BAA2B,CAC1B,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,8BAA+B,CAC9B,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,cAAe,CACd,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,yBAA0B,CACzB,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,YAAa,CACZ,OACA,IAED,eAAgB,CACf,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,cAAe,CACd,OACA,IAED,iBAAkB,CACjB,OACA,IAED,kBAAmB,CAClB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,gBAAiB,CAChB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,uBAAwB,CACvB,OACA,IAED,eAAgB,CACf,OACA,IAED,kBAAmB,CAClB,OACA,IAED,mBAAoB,CACnB,OACA,IAED,sBAAuB,CACtB,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,2BAA4B,CAC3B,OACA,IAED,4BAA6B,CAC5B,OACA,IAED,+BAAgC,CAC/B,OACA,IAED,iBAAkB,CACjB,OACA,IAED,oBAAqB,CACpB,OACA,IAED,qBAAsB,CACrB,OACA,IAED,wBAAyB,CACxB,OACA,IAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,mCAAoC,CACnC,OACA,KAED,sCAAuC,CACtC,OACA,KAED,uCAAwC,CACvC,OACA,KAED,0CAA2C,CAC1C,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,YAAa,CACZ,OACA,KAED,eAAgB,CACf,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,gCAAiC,CAChC,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,mBAAoB,CACnB,QAED,sBAAuB,CACtB,QAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,iBAAkB,CACjB,QAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,gCAAiC,CAChC,OACA,KAED,mCAAoC,CACnC,OACA,KAED,oBAAqB,CACpB,QAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,iCAAkC,CACjC,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,aAAc,CACb,OACA,KAED,gBAAiB,CAChB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,YAAa,CACZ,OACA,KAED,eAAgB,CACf,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,YAAa,CACZ,OACA,KAED,eAAgB,CACf,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,6BAA8B,CAC7B,OACA,KAED,gCAAiC,CAChC,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,+BAAgC,CAC/B,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,0BAA2B,CAC1B,OACA,KAED,2BAA4B,CAC3B,OACA,KAED,8BAA+B,CAC9B,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,4BAA6B,CAC5B,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,gBAAiB,CAChB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,uBAAwB,CACvB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,yBAA0B,CACzB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,iBAAkB,CACjB,OACA,KAED,oBAAqB,CACpB,OACA,KAED,qBAAsB,CACrB,OACA,KAED,wBAAyB,CACxB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,eAAgB,CACf,OACA,KAED,kBAAmB,CAClB,OACA,KAED,mBAAoB,CACnB,OACA,KAED,sBAAuB,CACtB,OACA,KAED,cAAe,CACd,OACA,KAED,iBAAkB,CACjB,OACA,KAED,kBAAmB,CAClB,OACA,KAED,qBAAsB,CACrB,OACA,MAGF,SAAS4pC,EAAoBC,GAC5B,IAAIC,EAAoB3wB,EAAEnZ,EAAK6pC,GAC9B,OAAO9yC,QAAQC,UAAUgR,MAAK,WAC7B,IAAIqC,EAAI,IAAInY,MAAM,uBAAyB23C,EAAM,KAEjD,MADAx/B,EAAEzB,KAAO,mBACHyB,KAIR,IAAI0/B,EAAM/pC,EAAI6pC,GAAM/0C,EAAKi1C,EAAI,GAC7B,OAAOhzC,QAAQwJ,IAAIwpC,EAAItoB,MAAM,GAAGzhB,IAAI8pC,EAAoBz/B,IAAIrC,MAAK,WAChE,OAAO8hC,EAAoBE,EAAEl1C,EAAI,MAGnC80C,EAAoB9lC,KAAO,WAC1B,OAAOD,OAAOC,KAAK9D,IAEpB4pC,EAAoB90C,GAAK,OACzBqN,EAAOC,QAAUwnC,G","file":"static/js/main.chunk.js","sourcesContent":["import { ethers, utils } from 'ethers';\n\nexport function shortenAddress(address, digits = 4) {\n  if (!isAddress(address)) {\n    throw Error(`Invalid 'address' parameter '${address}'.`);\n  }\n  return `${address.substring(0, digits + 2)}...${address.substring(\n    42 - digits\n  )}`;\n}\n\nexport function isAddress(value) {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase());\n  } catch {\n    return false;\n  }\n}\n\nexport function toChecksum(address) {\n  return utils.getAddress(address);\n}\n\nexport function toAddressStub(address) {\n  const start = address.slice(0, 5);\n  const end = address.slice(-3);\n  return `${start}...${end}`;\n}\n","import { BigNumber } from 'bignumber.js';\n\nBigNumber.config({\n  EXPONENTIAL_AT: [-100, 100],\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  DECIMAL_PLACES: 18,\n  FORMAT: {\n    groupSize: 3,\n    groupSeparator: ' ',\n    decimalSeparator: '.'\n  }\n});\n\nexport { BigNumber };\n","export enum Web3Errors {\n  UNKNOWN_ERROR,\n  SIGNATURE_REJECTED,\n}\nexport enum TXEvents {\n  TX_HASH = 'txhash',\n  RECEIPT = 'receipt',\n  CONFIRMATION = 'confirmation',\n  TX_ERROR = 'txerror',\n  FINALLY = 'finally',\n  INVARIANT = 'invariant',\n}\n\nexport enum VoteDecision { None, YES, NO }\n\nexport enum WalletSchemeProposalState { None, Submitted, Rejected, ExecutionSucceded, ExecutionTimeout }\n\nexport enum VotingMachineProposalState { \n  None, ExpiredInQueue, Executed, Queued, PreBoosted, Boosted, QuietEndingPeriod\n}\n","export const MAX_UINT = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\nexport const ZERO_HASH = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const ANY_ADDRESS = \"0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\";\nexport const ANY_FUNC_SIGNATURE = \"0xaaaaaaaa\";\nexport const ERC20_TRANSFER_SIGNATURE = \"0xa9059cbb\";\nexport const ERC20_APPROVE_SIGNATURE = \"0x095ea7b3\";\nexport const DEFAULT_TOKEN_DECIMALS = 18;\n","import moment from 'moment';\nimport { BigNumber } from './bignumber';\n\nexport const formatDate = (date: Date) => {\n  return moment(date).format('DD.MM - HH:mm');\n};\n\nexport const timeToTimestamp = (timestamp: BigNumber) => {\n  if (timestamp.toNumber() > moment().unix())\n    return moment().to( moment.unix(timestamp.toNumber()) ).toString();\n  else\n    return \"\";\n};\n\nexport const addZero = (value) => {\n  return value > 9 ? value : `0${value}`;\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport copy from 'copy-to-clipboard';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest function.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      // @ts-ignore\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    } else {\n      return null;\n    }\n  }, [delay]);\n}\n// @ts-ignore\nexport function useCopyClipboard(timeout = 500): [S, Dispatch<SetStateAction<S>>] {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text);\n    setIsCopied(didCopy);\n  }, []);\n  // @ts-ignore\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false);\n      }, timeout);\n\n      return () => {\n        clearTimeout(hide);\n      };\n    }\n  }, [isCopied, setIsCopied, timeout]);\n\n  return [isCopied, staticCopy];\n}\n\n// modified from https://usehooks.com/usePrevious/\nexport function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef();\n\n    // Store current value in ref\n    useEffect(() => {\n        ref.current = value;\n    }, [value]); // Only re-run if value changes\n\n    // Return previous value (happens before update in useEffect above)\n    return ref.current;\n}\n","import { utils } from 'ethers';\nimport { BigNumber } from './bignumber';\nimport { MAX_UINT } from './constants';\n\nexport function toCamelCaseString(text: string): string {\n  if (text.length > 0)\n    return text.replace(/^./, text[0].toUpperCase())\n  else return \"\";\n}\n\nexport function bnum(\n    val: string | number | utils.BigNumber | BigNumber\n): BigNumber {\n    return new BigNumber(val.toString());\n}\n\nexport function scale(input: BigNumber, decimalPlaces: number): BigNumber {\n  const scalePow = new BigNumber(decimalPlaces.toString());\n  const scaleMul = new BigNumber(10).pow(scalePow);\n  return input.times(scaleMul);\n}\n\nexport function setPropertyToMaxUintIfEmpty(value?): string {\n  if (!value || value === 0 || value === '') {\n    value = MAX_UINT.toString();\n  }\n  return value;\n}\n\nexport function setPropertyToZeroIfEmpty(value?): string {\n  if (!value || value === '') {\n    value = '0';\n  }\n  return value;\n}\n\nexport function hasMaxApproval(amount: BigNumber): boolean {\n  return amount.gte(bnum(bnum(MAX_UINT).div(2).toString()));\n}\n\nexport function isEmpty(str: string): boolean {\n    return !str || 0 === str.length;\n}\n\nexport function roundValue(value, decimals = 4): string {\n  const decimalPoint = value.indexOf('.');\n  if (decimalPoint === -1) {\n    return value;\n  }\n  return value.slice(0, decimalPoint + decimals + 1);\n}\n\nexport function str(value: any): string {\n  return value.toString();\n}\n\nexport function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function parseCamelCase(text)\n{\n  const parsed = text.replace(/([a-z])([A-Z])/g, '$1 $2');\n  return parsed[0].toUpperCase() + parsed.substring(1);\n}\n\nexport function getBlockchainLink(text, networkName, type) {\n  switch (type) {\n    case \"user\":\n      return `${window.location.pathname}#/user/${text}`;\n    case \"address\":\n      if (networkName == 'arbitrum')\n        return `https://explorer.arbitrum.io/#/address/${text}`\n      else if (networkName == 'arbitrumTestnet')\n        return `https://rinkeby-explorer.arbitrum.io/#/address/${text}`\n      else if (networkName == 'mainnet')\n        return `https://etherscan.io/address/${text}`\n      else if (networkName == 'xdai')\n        return `https://blockscout.com/xdai/mainnet/address/${text}`\n      else\n        return `https://${networkName}.etherscan.io/address/${text}`\n    default:\n      if (networkName == 'arbitrum')\n        return `https://explorer.arbitrum.io/#/tx/${text}`\n      else if (networkName == 'arbitrumTestnet')\n        return `https://rinkeby-explorer.arbitrum.io/#/tx/${text}`\n      else if (networkName == 'mainnet')\n        return `https://etherscan.io/tx/${text}`\n      else if (networkName == 'xdai')\n        return `https://blockscout.com/xdai/mainnet/tx/${text}`\n      else\n        return `https://${networkName}.etherscan.io/tx/${text}`\n  }\n}\n","import { BigNumber } from './bignumber';\nimport { bnum, DEFAULT_TOKEN_DECIMALS, scale } from './index';\n\nexport function formatFee(fee: BigNumber) {\n  return fee.times(100).toString() + '%';\n}\n\nexport function formatPercentage(\n  value: BigNumber,\n  decimals: number,\n  useLowerLimit = true\n): string {\n  if (value.times(100).decimalPlaces(decimals).lte(0.1) && value.gt(0) && useLowerLimit) {\n    return '<0.1%';\n  }\n  return `${value.times(100).decimalPlaces(decimals).toString()}%`;\n}\n\nexport function fromPercentage(value: BigNumber | string): BigNumber {\n  const bn = bnum(value.toString());\n  return bn.div(100);\n}\n\nexport function toPercentage(value: BigNumber | string): BigNumber {\n  const bn = bnum(value.toString());\n  return bn.times(100);\n}\n\nexport const normalizePriceValues = (\n  inputValue: BigNumber,\n  outputValue: BigNumber\n): {\n  normalizedInput: BigNumber;\n  normalizedOutput: BigNumber;\n} => {\n  const multiplier = bnum(1).div(inputValue);\n  return {\n    normalizedInput: bnum(1),\n    normalizedOutput: outputValue.times(multiplier),\n  };\n};\n\nexport const formatCurrency = (balance: BigNumber): string => {\n  const fmt = {\n  groupSize: 3,\n  groupSeparator: ' ',\n  decimalSeparator: '.'\n  };\n  return balance.toFormat(2, BigNumber.ROUND_DOWN, fmt);\n};\n\nexport const numDigits = (value: BigNumber): number => {\n  return value.toString().length;\n};\n\nexport const roundUpToScale = (\n  value: BigNumber\n): BigNumber => {\n  const placesValue = numDigits(value.integerValue())-1;\n  const scaledValue = value\n    .shiftedBy(-placesValue);\n  return scaledValue.integerValue(BigNumber.ROUND_UP).shiftedBy(placesValue);\n};\n\n\nexport const denormalizeBalance = (\n  normalizedBalance: string | BigNumber,\n  decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n  return scale(bnum(normalizedBalance), decimals);\n};\n\nexport const normalizeBalance = (\n  amount: BigNumber,\n  decimals: number = DEFAULT_TOKEN_DECIMALS\n): BigNumber => {\n  return scale(bnum(amount), -decimals);\n};\n\nexport const formatNumberValue = (\n  normalizedBalance: BigNumber,\n  displayPrecision: number = 4,\n  truncateAt?: number,\n  roundDown: boolean = true\n): string => {\n  if (normalizedBalance.eq(0)) {\n    return bnum(0).toFixed(displayPrecision);\n  }\n\n  let result = bnum(normalizedBalance)\n    .decimalPlaces(displayPrecision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n    .toString();\n\n  result = padToDecimalPlaces(result, displayPrecision);\n\n  if (truncateAt && result.length > truncateAt) {\n    return result.substring(0, 20) + '...';\n  } else {\n    return result;\n  }\n};\n\nexport const formatBalance = (\n  balance: BigNumber,\n  decimals: number = 18,\n  precision: number = 4,\n  roundDown: boolean = true\n): string => {\n  if (balance.eq(0)) {\n    return bnum(0).toFixed(precision);\n  }\n\n  const result = scale(balance, -decimals)\n    .decimalPlaces(precision, roundDown ? BigNumber.ROUND_DOWN : BigNumber.ROUND_UP)\n    .toString();\n\n  return padToDecimalPlaces(result, precision);\n};\n\nexport const padToDecimalPlaces = (\n  value: string,\n  minDecimals: number\n): string => {\n  const split = value.split('.');\n  const zerosToPad = split[1] ? minDecimals - split[1].length : minDecimals;\n\n  if (zerosToPad > 0) {\n    let pad = '';\n\n    // Add decimal point if no decimal portion in original number\n    if (zerosToPad === minDecimals) {\n      pad += '.';\n    }\n    for (let i = 0; i < zerosToPad; i++) {\n      pad += '0';\n    }\n    return value + pad;\n  }\n  return value;\n};\n","\nconst binaryToHex = function(binaryString) {\n  const lookup = {\n    \"0000\": \"0\",\n    \"0001\": \"1\",\n    \"0010\": \"2\",\n    \"0011\": \"3\",\n    \"0100\": \"4\",\n    \"0101\": \"5\",\n    \"0110\": \"6\",\n    \"0111\": \"7\",\n    \"1000\": \"8\",\n    \"1001\": \"9\",\n    \"1010\": \"A\",\n    \"1011\": \"B\",\n    \"1100\": \"C\",\n    \"1101\": \"D\",\n    \"1110\": \"E\",\n    \"1111\": \"F\"\n  };\n  var ret = \"\";\n  binaryString = binaryString.split(\" \");\n  for (var i = 0; i < binaryString.length; i++) {\n    ret += lookup[ binaryString[ i ] ];\n  }\n  return ret;\n};\n\nconst hexToBinary = function(hexString) {\n  hexString = hexString.replace(/^0x+/, '');\n  const lookup = {\n    \"0\": \"0000\",\n    \"1\": \"0001\",\n    \"2\": \"0010\",\n    \"3\": \"0011\",\n    \"4\": \"0100\",\n    \"5\": \"0101\",\n    \"6\": \"0110\",\n    \"7\": \"0111\",\n    \"8\": \"1000\",\n    \"9\": \"1001\",\n    \"a\": \"1010\",\n    \"b\": \"1011\",\n    \"c\": \"1100\",\n    \"d\": \"1101\",\n    \"e\": \"1110\",\n    \"f\": \"1111\",\n    \"A\": \"1010\",\n    \"B\": \"1011\",\n    \"C\": \"1100\",\n    \"D\": \"1101\",\n    \"E\": \"1110\",\n    \"F\": \"1111\"\n  };\n\n  var ret = \"\";\n  for (var i = 0, len = hexString.length; i < len; i++) {\n    if (hexString[ i ] != \"0\")\n      ret += lookup[ hexString[ i ] ];\n  }\n  return ret;\n};\n\n// All 0: Not registered,\n// 1st bit: Flag if the scheme is registered,\n// 2nd bit: Scheme can register other schemes\n// 3rd bit: Scheme can add/remove global constraints\n// 4th bit: Scheme can upgrade the controller\n// 5th bit: Scheme can call genericCall on behalf of the organization avatar\nexport const encodePermission = function(permissions) {\n  const canGenericCall = permissions.canGenericCall || false;\n  const canUpgrade = permissions.canUpgrade || false;\n  const canChangeConstraints = permissions.canChangeConstraints || false;\n  const canRegisterSchemes = permissions.canRegisterSchemes || false;\n  const permissionBytes = `000${canGenericCall ? 1 : 0} ${canUpgrade ? 1 : 0}${canChangeConstraints ? 1 : 0}${canRegisterSchemes ? 1 : 0}1`;\n  return \"0x000000\" + binaryToHex(permissionBytes);\n}\nexport const decodePermission = function(permission) {\n  permission = hexToBinary(permission);\n  return {\n    canRegisterSchemes: permission.length > 3 && permission[ 4 ] == \"1\",\n    canChangeConstraints: permission.length > 3 && permission[ 5 ] == \"1\",\n    canUpgrade: permission.length > 3 && permission[ 6 ] == \"1\",\n    canGenericCall: permission.length > 3 && permission[ 7 ] == \"1\"\n  };\n}\n","import { bnum, WalletSchemeProposalState, VotingMachineProposalState } from './index';\nimport moment from 'moment';\n\nexport const calculateStakes = function(thresholdConst, boostedProposals, preBoostedProposals, upstakes, downstakes ) {\n\n  // No idea why but the estimation of staking token by diving the thresholdConst get on chain by 0.90...\n  // I think it might be due to the precision magic used in the real number library used in teh GenensisProtocol\n  thresholdConst = thresholdConst.times(0.90949470177);\n  let threshold = thresholdConst.div(10**12).pow(boostedProposals);\n  if (threshold.lt(1.0001))\n    threshold = bnum(\"1.0001\");\n    \n  let recommendedThreshold = thresholdConst.div(10**12).pow(Number(boostedProposals) + Number(preBoostedProposals));\n  if (recommendedThreshold.lt(1.0001))\n    recommendedThreshold = bnum(\"1.0001\");\n  \n  return {\n    stakeToBoost: downstakes.times(threshold).minus(upstakes),\n    stakeToUnBoost: upstakes.div(threshold).minus(downstakes),\n    recommendedStakeToBoost: downstakes.times(recommendedThreshold).minus(upstakes),\n    recommendedStakeToUnBoost: upstakes.div(recommendedThreshold).minus(downstakes)\n  }\n\n}\n// @ts-ignore\nexport const decodeProposalStatus = function(\n  proposal, proposalStateChangeEvents, votingMachineParams, maxSecondsForExecution, autoBoost, schemeType\n) {\n  const timeNow = bnum(moment().unix());\n  const queuedVotePeriodLimit = votingMachineParams.queuedVotePeriodLimit;\n  const boostedVotePeriodLimit = votingMachineParams.boostedVotePeriodLimit;\n  const preBoostedVotePeriodLimit = votingMachineParams.preBoostedVotePeriodLimit;\n  const quietEndingPeriod = votingMachineParams.quietEndingPeriod;\n  const boostedPhaseTime = proposal.boostedPhaseTime;\n  const submittedTime = proposal.submittedTime;\n  const preBoostedPhaseTime = proposal.preBoostedPhaseTime;\n\n  switch (proposal.stateInVotingMachine) {\n    case VotingMachineProposalState.ExpiredInQueue:\n      return { \n        status: \"Expired in Queue\", \n        boostTime: bnum(0), \n        finishTime: submittedTime.plus(queuedVotePeriodLimit),\n        pendingAction: 0\n      };\n    case VotingMachineProposalState.Executed:\n      if (proposal.stateInScheme == WalletSchemeProposalState.Rejected)\n        return { \n          status: \"Proposal Rejected\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: 0\n        };\n      else if (proposal.stateInScheme == WalletSchemeProposalState.ExecutionSucceded)\n        return { \n          status: \"Execution Succeded\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: 0\n        };\n      else if (proposal.stateInScheme == WalletSchemeProposalState.ExecutionTimeout)\n        return { \n          status: \"Execution Timeout\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed) \n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: 0\n        };\n      else if (proposal.stateInScheme == WalletSchemeProposalState.Submitted)\n        return {\n          status: \"Passed\", \n          boostTime: boostedPhaseTime,\n          finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n          ? bnum(\n            proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n          ) : bnum(0),\n          pendingAction: schemeType == \"ContributionReward\" ? 4 : 0\n        };\n      else return { \n        status: \"Passed\", \n        boostTime: boostedPhaseTime,\n        finishTime: proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed)\n        ? bnum(\n          proposalStateChangeEvents.find(event => event.state == VotingMachineProposalState.Executed).timestamp\n        ) : bnum(0),\n        pendingAction: 0\n      };\n    case VotingMachineProposalState.Queued:\n      if (timeNow > submittedTime.plus(queuedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Expired in Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 3\n        };\n      } else {\n        return { \n          status: \"In Queue\",\n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 0\n        };\n      }\n    case VotingMachineProposalState.PreBoosted:\n      if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).plus(maxSecondsForExecution).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Execution Timeout\",\n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 3\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 0\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Boost\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 1\n        };\n      } else if (autoBoost && timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit).toNumber() && proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\",\n          boostTime: boostedPhaseTime,\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 2\n        };\n      } else if (timeNow > submittedTime.plus(queuedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 2\n        };\n      } else if (timeNow > preBoostedPhaseTime.plus(preBoostedVotePeriodLimit) && !proposal.shouldBoost) {\n        return { \n          status: \"In Queue\", \n          boostTime: bnum(0),\n          finishTime: submittedTime.plus(queuedVotePeriodLimit),\n          pendingAction: 0\n        };\n      } else {\n        return { \n          status: \"Pre Boosted\", \n          boostTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit),\n          finishTime: preBoostedPhaseTime.plus(preBoostedVotePeriodLimit).plus(boostedVotePeriodLimit),\n          pendingAction: 0\n        };\n      }\n    case VotingMachineProposalState.Boosted:\n      if (timeNow > boostedPhaseTime.plus(boostedVotePeriodLimit).toNumber()) {\n        return { \n          status: \"Pending Execution\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit),\n          pendingAction: 2\n        };\n      } else {\n        return { \n          status: \"Boosted\", \n          boostTime: boostedPhaseTime,\n          finishTime: boostedPhaseTime.plus(boostedVotePeriodLimit),\n          pendingAction: 0\n        };\n      }\n    case VotingMachineProposalState.QuietEndingPeriod:\n      return { \n        status: \"Quiet Ending Period\", \n        boostTime: boostedPhaseTime,\n        finishTime: proposalStateChangeEvents .find(event => event.state == VotingMachineProposalState.QuietEndingPeriod)\n        ? bnum(\n          proposalStateChangeEvents .find(event => event.state == VotingMachineProposalState.QuietEndingPeriod).timestamp\n        ).plus(quietEndingPeriod)\n        : bnum(0),\n        pendingAction: 0\n      };\n  }\n}\n","import { bnum } from './helpers';\n\nexport const decodeSchemeParameters = function(rawParameters) {\n  return {\n    queuedVoteRequiredPercentage: bnum(rawParameters.queuedVoteRequiredPercentage.toString()),\n    queuedVotePeriodLimit: bnum(rawParameters.queuedVotePeriodLimit.toString()),\n    boostedVotePeriodLimit: bnum(rawParameters.boostedVotePeriodLimit.toString()),\n    preBoostedVotePeriodLimit: bnum(rawParameters.preBoostedVotePeriodLimit.toString()),\n    thresholdConst: bnum(rawParameters.thresholdConst.toString()),\n    limitExponentValue: bnum(rawParameters.limitExponentValue.toString()),\n    quietEndingPeriod: bnum(rawParameters.quietEndingPeriod.toString()),\n    proposingRepReward: bnum(rawParameters.proposingRepReward.toString()),\n    votersReputationLossRatio: bnum(rawParameters.votersReputationLossRatio.toString()),\n    minimumDaoBounty: bnum(rawParameters.minimumDaoBounty.toString()),\n    daoBountyConst: bnum(rawParameters.daoBountyConst.toString()),\n    activationTime: bnum(rawParameters.activationTime.toString())\n  };\n}\n","import contentHash from 'content-hash';\nimport _ from \"lodash\";\nimport axios from 'axios';\nimport { ZERO_ADDRESS } from './index';\n\nconst ipfsHashOfAppConfig = \"QmQ4BB2LDWYs9sxfPtQ2dAXTDdz4ExRJVpR14q3fiLLHuP\";\n\nconst Web3 = require('web3');\nconst web3 = new Web3();\n\nconst MAX_BLOCKS_PER_EVENTS_FETCH : number = Number(process.env.MAX_BLOCKS_PER_EVENTS_FETCH) || 1000000;\n\nexport const getEvents = async function(\n  web3, contract, fromBlock, toBlock, eventsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching events of ${contract._address} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await contract.getPastEvents(eventsToGet, {fromBlock: from, toBlock: to});\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message);\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getRawEvents = async function(\n  web3, contractAddress, fromBlock, toBlock, topicsToGet, maxBlocksPerFetch = MAX_BLOCKS_PER_EVENTS_FETCH\n) {\n  let events = [], to = Math.min(fromBlock + maxBlocksPerFetch, toBlock), from = fromBlock;\n  while (from < to) {\n    console.debug(`Fetching logs of ${contractAddress} from blocks ${from} -> ${to}`);\n    try {\n      let eventsFetched = await web3.eth.getPastLogs({\n        address: contractAddress,\n        fromBlock: from,\n        toBlock: to,\n        topics: topicsToGet\n      });\n      eventsFetched = await getTimestampOfEvents(web3, eventsFetched);\n      events = events.concat(eventsFetched);\n      from = to;\n      to = Math.min(from + maxBlocksPerFetch, toBlock);\n    } catch (error) {\n      console.error('Error fetching blocks:',error.message)\n      if (Math.trunc( ((to - from) / 2) ) > 100000) {\n        const blocksToLower = Math.max(Math.trunc( ((to - from) / 2) ), 100000);\n        console.debug('Lowering toBlock', blocksToLower, 'blocks');\n        to = to - blocksToLower;\n      }\n    }\n  };\n  return events;\n};\n\nexport const getTimestampOfEvents = async function(web3, events) {\n  \n  //// TODO:  See how can we bacth requests can be implemented\n  \n  // async function batchRequest(blocks) {\n  //   const batch = new web3.BatchRequest();\n  //   let requests = [];\n  //   for (let i = 0; i < blocks.length; i++) {\n  //     const request = new Promise((resolve, reject) => {\n  //       batch.add(web3.eth.getBlock.request(blocks[i], (err, data) => {\n  //         console.log(1)\n  //         if (err) return reject(err);\n  //         resolve(data);\n  //       }));\n  //     });\n  //     requests.push(request);\n  //   }\n  //   batch.execute();\n  //   console.log(batch)\n  //   await Promise.all(requests);\n  //   return batch;\n  // };\n\n  let blocksToFetch = [];\n  let timestamps = [];\n  events.map((event) => {\n    if (blocksToFetch.indexOf(event.blockNumber) < 0)\n      blocksToFetch.push(event.blockNumber);\n  })\n  const totalLength = blocksToFetch.length;\n  while (blocksToFetch.length > 0 && totalLength > timestamps.length){\n    // timestamps = (await batchRequest(blocksToFetch)).map((blockResult) => {\n    //   return blockResult.timestamp;\n    // });\n    const blocksToFetchBatch = blocksToFetch.splice(0, 500)\n    await Promise.all(blocksToFetchBatch.map(async (block) => {\n      const blockInfo = (await web3.eth.getBlock(block));\n      for (let i = 0; i < events.length; i++) {\n        if (events[i].blockNumber == blockInfo.number)\n          events[i].timestamp = blockInfo.timestamp;\n        if (blockInfo.l1BlockNumber)\n          events[i].l1BlockNumber = Number(blockInfo.l1BlockNumber);\n      }\n    }));\n  }\n\n  for (let i = 0; i < events.length; i++) {\n    if (events[i].l1BlockNumber){\n      events[i].l2BlockNumber = events[i].blockNumber;\n    } else {\n      events[i].l1BlockNumber = events[i].blockNumber;\n      events[i].l2BlockNumber = 0;\n    }\n  }\n  return events;\n};\n\nexport const sortEvents = function(events) {\n  return _.orderBy( events , [\"l1BlockNumber\", \"l2BlockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\",\"asc\"]);\n};\n\nexport const executeMulticall = async function(web3, multicall, calls) {\n  const rawCalls = calls.map((call) => {\n    return [call[0]._address, web3.eth.abi.encodeFunctionCall(\n      call[0]._jsonInterface.find(method => method.name == call[1]), call[2]\n    )];\n  });\n  \n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\n\n  return {\n    returnData,\n    decodedReturnData:returnData.map((callResult, i) => {\n      return web3.eth.abi.decodeParameters(\n        calls[i][0]._jsonInterface.find(method => method.name == calls[i][1]).outputs,\n        callResult\n      )[\"0\"];\n    })\n  };\n}\n\nexport const executeRawMulticall = async function(multicall, calls) {\n  const rawCalls = calls.map((call) => {\n    return [call[0], call[1]];\n  });\n  \n  const { returnData } = await multicall.methods.aggregate(rawCalls).call();\n\n  return {\n    returnData\n  };\n}\n\nexport const isNode = function () {\n  return (typeof module !== 'undefined' && module.exports);\n}\n\nexport const descriptionHashToIPFSHash = function (descriptionHash) {\n  try {\n    if (contentHash.getCodec(descriptionHash) == \"ipfs-ns\")\n      return contentHash.decode(descriptionHash);\n    else if (descriptionHash.length > 1 && descriptionHash.substring(0,2) != \"Qm\")\n      return descriptionHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error decoding descriptionHash', descriptionHash);\n    return \"\";\n  }\n}\n\nexport const ipfsHashToDescriptionHash = function (ipfsHash) {\n  try {\n    if (ipfsHash.length > 1 && ipfsHash.substring(0,2) == \"Qm\")\n      return contentHash.fromIpfs(ipfsHash);\n    else if (contentHash.getCodec(ipfsHash) == \"ipfs-ns\")\n      return ipfsHash;\n    else\n      return \"\";\n  } catch (error) {\n    console.error('Error encoding ipfsHash', ipfsHash);\n    return \"\";\n  }\n}\n\nexport const getNetworkConfig = async function(networkName) {\n  if (networkName === 'localhost') {\n    return {\n      fromBlock: 1,\n      avatar: process.env.REACT_APP_AVATAR_ADDRESS.replace(/[\"']/g, \"\"),\n      controller: process.env.REACT_APP_CONTROLLER_ADDRESS.replace(/[\"']/g, \"\"),\n      reputation: process.env.REACT_APP_REPUTATION_ADDRESS.replace(/[\"']/g, \"\"),\n      permissionRegistry: process.env.REACT_APP_PERMISSION_REGISTRY_ADDRESS.replace(/[\"']/g, \"\"),\n      utils: {\n        multicall: process.env.REACT_APP_MULTICALL_ADDRESS.replace(/[\"']/g, \"\"),\n      },\n      votingMachines: {\n        dxd: {\n          address: process.env.REACT_APP_VOTING_MACHINE_ADDRESS.replace(/[\"']/g, \"\"),\n          token: process.env.REACT_APP_VOTING_MACHINE_TOKEN_ADDRESS.replace(/[\"']/g, \"\")\n        }\n      },\n    };\n  } else {\n    return (await axios({\n      method: \"GET\",\n      url: \"https://gateway.pinata.cloud/ipfs/\"+ipfsHashOfAppConfig\n    })).data[networkName];\n  }\n}\n\nexport const getSchemeTypeData = function(networkConfig, schemeAddress) {\n  console.log(networkConfig)\n  if (networkConfig.daostack) {\n    if (networkConfig.daostack.schemeRegistrar && networkConfig.daostack.schemeRegistrar.address == schemeAddress) {\n      return {\n        type: \"SchemeRegistrar\",\n        name: \"SchemeRegistrar\",\n        contractToCall: networkConfig.daostack.schemeRegistrar.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.schemeRegistrar.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.schemeRegistrar.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.contributionReward && networkConfig.daostack.contributionReward.address == schemeAddress) {\n      return {\n        type: \"ContributionReward\",\n        name: \"ContributionReward\",\n        contractToCall: networkConfig.daostack.contributionReward.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.contributionReward.newProposalTopics,\n        voteParams: networkConfig.daostack.contributionReward.voteParams,\n        creationLogEncoding: networkConfig.daostack.contributionReward.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.competitionScheme && networkConfig.daostack.competitionScheme.address == schemeAddress) {\n      return {\n        type: \"CompetitionScheme\",\n        name: \"CompetitionScheme\",\n        contractToCall: networkConfig.daostack.competitionScheme.contractToCall,\n        votingMachine: networkConfig.votingMachines.gen.address,\n        newProposalTopics: networkConfig.daostack.competitionScheme.newProposalTopics,\n        creationLogEncoding: networkConfig.daostack.competitionScheme.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.multicallSchemes && Object.keys(networkConfig.daostack.multicallSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericMulticall\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.multicallSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.multicallSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.multicallSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.genericSchemes && Object.keys(networkConfig.daostack.genericSchemes.addresses).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"GenericScheme\",\n        votingMachine: networkConfig.daostack.genericSchemes.addresses[schemeAddress].votingMachine,\n        contractToCall: networkConfig.daostack.genericSchemes.addresses[schemeAddress].contractToCall,\n        name: networkConfig.daostack.genericSchemes.addresses[schemeAddress].name,\n        newProposalTopics: networkConfig.daostack.genericSchemes.newProposalTopics,\n        voteParams: networkConfig.daostack.genericSchemes.addresses[schemeAddress].voteParams,\n        creationLogEncoding: networkConfig.daostack.genericSchemes.creationLogEncoding\n      };\n    } else if (networkConfig.daostack.dxSchemes && Object.keys(networkConfig.daostack.dxSchemes).indexOf(schemeAddress) > -1) {\n      return {\n        type: \"OldDxScheme\",\n        votingMachine: networkConfig.votingMachines.gen.address,\n        contractToCall: ZERO_ADDRESS,\n        name: networkConfig.daostack.dxSchemes[schemeAddress],\n        newProposalTopics: [],\n        creationLogEncoding: []\n      };\n    }\n  }\n  return {\n    type: \"WalletScheme\",\n    votingMachine: networkConfig.votingMachines.dxd.address,\n    name: \"WalletScheme\",\n    newProposalTopics: [[\n      web3.utils.soliditySha3(\"ProposalStateChange(bytes32,uint256)\"),\n      null,\n      '0x0000000000000000000000000000000000000000000000000000000000000001']\n    ],\n    creationLogEncoding: []\n  }\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const ETH_NETWORKS = process.env.REACT_APP_ETH_NETWORKS.split(',');\n\nexport const NETWORK_NAMES = {\n  '1': 'mainnet',\n  '4': 'rinkeby',\n  '100': 'xdai',\n  '42161': 'arbitrum',\n  '421611': 'arbitrumTestnet',\n  '1337': 'localhost',\n};\n\nexport const NETWORK_IDS = {\n  'mainnet': 1,\n  'rinkeby': 4,\n  'xdai': 100,\n  'arbitrum': 42161,\n  'arbitrumTestnet': 421611,\n  'localhost': 1337,\n};\n\nexport const NETWORK_ASSET_SYMBOL = {\n  'mainnet': 'ETH',\n  'rinkeby': 'ETH',\n  'xdai': 'XDAI',\n  'arbitrum': 'ETH',\n  'arbitrumTestnet': 'ETH',\n  'localhost': 'ETH'\n};\n\nexport const ETH_NETWORKS_IDS = ETH_NETWORKS.map((network) => {return NETWORK_IDS[network]});\nexport const DEFAULT_ETH_CHAIN_ID = NETWORK_IDS[ETH_NETWORKS[0]];\n\nexport const web3ContextNames = {\n  injected: 'INJECTED',\n  metamask: 'METAMASK',\n};\n\nexport const isChainIdSupported = (chainId: number): boolean => {\n  return ETH_NETWORKS_IDS ? ETH_NETWORKS_IDS.indexOf(chainId) >= 0 : false;\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: ETH_NETWORKS_IDS,\n});\n\nexport const SUPPORTED_WALLETS = {\n    INJECTED: {\n        connector: injected,\n        name: 'Injected',\n        iconName: 'arrow-right.svg',\n        description: 'Injected web3 provider.',\n        href: null,\n        color: '#010101',\n        primary: true,\n    },\n    METAMASK: {\n        connector: injected,\n        name: 'MetaMask',\n        description: 'Easy-to-use browser extension.',\n        href: null,\n        color: '#E8831D',\n    }\n};\n\nexport default {\n  injected\n};\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\nimport { ethers } from 'ethers';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport UncheckedJsonRpcSigner from 'provider/UncheckedJsonRpcSigner';\nimport { sendAction } from './actions/actions';\nimport { web3ContextNames } from '../provider/connectors';\nimport PromiEvent from 'promievent';\nimport { TXEvents } from '../utils';\nimport moment from 'moment';\nimport { schema } from '../services/ABIService';\n\nexport enum ContractType {\n    ERC20 = 'ERC20',\n    Avatar = 'Avatar',\n    Controller = 'Controller',\n    Reputation = 'Reputation',\n    PermissionRegistry = 'PermissionRegistry',\n    VotingMachine = 'VotingMachine',\n    DXDVotingMachine = 'DXDVotingMachine',\n    WalletScheme = 'WalletScheme',\n    Multicall = 'Multicall',\n    Redeemer ='Redeemer'\n}\n\nexport interface ChainData {\n    currentBlockNumber: number;\n}\n\nenum ERRORS {\n    UntrackedChainId = 'Attempting to access data for untracked chainId',\n    ContextNotFound = 'Specified context name note stored',\n    BlockchainActionNoAccount = 'Attempting to do blockchain transaction with no account',\n    BlockchainActionNoChainId = 'Attempting to do blockchain transaction with no chainId',\n    BlockchainActionNoResponse = 'No error or response received from blockchain action',\n}\n\nexport default class ProviderStore {\n    provider: any;\n    accounts: string[];\n    defaultAccount: string | null;\n    web3Contexts: object;\n    supportedNetworks: number[];\n    chainData: ChainData;\n    activeChainId: number;\n    activeFetchLoop: any;\n    activeAccount: string;\n    context: RootContext;\n\n    constructor(context) {\n      this.context = context;\n      this.web3Contexts = {};\n      this.chainData = { currentBlockNumber: -1 };\n      makeObservable(this, {\n          provider: observable,\n          accounts: observable,\n          defaultAccount: observable,\n          web3Contexts: observable,\n          chainData: observable, \n          activeChainId: observable, \n          activeFetchLoop: observable, \n          activeAccount: observable,\n          setCurrentBlockNumber: action,\n          setActiveAccount: action,\n          fetchUserBlockchainData: action\n        }\n      );\n    }\n\n    isFresh(blocknumber: number): boolean {\n        return blocknumber === this.getCurrentBlockNumber();\n    }\n\n    isFresher(newBlockNumber: number, oldBlockNumber: number): boolean {\n        return newBlockNumber > oldBlockNumber;\n    }\n\n    isBlockStale(blocknumber: number) {\n        return blocknumber < this.chainData.currentBlockNumber;\n    }\n\n    getCurrentBlockNumber(): number {\n        return this.chainData.currentBlockNumber;\n    }\n\n    setCurrentBlockNumber(blocknumber): void {\n        this.chainData.currentBlockNumber = blocknumber;\n    }\n\n    setActiveAccount(account: string) {\n        this.activeAccount = account;\n    }\n\n    fetchUserBlockchainData = async (\n        web3React: Web3ReactContextInterface,\n        account: string\n    ) => {\n        const { transactionStore } = this.context;\n\n        console.debug('[Fetch Start - User Blockchain Data]', {\n            account,\n        });\n\n        transactionStore.checkPendingTransactions(web3React, account);\n    };\n\n    // account is optional\n    getProviderOrSigner(library, account) {\n        console.debug('[getProviderOrSigner', {\n            library,\n            account,\n            signer: library.getSigner(account),\n        });\n\n        return account\n            ? new UncheckedJsonRpcSigner(library.getSigner(account))\n            : library;\n    }\n\n    getContract(\n        web3React: Web3ReactContextInterface,\n        type: ContractType,\n        address: string,\n        signerAccount?: string\n    ): ethers.Contract {\n        const { library } = web3React;\n\n        if (signerAccount) {\n            return new library.eth.Contract(schema[type], address, {\n                from: signerAccount,\n            });\n        }\n\n        return new library.eth.Contract(schema[type], address);\n    }\n\n    // get blockTime from blocknumber\n    async getBlockTime(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        const date = new Date(blockData.timestamp * 1000);\n        return moment(date).format('DD.MM - HH:mm');\n    }\n\n\n    // get blockHash from blocknumber\n    async getBlockHash(blocknumber) {\n        const context = this.getActiveWeb3React();\n        const blockData = await context.library.eth.getBlock(blocknumber);\n        return blockData.hash;\n    }\n\n    getActiveWeb3React(): Web3ReactContextInterface {\n        const contextInjected = this.web3Contexts[web3ContextNames.injected];\n        return contextInjected;\n    }\n\n    getWeb3React(name): Web3ReactContextInterface {\n        if (!this.web3Contexts[name]) {\n            throw new Error(ERRORS.ContextNotFound);\n        }\n        return this.web3Contexts[name];\n    }\n\n    @action setWeb3Context(name, context: Web3ReactContextInterface) {\n        console.debug('[setWeb3Context]', name, context);\n        this.web3Contexts[name] = context;\n    }\n\n    @action sendTransaction = (\n        web3React: Web3ReactContextInterface,\n        contractType: ContractType,\n        contractAddress: string,\n        action: string,\n        params: any[],\n        overrides?: any\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.context;\n        const { chainId, account } = web3React;\n\n        overrides = overrides ? overrides : {};\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n\n        const contract = this.getContract(\n            web3React,\n            contractType,\n            contractAddress,\n            account\n        );\n\n        const response = sendAction({\n            contract,\n            action,\n            sender: account,\n            data: params,\n            overrides,\n        }).on(TXEvents.TX_HASH, (hash) => {\n            transactionStore.addTransactionRecord(account, hash);\n        });\n\n        return response;\n    };\n    \n    @action sendRawTransaction = (\n        web3React: Web3ReactContextInterface,\n        to: string,\n        data: string,\n        value: string\n    ): PromiEvent<any> => {\n        const { transactionStore } = this.context;\n        const { chainId, account } = web3React;\n\n        if (!account) {\n            throw new Error(ERRORS.BlockchainActionNoAccount);\n        }\n\n        if (!chainId) {\n            throw new Error(ERRORS.BlockchainActionNoChainId);\n        }\n\n        const promiEvent = new PromiEvent<any>(() => {\n            web3React.library.eth.sendTransaction({ from: account, to: to, data: data, value: value })\n                .once('transactionHash', (hash) => {\n                    transactionStore.addTransactionRecord(account, hash);\n                    promiEvent.emit(TXEvents.TX_HASH, hash);\n                    console.debug(TXEvents.TX_HASH, hash);\n                })\n                .once('receipt', (receipt) => {\n                    promiEvent.emit(TXEvents.RECEIPT, receipt);\n                    console.debug(TXEvents.RECEIPT, receipt);\n                })\n                .once('confirmation', (confNumber, receipt) => {\n                    promiEvent.emit(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                    console.debug(TXEvents.CONFIRMATION, {\n                        confNumber,\n                        receipt,\n                    });\n                })\n                .on('error', (error) => {\n                    console.debug(error.code);\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                })\n                .then((receipt) => {\n                    promiEvent.emit(TXEvents.FINALLY, receipt);\n                    console.debug(TXEvents.FINALLY, receipt);\n                })\n                .catch((e) => {\n                    console.debug('rejected', e);\n                });\n        });\n\n        return promiEvent;\n    };\n}\n","import { Interface } from 'ethers/utils';\nimport RootContext from '../contexts';\n\nexport const schema = {\n  Avatar: require('../contracts/DxAvatar').abi,\n  Controller: require('../contracts/DxController').abi,\n  VotingMachine: require('../contracts/GenesisProtocol').abi,\n  DXDVotingMachine: require('../contracts/DXDVotingMachine').abi,\n  Reputation: require('../contracts/DxReputation').abi,\n  WalletScheme: require('../contracts/WalletScheme').abi,\n  ERC20: require('../contracts/ERC20').abi,\n  PermissionRegistry: require('../contracts/PermissionRegistry').abi,\n  Multicall: require('../contracts/Multicall').abi,\n  ContributionReward: require('../contracts/ContributionReward').abi,\n  SchemeRegistrar: require('../contracts/SchemeRegistrar').abi,\n  Redeemer: require('../contracts/Redeemer').abi,\n};\n\nexport default class ABIService {\n  context: RootContext;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  getAbi(contractType: string) {\n    return schema[contractType];\n  }\n  \n  decodeCall(contractType: string, data: string) {\n    const { providerStore } = this.context;\n\n    const { library } = providerStore.getActiveWeb3React();\n\n    const contractInterface = new Interface(this.getAbi(contractType));\n    const functionSignature = data.substring(0,10);\n    for (const functionName in contractInterface.functions) {\n      if (contractInterface.functions[functionName].sighash === functionSignature){\n        return {\n          function: contractInterface.functions[functionName],\n          args: library.eth.abi.decodeParameters(\n            contractInterface.functions[functionName].inputs.map((input) => {return input.type}), data.substring(10)\n          )\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","import * as ethers from 'ethers';\n\nclass UncheckedJsonRpcSigner extends ethers.Signer {\n    signer: any;\n\n    constructor(signer) {\n        super();\n        ethers.utils.defineReadOnly(this, 'signer', signer);\n        ethers.utils.defineReadOnly(this, 'provider', signer.provider);\n    }\n\n    getAddress() {\n        return this.signer.getAddress();\n    }\n\n    sendTransaction(transaction) {\n        return this.signer\n            .sendUncheckedTransaction(transaction)\n            .then((hash) => {\n                return {\n                    hash: hash,\n                    nonce: null,\n                    gasLimit: null,\n                    gasPrice: null,\n                    data: null,\n                    value: null,\n                    chainId: null,\n                    confirmations: 0,\n                    from: null,\n                    wait: (confirmations) => {\n                        return this.signer.provider.waitForTransaction(\n                            hash,\n                            confirmations\n                        );\n                    },\n                };\n            });\n    }\n\n    signMessage(message) {\n        return this.signer.signMessage(message);\n    }\n}\n\nexport default UncheckedJsonRpcSigner;\n","import { Web3Errors } from '../../utils';\n\nconst errorCodeMapping = {\n    '4001': Web3Errors.SIGNATURE_REJECTED,\n};\n\nexport const isKnownErrorCode = (code: number): boolean => {\n    const codeStr = code.toString();\n    return !!errorCodeMapping[codeStr];\n};\n\nexport const getErrorByCode = (code: number): Web3Errors => {\n    const codeStr = code.toString();\n    if (isKnownErrorCode(code)) {\n        return errorCodeMapping[codeStr];\n    } else {\n        return Web3Errors.UNKNOWN_ERROR;\n    }\n};\n","import { Contract } from 'ethers';\nimport { TXEvents } from '../../utils';\nimport { getErrorByCode, isKnownErrorCode } from './error';\nimport PromiEvent from 'promievent';\n\ninterface ActionRequest {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: any[];\n    overrides: any;\n}\n\nexport interface ActionResponse {\n    contract: Contract;\n    action: string;\n    sender: string;\n    data: object;\n    txResponse: any | undefined;\n    error: any | undefined;\n}\n\nconst preLog = (params: ActionRequest) => {\n    console.debug(`[@action start: ${params.action}]`, {\n        contract: params.contract,\n        action: params.action,\n        sender: params.sender,\n        data: params.data,\n        overrides: params.overrides,\n    });\n};\n\nexport const sendAction = (params: ActionRequest): PromiEvent<any> => {\n    const { contract, action, sender, data, overrides } = params;\n    preLog(params);\n\n    const promiEvent = new PromiEvent<any>(() => {\n        contract.methods[action](...data)\n            .send({ from: sender, ...overrides })\n            .once('transactionHash', (hash) => {\n                promiEvent.emit(TXEvents.TX_HASH, hash);\n                console.debug(TXEvents.TX_HASH, hash);\n            })\n            .once('receipt', (receipt) => {\n                promiEvent.emit(TXEvents.RECEIPT, receipt);\n                console.debug(TXEvents.RECEIPT, receipt);\n            })\n            .once('confirmation', (confNumber, receipt) => {\n                promiEvent.emit(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n                console.debug(TXEvents.CONFIRMATION, {\n                    confNumber,\n                    receipt,\n                });\n            })\n            .on('error', (error) => {\n                console.debug(error.code);\n                if (error.code && isKnownErrorCode(error.code)) {\n                    promiEvent.emit(\n                        TXEvents.TX_ERROR,\n                        getErrorByCode(error.code)\n                    );\n                    console.debug(TXEvents.TX_ERROR, getErrorByCode(error.code));\n                } else {\n                    promiEvent.emit(TXEvents.INVARIANT, error);\n                    console.debug(TXEvents.INVARIANT, error);\n                }\n            })\n            .then((receipt) => {\n                promiEvent.emit(TXEvents.FINALLY, receipt);\n                console.debug(TXEvents.FINALLY, receipt);\n            })\n            .catch((e) => {\n                console.debug('rejected', e);\n            });\n    });\n\n    return promiEvent;\n};\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { TransactionReceipt } from 'web3-core';\n\nexport interface TransactionRecord {\n    hash: string;\n    blockNumberChecked: number;\n    receipt: TransactionReceipt | undefined;\n}\n\nconst ERRORS = {\n    unknownTxHash: 'Transaction hash is not stored',\n    unknownNetworkId: 'NetworkID specified is not tracked',\n    txHashAlreadyExists: 'Transaction hash already exists for network',\n    txHasNoHash: 'Attempting to add transaction record without hash',\n};\n\nexport enum FetchCode {\n    SUCCESS,\n    FAILURE,\n    STALE,\n}\n\nexport interface TransactionRecordMap {\n    [index: string]: TransactionRecord[];\n}\n\nexport default class TransactionStore {\n    txRecords: TransactionRecordMap;\n    context: RootContext;\n\n    constructor(context) {\n        this.context = context;\n        this.txRecords = {};\n        makeObservable(this, {\n            txRecords: observable,\n            checkPendingTransactions: action,\n            addTransactionRecord: action,\n          }\n        );\n    }\n\n    // @dev Transactions are pending if we haven't seen their receipt yet\n    getPendingTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    getConfirmedTransactions(account: string): TransactionRecord[] {\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            return records.filter((value) => {\n                return !this.isTxPending(value);\n            });\n        }\n\n        return [];\n    }\n\n    async checkPendingTransactions(\n        web3React: Web3ReactContextInterface,\n        account\n    ): Promise<FetchCode> {\n        const { providerStore } = this.context;\n        const currentBlock = providerStore.getCurrentBlockNumber();\n\n        const { library } = web3React;\n        if (this.txRecords[account]) {\n            const records = this.txRecords[account];\n            records.forEach((value) => {\n                if (\n                    this.isTxPending(value) &&\n                    this.isStale(value, currentBlock)\n                ) {\n                    library.eth\n                        .getTransactionReceipt(value.hash)\n                        .then((receipt) => {\n                            value.blockNumberChecked = currentBlock;\n                            if (receipt) {\n                                value.receipt = receipt;\n                            }\n                        })\n                        .catch(() => {\n                            value.blockNumberChecked = currentBlock;\n                        });\n                }\n            });\n        }\n\n        return FetchCode.SUCCESS;\n    }\n\n    // @dev Add transaction record. It's in a pending state until mined.\n    addTransactionRecord(account: string, txHash: string) {\n        const record: TransactionRecord = {\n            hash: txHash,\n            blockNumberChecked: 0,\n            receipt: undefined,\n        };\n\n        if (!txHash) {\n            throw new Error(\n                'Attempting to add transaction record without hash'\n            );\n        }\n\n        let records = this.txRecords[account];\n\n        if (records) {\n            const duplicate = records.find((value) => value.hash === txHash);\n            if (!!duplicate) {\n                throw new Error(ERRORS.txHashAlreadyExists);\n            }\n            this.txRecords[account].push(record);\n        } else {\n            this.txRecords[account] = [];\n            this.txRecords[account].push(record);\n        }\n    }\n\n    isTxPending(txRecord: TransactionRecord): boolean {\n        return !txRecord.receipt;\n    }\n\n    isStale(txRecord: TransactionRecord, currentBlock: number) {\n        return txRecord.blockNumberChecked < currentBlock;\n    }\n}\n","import { Interface } from 'ethers/utils';\nimport RootContext from '../contexts';\nimport { ContractType } from '../stores/Provider';\n\nexport default class MulticallService {\n  context: RootContext;\n\n  activeCalls: Call[];\n  activeCallsRaw: any[];\n\n  constructor(context: RootContext) {\n    this.context = context;\n    this.resetActiveCalls();\n  }\n\n  // Add call additions and removals\n  async executeCalls(calls?: Call[], rawCalls?: any[]) {\n    const { providerStore, configStore } = this.context;\n\n    const multi = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Multicall,\n      configStore.getNetworkContracts().utils.multicall\n    );\n\n    const response = await multi.methods.aggregate(rawCalls || this.activeCallsRaw).call();\n    return {\n      calls: calls || this.activeCalls,\n      results: response.returnData,\n      blockNumber: response.blockNumber,\n    };\n  }\n\n  addCalls(calls: Call[]) {\n    calls.forEach(call => this.addCall(call));\n  }\n\n  addCall(call: Call) {\n    this.addContractCall(call);\n  }\n\n  addContractCall(call: Call) {\n    const { abiService } = this.context;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    call.params = call.params ? call.params : [];\n    const encoded = iface.functions[call.method].encode(call.params);\n    this.activeCallsRaw.push([call.address, encoded]);\n    this.activeCalls.push(call);\n  }\n\n  decodeCall(call: Call, result: any) {\n    const { abiService } = this.context;\n    const iface = new Interface(abiService.getAbi(call.contractType));\n    return iface.functions[call.method].decode(result);\n  }\n\n  resetActiveCalls() {\n    this.activeCalls = [];\n    this.activeCallsRaw = [];\n  }\n}\n","import { action, makeObservable } from 'mobx';\nimport contentHash from 'content-hash';\nimport PromiEvent from 'promievent';\nimport RootContext from '../contexts';\nimport { ContractType } from '../stores/Provider';\nimport {\n  BigNumber,\n  bnum,\n  ZERO_ADDRESS,\n  ANY_ADDRESS,\n  ERC20_TRANSFER_SIGNATURE,\n  ERC20_APPROVE_SIGNATURE,\n  MAX_UINT,\n  normalizeBalance\n} from '../utils';\n\nexport default class DaoService {\n  context: RootContext;\n\n  constructor(context: RootContext) {\n    this.context = context;\n    \n    makeObservable(this, {\n      createProposal: action,\n      vote: action,\n      approveVotingMachineToken: action,\n      stake: action,\n      execute: action,\n      redeem: action\n    });\n  }\n\n  encodeControllerGenericCall(\n    to: string,\n    callData: string,\n    value: BigNumber\n  ){\n    const { providerStore, configStore } = this.context;\n    const controller = providerStore.getContract(\n      providerStore.getActiveWeb3React(),\n      ContractType.Controller,\n      configStore.getNetworkContracts().controller\n    )\n    const avatarAddress = configStore.getNetworkContracts().avatar;\n    return controller.methods.genericCall(to, callData, avatarAddress, value).encodeABI();\n  }\n  \n  decodeWalletSchemeCall(from: string, to: string, data: string, value: BigNumber){\n    const { abiService, providerStore, configStore } = this.context;\n    const { library } = providerStore.getActiveWeb3React();\n    const recommendedCalls = configStore.getRecommendedCalls();\n    let functionSignature = data.substring(0,10);\n    const controllerCallDecoded = abiService.decodeCall(ContractType.Controller, data);\n    let asset = ZERO_ADDRESS;\n    if (controllerCallDecoded && controllerCallDecoded.function.name == \"genericCall\") {\n      to = controllerCallDecoded.args[0];\n      data = \"0x\"+controllerCallDecoded.args[1].substring(10);\n      value = bnum(controllerCallDecoded.args[3]);\n      functionSignature = controllerCallDecoded.args[1].substring(0,10);\n    } else {\n      data = \"0x\"+data.substring(10);\n    }\n  \n    if (functionSignature == ERC20_TRANSFER_SIGNATURE || functionSignature == ERC20_APPROVE_SIGNATURE) {\n      asset = to;\n    }\n    const recommendedCallUsed = recommendedCalls.find((recommendedCall) => {\n      return (\n        asset == recommendedCall.asset\n        && (ANY_ADDRESS == recommendedCall.from || from == recommendedCall.from)\n        && (to == recommendedCall.to)\n        && functionSignature == library.eth.abi.encodeFunctionSignature(recommendedCall.functionName)\n      )\n    });\n\n    if (recommendedCallUsed) {\n      const callParameters = library.eth.abi\n        .decodeParameters(recommendedCallUsed.params.map((param) => param.type), data);\n      \n      if (callParameters.__length__)\n        delete callParameters.__length__;\n      \n      let decodedCallText = \"\";\n      \n      if (recommendedCallUsed.decodeText && recommendedCallUsed.decodeText.length > 0) {\n        decodedCallText = recommendedCallUsed.decodeText;\n        for (let paramIndex = 0; paramIndex < recommendedCallUsed.params.length; paramIndex++)\n          if (recommendedCallUsed.params[paramIndex].decimals)\n            decodedCallText = decodedCallText\n              .replaceAll(\n                \"[PARAM_\"+paramIndex+\"]\",\n                \"<italic>\"+normalizeBalance(callParameters[paramIndex], recommendedCallUsed.params[paramIndex].decimals)+\"</italic>\"\n              );\n          else\n            decodedCallText = decodedCallText\n              .replaceAll(\"[PARAM_\"+paramIndex+\"]\", \"<italic>\"+callParameters[paramIndex]+\"</italic>\");\n      } \n      \n      return `<strong>Description</strong>:${decodedCallText}\n      <strong>To</strong>: ${recommendedCallUsed.toName} <small>${recommendedCallUsed.to}</small>\n      <strong>Function</strong>: ${recommendedCallUsed.functionName} <small>${library.eth.abi.encodeFunctionSignature(recommendedCallUsed.functionName)}</small>\n      <strong>Params</strong>: ${JSON.stringify(Object.keys(callParameters).map((paramIndex) => callParameters[paramIndex]))}\n      <strong>Data</strong>: ${data} `\n      \n    } else {\n      return `<strong>From</strong>: ${from}\n      <strong>To</strong>: ${to}\n      <strong>Data</strong>: 0x${data.substring(10)}\n      <strong>Value</strong>: ${normalizeBalance(bnum(value))}`\n    }\n    \n  }\n  \n  createProposal(scheme: string, schemeType: string, proposalData: any): PromiEvent<any> {\n    const { providerStore, configStore } = this.context;\n    const networkContracts = configStore.getNetworkContracts();\n    const { library } = providerStore.getActiveWeb3React();\n\n    if (schemeType == \"ContributionReward\") {\n      // function proposeContributionReward(\n      //   Avatar _avatar,\n      //   string memory _descriptionHash,\n      //   int256 _reputationChange,\n      //   uint256[5] memory _rewards,\n      //   IERC20 _externalToken,\n      //   address payable _beneficiary\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeContributionReward',\n            type: 'function',\n            inputs: [\n              { type: 'address', name: '_avatar' },\n              { type: 'string', name: '_descriptionHash' },\n              { type: 'int256', name: '_reputationChange' },\n              { type: 'uint256[5]', name: '_rewards' },\n              { type: 'address', name: '_externalToken' },\n              { type: 'address', name: '_beneficiary' }\n            ]\n        },[\n          networkContracts.avatar,\n          contentHash.decode(proposalData.descriptionHash),\n          proposalData.reputationChange,\n          [0, proposalData.ethValue, proposalData.tokenValue, 0, 1],\n          proposalData.externalToken,\n          proposalData.beneficiary,\n        ]),\n        \"0\"\n      );\n    } else if (schemeType == \"GenericMulticall\") {\n      // function proposeCalls(\n      //   address[] memory _contractsToCall,\n      //   bytes[] memory _callsData,\n      //   uint256[] memory _values,\n      //   string memory _descriptionHash\n      // )\n      return providerStore.sendRawTransaction(\n        providerStore.getActiveWeb3React(),\n        scheme,\n        library.eth.abi.encodeFunctionCall({\n            name: 'proposeCalls',\n            type: 'function',\n            inputs: [\n              { type: 'address[]', name: '_contractsToCall' },\n              { type: 'bytes[]', name: '_callsData' },\n              { type: 'uint256[]', name: '_values' },\n              { type: 'string', name: '_descriptionHash' }\n            ]\n        },[\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          contentHash.decode(proposalData.descriptionHash)\n        ]),\n        \"0\"\n      );\n    } else {\n      return providerStore.sendTransaction(\n        providerStore.getActiveWeb3React(),\n        ContractType.WalletScheme,\n        scheme,\n        'proposeCalls',\n        [\n          proposalData.to,\n          proposalData.data,\n          proposalData.value,\n          proposalData.titleText,\n          proposalData.descriptionHash\n        ],\n        {}\n      );\n    }\n  }\n  \n  vote(decision: string, amount: string, proposalId: string): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    const { account } = providerStore.getActiveWeb3React();\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'vote',\n      [proposalId, decision, amount, account],\n      {}\n    );\n  }\n  \n  approveVotingMachineToken(votingMachineAddress): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.ERC20,\n      daoStore.getCache().votingMachines[votingMachineAddress].token,\n      'approve',\n      [votingMachineAddress, MAX_UINT],\n      {}\n    );\n  }\n  \n  stake( decision: string, amount: string, proposalId: string, ): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'stake',\n      [proposalId, decision, amount],\n      {}\n    );\n  }\n  \n  execute(\n    proposalId: string,\n  ): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'execute',\n      [proposalId],\n      {}\n    );\n  }\n  \n  redeem(proposalId: string, account: string): PromiEvent<any> {\n    const { providerStore, daoStore } = this.context;\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.VotingMachine,\n      daoStore.getVotingMachineOfProposal(proposalId),\n      'redeem',\n      [proposalId, account],\n      {}\n    );\n  }\n  \n  redeemContributionReward(\n    redeemerAddress: string,\n    votingMachineAddress: string,\n    schemeAddress: string,\n    proposalId: string,\n    beneficiary: string\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.context;\n    // I have NO IDEA why it works with the voting machine address and scheme address are inverted in the function call,\n    // Alchemy uses it like that, weird.\n    return providerStore.sendTransaction(\n      providerStore.getActiveWeb3React(),\n      ContractType.Redeemer,\n      redeemerAddress,\n      'redeem',\n      [votingMachineAddress, schemeAddress, proposalId, configStore.getNetworkContracts().avatar, beneficiary],\n      {}\n    );\n  }\n  \n  redeemContributionRewardCall(\n    redeemerAddress: string,\n    votingMachineAddress: string,\n    schemeAddress: string,\n    proposalId: string,\n    beneficiary: string\n  ): PromiEvent<any> {\n    const { providerStore, configStore } = this.context;\n    const web3 = providerStore.getActiveWeb3React().library;\n    return web3.eth.call({\n      to: redeemerAddress,\n      data: web3.eth.abi.encodeFunctionCall({\n          name: 'redeem',\n          type: 'function',\n          inputs: [{\n              type: 'address',\n              name: '_contributionReward'\n          },{\n              type: 'address',\n              name: '_genesisProtocol'\n          },{\n              type: 'bytes32',\n              name: '_proposalId'\n          },{\n              type: 'address',\n              name: '_avatar'\n          },{\n              type: 'address',\n              name: '_beneficiary'\n          }]\n      }, [votingMachineAddress, schemeAddress, proposalId, configStore.getNetworkContracts().avatar, beneficiary])\n    });\n  }\n}\n","import RootContext from '../contexts';\nimport _ from 'lodash';\nimport { ContractType } from '../stores/Provider';\n\nexport interface EventCall {\n  contractType: ContractType;\n  address: string;\n  eventName: string;\n  fromBlock: number;\n  toBlock: number;\n  executed?: boolean;\n}\n\nexport default class EventsService {\n  context: RootContext;  \n\n  activeEventsCalls: EventCall[];\n    \n  constructor(context: RootContext) {\n    this.context = context;\n    this.activeEventsCalls = [];\n  }\n  \n  async getEvents(\n    contractType: ContractType,\n    address: string,\n    eventName: string,\n    fromBlock: number,\n    toBlock: number\n  ){\n    const { providerStore } = this.context;\n    const contract = providerStore.getContract(providerStore.getActiveWeb3React(), contractType, address);\n    console.log('Getting event',eventName, fromBlock, toBlock);\n    return _.orderBy( \n      await contract.getPastEvents(eventName, {fromBlock: fromBlock, toBlock: toBlock })\n      , [\"blockNumber\", \"transactionIndex\", \"logIndex\"], [\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  async executeActiveEventCalls() {\n    return await Promise.all(this.activeEventsCalls.map(async (activeEventCall) => {\n      return await this.getEvents(\n        activeEventCall.contractType,\n        activeEventCall.address,\n        activeEventCall.eventName,\n        activeEventCall.fromBlock,\n        activeEventCall.toBlock\n      )\n    }));\n  }\n\n  addEventsCalls(events: EventCall[]) {\n    events.forEach(event => this.addEventCall(event));\n  }\n\n  addEventCall(event: EventCall) {\n    this.activeEventsCalls.push(event);\n  }\n\n  resetActiveEventCalls() {\n    this.activeEventsCalls = [];\n  }\n  \n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\nimport IPFS from 'ipfs-core';\nconst CID = require('cids')\n\nexport default class IPFSService {\n  context: RootContext;\n  calls: {[hash:string]: {\n    time: Number,\n    content: String,\n    fetched: Boolean\n  }} = {};\n  ipfs: any = null;\n  started: Boolean = false;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async start(){\n    if (!this.ipfs && !this.started) {\n      this.started = true;\n      try {\n        this.ipfs = await IPFS.create();\n      } catch (error) {\n        console.error('[IPFS]', error);\n      }\n    }\n  }\n\n  async add(content: String) {\n    const { cid } = await this.ipfs.add({content});\n    console.log(cid.string)\n    return cid.string;\n  }\n  \n  async pin(hash: String){\n    console.log(new CID(hash))\n    return await this.ipfs.pin.add(new CID(hash));\n  }\n  \n  async getContent(hash: String){\n    let content = []\n    for await (const file of this.ipfs.get(hash)) {\n      console.debug(\"[IPFS FILE]\",file.type, file.path);\n      if (!file.content) continue;\n      for await (const chunk of file.content) {\n        content = content.concat(chunk)\n      }\n    }\n    return content.toString();\n  }\n  \n  async getContentFromIPFS(hash: string) {\n    return (await axios({\n      method: \"GET\",\n      url: \"https://gateway.pinata.cloud/ipfs/\"+hash\n    })).data;\n  }\n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\nimport contentHash from 'content-hash';\n\nexport default class PinataService {\n  context: RootContext;\n  auth: Boolean = false;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async updatePinList() {\n    // const pinList = await this.getPinList();\n    const ipfsHashes = this.context.daoStore.getCache().ipfsHashes;\n    // const alreadyPinned = pinList.data.rows;\n    for (let i = 0; i < ipfsHashes.length; i++) {\n      // if (alreadyPinned.indexOf(pinned => alreadyPinned.ipfs_pin_hash == ipfsHashes[i].hash) < 0) {\n      //   console.debug('[PINATA] Pinning:', ipfsHashes[i].hash);\n      // } else {\n      //   console.debug('[PINATA] Alpready pinned:', ipfsHashes[i].hash);\n      // }\n    }\n  }\n  \n  async isAuthenticated(){\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\n    try {\n      const auth = await axios({\n        method: \"GET\",\n        url: \"https://api.pinata.cloud/data/testAuthentication\",\n        headers: { Authorization: `Bearer ${pinataApiKey}` }\n      });\n      this.auth = auth.status == 200;\n    } catch (error) {\n      this.auth = false;\n    }\n  }\n\n  async pin(hashToPin: String){\n    console.log('pininng', hashToPin)\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"POST\",\n      url: \"https://api.pinata.cloud/pinning/pinByHash\",\n      data: {\n        hashToPin,\n        pinataMetadata: {\n          name: `DXdao ${this.context.configStore.getActiveChainName()} DescriptionHash ${contentHash.fromIpfs(hashToPin)}`,\n          keyValues: { type: 'proposal' }\n        }\n      },\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n  \n  async getPinList(){\n    const pinataApiKey = this.context.configStore.getLocalConfig().pinata;\n    return axios({\n      method: \"GET\",\n      url: `https://api.pinata.cloud/data/pinList?pageLimit=1000&metadata[name]=DXdao ${this.context.configStore.getActiveChainName()}`,\n      headers: { Authorization: `Bearer ${pinataApiKey}` }\n    });\n  }\n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\n\nexport default class EtherscanService {\n  context: RootContext;\n  auth: Boolean = false;\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async isAuthenticated(){\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\n    const { account } = this.context.providerStore.getActiveWeb3React();\n    const auth = await axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=account&action=balance&address=${account}&tag=latest&apikey=${etherscanAPIKey}`,\n    });\n    this.auth = auth.data.status == 1;\n  }\n  \n  async getContractABI(address: string){\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getabi&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n  \n  async getContractSource(address: string){\n    const etherscanAPIKey = this.context.configStore.getLocalConfig().etherscan;\n    return axios({\n      method: \"GET\",\n      url: `https://api.etherscan.io/api?module=contract&action=getsourcecode&address=${address}&apikey=${etherscanAPIKey}`,\n    });\n  }\n}\n","import RootContext from '../contexts';\nimport axios from \"axios\";\nimport web3 from \"web3\";\n\nexport default class CoingeckoService {\n  context: RootContext;\n  prices: any = {};\n\n  constructor(context: RootContext) {\n    this.context = context;\n  }\n  \n  async loadPrices(){\n    const tokens = this.context.configStore.getTokensToFetchPrice();\n    const networkName = this.context.configStore.getActiveChainName() == 'mainnet' ? 'ethereum'\n      : this.context.configStore.getActiveChainName() == 'xdai' ? 'xdai'\n      : '';\n    \n    if (networkName == 'ethereum' || networkName == 'xdai') {\n      let tokenAddresses = \"\";\n      tokens.map((token, i) => {\n        if (i == tokens.length - 1)\n          tokenAddresses += token.address;\n        else\n        tokenAddresses += token.address + \"%2C\";\n      })\n      console.log(`https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`)\n      const pricesResponse = await Promise.all([\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/token_price/${networkName}?contract_addresses=${tokenAddresses}&vs_currencies=usd`\n        }),\n        axios({\n          method: \"GET\",\n          url: `https://api.coingecko.com/api/v3/simple/price?ids=${networkName}&vs_currencies=usd`\n        })\n      ]);\n      \n      if ((pricesResponse[0].status == 200) && (pricesResponse[1].status == 200)){\n        this.prices = pricesResponse[0].data;\n        \n        Object.keys(this.prices).map((tokenAddress) => {\n          this.prices[web3.utils.toChecksumAddress(tokenAddress)] = this.prices[tokenAddress];\n          delete this.prices[tokenAddress];\n        });\n        \n        this.prices[\"0x0000000000000000000000000000000000000000\"] = pricesResponse[1].data[networkName];\n      }\n    }\n    return;\n  }\n  \n  getPrices() {\n    return this.prices;\n  }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\n\nexport default class ModalStore {\n    walletModalVisible: boolean;\n    context: RootContext;\n\n    constructor(context) {\n        this.context = context;\n        this.walletModalVisible = false;\n        makeObservable(this, {\n            walletModalVisible: observable,\n            toggleWalletModal: action,\n            setWalletModalVisible: action\n          }\n        );\n    }\n\n    @action toggleWalletModal() {\n        this.walletModalVisible = !this.walletModalVisible;\n    }\n\n    @action setWalletModalVisible(visible: boolean) {\n        this.walletModalVisible = visible;\n    }\n}\n","import { makeObservable, observable, action } from 'mobx';\nimport RootContext from '../contexts';\nimport { _ } from 'lodash';\nimport { NETWORK_NAMES } from '../provider/connectors';\n\nconst Web3 = require('web3');\nconst web3 = new Web3();\nconst appConfig = require('../appConfig.json');\n\nimport { NETWORK_ASSET_SYMBOL } from '../provider/connectors';\nimport { ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE } from '../utils';\n\nexport default class ConfigStore {\n    darkMode: boolean;\n    context: RootContext;\n    appConfig: AppConfig;\n\n    constructor(context) {\n      this.context = context;\n      this.darkMode = false;\n      makeObservable(this, {\n          darkMode: observable,\n          toggleDarkMode: action\n        }\n      );\n    }\n    \n    getActiveChainName() {\n      const activeWeb3 = this.context.providerStore.getActiveWeb3React();\n      return activeWeb3 ? NETWORK_NAMES[activeWeb3.chainId] : 'none';\n    }\n    \n    getLocalConfig() {\n      if (localStorage.getItem('dxvote-config'))\n        return JSON.parse(localStorage.getItem('dxvote-config'));\n      else return {\n        etherscan: '',\n        pinata: '',\n        pinOnStart: false\n      };\n    }\n    \n    setLocalConfig(config) {\n      localStorage.setItem('dxvote-config', JSON.stringify(config));\n    }\n    \n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n    }\n\n    @action setDarkMode(visible: boolean) {\n      this.darkMode = visible;\n    }\n    \n    @action async loadConfig() {\n      const config = await this.context.ipfsService.getContentFromIPFS(appConfig.configHash)\n      this.appConfig = config;\n    }\n    \n    getCacheIPFSHash(networkName) {\n      return appConfig.cacheHash[networkName];\n    }\n\n    getSchemeTypeData(schemeAddress) {\n      const networkContracts = this.getNetworkContracts();\n      \n      if (networkContracts.daostack) {\n        if (networkContracts.daostack.schemeRegistrar && networkContracts.daostack.schemeRegistrar.address == schemeAddress) {\n          return {\n            type: \"SchemeRegistrar\",\n            name: \"SchemeRegistrar\",\n            contractToCall: networkContracts.daostack.schemeRegistrar.contractToCall,\n            votingMachine: networkContracts.votingMachines.gen.address,\n            newProposalTopics: networkContracts.daostack.schemeRegistrar.newProposalTopics,\n            voteParams: networkContracts.daostack.contributionReward.voteParams,\n            creationLogEncoding: networkContracts.daostack.schemeRegistrar.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.contributionReward && networkContracts.daostack.contributionReward.address == schemeAddress) {\n          return {\n            type: \"ContributionReward\",\n            name: \"ContributionReward\",\n            contractToCall: networkContracts.daostack.contributionReward.contractToCall,\n            votingMachine: networkContracts.votingMachines.gen.address,\n            newProposalTopics: networkContracts.daostack.contributionReward.newProposalTopics,\n            voteParams: networkContracts.daostack.contributionReward.voteParams,\n            creationLogEncoding: networkContracts.daostack.contributionReward.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.competitionScheme && networkContracts.daostack.competitionScheme.address == schemeAddress) {\n          return {\n            type: \"CompetitionScheme\",\n            name: \"CompetitionScheme\",\n            contractToCall: networkContracts.daostack.competitionScheme.contractToCall,\n            votingMachine: networkContracts.votingMachines.gen.address,\n            newProposalTopics: networkContracts.daostack.competitionScheme.newProposalTopics,\n            creationLogEncoding: networkContracts.daostack.competitionScheme.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.multicallSchemes && Object.keys(networkContracts.daostack.multicallSchemes.addresses).indexOf(schemeAddress) > -1) {\n          return {\n            type: \"GenericMulticall\",\n            votingMachine: networkContracts.votingMachines.gen.address,\n            contractToCall: ZERO_ADDRESS,\n            name: networkContracts.daostack.multicallSchemes.addresses[schemeAddress].name,\n            newProposalTopics: networkContracts.daostack.multicallSchemes.newProposalTopics,\n            voteParams: networkContracts.daostack.multicallSchemes.addresses[schemeAddress].voteParams,\n            creationLogEncoding: networkContracts.daostack.multicallSchemes.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.genericSchemes && Object.keys(networkContracts.daostack.genericSchemes.addresses).indexOf(schemeAddress) > -1) {\n          return {\n            type: \"GenericScheme\",\n            votingMachine: networkContracts.daostack.genericSchemes.addresses[schemeAddress].votingMachine,\n            contractToCall: networkContracts.daostack.genericSchemes.addresses[schemeAddress].contractToCall,\n            name: networkContracts.daostack.genericSchemes.addresses[schemeAddress].name,\n            newProposalTopics: networkContracts.daostack.genericSchemes.newProposalTopics,\n            voteParams: networkContracts.daostack.genericSchemes.addresses[schemeAddress].voteParams,\n            creationLogEncoding: networkContracts.daostack.genericSchemes.creationLogEncoding\n          };\n        } else if (networkContracts.daostack.dxSchemes && Object.keys(networkContracts.daostack.dxSchemes).indexOf(schemeAddress) > -1) {\n          return {\n            type: \"OldDxScheme\",\n            votingMachine: networkContracts.votingMachines.gen.address,\n            contractToCall: ZERO_ADDRESS,\n            name: networkContracts.daostack.dxSchemes[schemeAddress],\n            newProposalTopics: [],\n            creationLogEncoding: []\n          };\n        }\n      }\n      return {\n        type: \"WalletScheme\",\n        votingMachine: networkContracts.votingMachines.dxd.address,\n        name: \"WalletScheme\",\n        newProposalTopics: [[\n          web3.utils.soliditySha3(\"ProposalStateChange(bytes32,uint256)\"),\n          null,\n          '0x0000000000000000000000000000000000000000000000000000000000000001']\n        ],\n        creationLogEncoding: []\n      }\n    }\n\n    getTokenData(tokenAddress) {\n      return this.appConfig[this.getActiveChainName()]\n        .tokens.find((tokenInFile) => tokenInFile.address == tokenAddress);\n    }\n    \n    getNetworkContracts() {\n      return this.appConfig[this.getActiveChainName()].contracts;\n    }\n    \n    getTokensOfNetwork() {\n      return this.appConfig[this.getActiveChainName()].tokens;\n    }\n\n    getTokensToFetchPrice() {\n      return this.appConfig[this.getActiveChainName()].tokens.filter((tokenInFile) => tokenInFile.fetchPrice);\n    }\n\n    getProposalTemplates() {\n      return this.appConfig[this.getActiveChainName()].proposalTemplates;\n    }\n\n    getRecommendedCalls() {\n      const networkName = this.getActiveChainName();\n      const networkContracts = this.getNetworkContracts();\n      const networkTokens = this.getTokensOfNetwork();\n      \n      let recommendedCalls: {\n        asset: string;\n        from: string;\n        to: string;\n        toName: string;\n        functionName: string;\n        params: {\n          type: string;\n          name: string;\n          defaultValue: string;\n          decimals ?: number;\n        }[];\n        decodeText: string;\n      }[] = [\n        {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"sendEther(uint256,address,address)\",\n          params: [\n            {type: \"uint256\", name: \"_amountInWei\", defaultValue: \"\", decimals: 18},\n            {type: \"address\", name: \"_to\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Send [PARAM_0] \"+NETWORK_ASSET_SYMBOL[networkName]+\" to [PARAM_1]\"\n        },{\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"externalTokenTransfer(address,address,uint256,address)\",\n          params: [\n            {type: \"address\", name: \"_externalToken\", defaultValue: \"\"},\n            {type: \"address\", name: \"_to\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"_value\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Send [PARAM_2] token([PARAM_0]) to [PARAM_1]\"\n        },{\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"mintReputation(uint256,address,address)\",\n          params: [\n            {type: \"uint256\", name: \"_amount\", defaultValue: \"\", decimals: 18},\n            {type: \"address\", name: \"_to\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Mint of [PARAM_0] REP to [PARAM_1]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"burnReputation(uint256,address,address)\",\n          params: [\n            {type: \"uint256\", name: \"_amount\", defaultValue: \"\", decimals: 18},\n            {type: \"address\", name: \"_from\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Burn of [PARAM_0] REP to [PARAM_1]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"registerScheme(address,bytes32,bytes4,address)\",\n          params: [\n            {type: \"address\", name: \"_scheme\", defaultValue: \"\"},\n            {type: \"bytes32\", name: \"_paramsHash\", defaultValue: \"\"},\n            {type: \"bytes4\", name: \"_permissions\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Register scheme [PARAM_0] with params hash [PARAM_1] and permissions [PARAM_2]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"unregisterScheme(address,address)\",\n          params: [\n            {type: \"address\", name: \"_scheme\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar}\n          ],\n          decodeText: \"Unregister scheme [PARAM_0]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.controller,\n          toName: \"DXdao Controller\",\n          functionName: \"genericCall(address,bytes,addres,uint256)\",\n          params: [\n            {type: \"address\", name: \"_contract\", defaultValue: \"\"},\n            {type: \"bytes\", name: \"_data\", defaultValue: \"\"},\n            {type: \"address\", name: \"_avatar\", defaultValue: networkContracts.avatar},\n            {type: \"uint256\", name: \"_value\", defaultValue: \"\"}\n          ],\n          decodeText: \"Generic call to [PARAM_0] with data [PARAM_1] and value [PARAM_2] \"+NETWORK_ASSET_SYMBOL[networkName]\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.permissionRegistry,\n          toName: \"Permission Registry\",\n          functionName: \"setTimeDelay(uint256)\",\n          params: [\n            {type: \"uint256\", name: \"newTimeDelay\", defaultValue: \"\"},\n          ],\n          decodeText: \"Set time delay to [PARAM_0] seconds\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: networkContracts.avatar,\n          to: networkContracts.permissionRegistry,\n          toName: \"Permission Registry\",\n          functionName: \"setAdminPermission(address,address,address,bytes4,uint256,bool)\",\n          params: [\n            {type: \"address\", name: \"asset\", defaultValue: ZERO_ADDRESS},\n            {type: \"address\", name: \"from\", defaultValue: \"\"},\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"bytes4\", name: \"functionSignature\", defaultValue: ANY_FUNC_SIGNATURE},\n            {type: \"uint256\", name: \"valueAllowed\", defaultValue: \"0\"},\n            {type: \"bool\", name: \"allowed\", defaultValue: \"true\"},\n          ],\n          decodeText: \"Set [PARAM_5] admin permission in asset [PARAM_0] from [PARAM_1] to [PARAM_2] with function signature [PARAM_3] and value [PARAM_4]\"\n        }, {\n          asset: ZERO_ADDRESS,\n          from: ANY_ADDRESS,\n          to: networkContracts.permissionRegistry,\n          toName: \"Permission Registry\",\n          functionName: \"setPermission(address,address,bytes4,uint256,bool)\",\n          params: [\n            {type: \"address\", name: \"asset\", defaultValue: ZERO_ADDRESS},\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"bytes4\", name: \"functionSignature\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"valueAllowed\", defaultValue: \"\"},\n            {type: \"bool\", name: \"allowed\", defaultValue: \"\"},\n          ],\n          decodeText: \"Set [PARAM_5] permission in asset [PARAM_0] from [FROM] to [PARAM_2] with function signature [PARAM_3] and value [PARAM_4]\"\n        }\n      ];\n      \n      if (this.appConfig[networkName].recommendedCalls && this.appConfig[networkName].recommendedCalls.length > 0)\n        recommendedCalls = recommendedCalls.concat(this.appConfig[networkName].recommendedCalls);\n      \n      networkTokens.map((networkToken) => {\n        recommendedCalls.push({\n          asset: networkToken.address,\n          from: ANY_ADDRESS,\n          to: networkToken.address,\n          toName: networkToken.name,\n          functionName: \"transfer(address,uint256)\",\n          params: [\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"value\", defaultValue: \"0\", decimals: networkToken.decimals}\n          ],\n          decodeText: \"Transfer [PARAM_1] \"+networkToken.symbol+\" to [PARAM_0]\"\n        });\n\n        recommendedCalls.push({\n          asset: networkToken.address,\n          from: ANY_ADDRESS,\n          to: networkToken.address,\n          toName: `ERC20 ${networkToken.symbol}`,\n          functionName: \"approve(address,uint256)\",\n          params: [\n            {type: \"address\", name: \"to\", defaultValue: \"\"},\n            {type: \"uint256\", name: \"value\", defaultValue: \"0\", decimals: networkToken.decimals}\n          ],\n          decodeText: \"Approve [PARAM_1] \"+networkToken.symbol+\" to [PARAM_0]\"\n        });\n      });\n      \n      return recommendedCalls;\n    }\n}\n","import RootContext from '../contexts';\nimport { action, makeObservable } from 'mobx';\nimport _ from 'lodash';\nimport {\n  BigNumber,\n  ZERO_ADDRESS, ANY_ADDRESS, ANY_FUNC_SIGNATURE, MAX_UINT,\n  bnum,\n  decodeProposalStatus,\n  VoteDecision,\n  VotingMachineProposalState,\n  normalizeBalance,\n  formatPercentage\n} from '../utils';\n\nexport default class DaoStore {\n  daoCache: DaoNetworkCache;\n  context: RootContext;\n\n  constructor(context) {\n    this.context = context;\n    \n    makeObservable(this, {\n      setCache: action\n    });\n  }\n  \n  // Parse bignnumbers\n  parseCache(unparsedCache: DaoNetworkCache): DaoNetworkCache {\n    unparsedCache.daoInfo.ethBalance = bnum(unparsedCache.daoInfo.ethBalance);\n    unparsedCache.daoInfo.repEvents.map((repEvent, i) => {\n      unparsedCache.daoInfo.repEvents[i].amount = bnum(repEvent.amount)\n    })\n    Object.keys(unparsedCache.schemes).map((schemeAddress) => {\n      unparsedCache.schemes[schemeAddress].ethBalance = bnum(unparsedCache.schemes[schemeAddress].ethBalance)\n    })\n    Object.keys(unparsedCache.callPermissions).map((asset) => {\n      Object.keys(unparsedCache.callPermissions[asset]).map((from) => {\n        Object.keys(unparsedCache.callPermissions[asset][from]).map((to) => {\n          Object.keys(unparsedCache.callPermissions[asset][from][to]).map((functionSignature) => {\n            unparsedCache.callPermissions[asset][from][to][functionSignature].value =\n              bnum(unparsedCache.callPermissions[asset][from][to][functionSignature].value);\n          })\n        })\n      })\n    })\n    Object.keys(unparsedCache.proposals).map((proposalId) => {\n      unparsedCache.proposals[proposalId].values = unparsedCache.proposals[proposalId].values.map((value) => {\n        return bnum(value);\n      })\n\n      unparsedCache.proposals[proposalId].stateInScheme = unparsedCache.proposals[proposalId].stateInScheme;\n      unparsedCache.proposals[proposalId].stateInVotingMachine = unparsedCache.proposals[proposalId].stateInVotingMachine;\n      unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit = bnum(unparsedCache.proposals[proposalId].currentBoostedVotePeriodLimit);\n      unparsedCache.proposals[proposalId].daoBountyRemain = bnum(unparsedCache.proposals[proposalId].daoBountyRemain);\n      unparsedCache.proposals[proposalId].daoBounty = bnum(unparsedCache.proposals[proposalId].daoBounty);\n      unparsedCache.proposals[proposalId].totalStakes = bnum(unparsedCache.proposals[proposalId].totalStakes);\n      unparsedCache.proposals[proposalId].confidenceThreshold = bnum(unparsedCache.proposals[proposalId].confidenceThreshold);\n      unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = bnum(unparsedCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted);\n      unparsedCache.proposals[proposalId].submittedTime = bnum(unparsedCache.proposals[proposalId].submittedTime);\n      unparsedCache.proposals[proposalId].preBoostedPhaseTime = bnum(unparsedCache.proposals[proposalId].preBoostedPhaseTime);\n      unparsedCache.proposals[proposalId].boostedPhaseTime = bnum(unparsedCache.proposals[proposalId].boostedPhaseTime);\n      unparsedCache.proposals[proposalId].positiveVotes = bnum(unparsedCache.proposals[proposalId].positiveVotes);\n      unparsedCache.proposals[proposalId].negativeVotes = bnum(unparsedCache.proposals[proposalId].negativeVotes);\n      unparsedCache.proposals[proposalId].preBoostedPositiveVotes = bnum(unparsedCache.proposals[proposalId].preBoostedPositiveVotes);\n      unparsedCache.proposals[proposalId].preBoostedNegativeVotes = bnum(unparsedCache.proposals[proposalId].preBoostedNegativeVotes);\n      unparsedCache.proposals[proposalId].positiveStakes = bnum(unparsedCache.proposals[proposalId].positiveStakes);\n      unparsedCache.proposals[proposalId].negativeStakes = bnum(unparsedCache.proposals[proposalId].negativeStakes);\n    });\n    \n    Object.keys(unparsedCache.votingMachines).map((votingMachineAddress) => {\n      Object.keys(unparsedCache.votingMachines[votingMachineAddress].votingParameters)\n        .map((paramsHash) => {\n          const unparsedParams = unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash];\n        unparsedCache.votingMachines[votingMachineAddress].votingParameters[paramsHash] = {\n          queuedVoteRequiredPercentage: bnum(unparsedParams.queuedVoteRequiredPercentage),\n          queuedVotePeriodLimit: bnum(unparsedParams.queuedVotePeriodLimit),\n          boostedVotePeriodLimit: bnum(unparsedParams.boostedVotePeriodLimit),\n          preBoostedVotePeriodLimit: bnum(unparsedParams.preBoostedVotePeriodLimit),\n          thresholdConst: bnum(unparsedParams.thresholdConst),\n          limitExponentValue: bnum(unparsedParams.limitExponentValue),\n          quietEndingPeriod: bnum(unparsedParams.quietEndingPeriod),\n          proposingRepReward: bnum(unparsedParams.proposingRepReward),\n          votersReputationLossRatio: bnum(unparsedParams.votersReputationLossRatio),\n          minimumDaoBounty: bnum(unparsedParams.minimumDaoBounty),\n          daoBountyConst: bnum(unparsedParams.daoBountyConst),\n          activationTime: bnum(unparsedParams.activationTime)\n        };\n      })\n    })\n    return unparsedCache;\n  }\n  \n  getCache(): DaoNetworkCache {\n    return this.daoCache;\n  }\n  \n  setCache(newNetworkCache: DaoNetworkCache) {\n    this.daoCache = this.parseCache(newNetworkCache);\n    console.debug('Cache SET]', this.daoCache);\n  }\n\n  getDaoInfo(): DaoInfo {\n    return this.getCache().daoInfo;\n  }\n  \n  getSchemeProposalsByName(_schemeName: string): Proposal[] {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getSchemeByName(_schemeName: string): Scheme {\n    let schemeAddress;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeAddress = _schemeAddress;\n      }\n    }\n    let schemeInfo;\n    for (const _schemeAddress in this.getCache().schemes) {\n      if (this.getCache().schemes[_schemeAddress].name === _schemeName) {\n        schemeInfo = this.getCache().schemes[schemeAddress];\n        break;\n      }\n    }\n    return schemeInfo;\n  }\n  \n  getSchemeProposals(schemeAddress: string): Proposal[] {\n    let proposals = [];\n    for (const proposalId in this.getCache().proposals) {\n      if (this.getCache().proposals[proposalId].scheme === schemeAddress) {\n        proposals.push(this.getProposal(proposalId));\n      }\n    }\n    return proposals;\n  }\n  \n  getAmountOfProposalsPreBoostedInScheme(schemeAddress: string): number {\n    return this.getSchemeProposals(schemeAddress).filter((proposal) => {\n      return (proposal.stateInVotingMachine == 4)\n    }).length;\n  }\n  \n  getGovernanceInfo(): any {\n    let users = {},\n    totalPositiveVotes = 0,\n    totalPositiveVotesAmount = bnum(0),\n    totalNegativeVotes = 0,\n    totalNegativeVotesAmount = bnum(0),\n    totalPositiveStakes = 0,\n    totalPositiveStakesAmount = bnum(0),\n    totalNegativeStakes = 0,\n    totalNegativeStakesAmount = bnum(0),\n    totalProposalsCreated = 0;\n    const cache = this.getCache();\n    let rep = [];\n    rep = _.sortBy(rep, [function(o) { return o[1]; }]);\n    rep.unshift([\"User Address\", \"REP %\"]);\n    \n    let repEvents = [];\n    let repTotalSupply = bnum(0);\n    let blockNumber = 0;\n    for (let i = 0; i < cache.daoInfo.repEvents.length; i++) {\n      if (cache.daoInfo.repEvents[i].event == \"Mint\")\n        repTotalSupply = repTotalSupply.plus(cache.daoInfo.repEvents[i].amount);\n      else if (cache.daoInfo.repEvents[i].event == \"Burn\")\n        repTotalSupply = repTotalSupply.minus(cache.daoInfo.repEvents[i].amount);\n      \n      if (cache.daoInfo.repEvents[i].l1BlockNumber > blockNumber){\n        blockNumber = cache.daoInfo.repEvents[i].l1BlockNumber;\n        repEvents.push([blockNumber, bnum(repTotalSupply).div(10**18).toNumber()])\n      }\n    }\n    repEvents.unshift([\"Block\", \"Total Rep\"]);\n\n    Object.keys(cache.votingMachines).map((votingMachineAddress) => {\n      cache.votingMachines[votingMachineAddress].events.votes.map((vote) => {\n        if (!users[vote.voter])\n          users[vote.voter] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[vote.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", vote.proposalId);\n        } else {\n          if (vote.vote == 1){\n            totalPositiveVotes ++;\n            totalPositiveVotesAmount = totalPositiveVotesAmount.plus(bnum(vote.amount));\n          } else {\n            totalNegativeVotes ++;\n            totalNegativeVotesAmount = totalNegativeVotesAmount.plus(bnum(vote.amount));\n          }\n          if (cache.proposals[vote.proposalId].winningVote == vote.vote){\n            users[vote.voter].correctVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 3;\n            \n          } else {\n            users[vote.voter].wrongVotes ++;\n            users[vote.voter].totalVoted = users[vote.voter].totalVoted.plus(bnum(vote.amount));\n            users[vote.voter].score += 1;\n          }\n        }\n      })\n      cache.votingMachines[votingMachineAddress].events.stakes.map((stake) => {\n        if (!users[stake.staker])\n          users[stake.staker] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n        \n        if (!cache.proposals[stake.proposalId]) {\n          console.debug(\"MISSING PROPOSAL\", stake.proposalId);\n        } else {\n          if (stake.vote == 1){\n            totalPositiveStakes ++;\n            totalPositiveStakesAmount = totalPositiveStakesAmount.plus(bnum(stake.amount));\n          } else {\n            totalNegativeStakes ++;\n            totalNegativeStakesAmount = totalNegativeStakesAmount.plus(bnum(stake.amount));\n          }\n          \n          if (cache.proposals[stake.proposalId].winningVote == stake.vote){\n            users[stake.staker].correctStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n            users[stake.staker].score += 1;\n          } else {\n            users[stake.staker].wrongStakes ++;\n            users[stake.staker].totalStaked = users[stake.staker].totalStaked.plus(bnum(stake.amount));\n          }\n        }\n      });\n    })\n\n\n    Object.keys(cache.proposals).map( (proposalId) => {\n      \n      const proposalCreator = cache.proposals[proposalId].proposer;\n      \n      if (proposalCreator != \"0x0000000000000000000000000000000000000000\") {\n        if (!users[proposalCreator])\n          users[proposalCreator] = {\n            correctVotes: 0, wrongVotes:0,\n            correctStakes: 0, wrongStakes: 0,\n            proposals: 0, totalVoted: bnum(0), totalStaked: bnum(0), score: 0\n          };\n          \n        const score = cache.proposals[proposalId].positiveVotes.plus(cache.proposals[proposalId].negativeVotes)\n          .div(this.getRepAt().totalSupply).div(\"0.20\").times(\"10\").toFixed(2);\n        users[proposalCreator].score += Math.min(Math.min(Number(score), 1), 30);\n        users[proposalCreator].proposals ++;\n      } else {\n        console.debug(\n          \"Couldnt get proposer for proposal\", proposalId, \"in scheme\",\n          cache.schemes[cache.proposals[proposalId].scheme].name,\n          \"in transaction\", cache.proposals[proposalId].creationEvent.tx\n        )\n      }\n      totalProposalsCreated ++;\n\n    });\n    \n    return {\n      totalPositiveVotes,\n      totalPositiveVotesAmount,\n      totalNegativeVotes,\n      totalNegativeVotesAmount,\n      totalPositiveStakes,\n      totalPositiveStakesAmount,\n      totalNegativeStakes,\n      totalNegativeStakesAmount,\n      totalProposalsCreated,\n      rep,\n      repEvents,\n      ranking: _.orderBy(\n        Object.keys(users).map(key => ( Object.assign({ address: key }, users[key]) )), [\"score\"], [\"desc\"]\n      )\n    }\n  }\n  \n  getAllProposals(): Proposal[] {\n    const allProposals = Object.keys(this.getCache().proposals)\n      .map( (proposalId) => {return this.getCache().proposals[proposalId] } );\n    return _.orderBy(\n      allProposals ,\n      [\"creationEvent.l1BlockNumber\", \"creationEvent.l2BlockNumber\", \"creationEvent.transactionIndex\", \"creationEvent.logIndex\"],\n      [\"asc\",\"asc\",\"asc\",\"asc\"]\n    );\n  }\n  \n  getAllSchemes(): Scheme[] {\n    const schemeAddresses = Object.keys(this.getCache().schemes);\n    return schemeAddresses.map( (schemeAddress) => {return this.getCache().schemes[schemeAddress] } );\n  }\n  \n  getProposal(proposalId): Proposal {\n    return this.getCache().proposals[proposalId];\n  }\n  \n  getScheme(schemeAddress): Scheme {\n    return this.getCache().schemes[schemeAddress];\n  }\n  \n  getVotingMachineOfProposal(proposalId): string {\n    return this.getCache().schemes[\n      this.getCache().proposals[proposalId].scheme\n    ].votingMachine;\n  }\n  \n  getVotingParametersOfProposal(proposalId): VotingMachineParameters {\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)].votingParameters[\n      this.getCache().proposals[proposalId].paramsHash\n    ];\n  }\n  \n  getVotingParametersOfScheme(schemeAddress): VotingMachineParameters {\n    const scheme = this.getCache().schemes[schemeAddress];\n    return this.getCache().votingMachines[scheme.votingMachine].votingParameters[ scheme.paramsHash ];\n  }\n  \n  getProposalEvents(proposalId): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    stateChanges: ProposalStateChange[],\n    history: {\n      text: string,\n      event: any\n    }[]\n  }{\n    const proposalEvents = {\n      votes: this.getVotesOfProposal(proposalId),\n      stakes: this.getStakesOfProposal(proposalId),\n      redeems: this.getRedeemsOfProposal(proposalId),\n      redeemsRep: this.getRedeemsRepOfProposal(proposalId),\n      stateChanges: this.getProposalStateChanges(proposalId)\n    }\n    \n    const proposal = this.getProposal(proposalId);\n    const totalRep = this.getRepAt().totalSupply;\n    \n    let history = proposalEvents.votes.map((event) => {\n      return {\n        text: `Vote from ${event.voter} of ${(bnum(event.amount)).times('100').div(totalRep).toFixed(4)} % REP on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Stake from ${event.staker} of ${normalizeBalance(event.amount).toString()} DXD on decision ${VoteDecision[event.vote]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP Redeem from ${event.beneficiary} of ${event.amount}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stateChanges.map((event) => {\n      return {\n        text: `Proposal change to state ${VotingMachineProposalState[event.state]}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history.push({\n      text: `Proposal created by ${proposal.proposer}`,\n      event: {\n        proposalId: proposal.id,\n        tx: proposal.creationEvent.tx,\n        block: proposal.creationEvent.l1BlockNumber,\n        transactionIndex: proposal.creationEvent.transactionIndex,\n        logIndex: proposal.creationEvent.logIndex,\n        timestamp: proposal.creationEvent.timestamp\n      }\n    });\n    \n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      stateChanges: proposalEvents.stateChanges,\n      history: history\n    }\n  }\n  \n  getUser(userAddress): {\n    repBalance: BigNumber,\n    repPercentage: string\n  } {\n    const { providerStore } = this.context;\n    const { userRep, totalSupply } = this.getRepAt(userAddress, providerStore.getCurrentBlockNumber())\n    return {\n      repBalance: userRep,\n      repPercentage: userRep ? formatPercentage(userRep.div(totalSupply), 2, false) : \"0\"\n    }\n  }\n  \n  getUserEvents(userAddress): {\n    votes: Vote[],\n    stakes: Stake[],\n    redeems: Redeem[],\n    redeemsRep: RedeemRep[],\n    newProposal: ProposalEvent[],\n    history: {\n      text: string,\n      event: any\n    }[]\n  }{\n    \n    let history : {\n      text: string,\n      event: any\n    }[] = [];\n    \n    const cache = this.getCache();\n    const votingMachines = this.context.configStore.getNetworkContracts().votingMachines;\n    let proposalEvents = {\n      votes: [],\n      stakes: [],\n      redeems: [],\n      redeemsRep: []\n    };\n    if (votingMachines.gen) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.gen.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.gen.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.gen.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.gen.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n\n    if (votingMachines.dxd && cache.votingMachines[votingMachines.dxd.address]) {\n      proposalEvents.votes = proposalEvents.votes.concat(cache.votingMachines[votingMachines.dxd.address].events.votes\n        .filter((vote) => {return (userAddress === vote.voter)}));\n      proposalEvents.stakes = proposalEvents.stakes.concat(cache.votingMachines[votingMachines.dxd.address].events.stakes\n        .filter((stake) => {return (userAddress === stake.staker)}));\n      proposalEvents.redeems = proposalEvents.redeems.concat(cache.votingMachines[votingMachines.dxd.address].events.redeems\n        .filter((redeem) => {return (userAddress === redeem.beneficiary)}));\n      proposalEvents.redeemsRep = proposalEvents.redeemsRep.concat(cache.votingMachines[votingMachines.dxd.address].events.redeemsRep\n        .filter((redeemRep) => {return (userAddress === redeemRep.beneficiary)}));\n    }\n    \n    const newProposalEvents: ProposalEvent[] = \n    Object.keys(_.pickBy(cache.proposals, (proposal) => proposal.proposer == userAddress))\n      .map((proposalId) => {\n        history.push({\n          text: `Proposal ${proposalId} created`,\n          event: {\n            proposalId: proposalId,\n            tx: cache.proposals[proposalId].creationEvent.tx,\n            block: cache.proposals[proposalId].creationEvent.l1BlockNumber,\n            transactionIndex: cache.proposals[proposalId].creationEvent.transactionIndex,\n            logIndex: cache.proposals[proposalId].creationEvent.logIndex,\n            timestamp: cache.proposals[proposalId].creationEvent.timestamp\n          }\n        })\n        return Object.assign({ proposalId: proposalId, }, cache.proposals[proposalId].creationEvent);\n      });\n\n    history = history.concat(proposalEvents.votes.map((event) => {\n      return {\n        text: `Voted with ${event.amount} REP for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.stakes.map((event) => {\n      return {\n        text: `Staked ${event.amount} DXD for decision ${VoteDecision[event.vote]} on proposal ${event.proposalId}`,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeems.map((event) => {\n      return {\n        text: `DXD amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    })).concat(proposalEvents.redeemsRep.map((event) => {\n      return {\n        text: `REP amount of ${event.amount} redeemed from proposal ${event.proposalId} `,\n        event: {\n          proposalId: event.proposalId,\n          tx: event.tx,\n          block: event.l1BlockNumber,\n          transactionIndex: event.transactionIndex,\n          logIndex: event.logIndex,\n          timestamp: event.timestamp\n        }\n      }\n    }))\n    history = _.orderBy( history, [\"event.timestamp\", \"event.logIndex\"], [\"asc\",\"asc\"] );\n    \n    return {\n      newProposal: newProposalEvents,\n      votes: proposalEvents.votes,\n      stakes: proposalEvents.stakes,\n      redeems: proposalEvents.redeems,\n      redeemsRep: proposalEvents.redeemsRep,\n      history: history\n    }\n  }\n  \n  getProposalStatus(proposalId: string): any {\n    const proposal = this.getCache().proposals[proposalId];\n    const proposalStateChangeEvents = this.getProposalStateChanges(proposalId);\n    const scheme = this.getCache().schemes[proposal.scheme];\n    const votingMachineOfProposal = this.getVotingMachineOfProposal(proposalId);\n    const networkContracts = this.context.configStore.getNetworkContracts();\n    const votingMachineParams = \n    (proposal.paramsHash == \"0x0000000000000000000000000000000000000000000000000000000000000000\")\n    ? this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[scheme.paramsHash]\n    : this.getCache().votingMachines[votingMachineOfProposal]\n      .votingParameters[proposal.paramsHash];\n    \n    const autoBoost = (networkContracts.votingMachines.dxd && networkContracts.votingMachines.dxd.address == votingMachineOfProposal)\n    return decodeProposalStatus(\n      proposal, proposalStateChangeEvents, votingMachineParams, scheme.maxSecondsForExecution, autoBoost, scheme.type\n    );\n  }\n  \n  getVotesOfProposal(proposalId: string): Vote[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.votes\n      .filter((vote) => {return (proposalId === vote.proposalId)});\n  }\n  \n  getStakesOfProposal(proposalId: string): Stake[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.stakes\n      .filter((stake) => {return (proposalId === stake.proposalId)});\n  }\n  \n  getRedeemsOfProposal(proposalId: string): Redeem[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeems\n      .filter((redeem) => {return (proposalId === redeem.proposalId)});\n  }\n  \n  getRedeemsRepOfProposal(proposalId: string): RedeemRep[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.redeemsRep\n      .filter((redeemRep) => {return (proposalId === redeemRep.proposalId)});\n  }\n  \n  getProposalStateChanges(proposalId: string): ProposalStateChange[]{\n    return this.getCache().votingMachines[this.getVotingMachineOfProposal(proposalId)]\n      .events.proposalStateChanges\n      .filter((proposalStateChange) => {return (proposalId === proposalStateChange.proposalId)});\n  }\n\n  getSchemeRecommendedCalls(schemeAddress): any {\n    const networkContracts = this.context.configStore.getNetworkContracts();\n    const { library } = this.context.providerStore.getActiveWeb3React();\n    const scheme = this.getScheme(schemeAddress);\n    const callPermissions = this.getCache().callPermissions;\n    let assetLimits = {};\n    const from = scheme.controllerAddress == networkContracts.controller ? networkContracts.avatar : schemeAddress;\n    let recommendedCalls = this.context.configStore.getRecommendedCalls();\n\n    Object.keys(callPermissions).map((assetAddress) => {\n      const callAllowance = this.getCallAllowance(assetAddress, from, schemeAddress, ANY_FUNC_SIGNATURE);\n      if (callAllowance.fromTime > 0 && callAllowance.value.lt(MAX_UINT))\n        assetLimits[assetAddress] = callAllowance.value;\n    })\n\n    for (let i = 0; i < recommendedCalls.length; i++) {\n      const callAllowance = this.getCallAllowance(\n        recommendedCalls[i].asset,\n        from,\n        recommendedCalls[i].to,\n        library.eth.abi.encodeFunctionSignature(recommendedCalls[i].functionName)\n      );\n      recommendedCalls[i][\"functionSignature\"] = library.eth.abi.encodeFunctionSignature(recommendedCalls[i].functionName)\n      recommendedCalls[i][\"value\"] = callAllowance.value;\n      recommendedCalls[i][\"fromTime\"] = callAllowance.fromTime;\n    }\n    \n    return { assetLimits, recommendedCalls };\n  }\n  \n  getCallAllowance(asset, from, to, functionSignature): any {\n    const networkContracts = this.context.configStore.getNetworkContracts();\n    const callPermissions = this.getCache().callPermissions;\n  \n    if (to == networkContracts.controller && from != networkContracts.avatar) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (\n      asset == ZERO_ADDRESS\n      && to == networkContracts.permissionRegistry\n      && from == networkContracts.avatar\n    ) {\n      return {\n        value: bnum(0),\n        fromTime: 1\n      };\n    } else if (!callPermissions[asset] || !callPermissions[asset][from]) {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    } else if (callPermissions[asset][from][to] && callPermissions[asset][from][to][functionSignature]) {\n      return {\n        value: callPermissions[asset][from][to][functionSignature].value,\n        fromTime: callPermissions[asset][from][to][functionSignature].fromTime\n      };\n    } else if (callPermissions[asset][from][to] && callPermissions[asset][from][to][ANY_FUNC_SIGNATURE]) {\n      return {\n        value: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].value,\n        fromTime: callPermissions[asset][from][to][ANY_FUNC_SIGNATURE].fromTime\n      };\n    } else if (callPermissions[asset][from][ANY_ADDRESS] && callPermissions[asset][from][ANY_ADDRESS][functionSignature]) {\n      return {\n        value: callPermissions[asset][from][ANY_ADDRESS][functionSignature].value,\n        fromTime: callPermissions[asset][from][ANY_ADDRESS][functionSignature].fromTime\n      };\n    } else if (callPermissions[asset][from][ANY_ADDRESS] && callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE]) {\n      return {\n        value: callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].value,\n        fromTime: callPermissions[asset][from][ANY_ADDRESS][ANY_FUNC_SIGNATURE].fromTime\n      };\n    } else {\n      return {\n        value: bnum(0),\n        fromTime: 0\n      };\n    }\n  }\n  \n  getRepAt(userAddress: string = ZERO_ADDRESS, atBlock: number = 0): {\n    userRep: BigNumber,\n    totalSupply: BigNumber\n  } {\n    const { daoStore, providerStore, configStore } = this.context;\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\n    let userRep = bnum(0), totalSupply = bnum(0);\n    if (atBlock == 0)\n      atBlock = providerStore.getCurrentBlockNumber();\n    const inL2 = configStore.getActiveChainName().indexOf('arbitrum') > -1\n\n    for (let i = 0; i < repEvents.length; i++) {\n      if (repEvents[i][inL2 ? 'l2BlockNumber' : 'l1BlockNumber'] <= atBlock) {\n        if (repEvents[i].event === 'Mint') {\n          totalSupply = totalSupply.plus(repEvents[i].amount)\n          if (repEvents[i].account == userAddress)\n            userRep = userRep.plus(repEvents[i].amount)\n        } else if (repEvents[i].event === 'Burn') {\n          totalSupply = totalSupply.minus(repEvents[i].amount)\n          if (repEvents[i].account == userAddress)\n            userRep = userRep.minus(repEvents[i].amount)\n        }\n      }\n    }\n    return { userRep, totalSupply };\n  }\n    \n  getUsersRep(): {\n    [userAddress: string]: BigNumber\n  } {\n    const { daoStore, providerStore } = this.context;\n    const repEvents = daoStore.getCache().daoInfo.repEvents;\n    let users = {}\n    const atBlock = providerStore.getCurrentBlockNumber();\n\n    for (let i = 0; i < repEvents.length; i++) {\n      if (repEvents[i].l1BlockNumber <= atBlock) {\n        if (repEvents[i].event === 'Mint') {\n          if (!users[repEvents[i].account])\n            users[repEvents[i].account] = repEvents[i].amount;\n          else\n            users[repEvents[i].account] = users[repEvents[i].account].plus(repEvents[i].amount);\n        } else if (repEvents[i].event === 'Burn') {\n          if (users[repEvents[i].account])\n            users[repEvents[i].account] = users[repEvents[i].account].minus(repEvents[i].amount);\n        }\n      }\n    }\n    return users;\n  }\n  \n}\n","import { makeObservable, observable, action } from 'mobx';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport RootContext from '../contexts';\nimport { ContractType } from './Provider';\nimport { BigNumber, bnum } from '../utils';\nimport { executeMulticall } from '../utils/cache';\n\nexport default class UserStore {\n  userInfo: { \n    address: string,\n    ethBalance: BigNumber,\n    repBalance: BigNumber,\n    dxdBalance: BigNumber,\n    dxdApproved: BigNumber,\n    genBalance: BigNumber,\n    genApproved: BigNumber\n  };\n  context: RootContext;\n\n  constructor(context) {\n    this.context = context;\n    this.userInfo = {\n      address: context.providerStore.getActiveWeb3React(),\n      ethBalance: bnum(0),\n      repBalance: bnum(0),\n      dxdBalance: bnum(0),\n      dxdApproved: bnum(0),\n      genBalance: bnum(0),\n      genApproved: bnum(0)\n    };\n    makeObservable(this, {\n        userInfo: observable,\n        update: action\n      }\n    );\n  }\n  \n  getUserInfo() {\n    return this.userInfo;\n  }\n\n  async update(web3React: Web3ReactContextInterface) {\n    const { configStore, providerStore, daoStore, transactionStore } = this.context;\n    const networkContracts = configStore.getNetworkContracts();\n    const account = web3React.account;\n    \n    transactionStore.checkPendingTransactions(web3React, account);\n    let callsToExecute = [[\n      providerStore.getContract(web3React, ContractType.Multicall, networkContracts.utils.multicall),\n      'getEthBalance',\n      [account],\n    ]];\n    \n    if (networkContracts.votingMachines.gen) {\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.gen.token),\n        'balanceOf',\n        [account],\n      ]);\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.gen.token),\n        'allowance',\n        [account, networkContracts.votingMachines.gen.address],\n      ]);\n    }\n    if (networkContracts.votingMachines.dxd) {\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.dxd.token),\n        'balanceOf',\n        [account],\n      ]);\n      callsToExecute.push([\n        providerStore.getContract(web3React, ContractType.ERC20, networkContracts.votingMachines.dxd.token),\n        'allowance',\n        [account, networkContracts.votingMachines.dxd.address],\n      ]);\n    }\n    \n    const callsResponse = await executeMulticall(\n      web3React.library,\n      providerStore.getContract(web3React, ContractType.Multicall, networkContracts.utils.multicall),\n      callsToExecute\n    );\n    \n    let userInfo = this.userInfo;\n    userInfo.repBalance = account && daoStore.daoCache ? daoStore.getRepAt(account, providerStore.getCurrentBlockNumber()).userRep : bnum(0);\n\n    // TO DO: Improve this mess of ifs\n    userInfo.ethBalance = account ? bnum(callsResponse.decodedReturnData[0]) : bnum(0);\n    userInfo.genBalance = (account && networkContracts.votingMachines.gen) ? bnum(callsResponse.decodedReturnData[1]) : bnum(0);\n    userInfo.genApproved = (account && networkContracts.votingMachines.gen) ? bnum(callsResponse.decodedReturnData[2]) : bnum(0);\n    userInfo.dxdBalance = (account && networkContracts.votingMachines.dxd && networkContracts.votingMachines.gen)\n      ? bnum(callsResponse.decodedReturnData[3])\n      : (account && networkContracts.votingMachines.dxd && !networkContracts.votingMachines.gen) \n      ? bnum(callsResponse.decodedReturnData[1])\n      : bnum(0);\n    userInfo.dxdApproved = (account && networkContracts.votingMachines.dxd && networkContracts.votingMachines.gen)\n      ? bnum(callsResponse.decodedReturnData[4])\n      : (account && networkContracts.votingMachines.dxd && !networkContracts.votingMachines.gen) \n      ? bnum(callsResponse.decodedReturnData[2])\n      : bnum(0);\n      \n    this.userInfo = userInfo;\n  }\n  \n}\n","const PermissionRegistry = require(\"./PermissionRegistry\");\nconst DxController = require(\"./DxController\");\nconst DxAvatar = require(\"./DxAvatar\");\nconst DxReputation = require(\"./DxReputation\");\nconst DXDVotingMachine = require(\"./DXDVotingMachine\");\nconst GenesisProtocol = require(\"./GenesisProtocol\");\nconst ERC20 = require(\"./ERC20\");\nconst Multicall = require(\"./Multicall\");\n\nexport const getContracts = async function(networkConfig: NetworkContracts, web3: any) {\n  const avatar = await new web3.eth.Contract(DxAvatar.abi, networkConfig.avatar);\n  const controller = await new web3.eth.Contract(DxController.abi, networkConfig.controller);\n  const reputation = await new web3.eth.Contract(DxReputation.abi, networkConfig.reputation);\n  const permissionRegistry = await new web3.eth.Contract(PermissionRegistry.abi, networkConfig.permissionRegistry);\n  const multicall = await new web3.eth.Contract(Multicall.abi, networkConfig.utils.multicall);\n\n  let votingMachines = {};\n\n  if (networkConfig.votingMachines.gen)\n    votingMachines[networkConfig.votingMachines.gen.address] = {\n      name: \"GenesisProtocol\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen.token)\n    }\n    \n  if (networkConfig.votingMachines.gen2)\n    votingMachines[networkConfig.votingMachines.gen2.address] = {\n      name: \"GenesisProtocol2\",\n      contract: await new web3.eth.Contract(GenesisProtocol.abi, networkConfig.votingMachines.gen2.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.gen2.token)\n    }\n  \n  if (networkConfig.votingMachines.dxd)\n    votingMachines[networkConfig.votingMachines.dxd.address] = {\n      name: \"DXDVotingMachine\",\n      contract: await new web3.eth.Contract(DXDVotingMachine.abi, networkConfig.votingMachines.dxd.address),\n      token: await new web3.eth.Contract(ERC20.abi, networkConfig.votingMachines.dxd.token)\n    }\n  \n  return { votingMachines, avatar, controller, reputation, permissionRegistry, multicall };\n  \n}\n","import axios from 'axios';\nimport {\n  bnum,\n  ZERO_HASH,\n  ZERO_ADDRESS,\n  sleep,\n  decodePermission,\n  decodeSchemeParameters,\n  WalletSchemeProposalState,\n  VotingMachineProposalState\n} from '../utils';\nimport {\n  getEvents,\n  getRawEvents,\n  sortEvents,\n  executeMulticall,\n  isNode,\n  descriptionHashToIPFSHash,\n  ipfsHashToDescriptionHash,\n  getSchemeTypeData\n} from '../utils/cache';\nimport WalletSchemeJSON from '../contracts/WalletScheme.json';\nimport ContributionRewardJSON from '../contracts/ContributionReward.json';\nimport { getContracts } from '../contracts';\n\nexport const getUpdatedCache = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  console.debug('[Cache Update]', fromBlock, toBlock);\n  const networkContracts = await getContracts(networkConfig, web3);\n  \n  (await Promise.all([\n    updateDaoInfo(networkCache, networkContracts, web3),\n    updateReputationEvents(networkCache, networkContracts.reputation, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n  \n  await Promise.all(Object.keys(networkContracts.votingMachines).map(async (votingMachineAddress) => {\n  \n    if (!networkCache.votingMachines[votingMachineAddress])\n      networkCache.votingMachines[votingMachineAddress] = {\n        name: networkContracts.votingMachines[votingMachineAddress].name,\n        events: {\n          votes: [],\n          stakes: [],\n          redeems: [],\n          redeemsRep: [],\n          proposalStateChanges: [],\n          newProposal: []\n        },\n        token: networkContracts.votingMachines[votingMachineAddress].token._address,\n        votingParameters: {}\n      };\n  \n    networkCache = await updateVotingMachine(\n      networkCache,\n      networkContracts.avatar._address,\n      networkContracts.votingMachines[votingMachineAddress].contract,\n      networkContracts.multicall,\n      fromBlock,\n      toBlock,\n      web3\n    );\n  \n  }));\n  \n  networkCache = await updateSchemes(networkCache, networkConfig, fromBlock, toBlock, web3);\n  \n  (await Promise.all([\n    updatePermissionRegistry(networkCache, networkConfig, fromBlock, toBlock, web3),\n    updateProposals(networkCache, networkConfig, fromBlock, toBlock, web3)\n  ])).map((networkCacheUpdated) => {\n    networkCache = networkCacheUpdated;\n  });\n\n  networkCache.l1BlockNumber = Number(toBlock);\n  networkCache.l2BlockNumber = 0;\n  \n  console.debug('Total Proposals', Object.keys(networkCache.proposals).length);\n\n  return networkCache;\n}\n\n// Update the DAOinfo field in cache\nexport const updateDaoInfo = async function (\n  networkCache: DaoNetworkCache, networkContracts: any, web3: any\n): Promise<DaoNetworkCache> {\n  let callsToExecute = [\n    [networkContracts.reputation, \"totalSupply\", []],\n    [networkContracts.multicall, \"getEthBalance\", [networkContracts.avatar._address]]\n  ];\n  const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n  networkCache.daoInfo.address = networkContracts.avatar._address;\n  networkCache.daoInfo.repEvents = !networkCache.daoInfo.repEvents ? [] : networkCache.daoInfo.repEvents;\n  networkCache.daoInfo.totalRep = bnum(callsResponse.decodedReturnData[0]);\n  networkCache.daoInfo.ethBalance = bnum(callsResponse.decodedReturnData[1]);\n  if (!networkCache.daoInfo.tokenBalances)\n    networkCache.daoInfo.tokenBalances = {};\n  return networkCache;\n}\n\n// Get all Mint and Burn reputation events to calculate rep by time off chain\nexport const updateReputationEvents = async function (\n  networkCache: DaoNetworkCache, reputation: any, fromBlock: number, toBlock: number, web3: any\n): Promise<DaoNetworkCache> {\n\n  if (!networkCache.daoInfo.repEvents)\n    networkCache.daoInfo.repEvents = [];\n\n  let reputationEvents = sortEvents( await getEvents(web3, reputation, fromBlock, toBlock, 'allEvents'));\n\n  reputationEvents.map((reputationEvent) => {\n    switch (reputationEvent.event) {\n      case \"Mint\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._to,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n      break;\n      case \"Burn\":\n        networkCache.daoInfo.repEvents.push({\n          event: reputationEvent.event,\n          signature: reputationEvent.signature,\n          address: reputationEvent.address,\n          account: reputationEvent.returnValues._from,\n          amount: bnum(reputationEvent.returnValues._amount),\n          tx: reputationEvent.transactionHash,\n          l1BlockNumber: reputationEvent.l1BlockNumber,\n          l2BlockNumber: reputationEvent.l2BlockNumber,\n          timestamp: reputationEvent.timestamp,\n          transactionIndex: reputationEvent.transactionIndex,\n          logIndex: reputationEvent.logIndex\n        });\n      break;\n    }\n  });\n  \n  return networkCache;\n}\n\n// Update all voting machine information, events, token and voting parameters used.\nexport const updateVotingMachine = async function (\n  networkCache: DaoNetworkCache,\n  avatarAddress: string,\n  votingMachine: any,\n  multicall: any,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n\n  let newVotingMachineEvents = sortEvents(\n    await getEvents(web3, votingMachine, fromBlock, toBlock, 'allEvents')\n  );\n  const votingMachineEventsInCache = networkCache.votingMachines[votingMachine._address].events;\n  const votingMachineParamsHash = [];\n\n  newVotingMachineEvents.map((votingMachineEvent) => {\n    const proposalCreated = votingMachineEventsInCache.newProposal\n      .findIndex(newProposalEvent => votingMachineEvent.returnValues._proposalId == newProposalEvent.proposalId) > -1;\n    \n    if (votingMachineEvent.returnValues._organization == avatarAddress\n      || (votingMachineEvent.event == \"StateChange\" && proposalCreated))\n      switch (votingMachineEvent.event) {\n        case \"NewProposal\":\n          votingMachineEventsInCache.newProposal.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            proposer: votingMachineEvent.returnValues._proposer,\n            paramHash: votingMachineEvent.returnValues._paramsHash,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n          \n        if (votingMachineParamsHash.indexOf(votingMachineEvent.returnValues._paramsHash) < 0)\n          votingMachineParamsHash.push(votingMachineEvent.returnValues._paramsHash);\n        break;\n        case \"StateChange\":\n          votingMachineEventsInCache.proposalStateChanges.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            state: votingMachineEvent.returnValues._proposalState,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"VoteProposal\":\n          \n          const preBoosted = votingMachineEventsInCache.proposalStateChanges\n            .findIndex(i => i.state === \"5\") >= 0;\n\n          votingMachineEventsInCache.votes.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            voter: votingMachineEvent.returnValues._voter,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._reputation,\n            preBoosted: preBoosted,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Stake\":\n        votingMachineEventsInCache.stakes.push({\n          event: votingMachineEvent.event,\n          signature: votingMachineEvent.signature,\n          address: votingMachineEvent.address,\n            staker: votingMachineEvent.returnValues._staker,\n            vote: votingMachineEvent.returnValues._vote,\n            amount: votingMachineEvent.returnValues._amount,\n            amount4Bounty: bnum(\"0\"),\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"Redeem\":\n          votingMachineEventsInCache.redeems.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n        case \"RedeemReputation\":\n          votingMachineEventsInCache.redeemsRep.push({\n            event: votingMachineEvent.event,\n            signature: votingMachineEvent.signature,\n            address: votingMachineEvent.address,\n            beneficiary: votingMachineEvent.returnValues._beneficiary,\n            amount: votingMachineEvent.returnValues._amount,\n            proposalId: votingMachineEvent.returnValues._proposalId,\n            tx: votingMachineEvent.transactionHash,\n            l1BlockNumber: votingMachineEvent.l1BlockNumber,\n            l2BlockNumber: votingMachineEvent.l2BlockNumber,\n            timestamp: votingMachineEvent.timestamp,\n            transactionIndex: votingMachineEvent.transactionIndex,\n            logIndex: votingMachineEvent.logIndex\n          });\n        break;\n      }\n  });\n  \n  const callsToExecute = [];\n  for (let i = 0; i < votingMachineParamsHash.length; i++) {\n    callsToExecute.push([\n      votingMachine,\n      \"parameters\",\n      [votingMachineParamsHash[i]]\n    ]);\n  }\n\n  const callsResponse = await executeMulticall(web3, multicall, callsToExecute);\n\n  for (let i = 0; i < callsResponse.returnData.length; i++) {\n    networkCache.votingMachines[votingMachine._address].votingParameters[ votingMachineParamsHash[i] ] =\n      decodeSchemeParameters(web3.eth.abi.decodeParameters(\n        [\n          {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n          {type: 'uint256', name: 'queuedVotePeriodLimit' },\n          {type: 'uint256', name: 'boostedVotePeriodLimit' },\n          {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n          {type: 'uint256', name: 'thresholdConst' },\n          {type: 'uint256', name: 'limitExponentValue' },\n          {type: 'uint256', name: 'quietEndingPeriod' },\n          {type: 'uint256', name: 'proposingRepReward' },\n          {type: 'uint256', name: 'votersReputationLossRatio' },\n          {type: 'uint256', name: 'minimumDaoBounty' },\n          {type: 'uint256', name: 'daoBountyConst' },\n          {type: 'uint256', name: 'activationTime' }\n        ], callsResponse.returnData[i])\n      );\n    }\n  \n  networkCache.votingMachines[votingMachine._address].events = votingMachineEventsInCache;\n\n  return networkCache;\n}\n\n// Gets all teh events form the permission registry and stores the permissions set.\nexport const updatePermissionRegistry = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  const networkContracts = await getContracts(networkConfig, web3);\n  if (networkContracts.permissionRegistry._address != ZERO_ADDRESS) {\n  \n    let permissionRegistryEvents = sortEvents(\n      await getEvents(web3, networkContracts.permissionRegistry, fromBlock, toBlock, 'allEvents')\n    );\n    permissionRegistryEvents.map((permissionRegistryEvent) => {\n      const eventValues = permissionRegistryEvent.returnValues;\n      \n      if (!networkCache.callPermissions[eventValues.asset])\n        networkCache.callPermissions[eventValues.asset] = {};\n        \n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from])\n        networkCache.callPermissions[eventValues.asset][eventValues.from] = {};\n        \n      if (!networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to])\n        networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to] = {};\n      \n      networkCache.callPermissions[eventValues.asset][eventValues.from][eventValues.to][eventValues.functionSignature] = {\n        value: eventValues.value,\n        fromTime: eventValues.fromTime\n      };\n    });\n  }\n  \n  return networkCache;\n}\n\n// Update all the schemes information\nexport const updateSchemes = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  const networkContracts = await getContracts(networkConfig, web3);\n\n  let controllerEvents = sortEvents(\n    await getEvents(web3, networkContracts.controller, fromBlock, toBlock, 'allEvents')\n  );\n  \n  for (let controllerEventsIndex = 0; controllerEventsIndex < controllerEvents.length; controllerEventsIndex++) {\n    const controllerEvent = controllerEvents[controllerEventsIndex];\n    \n    const schemeAddress = controllerEvent.returnValues._scheme;\n    \n    // Add or update the scheme information, register scheme is used to add and updates scheme parametersHash\n    if (controllerEvent.event == \"RegisterScheme\") {\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      console.debug('Register Scheme event for ', schemeAddress, schemeTypeData.name);\n      \n      let callsToExecute = [\n        [networkContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [networkContracts.controller, \"getSchemePermissions\", [schemeAddress, networkContracts.avatar._address]],\n        [networkContracts.controller, \"getSchemeParameters\", [schemeAddress, networkContracts.avatar._address]]\n      ];\n      \n      if (schemeTypeData.type == 'WalletScheme') {\n        const walletSchemeContract = await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress);\n        callsToExecute.push([walletSchemeContract, \"controllerAddress\", []]);\n        callsToExecute.push([walletSchemeContract, \"schemeName\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxSecondsForExecution\", []]);\n        callsToExecute.push([walletSchemeContract, \"maxRepPercentageChange\", []]);\n      }\n      \n      const callsResponse1 = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const ethBalance = callsResponse1.decodedReturnData[0];\n      \n      const permissions = decodePermission(callsResponse1.decodedReturnData[1]);\n      const paramsHash = schemeTypeData.voteParams\n        ? schemeTypeData.voteParams\n        : callsResponse1.decodedReturnData[2];\n\n      const controllerAddress = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[3]\n        : networkContracts.avatar._address;\n      const schemeName = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[4]\n        : schemeTypeData.name;\n      const maxSecondsForExecution = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[5]\n        : 0;\n      const maxRepPercentageChange = (schemeTypeData.type == 'WalletScheme')\n        ? callsResponse1.decodedReturnData[6]\n        : 0;\n      \n      callsToExecute = [];\n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([\n          votingMachine,\n          \"getBoostedVoteRequiredPercentage\",\n          [schemeAddress, networkContracts.avatar._address, paramsHash]\n        ]);\n      }\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        callsToExecute.push([\n          votingMachine,\n          \"parameters\",\n          [paramsHash]\n        ]);\n      }\n\n      const callsResponse2 = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse2.returnData[0])['0']\n        : 0;\n      \n      if (\n        paramsHash != ZERO_HASH\n        && !networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash]\n      ) {\n        try {\n          networkCache.votingMachines[votingMachine._address].votingParameters[paramsHash] =\n          decodeSchemeParameters(web3.eth.abi.decodeParameters(\n            [\n              {type: 'uint256', name: 'queuedVoteRequiredPercentage' },\n              {type: 'uint256', name: 'queuedVotePeriodLimit' },\n              {type: 'uint256', name: 'boostedVotePeriodLimit' },\n              {type: 'uint256', name: 'preBoostedVotePeriodLimit' },\n              {type: 'uint256', name: 'thresholdConst' },\n              {type: 'uint256', name: 'limitExponentValue' },\n              {type: 'uint256', name: 'quietEndingPeriod' },\n              {type: 'uint256', name: 'proposingRepReward' },\n              {type: 'uint256', name: 'votersReputationLossRatio' },\n              {type: 'uint256', name: 'minimumDaoBounty' },\n              {type: 'uint256', name: 'daoBountyConst' },\n              {type: 'uint256', name: 'activationTime' }\n            ], callsResponse2.returnData[1])\n          );\n        } catch (error) {\n          console.error(\"Error getting parameters configuration for\", schemeTypeData.name);\n        }\n      }\n    \n      if (!networkCache.schemes[schemeAddress]) {\n        networkCache.schemes[schemeAddress] = {\n          address: schemeAddress,\n          registered: true,\n          controllerAddress,\n          name: schemeName,\n          type: schemeTypeData.type,\n          ethBalance: ethBalance,\n          tokenBalances: {},\n          votingMachine: schemeTypeData.votingMachine,\n          paramsHash: paramsHash,\n          permissions,\n          boostedVoteRequiredPercentage,\n          proposalIds: [],\n          boostedProposals: 0,\n          maxSecondsForExecution,\n          maxRepPercentageChange,\n          newProposalEvents: []\n        };\n      } else {\n        networkCache.schemes[schemeAddress].paramsHash = paramsHash;\n        networkCache.schemes[schemeAddress].permissions = permissions;\n        networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n      }\n    \n    // Mark scheme as not registered but save all previous data\n    } else if (\n      controllerEvent.event == \"UnregisterScheme\" && \n      // This condition is added to skip the first scheme added (that is the dao creator account)\n      (controllerEvent.returnValues._sender != schemeAddress)\n    ) {\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      console.debug('Unregister scheme event', schemeAddress, schemeTypeData.name);\n      let callsToExecute = [\n        [networkContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, networkContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n      }\n      const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n      \n      // Update the scheme values a last time\n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].registered = false;\n    }\n    \n  };\n  \n  // Update registered schemes\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    if (networkCache.schemes[schemeAddress].registered) {\n      \n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n      \n      let callsToExecute = [\n        [networkContracts.multicall, \"getEthBalance\", [schemeAddress]],\n        [\n          votingMachine,\n          \"orgBoostedProposalsCnt\", \n          [web3.utils.soliditySha3(schemeAddress, networkContracts.avatar._address)]\n        ]\n      ];\n      \n      if (networkCache.schemes[schemeAddress].type == 'WalletScheme') {\n        callsToExecute.push([\n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"maxSecondsForExecution\", []\n        ]);\n        callsToExecute.push([\n          votingMachine,\n          \"boostedVoteRequiredPercentage\",\n          [web3.utils.soliditySha3(schemeAddress, networkContracts.avatar._address), networkCache.schemes[schemeAddress].paramsHash]\n        ])\n      }\n      const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n      \n      const maxSecondsForExecution = (networkCache.schemes[schemeAddress].type == 'WalletScheme') \n        ? callsResponse.decodedReturnData[2]\n        : 0;\n        \n      const boostedVoteRequiredPercentage = (schemeTypeData.type == 'WalletScheme')\n        ? web3.eth.abi.decodeParameters(['uint256'], callsResponse.returnData[3])['0']\n        : 0;\n      \n      networkCache.schemes[schemeAddress].ethBalance = callsResponse.decodedReturnData[0];\n      networkCache.schemes[schemeAddress].boostedProposals = callsResponse.decodedReturnData[1];\n      networkCache.schemes[schemeAddress].maxSecondsForExecution = maxSecondsForExecution;\n      networkCache.schemes[schemeAddress].boostedVoteRequiredPercentage = boostedVoteRequiredPercentage;\n    }\n\n  }));\n  \n  return networkCache;\n};\n\n// Update all the proposals information\nexport const updateProposals = async function (\n  networkCache: DaoNetworkCache,\n  networkConfig: NetworkContracts,\n  fromBlock: number,\n  toBlock: number,\n  web3: any\n): Promise<DaoNetworkCache> {\n  \n  const networkContracts = await getContracts(networkConfig, web3);\n  const avatarAddress = networkContracts.avatar._address;\n  const avatarAddressEncoded = web3.eth.abi.encodeParameter('address', avatarAddress);\n  \n  // Get new proposals\n  await Promise.all(Object.keys(networkCache.schemes).map(async (schemeAddress) => {\n    \n    const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n    const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n  \n    let schemeEvents = [];\n    for (let i = 0; i < schemeTypeData.newProposalTopics.length; i++) {\n      schemeEvents = schemeEvents.concat(await getRawEvents(\n        web3,\n        schemeAddress,\n        fromBlock,\n        toBlock,\n        schemeTypeData.newProposalTopics[i]\n      ));\n    }\n    \n    console.debug(\"Getting proposals of\", schemeTypeData.name, schemeEvents.length);\n    \n    let schemeEventsBatchs = [];\n    let schemeEventsBatchsIndex = 0;\n    for (var i = 0; i < schemeEvents.length; i += 50)\n      schemeEventsBatchs.push(schemeEvents.slice(i, i + 50));\n    \n    while(schemeEventsBatchsIndex < schemeEventsBatchs.length) {\n      \n      try {\n        console.debug(\"Getting proposals in event batch index\", schemeEventsBatchsIndex, \"in\", schemeTypeData.name,);\n        await Promise.all(schemeEventsBatchs[schemeEventsBatchsIndex].map(async (schemeEvent) => {\n          const proposalId = (schemeEvent.topics[1] == avatarAddressEncoded)\n          ? web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[2])\n          : web3.eth.abi.decodeParameter('bytes32', schemeEvent.topics[1]);\n          // Get all the proposal information from the scheme and voting machine\n          let callsToExecute = [\n            [ \n              votingMachine,\n              \"proposals\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                1] ],\n            [ \n              votingMachine,\n              \"voteStatus\",\n              [proposalId,\n                2] ],\n            [ \n              votingMachine,\n              \"proposalStatus\",\n              [proposalId]\n            ],\n            [ \n              votingMachine,\n              \"getProposalTimes\",\n              [proposalId]\n            ]\n          ];\n\n          if (schemeTypeData.type == 'WalletScheme') {\n            callsToExecute.push([ \n              await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n              \"getOrganizationProposal\", [proposalId]\n            ]);\n          } else if (schemeTypeData.type == 'ContributionReward') {\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 0]\n            ]);\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 1]\n            ]);\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 2]\n            ]);\n            callsToExecute.push([ \n              await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n              \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 3]\n            ]);\n          }\n          \n          const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n          \n          const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n            [\n              {type: 'bytes32', name: 'organizationId' },\n              {type: 'address', name: 'callbacks' },\n              {type: 'uint256', name: 'state' },\n              {type: 'uint256', name: 'winningVote' },\n              {type: 'address', name: 'proposer' },\n              {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n              {type: 'bytes32', name: 'paramsHash' },\n              {type: 'uint256', name: 'daoBountyRemain' },\n              {type: 'uint256', name: 'daoBounty' },\n              {type: 'uint256', name: 'totalStakes' },\n              {type: 'uint256', name: 'confidenceThreshold' },\n              {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n            ],\n            callsResponse.returnData[0]\n          );\n          const positiveVotes = callsResponse.returnData[1];\n          const negativeVotes = callsResponse.returnData[2];\n          \n          const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n            ['uint256','uint256','uint256','uint256'], \n            callsResponse.returnData[3]\n          );\n          const proposalTimes = callsResponse.decodedReturnData[4];\n          \n          let schemeProposalInfo = {\n            to: [],\n            callData: [],\n            value: [],\n            state: WalletSchemeProposalState.Submitted,\n            title: \"\",\n            descriptionHash: \"\",\n            submittedTime: 0\n          };\n          let decodedProposer;\n          let creationLogDecoded;\n          \n          if (schemeTypeData.type == 'WalletScheme') {\n            schemeProposalInfo = web3.eth.abi.decodeParameters(\n                [ \n                  {type: 'address[]', name: 'to' },\n                  {type: 'bytes[]', name: 'callData' },\n                  {type: 'uint256[]', name: 'value' },\n                  {type: 'uint256', name: 'state' },\n                  {type: 'string', name: 'title' },\n                  {type: 'string', name: 'descriptionHash' },\n                  {type: 'uint256', name: 'submittedTime' }\n                ],\n                callsResponse.returnData[5]\n              );\n          } else {\n            if (schemeTypeData.type == 'ContributionReward') {\n              if (\n                callsResponse.decodedReturnData[5] > 0\n                || callsResponse.decodedReturnData[6] > 0\n                || callsResponse.decodedReturnData[7] > 0\n                || callsResponse.decodedReturnData[8] > 0\n              ) {\n                schemeProposalInfo.state = WalletSchemeProposalState.ExecutionSucceded;\n              } else if (votingMachineProposalInfo.state == \"1\" || votingMachineProposalInfo.state == \"2\") {\n                schemeProposalInfo.state = WalletSchemeProposalState.Rejected;\n              } else {\n                schemeProposalInfo.state = WalletSchemeProposalState.Submitted;\n              }\n            }\n            \n            const transactionReceipt = await web3.eth.getTransactionReceipt(schemeEvent.transactionHash);\n            try {\n              schemeTypeData.newProposalTopics.map((newProposalTopic, i) => {\n                transactionReceipt.logs.map((log) => {\n                  if (log.topics[0] == \"0x75b4ff136cc5de5957574c797de3334eb1c141271922b825eb071e0487ba2c5c\") {\n                    decodedProposer = web3.eth.abi.decodeParameters([\n                      { type:'uint256', name: \"_numOfChoices\"},\n                      { type:'address', name: \"_proposer\"},\n                      { type:'bytes32', name: \"_paramsHash\"}\n                    ], log.data)._proposer\n                  }\n                  if (!creationLogDecoded && (log.topics[0] == newProposalTopic[0])) {\n                    creationLogDecoded = web3.eth.abi.decodeParameters(schemeTypeData.creationLogEncoding[i], log.data)\n                    if (creationLogDecoded._descriptionHash.length > 0 && creationLogDecoded._descriptionHash != ZERO_HASH) {\n                      schemeProposalInfo.descriptionHash = ipfsHashToDescriptionHash(creationLogDecoded._descriptionHash);\n                    }\n                  }\n                  \n                })\n              });\n              \n            } catch (error) {\n              console.error('Error on adding content hash from tx', schemeEvent.transactionHash);\n            }\n            \n            if (schemeTypeData.type == 'SchemeRegistrar') {\n              \n              schemeProposalInfo.to = [schemeTypeData.contractToCall];\n              schemeProposalInfo.value = [0];\n              \n              if (creationLogDecoded._parametersHash) {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'registerScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'bytes32', name: '_paramsHash' },\n                      { type: 'bytes4', name: '_permissions' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    creationLogDecoded._parametersHash,\n                    creationLogDecoded._permissions,\n                    avatarAddress\n                  ]\n                )];\n              } else {\n                schemeProposalInfo.callData = [\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'unregisterScheme',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_scheme' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded[\"_scheme \"],\n                    avatarAddress\n                  ]\n                )];\n              }\n              \n            } else if (schemeTypeData.type == \"ContributionReward\") {\n              \n              if (creationLogDecoded._reputationChange > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._reputationChange,\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              } else if (creationLogDecoded._reputationChange < 0) {\n\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'burnReputation',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_from' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    bnum(creationLogDecoded._reputationChange).times(-1),\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[0] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'mintTokens',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amount' },\n                      { type: 'address', name: '_beneficiary' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[0],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[1] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'sendEther',\n                    type: 'function',\n                    inputs: [\n                      { type: 'uint256', name: '_amountInWei' },\n                      { type: 'address', name: '_to' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._rewards[1],\n                    creationLogDecoded._beneficiary,\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n              if (creationLogDecoded._rewards[2] > 0) {\n                schemeProposalInfo.to.push(schemeTypeData.contractToCall);\n                schemeProposalInfo.value.push(0);\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'externalTokenTransfer',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_externalToken' },\n                      { type: 'address', name: '_to' },\n                      { type: 'uint256', name: '_value' },\n                      { type: 'address', name: '_avatar' },\n                    ]\n                  },[\n                    creationLogDecoded._externalToken,\n                    creationLogDecoded._beneficiary,\n                    creationLogDecoded._rewards[2],\n                    avatarAddress\n                  ]\n                ));\n              }\n              \n            } else if (schemeTypeData.type == \"GenericScheme\") {\n              \n              schemeProposalInfo.to = [networkContracts.controller._address];\n              schemeProposalInfo.value = [0];\n              schemeProposalInfo.callData = [\n                web3.eth.abi.encodeFunctionCall({\n                  name: 'genericCall',\n                  type: 'function',\n                  inputs: [\n                    { type: 'address', name: '_contract' },\n                    { type: 'bytes', name: '_data' },\n                    { type: 'address', name: '_avatar' },\n                    { type: 'uint256', name: '_value' },\n                  ]\n                },[\n                  schemeTypeData.contractToCall,\n                  creationLogDecoded._data,\n                  avatarAddress,\n                  creationLogDecoded._value\n                ]\n              )];\n              \n            } else if (schemeTypeData.type == \"GenericMulticall\") {\n              for (let callIndex = 0; callIndex < creationLogDecoded._contractsToCall.length; callIndex++) {\n                schemeProposalInfo.to.push(networkContracts.controller._address);\n                schemeProposalInfo.value.push(0)\n                schemeProposalInfo.callData.push(\n                  web3.eth.abi.encodeFunctionCall({\n                    name: 'genericCall',\n                    type: 'function',\n                    inputs: [\n                      { type: 'address', name: '_contract' },\n                      { type: 'bytes', name: '_data' },\n                      { type: 'address', name: '_avatar' },\n                      { type: 'uint256', name: '_value' },\n                    ]\n                  },[\n                    creationLogDecoded._contractsToCall[callIndex],\n                    creationLogDecoded._callsData[callIndex],\n                    avatarAddress,\n                    creationLogDecoded._values[callIndex],\n                  ]\n                ));\n              }\n              \n            }\n          }\n          \n          networkCache.proposals[proposalId] = {\n            id: proposalId,\n            scheme: schemeAddress,\n            to: schemeProposalInfo.to,\n            title: schemeProposalInfo.title,\n            callData: schemeProposalInfo.callData,\n            values: schemeProposalInfo.value.map((value) => bnum(value)),\n            stateInScheme: Number(schemeProposalInfo.state),\n            stateInVotingMachine: Number(votingMachineProposalInfo.state),\n            descriptionHash: schemeProposalInfo.descriptionHash,\n            creationEvent: {\n              event: schemeEvent.event,\n              signature: schemeEvent.signature,\n              address: schemeEvent.address,\n              tx: schemeEvent.transactionHash,\n              l1BlockNumber: schemeEvent.l1BlockNumber,\n              l2BlockNumber: schemeEvent.l2BlockNumber,\n              timestamp: schemeEvent.timestamp,\n              transactionIndex: schemeEvent.transactionIndex,\n              logIndex: schemeEvent.logIndex\n            },\n            winningVote: votingMachineProposalInfo.winningVote,\n            proposer: decodedProposer ? decodedProposer : votingMachineProposalInfo.proposer,\n            currentBoostedVotePeriodLimit: votingMachineProposalInfo.currentBoostedVotePeriodLimit,\n            paramsHash: votingMachineProposalInfo.paramsHash,\n            daoBountyRemain: bnum(votingMachineProposalInfo.daoBountyRemain),\n            daoBounty: bnum(votingMachineProposalInfo.daoBounty),\n            totalStakes: bnum(votingMachineProposalInfo.totalStakes),\n            confidenceThreshold: votingMachineProposalInfo.confidenceThreshold,\n            secondsFromTimeOutTillExecuteBoosted: votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted,\n            submittedTime: bnum(proposalTimes[0]),\n            boostedPhaseTime: bnum(proposalTimes[1]),\n            preBoostedPhaseTime: bnum(proposalTimes[2]),\n            daoRedeemItsWinnings: votingMachineProposalInfo.daoRedeemItsWinnings,\n            shouldBoost: false,\n            positiveVotes: bnum(positiveVotes),\n            negativeVotes: bnum(negativeVotes),\n            preBoostedPositiveVotes: bnum(proposalStatusWithVotes[0]),\n            preBoostedNegativeVotes: bnum(proposalStatusWithVotes[1]),\n            positiveStakes: bnum(proposalStatusWithVotes[2]),\n            negativeStakes: bnum(proposalStatusWithVotes[3])\n          };\n          \n          networkCache.schemes[schemeAddress].proposalIds.push(proposalId);\n          networkCache.schemes[schemeAddress].newProposalEvents.push({\n            proposalId: proposalId,\n            event: schemeEvent.event,\n            signature: schemeEvent.signature,\n            address: schemeEvent.address,\n            tx: schemeEvent.transactionHash,\n            l1BlockNumber: schemeEvent.l1BlockNumber,\n            l2BlockNumber: schemeEvent.l2BlockNumber,\n            timestamp: schemeEvent.timestamp,\n            transactionIndex: schemeEvent.transactionIndex,\n            logIndex: schemeEvent.logIndex\n          });\n          \n          if (schemeProposalInfo.descriptionHash.length > 1){\n            networkCache.ipfsHashes.push({\n              hash: descriptionHashToIPFSHash(schemeProposalInfo.descriptionHash),\n              type: 'proposal',\n              name: proposalId\n            });\n          }\n          \n        }));\n        \n        schemeEventsBatchsIndex ++;\n      } catch (error) {\n        console.error('Error:',error.message);\n        console.debug('Trying again getting proposal info of schemeEventsBatchs index',schemeEventsBatchsIndex);\n      }\n    }\n    \n  }));\n  \n  let retryIntent = 0;\n  // Update proposals title\n  for (let proposalIndex = 0; proposalIndex < Object.keys(networkCache.proposals).length; proposalIndex++) {\n    const proposal = networkCache.proposals[Object.keys(networkCache.proposals)[proposalIndex]];\n    const ipfsHash = descriptionHashToIPFSHash(proposal.descriptionHash);\n    if (retryIntent > 3) {\n      retryIntent = 0;\n      continue;\n    }\n    if (\n      networkCache.schemes[proposal.scheme].type != \"WalletScheme\"\n      && proposal.descriptionHash && proposal.descriptionHash.length > 0\n      // Try to get title if cache is running in node script or if proposal was submitted in last 100000 blocks\n      && (proposal.title.length == 0\n        && (isNode() || proposal.creationEvent.l1BlockNumber > Number(toBlock) - 100000)\n      )\n    )\n      try {\n        console.debug('Getting title from proposal', proposal.id, proposal.descriptionHash, ipfsHash);\n        const response = await axios.request({\n          url:'https://ipfs.io/ipfs/'+ipfsHash,\n          method: \"GET\",\n          timeout: isNode() ? 5000 : 1000\n        });\n        if (response && response.data && response.data.title) {\n          networkCache.proposals[proposal.id].title = response.data.title;\n        } else {\n          console.error('Couldnt not get title from', proposal.id, ipfsHash);\n        }\n      } catch (error) {\n        console.error('Error getting title from', proposal.id, ipfsHash, 'waiting 2 seconds and trying again..');\n        console.error(error.message);\n        if (error.message == \"Request failed with status code 429\")\n          await sleep(10000);\n        if (isNode()) {\n          proposalIndex --;\n          retryIntent ++;\n          await sleep(1000);\n        }\n      }\n  }\n\n  // Update existent active proposals\n  await Promise.all(Object.keys(networkCache.proposals).map(async (proposalId) => {\n    \n    if ((networkCache.proposals[proposalId].stateInVotingMachine > VotingMachineProposalState.Executed)\n    || (networkCache.proposals[proposalId].stateInScheme == WalletSchemeProposalState.Submitted)) {\n  \n      const schemeAddress = networkCache.proposals[proposalId].scheme;\n      const schemeTypeData = getSchemeTypeData(networkConfig, schemeAddress);\n      const votingMachine = networkContracts.votingMachines[schemeTypeData.votingMachine].contract;\n\n      // Get all the proposal information from the scheme and voting machine\n      let callsToExecute = [\n        [ \n          votingMachine,\n          \"proposals\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 1]\n        ],\n        [ \n          votingMachine,\n          \"voteStatus\",\n          [proposalId, 2]\n        ],\n        [ \n          votingMachine,\n          \"proposalStatus\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"getProposalTimes\",\n          [proposalId]\n        ],\n        [ \n          votingMachine,\n          \"shouldBoost\",\n          [proposalId]\n        ]\n      ];\n  \n      if (schemeTypeData.type == 'WalletScheme') {\n        callsToExecute.push([ \n          await new web3.eth.Contract(WalletSchemeJSON.abi, schemeAddress),\n          \"getOrganizationProposal\", [proposalId]\n        ]);\n      } else if (\n        schemeTypeData.type == 'ContributionReward'\n        && networkCache.proposals[proposalId].stateInVotingMachine == VotingMachineProposalState.Executed\n        && networkCache.proposals[proposalId].stateInScheme == WalletSchemeProposalState.Submitted\n      ) {\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 0]\n        ]);\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 1]\n        ]);\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 2]\n        ]);\n        callsToExecute.push([ \n          await new web3.eth.Contract(ContributionRewardJSON.abi, schemeAddress),\n          \"getRedeemedPeriods\", [proposalId, networkContracts.avatar._address, 3]\n        ]);\n      }\n  \n      const callsResponse = await executeMulticall(web3, networkContracts.multicall, callsToExecute);\n  \n      const votingMachineProposalInfo = web3.eth.abi.decodeParameters(\n        [\n          {type: 'bytes32', name: 'organizationId' },\n          {type: 'address', name: 'callbacks' },\n          {type: 'uint256', name: 'state' },\n          {type: 'uint256', name: 'winningVote' },\n          {type: 'address', name: 'proposer' },\n          {type: 'uint256', name: 'currentBoostedVotePeriodLimit' },\n          {type: 'bytes32', name: 'paramsHash' },\n          {type: 'uint256', name: 'daoBountyRemain' },\n          {type: 'uint256', name: 'daoBounty' },\n          {type: 'uint256', name: 'totalStakes' },\n          {type: 'uint256', name: 'confidenceThreshold' },\n          {type: 'uint256', name: 'secondsFromTimeOutTillExecuteBoosted' }\n        ],\n        callsResponse.returnData[0]\n      );\n      const positiveVotes = callsResponse.returnData[1];\n      const negativeVotes = callsResponse.returnData[2];\n  \n      const proposalStatusWithVotes = web3.eth.abi.decodeParameters(\n        ['uint256','uint256','uint256','uint256'], \n        callsResponse.returnData[3]\n      );\n      const proposalTimes = callsResponse.decodedReturnData[4];\n      const proposalShouldBoost = callsResponse.decodedReturnData[5];\n      \n      if (schemeTypeData.type == 'WalletScheme') {\n        networkCache.proposals[proposalId].stateInScheme = Number(web3.eth.abi.decodeParameters(\n          [ \n            {type: 'address[]', name: 'to' },\n            {type: 'bytes[]', name: 'callData' },\n            {type: 'uint256[]', name: 'value' },\n            {type: 'uint256', name: 'state' },\n            {type: 'string', name: 'title' },\n            {type: 'string', name: 'descriptionHash' },\n            {type: 'uint256', name: 'submittedTime' }\n          ],\n          callsResponse.returnData[6]\n        ).state);\n      } else if (\n        schemeTypeData.type == 'ContributionReward'\n        && networkCache.proposals[proposalId].stateInVotingMachine == VotingMachineProposalState.Executed\n        && networkCache.proposals[proposalId].stateInScheme == WalletSchemeProposalState.Submitted\n      ) {\n        if (schemeTypeData.type == 'ContributionReward') {\n          if (\n            callsResponse.decodedReturnData[6] > 0\n            || callsResponse.decodedReturnData[7] > 0\n            || callsResponse.decodedReturnData[8] > 0\n            || callsResponse.decodedReturnData[9] > 0\n          ) {\n            networkCache.proposals[proposalId].stateInScheme = WalletSchemeProposalState.ExecutionSucceded;\n          } else if (votingMachineProposalInfo.state == \"1\" || votingMachineProposalInfo.state == \"2\") {\n            networkCache.proposals[proposalId].stateInScheme = WalletSchemeProposalState.Rejected;\n          }\n        }\n      } else if (networkCache.proposals[proposalId].stateInVotingMachine == VotingMachineProposalState.Executed) {\n        networkCache.proposals[proposalId].stateInScheme = WalletSchemeProposalState.ExecutionSucceded;\n      }\n  \n      networkCache.proposals[proposalId].stateInVotingMachine = Number(votingMachineProposalInfo.state);\n      networkCache.proposals[proposalId].winningVote = votingMachineProposalInfo.winningVote;\n      networkCache.proposals[proposalId].currentBoostedVotePeriodLimit = votingMachineProposalInfo.currentBoostedVotePeriodLimit;\n      networkCache.proposals[proposalId].daoBountyRemain = bnum(votingMachineProposalInfo.daoBountyRemain);\n      networkCache.proposals[proposalId].daoBounty = bnum(votingMachineProposalInfo.daoBounty);\n      networkCache.proposals[proposalId].totalStakes = bnum(votingMachineProposalInfo.totalStakes);\n      networkCache.proposals[proposalId].confidenceThreshold = votingMachineProposalInfo.confidenceThreshold;\n      networkCache.proposals[proposalId].secondsFromTimeOutTillExecuteBoosted = votingMachineProposalInfo.secondsFromTimeOutTillExecuteBoosted;\n      networkCache.proposals[proposalId].boostedPhaseTime = bnum(proposalTimes[1]);\n      networkCache.proposals[proposalId].preBoostedPhaseTime = bnum(proposalTimes[2]);\n      networkCache.proposals[proposalId].daoRedeemItsWinnings = votingMachineProposalInfo.daoRedeemItsWinnings;\n      networkCache.proposals[proposalId].shouldBoost = proposalShouldBoost;\n      networkCache.proposals[proposalId].positiveVotes = bnum(positiveVotes);\n      networkCache.proposals[proposalId].negativeVotes = bnum(negativeVotes);\n      networkCache.proposals[proposalId].preBoostedPositiveVotes = bnum(proposalStatusWithVotes[0]);\n      networkCache.proposals[proposalId].preBoostedNegativeVotes = bnum(proposalStatusWithVotes[1]);\n      networkCache.proposals[proposalId].positiveStakes = bnum(proposalStatusWithVotes[2]);\n      networkCache.proposals[proposalId].negativeStakes = bnum(proposalStatusWithVotes[3]);\n  \n    }\n  \n  }));\n  \n  return networkCache;\n};\n","import RootContext from '../contexts';\nimport { makeObservable, observable, action } from 'mobx';\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types';\nimport { isChainIdSupported } from '../provider/connectors';\nimport { ContractType } from './Provider';\nimport { bnum } from '../utils';\nimport { getUpdatedCache } from '../cache';\n\nexport default class BlockchainStore {\n  activeFetchLoop: boolean = false;\n  initialLoadComplete: boolean;\n  contractStorage: ContractStorage = {};\n  eventsStorage: EventStorage = {};\n  context: RootContext;\n\n  constructor(context) {\n    this.context = context;\n    makeObservable(this, {\n        activeFetchLoop: observable,\n        initialLoadComplete: observable,\n        updateStore: action,\n        fetchData: action\n      }\n    );\n  }\n\n  reduceMulticall(calls: Call[], results: any, blockNumber: number): CallEntry[] {\n    const { multicallService } = this.context;\n    return calls.map((call, index) => {\n      const value = multicallService.decodeCall(call, results[index]);\n      return {\n        contractType: call.contractType,\n        address: call.address,\n        method: call.method,\n        params: call.params,\n        response: {\n          value: value,\n          lastFetched: blockNumber\n        }\n      };\n    });\n  }\n  \n  async executeAndUpdateMulticall(multicallService){\n    const multicallResponse = await multicallService.executeCalls();\n    this.updateStore(\n      this.reduceMulticall(\n        multicallResponse.calls, multicallResponse.results, multicallResponse.blockNumber\n      ),\n      multicallResponse.blockNumber\n    );\n    multicallService.resetActiveCalls();\n  }\n\n  has(entry: Call): boolean {\n    const params = entry.params ? entry.params : [];\n    return (\n      !!this.contractStorage[entry.contractType] &&\n      !!this.contractStorage[entry.contractType][entry.address] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method] &&\n      !!this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ]\n    );\n  }\n\n  getCachedValue(entry: Call) {\n    if (this.has(entry)) {\n      return this.get(entry).value.toString();\n    } else {\n      return undefined;\n    }\n  }\n  \n  getCachedEvents(address: string, eventName: string) {\n    if (this.eventsStorage[address] && this.eventsStorage[address][eventName])\n      return this.eventsStorage[address][eventName].emitions;\n    else\n      return [];\n  }\n\n  get(entry: Call): CallValue | undefined {\n    if (this.has(entry)) {\n      const params = entry.params ? entry.params : [];\n      return this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n    } else {\n      return undefined;\n    }\n  }\n\n  updateStore(entries: CallEntry[], blockNumber: number) {\n    entries.forEach((entry) => {\n      const params = entry.params ? entry.params : [];\n      if (!this.contractStorage[entry.contractType]) {\n        this.contractStorage[entry.contractType] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address]) {\n        this.contractStorage[entry.contractType][entry.address] = {};\n      }\n\n      if (!this.contractStorage[entry.contractType][entry.address][entry.method]) {\n        this.contractStorage[entry.contractType][entry.address][entry.method] = {};\n      }\n\n      if (\n        !this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ]\n      ) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n\n      const oldEntry = this.contractStorage[entry.contractType][entry.address][entry.method][\n        params.toString()\n      ];\n\n      // Set if never fetched, or if the new data isn't stale\n      if (!oldEntry.lastFetched || (oldEntry.lastFetched && oldEntry.lastFetched <= blockNumber)) {\n        this.contractStorage[entry.contractType][entry.address][entry.method][\n          params.toString()\n        ] = {\n          value: entry.response.value,\n          lastFetched: entry.response.lastFetched,\n        };\n      }\n    });\n  }\n    \n  async fetchData(web3React: Web3ReactContextInterface, reset: boolean) {\n    if (!this.activeFetchLoop || reset\n      && web3React\n      && web3React.active\n      && isChainIdSupported(web3React.chainId)\n    ) {\n      this.initialLoadComplete = (reset) ? false : this.initialLoadComplete;\n      this.activeFetchLoop = true;\n      const { library, chainId } = web3React;\n      const {\n        providerStore,\n        configStore,\n        multicallService,\n        ipfsService,\n        daoStore\n      } = this.context;\n      const networkName = configStore.getActiveChainName();\n      \n      if (!daoStore.getCache()) {\n        console.debug('[IPFS Cache Fetch]', networkName, configStore.getCacheIPFSHash(networkName));\n        daoStore.setCache(\n          daoStore.parseCache(\n            await ipfsService.getContentFromIPFS(configStore.getCacheIPFSHash(networkName))\n          )\n        );\n      }\n      let networkCache = daoStore.getCache();\n\n      const blockNumber = await library.eth.getBlockNumber();\n      const lastCheckedBlockNumber = networkCache.l1BlockNumber;\n\n      if (blockNumber > lastCheckedBlockNumber) {\n        console.debug('[Fetch Loop] Fetch Blockchain Data', blockNumber, chainId);\n        \n        const fromBlock = lastCheckedBlockNumber + 1;\n        const toBlock = blockNumber;\n        const networkContracts = configStore.getNetworkContracts();\n        networkCache = await getUpdatedCache(networkCache, networkContracts, fromBlock, toBlock, library);\n        \n        let tokensBalancesCalls = [];\n        const tokens = configStore.getTokensToFetchPrice();\n        \n        tokens.map((token) => {\n          if (!networkCache.daoInfo.tokenBalances[token.address])\n            tokensBalancesCalls.push({\n              contractType: ContractType.ERC20,\n              address: token.address,\n              method: 'balanceOf',\n              params: [networkContracts.avatar],\n            });\n          Object.keys(networkCache.schemes).map((schemeAddress) => {\n            if (networkCache.schemes[schemeAddress].controllerAddress != networkContracts.controller)\n              tokensBalancesCalls.push({\n                contractType: ContractType.ERC20,\n                address: token.address,\n                method: 'balanceOf',\n                params: [schemeAddress],\n              });\n          })\n        });\n\n        if (tokensBalancesCalls.length > 0)\n          multicallService.addCalls(tokensBalancesCalls);\n        await this.executeAndUpdateMulticall(multicallService);\n        \n        tokensBalancesCalls.map((tokensBalancesCall) => {\n          if (tokensBalancesCall.params[0] == networkContracts.avatar) {\n            networkCache.daoInfo.tokenBalances[tokensBalancesCall.address] =\n              this.context.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          } else {\n            networkCache.schemes[tokensBalancesCall.params[0]].tokenBalances[tokensBalancesCall.address] =\n              this.context.blockchainStore.getCachedValue(tokensBalancesCall) || bnum(0);\n          }\n        });\n        \n        networkCache.l1BlockNumber = toBlock;\n        providerStore.setCurrentBlockNumber(toBlock);\n      }\n      daoStore.setCache(networkCache);\n\n      this.initialLoadComplete = true;\n      this.activeFetchLoop = false;\n    }\n  }\n}\n","import React from 'react';\n\nimport ABIService from '../services/ABIService';\nimport MulticallService from '../services/MulticallService';\nimport DaoService from '../services/DaoService';\nimport EventsService from '../services/EventsService';\nimport IPFSService from '../services/IPFSService';\nimport PinataService from '../services/PinataService';\nimport EtherscanService from '../services/EtherscanService';\nimport CoingeckoService from '../services/CoingeckoService';\n\nimport ProviderStore from '../stores/Provider';\nimport TransactionStore from '../stores/Transaction';\nimport ModalStore from '../stores/Modal';\nimport ConfigStore from '../stores/ConfigStore';\nimport DaoStore from '../stores/DaoStore';\nimport UserStore from '../stores/UserStore';\nimport BlockchainStore from '../stores/BlockchainStore';\n\n/*\nhttps://reactjs.org/docs/context.html#reactcreatecontext\n\nContext provides a way to pass data through the component tree without having to pass props down manually at every level.\n\nIn a typical React application, data is passed top-down (parent to child) via props, but such usage can be cumbersome for certain types of props (e.g. locale preference, UI theme) that are required by many components within an application. Context provides a way to share values like these between components without having to explicitly pass a prop through every level of the tree.\n\nA root single context calss is exported with the services and stores of the dapp.\n\nServices: Contexts that are not use to store data, only to process information in the dapp and fecth information from external protocols and APIs.\nStores: Context that are used to store data and expose them all around the dapp.\n*/\n\nexport default class RootContext {\n\n  providerStore: ProviderStore;\n  transactionStore: TransactionStore;\n  modalStore: ModalStore;\n  configStore: ConfigStore;\n  daoStore: DaoStore;\n  userStore: UserStore;\n  blockchainStore: BlockchainStore;\n  \n  abiService: ABIService;\n  multicallService: MulticallService;\n  daoService: DaoService;\n  eventsService: EventsService;\n  ipfsService: IPFSService;\n  pinataService: PinataService;\n  etherscanService: EtherscanService;\n  coingeckoService: CoingeckoService;\n  \n  constructor() {\n    this.providerStore = new ProviderStore(this);\n    this.transactionStore = new TransactionStore(this);\n    this.modalStore = new ModalStore(this);\n    this.configStore = new ConfigStore(this);\n    this.daoStore = new DaoStore(this);\n    this.userStore = new UserStore(this);\n    this.blockchainStore = new BlockchainStore(this);\n    \n    this.abiService = new ABIService(this);\n    this.multicallService = new MulticallService(this);\n    this.eventsService = new EventsService(this);\n    this.daoService = new DaoService(this);\n    this.ipfsService = new IPFSService(this);\n    this.pinataService = new PinataService(this);\n    this.etherscanService = new EtherscanService(this);\n    this.coingeckoService = new CoingeckoService(this);\n  }\n}\n\nexport const rootContext = React.createContext({\n  context: new RootContext()\n});\n\nexport const useContext = () => React.useContext(rootContext);\n","import { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { web3ContextNames } from 'provider/connectors';\nimport { useEagerConnect, useInactiveListener } from 'provider/providerHooks';\nimport { useContext } from '../../contexts';\nimport { useInterval } from 'utils';\n\nconst BLOKCHAIN_FETCH_INTERVAL = 10000;\n\nconst Web3ReactManager = ({ children }) => {\n  const {\n    context: { providerStore, blockchainStore, userStore, configStore },\n  } = useContext();\n\n  const web3ContextInjected = useWeb3React(web3ContextNames.injected);\n  const {\n    active: networkActive,\n    error: networkError\n  } = web3ContextInjected;\n  \n  if (!providerStore.activeChainId)\n    providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n\n  configStore.loadConfig();\n\n  console.debug('[Web3ReactManager] Start of render', {\n    injected: web3ContextInjected,\n    web3React: providerStore.getActiveWeb3React(),\n  });\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n  \n  let walletInstalled = true;\n  try {\n    // @ts-ignore\n    ethereum.on('chainChanged', (chainId) => {\n      // Handle the new chain.\n      // Correctly handling chain changes can be complicated.\n      // We recommend reloading the page unless you have good reason not to.\n      // providerStore.setWeb3Context(web3ContextNames.injected, web3ContextInjected);\n      // blockchainStore.fetchData(providerStore.getActiveWeb3React(), true);\n      window.location.reload();\n    });\n    \n    // @ts-ignore\n    ethereum.on('accountsChanged', (accounts) => {\n      // Handle the new accounts, or lack thereof.\n      // \"accounts\" will always be an array, but it can be empty.\n      // blockchainStore.fetchData(web3React, false);\n      if (networkActive)\n        userStore.update(providerStore.getActiveWeb3React());\n    });\n    \n  } catch (error) {\n    console.error(error);\n    walletInstalled = false;\n  }\n  \n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager);\n\n  // Fetch user blockchain data on an interval using current params\n  useInterval(\n    async () => {\n      if (networkActive){\n        userStore.update(providerStore.getActiveWeb3React());\n        blockchainStore.fetchData(providerStore.getActiveWeb3React(), false)\n      }\n    }, BLOKCHAIN_FETCH_INTERVAL\n  );\n\n  const BlurWrapper = styled.div`\n      filter: blur(1px);\n  `;\n\n  const OverBlurModal = styled.div`\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n    \n    .connectModalContent {\n      background-color: #fefefe;\n      max-width: 350px;\n      text-align: center;\n      margin: 15% auto;\n      padding: 20px;\n      border-radius: 4px;\n    }\n  `;\n\n  // on page load, do nothing until we've tried to connect to the injected connector\n  if (!triedEager) {\n    console.debug('[Web3ReactManager] Render: Eager load not tried');\n    return null;\n  }\n\n  if (!walletInstalled) {\n    console.debug('[Web3ReactManager] Render: Metamask wallet not installed, showing modal error.');\n    return (\n      <div>\n        <OverBlurModal>\n          <div className=\"connectModalContent\">Metamask wallet not installed</div>\n        </OverBlurModal>\n        <BlurWrapper>\n          {children}\n        </BlurWrapper>\n      </div>\n    );\n  } else if (networkError) {\n    console.debug('[Web3ReactManager] Render: Network error, showing modal error.');\n    return (\n      <div>\n        <OverBlurModal>\n          <div className=\"connectModalContent\">Ups, something broke :(</div>\n        </OverBlurModal>\n        <BlurWrapper>\n          {children}\n        </BlurWrapper>\n      </div>\n    );\n  // If network is not active show blur content\n  } else if(!networkActive) {\n    console.debug('[Web3ReactManager] Render: No active network');\n    return children;\n  } else {\n    console.debug( '[Web3ReactManager] Render: Active network, render children', { networkActive } );\n    return children;\n  }\n\n};\n\nexport default Web3ReactManager;\n","import { useEffect, useState } from 'react';\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { isMobile } from 'react-device-detect';\nimport { injected, web3ContextNames } from 'provider/connectors';\n\n/*  Attempt to connect to & activate injected connector\n    If we're on mobile and have an injected connector, attempt even if not authorized (legacy support)\n    If we tried to connect, or it's active, return true;\n */\nexport function useActiveWeb3React() {\n    return useWeb3ReactCore(web3ContextNames.injected);\n}\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3ReactCore(web3ContextNames.injected);\n\n    const [tried, setTried] = useState(false);\n\n    useEffect(() => {\n        console.debug('[Injected Eager Connect]', injected);\n        injected.isAuthorized().then((isAuthorized) => {\n            console.debug('[Eager Connect] Activate injected if authorized', {\n                isAuthorized,\n            });\n            if (isAuthorized) {\n                activate(injected, undefined, true).catch(() => {\n                    setTried(true);\n                });\n            } else {\n                if (isMobile && window.ethereum) {\n                    activate(injected, undefined, true).catch(() => {\n                        setTried(true);\n                    });\n                } else {\n                    setTried(true);\n                }\n            }\n        });\n    }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\n\n    // if the connection worked, wait until we get confirmation of that to flip the flag\n    useEffect(() => {\n        if (active) {\n            setTried(true);\n        }\n    }, [active]);\n\n    return tried;\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network they're on\n */\nexport function useInactiveListener(suppress = false) {\n    const { active, error, activate } = useWeb3ReactCore(\n        web3ContextNames.injected\n    );\n\n    useEffect(() => {\n        const { ethereum } = window;\n\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleChainChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            const handleAccountsChanged = (accounts) => {\n                if (accounts.length > 0) {\n                    // eat errors\n                    activate(injected, undefined, true).catch(() => {});\n                }\n            };\n\n            const handleNetworkChanged = () => {\n                // eat errors\n                activate(injected, undefined, true).catch(() => {});\n            };\n\n            ethereum.on('chainChanged', handleChainChanged);\n            ethereum.on('networkChanged', handleNetworkChanged);\n            ethereum.on('accountsChanged', handleAccountsChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener('chainChanged', handleChainChanged);\n                    ethereum.removeListener(\n                        'networkChanged',\n                        handleNetworkChanged\n                    );\n                    ethereum.removeListener(\n                        'accountsChanged',\n                        handleAccountsChanged\n                    );\n                }\n            };\n        }\n\n        return () => {};\n    }, [active, error, suppress, activate]);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker === null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType !== null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import { useEffect } from 'react';\nimport {\n    createGlobalStyle,\n    css,\n    ThemeProvider as StyledComponentsThemeProvider,\n} from 'styled-components';\nimport { useContext } from '../contexts';\n\nexport const SUPPORTED_THEMES = {\n    DARK: 'DARK',\n    LIGHT: 'LIGHT',\n};\n\nconst MEDIA_WIDTHS = {\n    upToSmall: 600,\n    upToMedium: 960,\n    upToLarge: 1280,\n};\n\nconst mediaWidthTemplates = Object.keys(MEDIA_WIDTHS).reduce(\n    (accumulator, size) => {\n        accumulator[size] = (...args) => css`\n            @media (max-width: ${MEDIA_WIDTHS[size]}px) {\n                ${css(...args)}\n            }\n        `;\n        return accumulator;\n    },\n    {}\n);\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default function ThemeProvider({ children }) {\n    const {\n        context: { configStore },\n    } = useContext();\n\n    const darkMode = configStore.darkMode;\n\n    useEffect(() => {\n        configStore.setDarkMode(darkMode);\n    }, [configStore, darkMode]);\n    return (\n        <StyledComponentsThemeProvider theme={theme(darkMode)}>\n          {children}\n        </StyledComponentsThemeProvider>\n    );\n}\n\nconst theme = (darkMode) => ({\n    white,\n    black,\n    textColor: darkMode ? white : '#010101',\n    greyText: darkMode ? white : '#6C7284',\n\n    // for setting css on <html>\n    backgroundColor: darkMode ? '#333639' : white,\n    \n    activeButtonBackground: \"#536DFE\",\n\n    modalBackground: darkMode ? 'rgba(0,0,0,0.6)' : 'rgba(0,0,0,0.5)',\n    inputBackground: darkMode ? '#202124' : white,\n    placeholderGray: darkMode ? '#5F5F5F' : '#E1E1E1',\n    shadowColor: darkMode ? '#000' : '#2F80ED',\n    \n    borderStyle: \"rgba(14, 0, 135, 0.1) 0px 2px 10px, rgba(14, 0, 135, 0.05) 0px 12px 32px\",\n\n    // grays\n    concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n    mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n    silverGray: darkMode ? '#737373' : '#C4C4C4',\n    chaliceGray: darkMode ? '#7B7B7B' : '#AEAEAE',\n    doveGray: darkMode ? '#C4C4C4' : '#737373',\n    mineshaftGray: darkMode ? '#E1E1E1' : '#2B2B2B',\n    activeGray: darkMode ? '#292C2F' : '#F7F8FA',\n    buttonOutlineGrey: darkMode ? '#FAFAFA' : '#F2F2F2',\n    tokenRowHover: darkMode ? '#404040' : '#F2F2F2',\n\n    //blacks\n    charcoalBlack: darkMode ? '#F2F2F2' : '#404040',\n    // blues\n    zumthorBlue: darkMode ? '#212529' : '#EBF4FF',\n    // TODO refactor; malibuBlue changed as quick hack to a different color JK 013120\n    malibuBlue: darkMode ? '#E67AEF' : '#4C5480',\n    // TODO refactor; royalBlue changed as quick hack to a different color JK 013120\n    royalBlue: darkMode ? '#DC6BE5' : '#fafafa',\n    loadingBlue: darkMode ? '#e4f0ff' : '#e4f0ff',\n\n    // purples\n    wisteriaPurple: '#DC6BE5',\n    // reds\n    salmonRed: '#FF6871',\n    // orange\n    pizazzOrange: '#FF8F05',\n    // yellows\n    warningYellow: '#FFE270',\n    // body text color\n    bodyText: '#90a4ae',\n    //green\n    connectedGreen: '#27AE60',\n\n    //branded\n    metaMaskOrange: '#E8831D',\n\n    //specific\n    textHover: darkMode ? '#90a4ae' : '#C4C4C4',\n\n    // connect button when loggedout\n    buttonFaded: darkMode ? '#DC6BE5' : '#737373',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n    // css snippets\n    flexColumnNoWrap: css`\n        display: flex;\n        flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n        display: flex;\n        flex-flow: row nowrap;\n    `,\n});\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-size: 16px;\n    font-variant: none;\n    color: ${({ theme }) => theme.textColor};\n    background-color: ${({ theme }) => theme.backgroundColor};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\nimport { DialogContent, DialogOverlay } from '@reach/dialog';\nimport { isMobile } from 'react-device-detect';\nimport '@reach/dialog/styles.css';\n// import { useGesture } from 'react-use-gesture';\n\nconst AnimatedDialogOverlay = animated(DialogOverlay);\nconst WrappedDialogOverlay = ({\n    suppressClassNameWarning,\n    mobile,\n    ...rest\n}) => <AnimatedDialogOverlay {...rest} />;\nconst StyledDialogOverlay = styled(WrappedDialogOverlay).attrs({\n    suppressClassNameWarning: true,\n})`\n    &[data-reach-dialog-overlay] {\n        z-index: 2;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: transparent;\n\n        ${({ mobile }) =>\n            mobile &&\n            css`\n                align-items: flex-end;\n            `}\n\n        &::after {\n            content: '';\n            background-color: ${({ theme }) => theme.modalBackground};\n            opacity: 0.5;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            /* position: absolute; */\n            position: fixed;\n            z-index: -1;\n        }\n    }\n`;\n\nconst FilteredDialogContent = ({\n    minHeight,\n    maxHeight,\n    isOpen,\n    slideInAnimation,\n    mobile,\n    ...rest\n}) => <DialogContent aria-label=\"BCDappModal\" {...rest} />;\nconst StyledDialogContent = styled(FilteredDialogContent)`\n    &[data-reach-dialog-content] {\n        border: 1px solid var(--panel-border);\n        background-color: var(--panel-border);\n        padding: 0px;\n        width: 50vw;\n        max-width: 650px;\n        ${({ maxHeight }) =>\n            maxHeight &&\n            css`\n                max-height: ${maxHeight}vh;\n            `}\n        ${({ minHeight }) =>\n            minHeight &&\n            css`\n                min-height: ${minHeight}vh;\n            `}\n    display: flex;\n        overflow: hidden;\n        border-radius: 10px;\n        ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      max-height: 65vh;\n      margin: 0;\n    `}\n        ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      max-height: 66vh;\n      ${\n          mobile &&\n          css`\n              width: 100vw;\n              border-radius: 20px;\n              border-bottom-left-radius: 0;\n              border-bottom-right-radius: 0;\n          `\n      }\n    `}\n    }\n`;\n\nconst HiddenCloseButton = styled.button`\n    margin: 0;\n    padding: 0;\n    width: 0;\n    height: 0;\n    border: none;\n`;\n\nexport default function Modal({\n    isOpen,\n    onDismiss,\n    minHeight = false,\n    maxHeight = 50,\n    children,\n}) {\n  if (isOpen)\n    return (\n      <StyledDialogOverlay\n        onDismiss={onDismiss}\n        mobile={isMobile}\n      >\n        <StyledDialogContent\n          hidden={true}\n          minHeight={minHeight}\n          maxHeight={maxHeight}\n          isOpen={isOpen}\n          mobile={isMobile}\n        >\n          <HiddenCloseButton onClick={onDismiss} />\n          {children}\n          </StyledDialogContent>\n      </StyledDialogOverlay>\n    )\n  else\n    return <div/>\n}\n","import styled from 'styled-components';\n\nexport const Link = styled.a.attrs({\n    target: '_blank',\n    rel: 'noopener noreferrer',\n})`\n    text-decoration: none;\n    cursor: pointer;\n    color: var(--turquois-text);\n\n    :focus {\n        outline: none;\n        text-decoration: underline;\n    }\n\n    :active {\n        text-decoration: none;\n    }\n`;\n\nexport default Link;\n","var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport { useCopyClipboard } from '../../utils';\n\nimport Link from '../../components/common/Link';\nimport { FiCopy, FiCheckCircle } from \"react-icons/fi\";\n\nconst CopyIcon = styled(Link)`\n  color: ${({ theme }) => theme.silverGray};\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n      text-decoration: none;\n      color: ${({ theme }) => theme.doveGray};\n  }\n`;\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n`;\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard();\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      <TransactionStatusText>\n        {isCopied ? (\n          <FiCheckCircle />\n        ) : (\n          <FiCopy />\n        )}\n      </TransactionStatusText>\n    </CopyIcon>\n  );\n}\n","import styled from 'styled-components';\nimport Copy from '../common/Copy';\nimport { injected } from 'provider/connectors';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { getBlockchainLink } from '../../utils';\n\nimport Link from '../../components/common/Link';\nimport { useContext } from '../../contexts';\n\nconst OptionButton = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    justify-content: center;\n    align-items: center;\n    border-radius: 4px;\n    border: 1px solid var(--active-button-border);\n    background-color: var(--blue-text);\n    color: #FFFFFF;\n    padding: 8px 24px;\n\n    &:hover {\n        cursor: pointer;\n        border: 1px solid var(--blue-onHover-border);\n        background-color: var(--blue-onHover);\n    }\n\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      font-size: 12px;\n    `};\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      padding: 1rem;\n    `};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst InfoCard = styled.div`\n    padding: 1rem;\n    border: 1px solid ${({ theme }) => theme.placeholderGray};\n    border-radius: 20px;\n`;\n\nconst AccountGroupingRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    justify-content: space-between;\n    align-items: center;\n    font-weight: 500;\n    color: ${({ theme }) => theme.textColor};\n\n    div {\n        ${({ theme }) => theme.flexRowNoWrap}\n        align-items: center;\n    }\n\n    &:first-of-type {\n        margin-bottom: 20px;\n    }\n`;\n\nconst AccountSection = styled.div`\n    background-color: var(--panel-background);\n    padding: 0rem 1.5rem;\n    ${({ theme }) =>\n        theme.mediaWidth.upToMedium`padding: 0rem 1rem 1rem 1rem;`};\n`;\n\nconst YourAccount = styled.div`\n    h5 {\n        margin: 0 0 1rem 0;\n        font-weight: 400;\n    }\n\n    h4 {\n        margin: 0;\n        font-weight: 500;\n    }\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-left: 12px;\n        margin-right: 2px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst AccountControl = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    align-items: center;\n    min-width: 0;\n\n    font-weight: 500;\n    font-size: 1rem;\n\n    a:hover {\n        text-decoration: underline;\n    }\n\n    a {\n        min-width: 0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n`;\n\nconst ConnectButtonRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin: 30px;\n`;\n\nconst StyledLink = styled(Link)`\n    color: var(--turquois-text);\n`;\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    right: 1rem;\n    top: 14px;\n    color: var(--header-text);\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\n\nconst WalletAction = styled.div`\n    color: ${({ theme }) => theme.chaliceGray};\n    margin-left: 16px;\n    font-weight: 400;\n    :hover {\n        cursor: pointer;\n        text-decoration: underline;\n    }\n`;\n\ninterface Props {\n    toggleWalletModal: any;\n    openOptions: any;\n}\n\nexport default function AccountDetails(props: Props) {\n    const {\n        toggleWalletModal,\n        openOptions,\n    } = props;\n    const {\n        context: { providerStore, configStore },\n    } = useContext();\n    const { account, connector } = providerStore.getActiveWeb3React();\n\n    const networkName = configStore.getActiveChainName();\n\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor alt={'close icon'} />\n        </CloseIcon>\n        <HeaderRow>Account</HeaderRow>\n        <AccountSection>\n          <YourAccount>\n            <InfoCard>\n              <AccountGroupingRow>\n                <div>\n                  {connector !== injected && (\n                    <WalletAction\n                      onClick={() => {\n                        //@ts-ignore\n                        connector.close();\n                      }}\n                    >\n                        Disconnect\n                    </WalletAction>\n                  )}\n                  <CircleWrapper> <GreenCircle/> </CircleWrapper>\n                </div>\n              </AccountGroupingRow>\n              <AccountGroupingRow>\n                <AccountControl>\n                  <StyledLink href={getBlockchainLink( account, networkName, 'address' )} >\n                    {account} ↗\n                  </StyledLink>\n                  <Copy toCopy={account} />\n                </AccountControl>\n              </AccountGroupingRow>\n            </InfoCard>\n          </YourAccount>\n\n          <ConnectButtonRow>\n            <OptionButton onClick={() => { openOptions(); }} >\n              Connect to a different wallet\n            </OptionButton>\n          </ConnectButtonRow>\n        </AccountSection>\n      </UpperSection>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/metamask.02e3ec27.png\";","import styled from 'styled-components';\nimport { transparentize } from 'polished';\nimport Link from '../../components/common/Link';\nimport metamaskIcon from '../../assets/images/metamask.png';\n\nconst InfoCard = styled.button`\n  background-color: ${({ theme, active }) =>\n      active ? theme.activeGray : theme.backgroundColor};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  : 0 4px 8px 0 ${({ theme, clickable }) =>\n      clickable ? transparentize(0.95, theme.shadowColor) : 'none'};\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.royalBlue};\n  }\n  border-color: ${({ theme, active }) =>\n      active ? 'transparent' : theme.placeholderGray};\n`;\n\nconst OptionCard = styled(InfoCard)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 2rem;\n    padding: 1rem;\n`;\n\nconst OptionCardLeft = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    justify-content: center;\n    height: 100%;\n`;\n\nconst OptionCardClickable = styled(OptionCard)`\n    margin-top: 0;\n    &:hover {\n        cursor: ${({ clickable }) => (clickable ? 'pointer' : '')};\n        border: ${({ clickable, theme }) =>\n            clickable ? `1px solid ${theme.malibuBlue}` : ``};\n    }\n    opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`;\n\nconst GreenCircle = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    justify-content: center;\n    align-items: center;\n\n    &:first-child {\n        height: 8px;\n        width: 8px;\n        margin-right: 8px;\n        background-color: ${({ theme }) => theme.connectedGreen};\n        border-radius: 50%;\n    }\n`;\n\nconst CircleWrapper = styled.div`\n    color: ${({ theme }) => theme.connectedGreen};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst HeaderText = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    color: ${(props) =>\n        props.color === 'blue'\n            ? ({ theme }) => theme.royalBlue\n            : ({ theme }) => theme.textColor};\n    font-size: 1rem;\n    font-weight: 500;\n`;\n\nconst SubHeader = styled.div`\n    color: ${({ theme }) => theme.textColor};\n    margin-top: 10px;\n    font-size: 12px;\n`;\n\nconst IconWrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap};\n    align-items: center;\n    justify-content: center;\n    & > img,\n    span {\n        height: ${({ size }) => (size ? size + 'px' : '24px')};\n        width: ${({ size }) => (size ? size + 'px' : '24px')};\n    }\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\n\nexport default function Option({\n    link = null,\n    clickable = true,\n    size = null,\n    onClick = null,\n    color,\n    header,\n    subheader = null,\n    active = false,\n}) {\n    const content = (\n        <OptionCardClickable\n            onClick={onClick}\n            clickable={clickable && !active}\n            active={active}\n        >\n            <OptionCardLeft>\n                <HeaderText color={color}>\n                    {' '}\n                    {active ? (\n                        <CircleWrapper>\n                            <GreenCircle>\n                                <div />\n                            </GreenCircle>\n                        </CircleWrapper>\n                    ) : (\n                        ''\n                    )}\n                    {header}\n                </HeaderText>\n                {subheader && <SubHeader>{subheader}</SubHeader>}\n            </OptionCardLeft>\n            <IconWrapper size={size} active={active}>\n                {<img src={metamaskIcon} alt={'Icon'} />}\n            </IconWrapper>\n        </OptionCardClickable>\n    );\n    if (link) {\n        return <Link href={link}>{content}</Link>;\n    }\n\n    return content;\n}\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { isMobile } from 'react-device-detect';\nimport { observer } from 'mobx-react';\n\nimport Modal from '../Modal';\nimport AccountDetails from '../AccountDetails';\nimport Option from './Option';\nimport { usePrevious } from 'utils';\nimport Link from '../../components/common/Link';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport { injected, SUPPORTED_WALLETS } from 'provider/connectors';\nimport { useContext } from '../../contexts';\nimport { isChainIdSupported } from '../../provider/connectors';\nimport { useActiveWeb3React } from 'provider/providerHooks';\n\nconst CloseIcon = styled.div`\n    position: absolute;\n    color: var(--header-text);\n    right: 1rem;\n    top: 14px;\n    &:hover {\n        cursor: pointer;\n        opacity: 0.6;\n    }\n`;\n\nconst CloseColor = styled(Close)`\n    path {\n        stroke: ${({ theme }) => theme.chaliceGray};\n    }\n`;\n\nconst Wrapper = styled.div`\n    ${({ theme }) => theme.flexColumnNoWrap}\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    background-color: ${({ theme }) => theme.backgroundColor};\n    border-radius: 10px;\n`;\n\nconst HeaderRow = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap};\n    padding: 1.5rem 1.5rem;\n    font-weight: 500;\n    color: var(--header-text);\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\n\nconst ContentWrapper = styled.div`\n    background-color: var(--panel-background);\n    color: var(--body-text);\n    padding: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst UpperSection = styled.div`\n    position: relative;\n    background-color: var(--panel-background);\n\n    h5 {\n        margin: 0;\n        margin-bottom: 0.5rem;\n        font-size: 1rem;\n        font-weight: 400;\n    }\n\n    h5:last-child {\n        margin-bottom: 0px;\n    }\n\n    h4 {\n        margin-top: 0;\n        font-weight: 500;\n    }\n`;\n\nconst Blurb = styled.div`\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n    justify-content: center;\n    margin-top: 2rem;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\n\nconst OptionGrid = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 10px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\n\nconst HoverText = styled.div`\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nconst WALLET_VIEWS = {\n    OPTIONS: 'options',\n    OPTIONS_SECONDARY: 'options_secondary',\n    ACCOUNT: 'account',\n    PENDING: 'pending',\n};\n\nconst WalletModal = observer(() => {\n  const {\n    context: { modalStore },\n  } = useContext();\n  const { active, connector, error, activate, account, chainId } = useActiveWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [connectionErrorMessage, setConnectionErrorMessage] = useState(false);\n\n  const walletModalOpen = modalStore.walletModalVisible;\n\n  const toggleWalletModal = () => {\n    modalStore.toggleWalletModal();\n  };\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setConnectionErrorMessage(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]);\n      \n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (\n      walletModalOpen &&\n      ((active && !activePrevious) ||\n        (connector && connector !== connectorPrevious && !error))\n    ) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [\n    setWalletView,\n    active,\n    error,\n    connector,\n    walletModalOpen,\n    activePrevious,\n    connectorPrevious,\n  ]);\n\n  const tryActivation = async (connector) => {\n    setWalletView(WALLET_VIEWS.PENDING);\n    activate(connector, undefined, true).catch((e) => {\n      setConnectionErrorMessage(e)\n      console.debug('[Activation Error]', e);\n    });\n  };\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key];\n      // check for mobile options\n      if (isMobile) {\n        if (!window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector &&\n                  !option.href &&\n                  tryActivation(option.connector);\n              }}\n              key={key}\n              active={\n                option.connector &&\n                option.connector === connector\n              }\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n            />\n          );\n        }\n        return null;\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n              />\n            );\n          } else {\n            return null; //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href &&\n                tryActivation(option.connector);\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n          />\n        )\n      );\n    });\n  }\n\n  function getModalContent() {\n    if (connectionErrorMessage) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n          <HeaderRow>\n            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0\n                ? 'Wrong Network'\n                : 'Error connecting'}\n          </HeaderRow>\n          <ContentWrapper>\n            {connectionErrorMessage.toString().indexOf('UnsupportedChainIdError') >= 0 ? (\n              <h5> Please connect to a valid ethereum network. </h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      );\n    }\n    if (\n      account &&\n      !isChainIdSupported(chainId) &&\n      walletView === WALLET_VIEWS.ACCOUNT\n    ) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor alt={'close icon'} />\n          </CloseIcon>\n          <HeaderRow>{'Wrong Network'}</HeaderRow>\n          <ContentWrapper>\n            <h5>\n              Please connect to a valid ethereum network.\n            </h5>\n          </ContentWrapper>\n        </UpperSection>\n      );\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      );\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor alt={'close icon'} />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                  setWalletView(WALLET_VIEWS.ACCOUNT);\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          <OptionGrid>{getOptions()}</OptionGrid>\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span style={{ color: '#90a4ae' }}>\n                New to Ethereum? &nbsp;\n              </span>{' '}\n              <Link href=\"https://ethereum.org/use/#3-what-is-a-wallet-and-which-one-should-i-use\">\n                Learn more about wallets\n              </Link>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={walletModalOpen}\n      onDismiss={toggleWalletModal}\n      minHeight={null}\n      maxHeight={90}\n    >\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  );\n});\n\nexport default WalletModal;\n","import styled from 'styled-components';\n\nexport const Box = styled.div\n`\n  border: 1px solid #E1E3E7;\n  padding: 10px 0px;\n  background: white;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  box-shadow: ${({ theme }) => theme.borderStyle};\n`\n\nexport default Box;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { shortenAddress, toCamelCaseString } from '../../utils';\nimport WalletModal from 'components/WalletModal';\nimport { isChainIdSupported } from 'provider/connectors';\nimport { useContext } from '../../contexts';\nimport Box from '../../components/common/Box';\n\nconst WrongNetworkButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--wrong-network);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst AccountButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n  cursor: pointer;\n`;\n\nconst ConnectButton = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  height: 28px;\n  border-radius: 6px;\n  background: var(--blue-text);\n  color: var(--white);\n  cursor: pointer;\n`;\n\nconst Web3ConnectStatus = observer((props) => {\n    \n    const {\n        context: { modalStore, providerStore, configStore },\n    } = useContext();\n    const {\n        chainId,\n        account,\n        error,\n    } = providerStore.getActiveWeb3React();\n\n    const toggleWalletModal = () => {\n        modalStore.toggleWalletModal();\n    };\n\n    function getWeb3Status() {\n        console.debug('[GetWeb3Status]', {\n            account,\n            chainId: chainId,\n            error,\n        });\n        // Wrong network\n        if (account && chainId && !isChainIdSupported(chainId)) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else if (account) {\n            return (\n              <div style={{display: \"flex\"}}>\n                  <AccountButton onClick={toggleWalletModal}>\n                    {shortenAddress(account)}\n                  </AccountButton>\n                  <AccountButton onClick={toggleWalletModal} style={{fontSize: \"14px\"}}>\n                    {toCamelCaseString(configStore.getActiveChainName())}\n                  </AccountButton>\n              </div>\n            );\n        } else if (error) {\n            return (\n                <WrongNetworkButton onClick={toggleWalletModal}>\n                    Wrong Network\n                </WrongNetworkButton>\n            );\n        } else {\n            return (\n                <ConnectButton\n                    onClick={toggleWalletModal}\n                    active={true}\n                    >\n                    {props.text}\n                </ConnectButton>\n                \n            );\n        }\n    }\n\n    return (\n        <>\n            {getWeb3Status()}\n            <WalletModal\n            />\n        </>\n    );\n});\n\nexport default Web3ConnectStatus;\n","export default __webpack_public_path__ + \"static/media/DXdao.svg\";","import { withRouter } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport Web3ConnectStatus from '../Web3ConnectStatus';\nimport { useContext } from '../../contexts';\nimport { FiSettings, FiUser, FiBarChart2 } from \"react-icons/fi\";\nimport dxdaoIcon from \"assets/images/DXdao.svg\"\nimport Web3 from 'web3';\nimport { bnum } from '../../utils';\nimport Box from '../../components/common/Box';\n\nconst NavWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 20px 0px 0px 0px;\n`;\n\nconst NavSection = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst MenuItem = styled.div`\n  display: flex;\n  align-items: center;\n  color: var(--nav-text-light);\n  font-size: 16px;\n  line-height: 19px;\n  cursor: pointer;\n`;\n\nconst ItemBox = styled(Box)`\n  color: var(--dark-text-gray);\n  padding: 5px 10px;\n  font-weight: 500;\n  font-size: 16px;\n  margin-right: 10px;\n  height: 28px;\n  border-radius: 6px;\n`;\n\nconst Header = observer(() => {\n  const NavItem = withRouter(\n    ({ route, history, children}) => {\n      return ( <div style={{cursor: \"pointer\"}} onClick={() => { history.push(route); }} > {children} </div> );\n    }\n  );\n  \n  const {\n      context: { userStore, providerStore, blockchainStore, configStore, daoStore },\n  } = useContext();\n  \n  const { active, account } = providerStore.getActiveWeb3React();\n\n  if (!active) {\n    return (\n      <NavWrapper>\n        <NavSection>\n          <NavItem route={`/`}>\n            <MenuItem><img alt=\"dxdao\" src={dxdaoIcon}/></MenuItem>\n          </NavItem>\n        </NavSection>\n        <NavSection>\n          <Web3ConnectStatus text=\"Connect Wallet\" />\n          <NavItem route={`/config`}>\n            <a><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n          </NavItem>\n        </NavSection>\n      </NavWrapper>\n    );\n  } else {\n    const networkName = configStore.getActiveChainName();\n    const userInfo = userStore.getUserInfo();\n    const votingMachines = blockchainStore.initialLoadComplete \n      ? configStore.getNetworkContracts().votingMachines\n      : {};\n\n    const dxdBalance = active && userInfo.dxdBalance ?\n      parseFloat(Number(Web3.utils.fromWei(userInfo.dxdBalance.toString())).toFixed(2))\n      : 0;\n    const genBalance = active && userInfo.genBalance ?\n      parseFloat(Number(Web3.utils.fromWei(userInfo.genBalance.toString())).toFixed(2))\n      : 0;\n    const { userRep, totalSupply } = active && blockchainStore.initialLoadComplete ?\n      daoStore.getRepAt(account, providerStore.getCurrentBlockNumber())\n      : { userRep: bnum(0), totalSupply: bnum(0)};\n    const repPercentage = active ? userRep.times(100).div(totalSupply).toFixed(4) : bnum(0);\n\n    return (\n      <NavWrapper>\n        <NavSection>\n          <NavItem route={`/${networkName}/proposals`}>\n            <MenuItem><img alt=\"dxdao\" src={dxdaoIcon}/></MenuItem>\n          </NavItem>\n        </NavSection>\n        { blockchainStore.initialLoadComplete ?\n          <NavSection>\n            {votingMachines.dxd ? <ItemBox> {dxdBalance} DXD </ItemBox> : <div/> }\n            {votingMachines.gen ? <ItemBox> {genBalance} GEN </ItemBox> : <div/> }\n            <ItemBox> {repPercentage.toString()} % REP </ItemBox>\n            <Web3ConnectStatus text=\"Connect Wallet\" />\n            <NavItem route={`/${networkName}/info`}>\n              <a><FiBarChart2 style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n            <NavItem route={`/config`}>\n              <a><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n            <NavItem route={`/${networkName}/user/${account}`}>\n              <a><FiUser style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n          </NavSection>\n        : <NavSection>\n            <Web3ConnectStatus text=\"Connect Wallet\" />\n            <NavItem route={`/config`}>\n              <a><FiSettings style={{margin: \"0px 10px\", color: \"#616161\"}}/></a>\n            </NavItem>\n          </NavSection>\n        }\n      </NavWrapper>\n    );\n  }\n});\n\nexport default Header;\n","import styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst FooterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  padding: 24px 0px 32px;\n  color: var(--footer-text-gray);\n  flex-grow: 1;\n`;\n\nconst LeftFooter = styled.div`\nmargin-top: auto;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst FooterItem = styled.div`\n  a {\n    text-decoration: none;\n    color: var(--footer-text-gray);\n    cursor: pointer;\n  }\n  a:hover {\n    color: var(--text-gray-onHover);\n  }a\n    \n`;\n\nconst FooterDivider = styled.div`\n  background: var(--footer-text-gray);\n  width: 4px;\n  height: 4px;\n  border-radius: 2px;\n  line-height: 24px;\n  margin: 7px;\n`;\n\nconst Footer = () => {\n  let history = useHistory();\n\n  return (\n    <FooterWrapper>\n      <LeftFooter>\n        <FooterItem>\n          <a href=\"https://dxdao.eth.link/#/\" target=\"_blank\" > Website </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/forum')}}  target=\"_self\" > Forum </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote\" target=\"_blank\" > Source Code </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a onClick={() => { history.push('/faq')}} > FAQ </a>\n        </FooterItem>\n        <FooterDivider></FooterDivider>\n        <FooterItem>\n          <a href=\"https://github.com/AugustoL/dxvote/issues/new/choose\" target=\"_blank\" > Submit Issue </a>\n        </FooterItem>\n      </LeftFooter>\n    </FooterWrapper>\n\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from './contexts';\nimport { FiZapOff, FiZap } from \"react-icons/fi\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport Box from './components/common/Box';\n\nconst PageRouterWrapper = styled.div`\n  margin-top: 20px;\n`\n\nconst LoadingBox = styled(Box)`\n  \n .loader {\n    text-align: center;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 18px;\n    color: var(--dark-text-gray);\n    padding: 25px 0px;\n      \n    .svg {\n      height: 30px;\n      width: 30px;\n      margin-bottom: 10px;\n    }\n  }\n`\n\nconst PageRouter = observer(({ children }) => {\n    \n    const {\n        context: { providerStore, blockchainStore, configStore, ipfsService, etherscanService, pinataService, coingeckoService },\n    } = useContext();\n    \n    const history = useHistory();\n    const location = useLocation();\n    const noLoading = ['/faq', '/config', '/forum'];\n    \n    // Start or auth services\n    ipfsService.start();\n    etherscanService.isAuthenticated();\n    pinataService.isAuthenticated();\n\n    const { active: providerActive } = providerStore.getActiveWeb3React();\n    \n    if (noLoading.indexOf(location.pathname) > -1) {\n      return <PageRouterWrapper> {children} </PageRouterWrapper>;\n\n    } else if (!providerActive)\n      return (\n        <PageRouterWrapper>\n          <LoadingBox>\n            <div className=\"loader\"> <FiZapOff/> <br/> Connect to metamask </div>\n          </LoadingBox>\n        </PageRouterWrapper>\n      );\n    else {\n      \n      const networkName = configStore.getActiveChainName();\n      if (location.pathname == \"/\"){\n        history.push(`/${networkName}/proposals`)\n      }\n      \n      if (location.pathname.split('/')[1] && location.pathname.split('/')[1] != networkName) {\n        history.push(`/${networkName}/proposals`)\n      }\n      \n      if (!blockchainStore.initialLoadComplete) {\n        return (\n          <PageRouterWrapper>\n            <LoadingBox>\n              <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n            </LoadingBox>\n          </PageRouterWrapper>\n        );\n      } else {\n        coingeckoService.loadPrices();\n        if (configStore.getLocalConfig().pinOnStart)\n          pinataService.updatePinList();\n        return <PageRouterWrapper> {children} </PageRouterWrapper>;\n      }\n    }\n});\n\nexport default PageRouter;\n","import styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nconst Button = styled.div`\n    background-color: ${({ theme }) => theme.activeButtonBackground};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 10px;\n    margin: 5px;\n`;\n\nconst ButtonWithRouter = withRouter(\n  ({ route, history, children }) => {\n    return (\n      <Button onClick={() => { history.push(route)}} >\n        {children}\n      </Button>\n    );\n  }\n);\nconst ActiveButton = ({ children, onClick = undefined, route = undefined }) => {\n    if (route) {\n      return <ButtonWithRouter route={route}>{children}</ButtonWithRouter>\n    } else {\n      return <Button onClick={onClick}>{children}</Button>;\n    }\n};\n\nexport default ActiveButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\nimport { ZERO_ADDRESS, formatPercentage, normalizeBalance, timeToTimestamp, formatNumberValue } from '../utils';\nimport { FiFeather, FiCheckCircle, FiCheckSquare } from \"react-icons/fi\";\n\nconst ProposalsTableWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst ProposalsFilter = styled.select`\n  background-color: ${(props) => props.color || '#536DFE'};\n  border-radius: 4px;\n  color: white;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 34px;\n  text-align: center;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n  border: 0px;\n`;\n\nconst ProposalsNameFilter = styled.input`\n  background-color: white;\n  border: 1px solid #536DFE;\n  border-radius: 4px;\n  color: #536DFE;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: max-content;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\nconst ProposalTableHeaderActions = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  \n  span {\n    font-size: 20px;\n    padding: 10px 5px 5px 5px;\n  }\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: var(--light-text-gray);\n  padding: 20px 24px 8px 24px;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst TableHeader = styled.div`\n  width: ${(props) => props.width || '25%'};\n  text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n  overflow-y: scroll;\n  height: 350px;\n  \n  h3 {\n    text-align: center;\n    margin-top: 30px;\n    color: var(--dark-text-gray);\n  }\n`;\n\nconst TableRow = styled.div`\n  font-size: 16px;\n  line-height: 18px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-bottom: 1px solid var(--line-gray);\n  padding: 16px 24px;\n  color: var(--dark-text-gray);\n  text-align: right;\n  cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  color: ${(props) => props.color};\n  width: ${(props) => props.width || '25%'};\n  justify-content: ${(props) => props.align};\n  font-weight: ${(props) => props.weight};\n  white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n  overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n  text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst ProposalsPage = observer(() => {\n    const {\n        context: { daoStore, configStore, providerStore },\n    } = useContext();\n\n    const schemes = daoStore.getAllSchemes();\n    const votingMachines = configStore.getNetworkContracts().votingMachines;\n    const [stateFilter, setStateFilter] = React.useState(\"Any Status\");\n    const [schemeFilter, setSchemeFilter] = React.useState(\"All Schemes\");\n    const [titleFilter, setTitleFilter] = React.useState(\"\");\n    const networkName = configStore.getActiveChainName();\n    const { account } = providerStore.getActiveWeb3React();\n    const userEvents = daoStore.getUserEvents(account);\n    \n\n    const allProposals = daoStore.getAllProposals().map((cacheProposal) => {\n      return Object.assign(cacheProposal, daoStore.getProposalStatus(cacheProposal.id));\n    });\n    \n    // First show the proposals that still have an active status in teh boting machine and order them from lower \n    // to higher based on the finish time.\n    // Then show the proposals who finished based on the statte in the voting machine and order them from higher to \n    // lower in the finish time.\n    // This way we show the proposals that will finish soon first and the latest proposals that finished later\n    \n    const sortedProposals = allProposals.filter((proposal) => proposal.stateInVotingMachine  > 2)\n      .sort(function(a, b) { return a.finishTime - b.finishTime; })\n      .concat(\n        allProposals.filter((proposal) => proposal.stateInVotingMachine < 3)\n        .sort(function(a, b) { return b.finishTime - a.finishTime; })\n      );\n    function onStateFilterChange(newValue) { setStateFilter(newValue.target.value) }\n    function onTitleFilterChange(newValue) { setTitleFilter(newValue.target.value) }\n    function onSchemeFilterChange(newValue) { setSchemeFilter(newValue.target.value) }\n    \n    console.debug(\"All Proposals\", allProposals, allProposals.length, daoStore);\n\n    return (\n      <ProposalsTableWrapper>\n        <ProposalTableHeaderActions>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ProposalsNameFilter\n              type=\"text\"\n              placeholder=\"Search by proposal title\"\n              name=\"titleFilter\"\n              id=\"titleFilter\"\n              onChange={onTitleFilterChange}\n            ></ProposalsNameFilter>\n            <ProposalsFilter name=\"stateFilter\" id=\"stateSelector\" onChange={onStateFilterChange}>\n              <option value=\"Any Status\">Any Status</option>\n              <option value=\"Pending Boost\">Pending Boost</option>\n              <option value=\"Pre Boosted\">Pre Boosted</option>\n              <option value=\"Boosted\">Boosted</option>\n              <option value=\"In Queue\">Queue</option>\n              <option value=\"Quiet Ending Period\">Quiet Ending Period</option>\n              <option value=\"Passed\">Passed</option>\n              <option value=\"Pending Execution\">Pending Execution</option>\n              <option value=\"Rejected\">Rejected</option>\n              <option value=\"Executed\">Executed</option>\n              <option value=\"Expired in Queue\">Expired</option>\n            </ProposalsFilter>\n            <ProposalsFilter name=\"schemeFilter\" id=\"schemeSelector\" onChange={onSchemeFilterChange}>\n              <option value=\"All Schemes\">All Schemes</option>\n              {schemes.map((scheme) => {\n                return <option key={scheme.address} value={scheme.address}>{scheme.name}</option>\n              })}\n            </ProposalsFilter>\n          </div>\n\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n            <ActiveButton route={`/${networkName}/new`}>+ New Proposal</ActiveButton>\n          </div>\n        </ProposalTableHeaderActions>\n        <ProposalTableHeaderWrapper>\n          <TableHeader width=\"35%\" align=\"left\"> Title </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Scheme </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Status </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Stakes </TableHeader>\n          <TableHeader width=\"17.5%\" align=\"center\"> Votes  </TableHeader>\n        </ProposalTableHeaderWrapper>\n        { (sortedProposals.length === 0) ?\n          <TableRowsWrapper>\n            <h3>No Proposals Found</h3>\n          </TableRowsWrapper>\n          :\n          <TableRowsWrapper>\n            { sortedProposals.map((proposal, i) => {\n              if (\n                proposal \n                && ((stateFilter == 'Any Status') || (stateFilter != 'Any Status' && proposal.status == stateFilter))\n                && ((titleFilter.length == 0) || ((titleFilter.length > 0) && (proposal.title.indexOf(titleFilter) >= 0)))\n                && ((schemeFilter == 'All Schemes') || (proposal.scheme == schemeFilter))\n              ) {\n                const positiveStake = formatNumberValue(normalizeBalance(proposal.positiveStakes, 18), 1);\n                const negativeStake = formatNumberValue(normalizeBalance(proposal.negativeStakes, 18), 1);\n                const repAtCreation = daoStore.getRepAt(ZERO_ADDRESS, proposal.creationEvent.l1BlockNumber).totalSupply;\n                \n                const positiveVotesPercentage = formatPercentage(\n                  proposal.positiveVotes.div(repAtCreation), 2\n                );\n                const negativeVotesPercentage =  formatPercentage(\n                  proposal.negativeVotes.div(repAtCreation), 2\n                );\n                const timeToBoost = timeToTimestamp(proposal.boostTime);\n                const timeToFinish = timeToTimestamp(proposal.finishTime);\n                \n                const votingMachineTokenName = \n                (votingMachines.gen && daoStore.getVotingMachineOfProposal(proposal.id) == votingMachines.gen.address)\n                ? 'GEN' : 'DXD';\n                \n                const voted = userEvents.votes.findIndex((event) => event.proposalId == proposal.id) > -1;\n                const staked = userEvents.stakes.findIndex((event) => event.proposalId == proposal.id) > -1;\n                const created = userEvents.newProposal.findIndex((event) => event.proposalId == proposal.id) > -1;\n                return (\n                  <Link key={\"proposal\"+i} to={`/${networkName}/proposal/${proposal.id}`} style={{textDecoration: \"none\"}}>\n                    <TableRow>\n                      <TableCell width=\"35%\" align=\"left\" weight='500' wrapText=\"true\">\n                        {created && <FiFeather style={{ minWidth: \"15px\", margin: \"0px 2px\"}}/>}\n                        {voted && <FiCheckCircle style={{ minWidth: \"15px\", margin: \"0px 2px\"}}/>}\n                        {staked && <FiCheckSquare style={{ minWidth: \"15px\", margin: \"0px 2px\"}}/>}\n                        {proposal.title.length > 0 ? proposal.title : proposal.id}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        {daoStore.getCache().schemes[proposal.scheme].name}\n                      </TableCell>\n                      <TableCell width=\"15%\" align=\"center\">\n                        <span style={{textAlign:\"center\"}}>\n                          {proposal.status} <br/>\n                          {(timeToBoost != \"\") ? <small>Boost {timeToBoost} <br/></small> : <span></span>}\n                          {(timeToFinish != \"\") ? <small>Finish {timeToFinish} </small> : <span></span>}\n                          {(proposal.pendingAction == 3) ? <small> Pending Finish Execution </small> : <span></span>}\n                        </span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\" style={{ minWidth: \"15px\", margin: \"0px 2px\"}}> \n                        <span style={{color: \"green\", flex:\"5\", textAlign:\"right\"}}>{positiveStake.toString()} {votingMachineTokenName} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"5\", textAlign:\"left\"}}> {negativeStake.toString()} {votingMachineTokenName}</span>\n                      </TableCell>\n                      <TableCell width=\"17.5%\" align=\"space-evenly\"> \n                        <span style={{color: \"green\", flex:\"3\", textAlign:\"right\"}}>{positiveVotesPercentage} </span>\n                        <span style={{flex:\"1\", textAlign:\"center\"}}>|</span>\n                        <span style={{color: \"red\", flex:\"3\", textAlign:\"left\"}}> {negativeVotesPercentage}</span>\n                      </TableCell>\n                    </TableRow>\n                  </Link>);\n                } else {\n                  return null;\n                }\n              }\n            )}\n          </TableRowsWrapper>\n        }\n      </ProposalsTableWrapper>\n    );\n});\n\nexport default ProposalsPage;\n","import styled from 'styled-components';\nimport { FaQuestionCircle } from \"react-icons/fa\";\n\n\nconst QuestionLink = styled.a`\n\n  color: var(--dark-text-gray);\n  \n  svg {\n    height: 15px;\n  }\n  svg:hover {\n    color: var(--text-gray-onHover);\n  }\n`;\n\nconst QuestionIcon = ({ question }) => {\n  return (\n    <QuestionLink href={\"/#/faq?question=\"+question} target=\"_self\">\n      <FaQuestionCircle> </FaQuestionCircle>\n    </QuestionLink>\n  );\n}\n\nexport default QuestionIcon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport MDEditor, { commands } from '@uiw/react-md-editor';\nimport contentHash from 'content-hash';\nimport { NETWORK_ASSET_SYMBOL } from '../provider/connectors';\n\nimport {\n  ZERO_ADDRESS,\n  ANY_ADDRESS,\n  sleep,\n  bnum,\n  normalizeBalance,\n  TXEvents\n} from '../utils';\n\nconst NewProposalFormWrapper = styled(Box)`\n    width: cacl(100% -40px);\n    display: flex;\n    padding: 10px 10px;\n    justify-content: center;\n    flex-direction: column;\n`;\n\nconst PlaceHolders = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    align-items: center;\n    font-size: 20px;\n    padding-bottom: 0px;\n`\n\nconst TitleInput = styled.div`\n    width: calc(100% - 1px);\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n\n    input {\n      margin-top: 5px;\n      width: 100%;\n      height: 32px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n      padding: 0px 5px;\n    }\n    \n    select {\n      margin-left: 5px;\n      background-color: white;\n      min-width: 150px;\n      height: 34px;\n      margin-top: 5px;\n      border-radius: 3px;\n      border: 1px solid gray;\n    }\n`;\n\nconst TextActions = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: column;\n    margin: 10px 0px;\n    line-height: 30px;\n    \n`;\n\nconst CallRow = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: left;\n    flex-direction: row;\n    margin-bottom: 10px;\n    \n    span {\n      text-align: center;\n      font-family: Roboto;\n      font-style: normal;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      padding: 10px 10px;\n    }\n`;\n\nconst RemoveButton = styled.div`\n    background-color: grey;\n    border: 1px solid black;\n    border-radius: 10px;\n    color: white;\n    height: 25px;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 25px;\n    text-align: center;\n    cursor: pointer;\n    width: max-content;\n    padding: 0px 5px;\n    margin: 5px;\n`;\n\nconst TextInput = styled.input`\n  width: ${(props) => props.width || '25%'};\n  height: 34px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n`;\n\nconst SelectInput = styled.select`\n  width: ${(props) => props.width || '25%'};\n  height: 38px;\n  border-radius: 3px;\n  border: 1px solid gray;\n  margin-right: 5px;\n  background-color: #FFF;\n`;\n\nconst NewProposalPage = observer(() => {\n    const {\n        context: { providerStore, daoStore, configStore, daoService, ipfsService, pinataService },\n    } = useContext();\n    \n    const networkTokens = configStore.getTokensOfNetwork()\n    const schemes = daoStore.getAllSchemes();\n    const networkContracts = configStore.getNetworkContracts();\n    const schemeInLocalStorage = localStorage.getItem('dxvote-newProposal-scheme');\n    const networkAssetSymbol = NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\n\n    const defaultSchemeToUse = schemeInLocalStorage\n      ? schemes.findIndex((scheme) => scheme.address == schemeInLocalStorage)\n      : schemes.findIndex((scheme) => scheme.name == \"MasterWalletScheme\");\n\n    const [schemeToUse, setSchemeToUse] =\n      React.useState(defaultSchemeToUse > -1 ? schemes[defaultSchemeToUse] : schemes[0]);\n    const [titleText, setTitleText] = React.useState(localStorage.getItem('dxvote-newProposal-title') || \"\");\n    const [ipfsHash, setIpfsHash] = React.useState(\"\");\n    const [descriptionText, setDescriptionText] = React.useState(localStorage.getItem('dxvote-newProposal-description') || \"\");\n\n    let callsInStorage = [];\n    try {\n      if (localStorage.getItem('dxvote-newProposal-calls')) {\n        callsInStorage = JSON.parse(localStorage.getItem('dxvote-newProposal-calls'));\n        if (callsInStorage.length > 0 && !callsInStorage[0].dataValues)\n        callsInStorage = callsInStorage\n          .map((callInStorage) => Object.assign(callInStorage, {dataValues: new Array(callInStorage.functionParams.length)}))\n      }\n    } catch (error) {\n      callsInStorage = [];\n    }\n    const [calls, setCalls] = React.useState(callsInStorage);\n    \n    const [contributionRewardCalls, setContributionRewardCalls] = React.useState({\n      beneficiary: \"ZERO_ADDRESS\",\n      repChange: \"0\",\n      ethValue: \"0\",\n      externalToken: ZERO_ADDRESS,\n      tokenValue: \"0\"\n    });\n    \n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n\n    const [submitionState, setSubmitionState] = React.useState(0);\n    // 0 = Proposal Description not uploaded\n    // 1 = Uploading proposal description\n    // 2 = Proposal description uploaded\n    // 3 = Submiting new proposal tx\n    // 4 = Proposal creation tx submited\n    // 5 = Proposal creation tx receipt received\n    \n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    const proposalTemplates = configStore.getProposalTemplates();\n    if (proposalTemplates[0].name != \"Custom\")\n      proposalTemplates.unshift({name: \"Custom\", title: \"\", description: \"\" });\n\n    const {\n      assetLimits: transferLimits, recommendedCalls\n    } = daoStore.getSchemeRecommendedCalls(schemeToUse.address);\n    console.debug(\"[PERMISSIONS]\",schemeToUse, transferLimits, recommendedCalls)\n    \n    let allowedToCall = [];\n    \n    recommendedCalls.map((recommendedCall) => {\n      if((recommendedCall.fromTime > 0)\n        && (allowedToCall.findIndex((allowedPermission) => allowedPermission.value == recommendedCall.to) < 0)\n      ) {\n        allowedToCall.push({ value: recommendedCall.to, name: recommendedCall.toName });\n      }\n    });\n    \n    const callPermissions = daoStore.getCache().callPermissions;\n    if (schemeToUse.type == \"WalletScheme\"\n      && callPermissions[ZERO_ADDRESS]\n      && callPermissions[ZERO_ADDRESS]\n      [schemeToUse.controllerAddress == networkContracts.controller ? networkContracts.avatar : schemeToUse.address]\n      && callPermissions[ZERO_ADDRESS]\n      [schemeToUse.controllerAddress == networkContracts.controller ? networkContracts.avatar : schemeToUse.address]\n      [ANY_ADDRESS]\n    )\n      allowedToCall.push({ value: ANY_ADDRESS, name: \"Custom\" });\n\n    const uploadToIPFS = async function() {\n      if (titleText.length < 10) {\n        setErrorMessage(\"Title has to be at mimimum 10 characters length\");\n      } else if (descriptionText.length == 0) {\n        setErrorMessage(\"Description has to be at mimimum 100 characters length\");\n      } else {\n        setSubmitionState(1);\n        setErrorMessage(\"\");\n        console.log(schemeToUse.type)\n        const bodyTextToUpload = (schemeToUse.type == \"WalletScheme\")\n          ? descriptionText\n          : JSON.stringify({\n              description: descriptionText,\n              title: titleText,\n              tags: [\"dxvote\"],\n              url: \"\"\n            });\n          \n        const hash = await ipfsService.add(bodyTextToUpload);\n        setIpfsHash(hash);\n        \n        if (pinataService.auth) {\n          const pinataPin = await pinataService.pin(hash);\n          console.debug('[PINATA PIN]', pinataPin.data)\n        }\n        const ipfsPin = await ipfsService.pin(hash);\n        console.debug('[IPFS PIN]', ipfsPin)\n        \n        let uploaded = false;\n        while (!uploaded) {\n          const ipfsContent = await ipfsService.getContent(hash);\n          console.debug('[IPFS CONTENT]', ipfsContent);\n          if (ipfsContent == bodyTextToUpload)\n            uploaded = true;\n          await sleep(1000);\n        }\n\n        setSubmitionState(2);\n      }\n    }\n    \n    const createProposal = async function() {\n      console.debug('[RAW PROPOSAL]', titleText, ipfsHash, calls);\n      setSubmitionState(3);\n\n      const { library } = providerStore.getActiveWeb3React();\n      \n      let to = [], data = [], value = [];\n      try {\n        \n        if ((schemeToUse.type != \"ContributionReward\")) {\n          const callToController = (schemeToUse.controllerAddress == networkContracts.controller);\n          \n          to = calls.map((call) => {\n            return callToController ? networkContracts.controller : call.to;\n          });\n\n          data = calls.map((call) => {\n            if (call.to == \"\")\n              return \"\";\n            \n            let callData;\n            \n            if (call.callType == \"simple\") {\n              let callDataFunctionSignature = \"0x0\";\n              let callDataFunctionParamsEncoded = \"\";\n              \n              if (call.functionName.length == 0) {\n                callDataFunctionSignature = \"0x0\";\n              } else {\n                callDataFunctionSignature = library.eth.abi.encodeFunctionSignature(call.functionName)\n              }\n              \n              if (call.dataValues.length > 0) {\n                callDataFunctionParamsEncoded = call.functionParams.length > 0 ? library.eth.abi.encodeParameters(\n                    call.functionParams.map((functionParam) => functionParam.type),\n                    call.dataValues\n                  ).substring(2)\n                  : \"\";\n              }\n              callData = callDataFunctionSignature + callDataFunctionParamsEncoded;\n            } else {\n              callData = call.dataValues[0];\n            }\n            if (callToController && call.to != networkContracts.controller) {\n              return daoService.encodeControllerGenericCall(\n                call.to,\n                callData,\n                call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n                : call.value\n              )\n            } else {\n              return callData;\n            }\n          });\n\n          value = calls.map((call) => {\n            return callToController ? \"0\"\n            : call.callType === \"simple\" ? library.utils.toWei(call.value).toString()\n              : call.value\n          });\n        }\n        \n        const proposalData = (schemeToUse.type == \"ContributionReward\")\n        ? {\n          beneficiary: contributionRewardCalls.beneficiary,\n          reputationChange: normalizeBalance(bnum(contributionRewardCalls.repChange)).toString(),\n          ethValue: contributionRewardCalls.ethValue,\n          externalToken: contributionRewardCalls.externalToken,\n          tokenValue: contributionRewardCalls.tokenValue,\n          descriptionHash: contentHash.fromIpfs(ipfsHash)\n        } : {\n          to, data, value, titleText, descriptionHash: contentHash.fromIpfs(ipfsHash) \n        };\n      \n        console.debug('[PROPOSAL]', schemeToUse.address, proposalData);\n      \n        daoService.createProposal(\n          schemeToUse.address,\n          schemeToUse.type,\n          proposalData,\n        ).on(TXEvents.TX_HASH, (hash) => {\n            console.debug(\"[TX_SUBMITTED]\", hash);\n            setSubmitionState(4);\n            setErrorMessage(\"\");\n          })\n          .on(TXEvents.RECEIPT, (hash) => {\n            console.debug(\"[TX_RECEIPT]\", hash);\n            setSubmitionState(5);\n          })\n          .on(TXEvents.TX_ERROR, (txerror) => {\n            console.error(\"[TX_ERROR]\", txerror);\n            setSubmitionState(2);\n            setErrorMessage(txerror.message);\n          })\n          .on(TXEvents.INVARIANT, (error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          })\n          .catch((error) => {\n            console.error(\"[ERROR]\", error);\n            setSubmitionState(2);\n            setErrorMessage(error.message);\n          });\n      } catch (error) {\n        console.error('[PROPOSAL_ERROR]', error);\n        setSubmitionState(2);\n        setErrorMessage(error.message);\n      }\n      \n    }\n    \n    function onDescriptionChange(newValue) {\n      if (submitionState < 1) {\n        setDescriptionText(newValue);\n        localStorage.setItem('dxvote-newProposal-description', newValue);\n      }\n    }\n    \n    function onTitleChange(newValue) {\n      if (submitionState < 1) {\n        setTitleText(newValue.target.value);\n        localStorage.setItem('dxvote-newProposal-title', newValue.target.value);\n      }\n    }\n    \n    function setCallsInState(calls) {\n      localStorage.setItem('dxvote-newProposal-calls', JSON.stringify(calls));\n      setCalls(calls);\n      forceUpdate();\n    }\n    \n    function setContributionRewardCallsInState(contributionRewardCalls) {\n      setContributionRewardCalls(contributionRewardCalls);\n      forceUpdate();\n    }\n\n    function addCall() {\n      calls.push({\n        callType: schemeToUse.type == \"WalletScheme\" ? \"simple\" : \"advanced\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        dataValues: [],\n        value: \"\"\n      })\n      setCallsInState(calls);\n    };\n    \n    function removeCall(proposalIndex) {\n      calls.splice(proposalIndex, 1);\n      setCallsInState(calls);\n    };\n    \n    function changeCallType(callIndex) {\n      calls[callIndex] = {\n        callType: calls[callIndex].callType === \"simple\" ? \"advanced\" : \"simple\",\n        allowedFunctions: [],\n        to: \"\",\n        data: \"\",\n        functionName: \"\",\n        functionParams: [],\n        dataValues: [],\n        value: \"\"\n      }\n      setCallsInState(calls);\n    };\n    \n    function onToSelectChange(callIndex, toAddress) {\n      console.log(toAddress)\n      if (toAddress == ANY_ADDRESS) {\n        changeCallType(callIndex);\n      } else {\n        calls[callIndex].to = toAddress;\n        calls[callIndex].allowedFunctions = [];\n        calls[callIndex].functionName = \"\";\n        calls[callIndex].functionParams = [];\n        calls[callIndex].dataValues = [];\n        calls[callIndex].value = \"0\";\n        recommendedCalls.map((recommendedCall) => {\n          if (recommendedCall.to == toAddress && recommendedCall.fromTime > 0){\n            calls[callIndex].allowedFunctions.push(recommendedCall);\n          }\n        });\n        if (calls[callIndex].allowedFunctions.length > 0){\n          calls[callIndex].functionName = calls[callIndex].allowedFunctions[0].functionName;\n          calls[callIndex].functionParams = calls[callIndex].allowedFunctions[0].params;\n          calls[callIndex].dataValues = new Array(calls[callIndex].allowedFunctions[0].params.length);\n        }\n        onFunctionSelectChange(callIndex, calls[callIndex].functionName, calls[callIndex].functionParams);\n      }\n    }\n    \n    function onFunctionSelectChange(callIndex, functionName, params) {\n      calls[callIndex].functionName = functionName;\n\n      if (calls[callIndex].callType == \"simple\"){\n        calls[callIndex].functionParams = params;\n        calls[callIndex].dataValues = [];\n        calls[callIndex].dataValues = params.map(() => {return \"\"});\n        calls[callIndex].value = \"0\";\n      } else {\n        calls[callIndex].functionParams = [];\n        calls[callIndex].dataValues = [\"\"];\n        calls[callIndex].value = \"0\";\n      }\n        \n      setCallsInState(calls);\n    }\n    \n    function onFunctionParamsChange(callIndex, event, paramIndex) {\n      calls[callIndex].dataValues[paramIndex] = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onValueChange(callIndex, event) {\n      calls[callIndex].value = event.target.value;\n      setCallsInState(calls);\n    }\n    \n    function onContributionRewardValueChange(key, value) {\n      contributionRewardCalls[key] = value;\n      setContributionRewardCallsInState(contributionRewardCalls);\n    }\n    \n    function onSchemeChange(event) {\n      setSchemeToUse(schemes[event.target.value]);\n      localStorage.setItem('dxvote-newProposal-scheme', schemes[event.target.value].address);\n      calls.splice(0, calls.length);\n      setContributionRewardCalls({\n        beneficiary: \"\",\n        repChange: \"0\",\n        ethValue: \"0\",\n        externalToken: ZERO_ADDRESS,\n        tokenValue: \"0\"\n      })\n      setCallsInState(calls);\n    }\n    \n    function onProposalTemplate(event) {\n      if (proposalTemplates[event.target.value].name != 'Custom') {\n        setTitleText(proposalTemplates[event.target.value].title);\n        setDescriptionText(proposalTemplates[event.target.value].description);\n        calls.splice(0, calls.length);\n        setCallsInState(calls);\n      }\n    }\n    if (calls[0].allowedFunctions.length == 0)\n      onToSelectChange(0, allowedToCall[0].value)\n\n    return (\n      <NewProposalFormWrapper>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n        }}>\n          <PlaceHolders>\n            <span style={{width: \"100%\"}}>Title</span>\n            <span style={{minWidth: \"150px\"}}>Scheme <Question question=\"2\"/></span>\n            <span style={{minWidth: \"150px\"}}>Template</span>\n          </PlaceHolders>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <TitleInput>\n            <input type=\"text\" placeholder=\"Proposal Title\" onChange={onTitleChange} value={titleText}/>\n            <select name=\"scheme\" id=\"schemeSelector\" onChange={onSchemeChange} defaultValue={defaultSchemeToUse}>\n              {schemes.map((scheme, i) =>{\n                if (scheme.type == \"WalletScheme\" || scheme.type == \"ContributionReward\" ||scheme.type == \"GenericMulticall\")\n                  return <option key={scheme.address} value={i}>{scheme.name}</option>\n                else\n                  return null;\n              })}\n            </select>\n            <select name=\"proposalTemplate\" id=\"proposalTemplateSelector\" onChange={onProposalTemplate}>\n              {proposalTemplates.map((template, i) =>{\n                return <option key={\"proposalTemplate\"+i} value={i}>{template.name}</option>\n              })}\n            </select>\n          </TitleInput>\n        </div>\n        {(submitionState < 1) ?\n          <MDEditor\n            value={descriptionText}\n            onChange={onDescriptionChange}\n            preview=\"edit\"\n            height=\"300\"\n            minHeight={300}\n            maxHeight={1000}\n            commands={[\n              commands.bold,\n              commands.italic,\n              commands.strikethrough,\n              commands.hr,\n              commands.title,\n              commands.divider,\n              commands.link,\n              commands.quote,\n              commands.code,\n              commands.image,\n              commands.unorderedListCommand,\n              commands.orderedListCommand,\n              commands.checkedListCommand,\n            ]}\n          />\n          : <div/>\n        }\n        <h2>Description Preview</h2>\n        <MDEditor.Markdown source={descriptionText} style={{\n          backgroundColor: \"white\",\n          borderRadius: \"5px\",\n          border: \"1px solid gray\",\n          padding: \"20px 10px\"\n        }} />\n        {(schemeToUse.type == \"ContributionReward\" || schemeToUse.type == \"GenericMulticall\")\n          || (schemeToUse.type == \"WalletScheme\" && schemeToUse.controllerAddress == networkContracts.controller)\n          ? <h2>Calls executed from the avatar <Question question=\"9\"/></h2>\n          : <h2>Calls executed from the scheme <Question question=\"9\"/></h2>\n        }\n        {Object.keys(transferLimits).map((assetAddress) => {\n          if (assetAddress == ZERO_ADDRESS)\n            return <h3>Transfer limit of {normalizeBalance(transferLimits[assetAddress]).toString()} {networkAssetSymbol}</h3>;\n          else {\n            const token = networkTokens.find(networkToken => networkToken.address == assetAddress);\n            if (token)\n              return <h3>Transfer limit of {normalizeBalance(transferLimits[assetAddress], token.decimals).toString()} {token.symbol}</h3>;\n            else\n              return <h3>Transfer limit {transferLimits[assetAddress].toString()} of asset {assetAddress}</h3>;\n          }\n        })}\n      \n        {(schemeToUse.type == \"ContributionReward\")\n        ? \n        // If scheme to use is Contribution Reward display a different form with less fields\n        <div>\n          <CallRow>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Beneficiary Account</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>REP Change</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>{networkAssetSymbol} Value (in WEI)</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Address of Token</span>\n            <span style={{width: \"20%\", fontSize:\"13px\"}}>Token Amount (in WEI)</span>\n          </CallRow>\n          <CallRow>\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"beneficiary\", event.target.value)}\n              value={contributionRewardCalls.beneficiary}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"repChange\", event.target.value)}\n              value={contributionRewardCalls.repChange}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"ethValue\", event.target.value)}\n              value={contributionRewardCalls.ethValue}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"externalToken\", event.target.value)}\n              value={contributionRewardCalls.externalToken}\n              width=\"50%\"\n            />\n            <TextInput\n              type=\"text\"\n              onChange={(event) => onContributionRewardValueChange(\"tokenValue\", event.target.value)}\n              value={contributionRewardCalls.tokenValue}\n              width=\"50%\"\n            />\n          </CallRow>\n        </div>\n        \n        : \n        // If the scheme is GenericMulticall allow only advanced encoded calls\n        // At last if the scheme used is a Wallet Scheme type allow a complete edition of the calls :)\n          <div>\n            {calls.map((call, i) => \n              <CallRow key={\"call\"+i}>\n                <span>#{i}</span>\n\n                {((schemeToUse.type == \"WalletScheme\") && (call.callType === \"simple\")) ?\n                  <SelectInput\n                    value={calls[i].to}\n                    onChange={(e) => {onToSelectChange(i, e.target.value)}}\n                    width={\"20%\"}\n                  >\n                  {allowedToCall.map((allowedCall, allowedCallIndex) =>{\n                    return (\n                      <option key={\"toCall\"+allowedCallIndex} value={allowedCall.value || \"\"}>\n                        {allowedCall.name}\n                      </option>\n                    );\n                  })}\n                  </SelectInput>\n                  : (schemeToUse.type != \"ContributionReward\") &&\n                  <TextInput\n                    value={calls[i].to || \"\"}\n                    onChange={(e) => {onToSelectChange(i, e.target.value)}}\n                    width={\"20%\"}\n                  />\n                }\n                \n                { call.callType === \"simple\" ?\n                  \n                  <div style={{display: \"flex\", width: call.callType === \"simple\" ? \"60%\" : \"50%\"}}>\n                    <SelectInput\n                      value={calls[i].functionName || \"\"}\n                      onChange={(event) => {\n                        const selectedFunction = calls[i].allowedFunctions.find((allowedFunction) => {\n                          return allowedFunction.functionName == event.target.value\n                        });\n                        onFunctionSelectChange(\n                          i,\n                          event.target.value,\n                          selectedFunction ? selectedFunction.params : \"\"\n                        )\n                      }}\n                      width=\"40%\"\n                    >\n                      {calls[i].allowedFunctions.map((allowedFunc, allowedFuncIndex) =>{\n                        return (\n                          <option key={\"functionToCall\"+allowedFuncIndex} value={allowedFunc.functionName || \"\"}>\n                            {allowedFunc.functionName}\n                          </option>\n                        );\n                      })}\n                    </SelectInput>\n                    \n                    <div style={{display: \"flex\", width: \"100%\", flexDirection: \"column\", paddingRight: \"10px\"}}>\n                      {calls[i].functionParams.length == 0 ?\n                        <TextInput \n                          key={\"functionParam00\"}\n                          disabled\n                          type=\"text\"\n                          placeholder=\"Select address to call and function\"\n                          width=\"100%\"\n                          style={{marginTop: \"0px\"}}\n                        />\n                      : calls[i].functionParams.map((funcParam, funcParamIndex) => {\n                        return (\n                          <TextInput \n                            key={\"functionParam\"+funcParamIndex}\n                            type=\"text\"\n                            onChange={(value) => onFunctionParamsChange(i, value, funcParamIndex)}\n                            value={calls[i].dataValues[funcParamIndex] || \"\"}\n                            placeholder={funcParam.name}\n                            width=\"100%\"\n                            style={{marginTop: funcParamIndex > 0 ? \"5px\": \"0px\"}}\n                          />\n                        );\n                        \n                      })}\n                    </div>\n                  </div>\n                :\n                  <TextInput \n                    type=\"text\"\n                    onChange={(value) => onFunctionParamsChange(i, value, 0)}\n                    value={calls[i].dataValues[0] || \"\"}\n                    placeholder=\"0x...\"\n                    width=\"100%\"\n                  />\n                }\n                \n                <TextInput\n                  type=\"text\"\n                  onChange={(value) => onValueChange(i, value)}\n                  value={calls[i].value || \"\"}\n                  width=\"10%\"\n                  placeholder={calls[i].callType === \"advanced\" ? \"WEI\" : {networkAssetSymbol}}\n                />\n                \n                <RemoveButton onClick={() => {removeCall(i)}}>X</RemoveButton>\n                { schemeToUse.type == \"WalletScheme\"\n                  ? <RemoveButton onClick={() => {changeCallType(i)}}>\n                    {calls[i].callType === \"advanced\" ? \"Simple\" : \"Advanced\"}\n                    </RemoveButton>\n                  : <div/>\n                }\n              </CallRow>\n            )}\n            \n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n              <ActiveButton onClick={addCall}>Add Call</ActiveButton>\n            </div>\n            \n          </div>\n        }\n        \n        {\n          (errorMessage.length > 0) ?\n            <TextActions>\n              <span>\n                {errorMessage}\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        { (submitionState > 1) ?\n            <TextActions>\n              <span>\n                Uploaded to IPFS:\n                  <a href={`https://ipfs.io/ipfs/${ipfsHash}`} target=\"_blank\">https://ipfs.io/ipfs/{ipfsHash}</a>\n                <br/>\n                Check before submitting proposal\n              </span>\n            </TextActions>\n          : <div/>\n        }\n        \n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n          {\n            (submitionState == 0) ?\n              <ActiveButton onClick={uploadToIPFS}> Upload to IPFS </ActiveButton>\n            : (submitionState == 1) ?\n              <ActiveButton> Uploading descritpion to IPFS.. </ActiveButton>\n            : (submitionState == 2) ?\n              <ActiveButton onClick={createProposal}>Submit Proposal</ActiveButton>\n            : (submitionState == 3) ?\n              <ActiveButton>Submiting TX...</ActiveButton>\n            : (submitionState == 4) ?\n              <ActiveButton>Waiting for TX...</ActiveButton>\n            :\n              <ActiveButton route=\"/\">Back to Proposals</ActiveButton>\n          }\n        </div>\n        \n      </NewProposalFormWrapper>\n    );\n});\n\nexport default NewProposalPage;\n","import styled from 'styled-components';\nimport Copy from './Copy';\nimport { getBlockchainLink } from '../../utils';\nimport { useContext } from '../../contexts';\nimport { FiExternalLink } from \"react-icons/fi\";\n\nconst AddressLink = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  a {\n    padding: 2px 5px;\n    font-family: var(--roboto);\n    line-height: 17px;\n    letter-spacing: 0.2px;\n    text-decoration: none;\n    color: inherit;\n  }\n`;\n\nconst BlockchainLink = ({ text, size = 'default', type = 'default', toCopy = false, onlyIcon = false}) => {\n  \n    const {\n        context: { configStore },\n    } = useContext();\n    \n    const networkName = configStore.getActiveChainName();\n\n    function formarText(toFormat) {\n        const start = toFormat.slice(0, 6);\n        const end = toFormat.slice(-4);\n\n        switch (size) {\n          case \"short\":\n            return `${start}..`;\n          case \"long\":\n            return toFormat;\n          default:\n            return `${start}...${end}`;\n        }\n    }\n\n    return (\n        <AddressLink>\n          <a href={getBlockchainLink(text, networkName, type)} target=\"_blank\">{ onlyIcon ? <FiExternalLink/> : formarText(text)}</a>\n          {toCopy ? <Copy toCopy={text} /> : <div/> }\n        </AddressLink>\n    );\n};\n\nexport default BlockchainLink;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useHistory } from \"react-router-dom\";\nimport { useContext } from '../contexts';\nimport { useLocation } from 'react-router-dom';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Box from '../components/common/Box';\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst UserPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        context: { daoStore, configStore },\n    } = useContext();\n    const userAddress = useLocation().pathname.split(\"/\")[3];\n    const userEvents = daoStore.getUserEvents(userAddress);\n    const userInfo = daoStore.getUser(userAddress);\n    const networkName = configStore.getActiveChainName();\n\n    let proposalsToRedeem = [];\n    \n    userEvents.votes.map((vote) => {\n      const proposal = daoStore.getProposal(vote.proposalId);\n      const voteParameters = daoStore.getVotingParametersOfProposal(vote.proposalId);\n      if ((\n        (proposal.stateInVotingMachine == 1) \n        ||\n        (\n          voteParameters.votersReputationLossRatio.toNumber() > 0\n          && vote.timestamp < proposal.boostedPhaseTime.toNumber()\n          && proposal.winningVote == vote.vote\n          && proposal.stateInVotingMachine < 3\n        )\n      ) && (proposalsToRedeem.indexOf(vote.proposalId) < 0)) {\n          proposalsToRedeem.push(vote.proposalId);\n      }\n    })\n    \n    userEvents.stakes.map((stake) => {\n      const proposal = daoStore.getProposal(stake.proposalId);\n      if (proposalsToRedeem.indexOf(stake.proposalId) < 0 && proposal.winningVote == stake.vote)\n        proposalsToRedeem.push(stake.proposalId);\n    });\n    \n    userEvents.redeems.map((redeem) => {\n      if (proposalsToRedeem.indexOf(redeem.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeem.proposalId) , 1);\n    });\n    \n    userEvents.redeemsRep.map((redeemRep) => {\n      if (proposalsToRedeem.indexOf(redeemRep.proposalId) > -1)\n        proposalsToRedeem.splice(proposalsToRedeem.indexOf(redeemRep.proposalId) , 1);\n    });\n\n    return (\n      <Box style={{padding: \"10px 20px\"}}>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        }}>\n          <h2 style={{ display: \"flex\", alignItems:\"center\"}}>\n            User: <BlockchainLink size=\"long\" text={userAddress} toCopy/>\n          </h2>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-between\"\n          }}>\n          </div>\n        </div>\n        \n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {userInfo.repPercentage} % REP\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 1).length} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.votes.filter(vote => vote.vote == 2).length} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {userEvents.newProposal.length} Proposals\n          </InfoBox>\n        </div>\n        \n        <h2> Redeems Left </h2>\n        {proposalsToRedeem.length == 0 ? <span> No redeems left </span> : <div/>}\n        {proposalsToRedeem.map((proposalId, i) => {\n          return(\n            <span\n              key={\"proposalLink\"+i}\n              onClick={() => { history.push(`/${networkName}/proposal/${proposalId}`)}}\n              style={{  \n                padding: \"6px 0px\", cursor: \"pointer\"\n              }}\n            >\n              <span> Proposal {proposalId} </span>\n            </span>\n          );\n        })}\n        \n        <h2> History </h2>\n        {userEvents.history.map((historyEvent, i) => {\n          return(\n            <div key={\"userHistoryEvent\"+i} style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"6px 0px\",\n              borderBottom: i < userEvents.history.length - 1 ? \"1px solid\": \"\"\n            }}>\n              <span> {historyEvent.text} </span> \n              <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n            </div>\n          );\n        })}\n      </Box>\n    );\n});\n\nexport default UserPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport moment from 'moment';\nimport Countdown from 'react-countdown';\nimport { FiPlayCircle, FiFastForward } from \"react-icons/fi\";\nimport MDEditor from '@uiw/react-md-editor';\nimport { useHistory } from \"react-router-dom\";\nimport contentHash from 'content-hash';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport Box from '../components/common/Box';\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\nimport {\n  WalletSchemeProposalState,\n  VotingMachineProposalState,\n  bnum,\n  calculateStakes,\n  formatBalance,\n  denormalizeBalance\n} from '../utils';\n\nconst ProposalInformationWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n`;\n\nconst InfoSidebarBox = styled(Box)`\n  max-width: 400px;\n  min-width: 300px;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  padding: 10px 15px;\n`;\n\nconst ProposalInfoSection = styled.div`\n  max-width: 900px;\n  width: 100%;\n  flex-direction: column;\n  margin-right: 15px;\n`\n\nconst ProposalInfoBox = styled(Box)`\n  max-width: 900px;\n  overflow-wrap: break-word;\n  padding: 20px 15px 10px 15px;\n  justify-content: flex-start;\n  overflow: auto;\n`\n\nconst SidebarDivider = styled.div`\n  border-bottom: 1px solid gray;\n  margin: 5px 10px;\n`;\n\nconst SidebarRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  padding: 5px 0px;\n\n  .timeText {\n    font-size: 20;\n    margin-left: -10px;\n    width:100%;\n    text-align: center;\n    padding-top: 5px;\n  }\n  \n  span {\n    margin-bottom: 5px;\n  }\n`;\n\nconst AmountInput = styled.input`\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  cursor: pointer;\n  width: 60px;\n  padding: 0px 10px;\n  margin: 5px;\n  font-family: var(--roboto);\n`;\n\n\nconst AmountBadge = styled.span`\n    background-color: ${(props) => props.color || 'inherit'};\n    border-radius: 50%;\n    color: white;\n    padding: 2px 6px;\n    text-align: center;\n    margin: 5px;\n`;\n\nconst ActionButton = styled.div`\n    background-color: ${(props) => props.color || '#536DFE'};\n    border-radius: 4px;\n    color: white;\n    height: 34px;\n    width: max-content;\n    letter-spacing: 1px;\n    font-weight: 500;\n    line-height: 34px;\n    text-align: center;\n    cursor: pointer;\n    padding: 0px 10px;\n    margin: 5px;\n    \n    display: flex;\n    align-items: center;\n    \n    svg {\n      margin-right: 4px;\n    }\n`;\n\nconst ProposalPage = observer(() => {\n    let history = useHistory();\n\n    const {\n        context: { providerStore, daoStore, configStore, userStore, daoService, ipfsService },\n    } = useContext();\n\n    const networkContracts = configStore.getNetworkContracts();\n    const votingMachines = networkContracts.votingMachines;\n    const proposalId = useLocation().pathname.split(\"/\")[3];\n    const proposal = daoStore.getProposal(proposalId);\n\n    if (!proposal)\n      history.push('/')\n    \n    const votingMachineUsed = daoStore.getVotingMachineOfProposal(proposalId);\n    const scheme = daoStore.getScheme(proposal.scheme);\n    const { dxdApproved, genApproved } = userStore.getUserInfo(); \n    const { account } = providerStore.getActiveWeb3React();\n    const [stakeAmount, setStakeAmount] = React.useState(100);\n    const [votePercentage, setVotePercentage] = React.useState(0);\n    const [proposalDescription, setProposalDescription] = React.useState(\n      \"## Getting proposal description from IPFS...\"\n    );\n    const [proposalTitle, setProposalTitle] = React.useState(\n      proposal.title.length > 0 ? proposal.title : \"Getting proposal title from IPFS...\"\n    );\n    \n    const votingMachineTokenName = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? 'GEN' : 'DXD';\n    const votingMachineTokenApproved = (votingMachines.gen && (scheme.votingMachine == votingMachines.gen.address))\n      ? genApproved : dxdApproved;\n      \n    const proposalEvents = daoStore.getProposalEvents(proposalId);\n    console.debug(\"[Scheme]\", scheme);\n    \n    let votedAmount = bnum(0);\n    let positiveVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"1\").length;\n    let negativeVotesCount = proposalEvents.votes.filter((vote) => vote.vote.toString() === \"2\").length;\n    let stakedAmount = bnum(0);\n    let positiveStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"1\").length;\n    let negativeStakesCount = proposalEvents.stakes.filter((stake) => stake.vote.toString() === \"2\").length;\n    \n    const {\n      userRep: userRepAtProposalCreation, totalSupply: totalRepAtProposalCreation\n    } = configStore.getActiveChainName().indexOf('arbitrum') > -1 ?\n      daoStore.getRepAt(account, proposal.creationEvent.l2BlockNumber)\n      : daoStore.getRepAt(account, proposal.creationEvent.l1BlockNumber);\n\n    const repPercentageAtCreation = userRepAtProposalCreation.times(100).div(totalRepAtProposalCreation).toFixed(4);\n\n    const {status, boostTime, finishTime, pendingAction} = daoStore.getProposalStatus(proposalId);\n\n    // @ts-ignore\n    try {\n      if (proposalDescription == \"## Getting proposal description from IPFS...\")\n        ipfsService.getContent(contentHash.decode(proposal.descriptionHash)).then((data) => {\n          if (scheme.type == 'WalletScheme') {\n            setProposalDescription(data);\n          } else {\n            setProposalTitle(JSON.parse(data).title);\n            setProposalDescription(JSON.parse(data).description);\n          }\n        });\n    } catch (error) {\n      console.error(\"[IPFS ERROR]\",error);\n      setProposalTitle(\"Error getting proposal title from ipfs\");\n      setProposalDescription(\"Error getting proposal description from IPFS\");\n    }\n    \n    proposalEvents.votes.map((vote) => {\n      if (vote.voter === account) {\n        votedAmount = bnum(vote.amount);\n      };\n    });\n      \n    proposalEvents.stakes.map((stake) => {\n      if (stake.staker === account && stake.vote.toString() == \"1\") {\n        stakedAmount = stakedAmount.plus(stake.amount);\n      } else if (stake.staker === account && stake.vote.toString() == \"2\") {\n        stakedAmount = stakedAmount.minus(stake.amount);\n      }\n    });\n    \n    console.debug(\"[Proposal]\", proposal);\n    console.debug(\"[Proposal events]\", proposalEvents);\n    \n    const executionTimeoutTime = scheme.type == \"WalletScheme\"\n      ? proposal.submittedTime.plus(scheme.maxSecondsForExecution)\n      : bnum(0);\n    \n    let proposalCallTexts = new Array(proposal.to.length);\n    for (var p = 0; p < proposal.to.length; p++) {\n      proposalCallTexts[p] = daoService.decodeWalletSchemeCall(\n        (scheme.type == \"WalletScheme\" && scheme.controllerAddress != networkContracts.controller)\n          ? scheme.address : networkContracts.avatar,\n        proposal.to[p],\n        proposal.callData[p],\n        proposal.values[p]\n      );\n    }\n    \n    const votingParameters = daoStore.getVotingParametersOfProposal(proposalId);\n\n    const canRedeemToken = (proposalEvents.redeems.findIndex((redeem) => redeem.beneficiary === account) < 0)\n      && (stakedAmount.gt('0'));\n\n    const vote = proposalEvents.votes.find((vote) => vote.voter === account);\n    const canRedeemRep = vote\n      ? (proposalEvents.redeemsRep.findIndex((redeemRep) => redeemRep.beneficiary === account) < 0)\n        && (\n          ((votingParameters.votersReputationLossRatio.toNumber() > 0) && (vote.timestamp < proposal.boostedPhaseTime.toNumber()))\n          || (proposal.stateInVotingMachine == 1)\n        )\n      : false;\n\n    const [canRedeem, setCanRedeem] = React.useState(canRedeemToken || canRedeemRep);\n\n    const {recommendedStakeToBoost, recommendedStakeToUnBoost } = calculateStakes(\n      votingParameters.thresholdConst,\n      scheme.boostedProposals,\n      daoStore.getAmountOfProposalsPreBoostedInScheme(scheme.address),\n      proposal.positiveStakes,\n      proposal.negativeStakes,\n    )\n      \n    const boostedVoteRequiredPercentage = scheme.boostedVoteRequiredPercentage / 1000;\n    \n    function onStakeAmountChange(event) {\n      setStakeAmount(event.target.value);\n    }\n    \n    function onVoteValueChange(event) {\n      setVotePercentage(event.target.value < repPercentageAtCreation ? event.target.value : repPercentageAtCreation);\n    }\n    \n    if (Number(repPercentageAtCreation) > 0 && votePercentage === 0) {\n      setVotePercentage(Number(repPercentageAtCreation));\n    }\n    \n    const submitVote = function(decision) {\n      const repAmount = (totalRepAtProposalCreation.times(bnum(votePercentage))).div('100').toFixed(0);\n      daoService.vote(decision, repAmount, proposalId);\n    };\n    \n    const submitStake = function(decision) {\n      daoService.stake(decision, denormalizeBalance(bnum(stakeAmount)).toString(), proposalId);\n    };\n    \n    if (scheme.type == \"ContributionReward\" && networkContracts.daostack.contributionRewardRedeemer) {\n      daoService.redeemContributionRewardCall(\n        networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, account\n      ).then((toRedeemResponse) => {\n        const web3 = providerStore.getActiveWeb3React().library;\n        const toRedeem = web3.eth.abi.decodeParameters([\n          \"uint[3]\", \"uint[2]\", \"bool\", \"uint256\", \"int256\", \"uint256\", \"uint256\", \"uint256\"\n        ],toRedeemResponse)\n        console.debug(\"To Redeem:\",toRedeem);\n        if (\n          (toRedeem[0].findIndex(value => value != \"0\") > -1) || (toRedeem[1].findIndex(value => value != \"0\") > -1)\n          || (toRedeem[4] != 0) || (toRedeem[5] > 0) || (toRedeem[6] > 0) || (toRedeem[7] > 0)\n        ) {\n          setCanRedeem(true)\n        } else {\n          setCanRedeem(false)\n        }\n      });\n    }\n    \n    const redeem = function() {\n      if (scheme.type == \"ContributionReward\" && networkContracts.daostack.contributionRewardRedeemer) {\n        daoService.redeemContributionReward(\n          networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, account\n        );\n      } else {\n        daoService.redeem(proposalId, account);\n      }\n    }\n    \n    const approveVotingMachineToken = function() {\n      daoService.approveVotingMachineToken(votingMachineUsed);\n    };\n    \n    const executeProposal = function() {\n      daoService.execute(proposalId);\n    };\n    \n    const redeemBeneficiary = function() {\n      daoService.redeemContributionReward(\n        networkContracts.daostack.contributionRewardRedeemer, scheme.address, scheme.votingMachine, proposalId, proposal.to[0]\n      );\n    };\n\n    const finishTimeReached = finishTime.toNumber() < moment().unix();\n\n    return (\n      <ProposalInformationWrapper>\n        <ProposalInfoSection>\n          <ProposalInfoBox>\n            <h1 style={{margin: \"0px\"}}> {proposalTitle} </h1>\n            <MDEditor.Markdown source={ proposalDescription } style={{\n              padding: \"20px 10px\",\n              lineBreak: \"anywhere\",\n              whiteSpace: \"pre-line\"\n            }} />\n            {proposal.descriptionHash.length > 0 &&\n              <h3 style={{margin: \"0px\"}}>\n                <small>\n                  IPFS Document: <a target=\"_blank\" href={`https://ipfs.io/ipfs/${contentHash.decode(proposal.descriptionHash)}`}>\n                  ipfs://{contentHash.decode(proposal.descriptionHash)}\n                  </a>\n                </small>\n              </h3>\n            }\n            <h2> Calls  <Question question=\"9\"/></h2>\n            {proposalCallTexts.map((proposalCallText, i) => {\n              return(\n              <div key={\"proposalCallText\"+i}>\n                <span style={{whiteSpace: \"pre-line\"}} dangerouslySetInnerHTML={{ __html: proposalCallText }}/>\n                {i < proposalCallTexts.length - 1 ? <hr/> : <div/>}\n              </div>);\n            })}\n          </ProposalInfoBox>\n          <ProposalInfoBox style={{marginTop: \"15px\"}}>\n            <h1 style={{margin: \"0px\"}}> History </h1>\n            {proposalEvents.history.map((historyEvent, i) => {\n              return(\n                <div key={\"proposalHistoryEvent\"+i} style={{\n                  display: \"flex\", alignItems:\"center\", padding:\"4px 0px\",\n                  borderBottom: i < proposalEvents.history.length - 1 ? \" 1px --medium-gray\": \"\"\n                }}>\n                  <span> {historyEvent.text} </span> \n                  <BlockchainLink type=\"transaction\" size=\"short\" text={historyEvent.event.tx} onlyIcon/>\n                  {i < proposalEvents.history.length - 1 ? <hr/> : <div/>}\n                </div>\n              );\n            })}\n          </ProposalInfoBox>\n        </ProposalInfoSection>\n        <InfoSidebarBox>\n          <h2 style={{margin: \"10px 0px 0px 0px\", textAlign: \"center\"}}>{status} <Question question=\"3\"/></h2>\n          <SidebarRow style={{ margin: \"0px 10px\", flexDirection: \"column\" }}>\n            {(boostTime.toNumber() > moment().unix()) &&\n              <span className=\"timeText\">Boost in <Countdown date={boostTime.toNumber()*1000} /> </span> \n            }\n            {(finishTime.toNumber() > moment().unix()) &&\n              <span className=\"timeText\"> Finish in <Countdown date={finishTime.toNumber()*1000} /> </span>\n            }\n            {((status == \"Pending Execution\") && (executionTimeoutTime.toNumber() > 0)) &&\n              <span className=\"timeText\"> Execution timeout in <Countdown date={executionTimeoutTime.toNumber()*1000} /> </span>\n            }\n          </SidebarRow>\n          { proposal.stateInScheme < 3 ? \n            <SidebarRow style={{flexDirection:\"column\", alignItems:\"center\"}}>\n              {pendingAction == 1 ? \n                <ActionButton color=\"blue\" onClick={executeProposal}><FiFastForward/> Boost </ActionButton>\n              : pendingAction == 2 ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Execute </ActionButton>\n              : pendingAction == 3 ?\n                <ActionButton color=\"blue\" onClick={executeProposal}><FiPlayCircle/> Finish </ActionButton>\n              : pendingAction == 4 &&\n                <ActionButton color=\"blue\" onClick={redeemBeneficiary}><FiPlayCircle/> Redeem 4 Beneficiary </ActionButton>\n              }\n            </SidebarRow>\n            : <div/>\n          }\n          \n          <SidebarDivider/> \n\n          <SidebarRow style={{ margin: \"0px 10px\", padding: \"10px 0px\", flexDirection: \"column\" }}>\n            <span style={{ display: \"flex\", height: \"17px \"}}>\n              <strong>Proposer</strong> <small><BlockchainLink type=\"user\" text={proposal.proposer} toCopy/></small>\n            </span>\n            <span> <strong>Scheme</strong> <small>{scheme.name}</small></span>\n            <span><strong>State in Voting Machine </strong>\n              <small>{VotingMachineProposalState[proposal.stateInVotingMachine]}</small>\n            </span>\n            <span><strong>State in Scheme </strong>\n              <small>{WalletSchemeProposalState[proposal.stateInScheme]}</small>\n            </span>\n            <span> <strong>Submitted Date</strong> <small>{\n              moment.unix(proposal.submittedTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            <span> <strong>Boost Date</strong> <small>{\n              boostTime.toNumber() > 0 ?\n                moment.unix(boostTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n              : \"-\"\n            }</small> </span>\n            <span> <strong>Finish Date</strong> <small>{\n              moment.unix(finishTime.toNumber()).format(\"MMMM Do YYYY, h:mm:ss\")\n            }</small> </span>\n            \n            { (boostedVoteRequiredPercentage > 0) ?\n              <span> <strong> Required Boosted Vote: </strong> <small>{boostedVoteRequiredPercentage}%</small> </span>\n              : <div/>\n            }\n          </SidebarRow>\n          \n          <SidebarDivider/> \n        \n          <SidebarRow>\n            <strong>Votes <Question question=\"4\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}> \n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveVotesCount}</AmountBadge>\n              {proposal.positiveVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <br/> \n              {proposalEvents.votes && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`voteUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n                    </small>\n                  );\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {proposal.negativeVotes.times(\"100\").div(totalRepAtProposalCreation).toFixed(2)} %\n              <AmountBadge color=\"red\">{negativeVotesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.votes.map(function(voteEvent, i){\n                if (voteEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`voteDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={voteEvent.voter}/>\n                      {bnum(voteEvent.amount).times(\"100\").div(totalRepAtProposalCreation).toNumber().toFixed(2)} %\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {Number(repPercentageAtCreation) > 0\n            ? <small>{repPercentageAtCreation} % REP at proposal creation</small>\n            : <div/>\n          }\n          \n          { (\n              ((proposal.stateInVotingMachine == 3) || (proposal.stateInVotingMachine == 4))\n              && (votingParameters.votersReputationLossRatio.toNumber() > 0)\n              && (finishTime.toNumber() > 0)\n            ) ? <small>Voter REP Loss Ratio: {votingParameters.votersReputationLossRatio.toString()}%</small>\n            : <div/> \n          }\n          \n          {!finishTimeReached && votedAmount.toNumber() === 0 && Number(repPercentageAtCreation) > 0 && proposal.stateInVotingMachine >= 3 ?\n            <SidebarRow>\n              \n              <AmountInput\n                type=\"number\"\n                placeholder=\"REP\"\n                name=\"votePercentage\"\n                max={repPercentageAtCreation}\n                value={votePercentage}\n                min=\"0\"\n                step={votePercentage > 10 ? \"1\" : votePercentage > 1 ? \"0.01\" : votePercentage > 0.1 ? \"0.001\" : \"0.00001\"}\n                id=\"votePercentage\"\n                onChange={onVoteValueChange}\n                style={{flex: 2}}\n              />\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitVote(1)}><FiThumbsUp /></ActionButton>\n              <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitVote(2)}><FiThumbsDown /></ActionButton>\n              \n            </SidebarRow>\n          : votedAmount.toNumber() !== 0 ?\n            <SidebarRow>\n              Already voted {(votedAmount.toNumber() > 0) ? \"for\" : \"against\"} with { (votedAmount.times(\"100\").div(totalRepAtProposalCreation)).toFixed(2)} % REP\n            </SidebarRow>\n          : <div/>\n          }\n          \n          <SidebarDivider/> \n          \n          <SidebarRow>\n            <strong>Stakes <Question question=\"5\"/></strong>\n          </SidebarRow>\n          <SidebarRow style={{ margin: \"0px 10px\" }}>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"green\"}}>\n              <AmountBadge color=\"green\">{positiveStakesCount}</AmountBadge>\n              {formatBalance(proposal.positiveStakes).toString()} {votingMachineTokenName}\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"1\")\n                  return (\n                    <small color=\"green\" key={`stakeUp${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(bnum(stakeEvent.amount)).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n            <span style={{width: \"50%\", textAlign:\"center\", color: \"red\"}}>\n              {formatBalance(proposal.negativeStakes).toString()} {votingMachineTokenName}\n              <AmountBadge color=\"red\">{negativeStakesCount}</AmountBadge>\n              <br/> \n              {proposalEvents && proposalEvents.stakes.map(function(stakeEvent, i){\n                if (stakeEvent.vote.toString() === \"2\")\n                  return (\n                    <small color=\"red\" key={`stakeDown${i}`} style={{ display: \"flex\", alignItems:\"center\"}}>\n                      <BlockchainLink size=\"short\" type=\"user\" text={stakeEvent.staker}/>\n                      {formatBalance(bnum(stakeEvent.amount)).toString()} {votingMachineTokenName}\n                    </small>\n                  )\n                else return undefined;\n              })}\n            </span>\n          </SidebarRow>\n          \n          {stakedAmount.toNumber() > 0\n            ? <SidebarRow>\n            Already staked {(stakedAmount.toNumber() > 0) ? \"for\" : \"against\"} with {formatBalance(stakedAmount).toString()} {votingMachineTokenName}\n            </SidebarRow>\n            : <div></div>\n          }\n\n          {!finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4) && votingMachineTokenApproved.toString() === \"0\" ?\n            <SidebarRow>\n              <small>Approve {votingMachineTokenName} to stake</small>\n              <ActionButton color=\"blue\" onClick={() => approveVotingMachineToken()}>Approve {votingMachineTokenName}</ActionButton>\n            </SidebarRow>\n            : !finishTimeReached && (proposal.stateInVotingMachine == 3 || proposal.stateInVotingMachine == 4)  ?\n              <div>\n                {Number(recommendedStakeToBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToBoost, 18, 1, false).toString()} {votingMachineTokenName} to boost</small> : <span/>}\n                {Number(recommendedStakeToUnBoost) > 0 ? <small>Stake ~{formatBalance(recommendedStakeToUnBoost, 18, 1, false).toString()} {votingMachineTokenName} to unboost</small> : <span/>}\n                <SidebarRow>\n                  <AmountInput\n                    type=\"number\"\n                    placeholder={votingMachineTokenName}\n                    name=\"stakeAmount\"\n                    id=\"stakeAmount\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    onChange={onStakeAmountChange}\n                    style={{flex: 2}}\n                  />\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"green\" onClick={() => submitStake(1)}><FiThumbsUp /></ActionButton>\n                  <ActionButton style={{flex: 1, maxWidth: \"20px\", textAlign: \"center\"}} color=\"red\" onClick={() => submitStake(2)}><FiThumbsDown /></ActionButton>\n                </SidebarRow>\n              </div>\n            : <div></div>\n          }\n          \n          {proposal.stateInVotingMachine < 3 && canRedeem\n            ? <SidebarRow style={{ borderTop: \"1px solid gray\",  margin: \"0px 10px\", justifyContent: \"center\" }}>\n              <ActionButton color=\"blue\" onClick={() => redeem()}>Redeem</ActionButton>\n            </SidebarRow>\n            : <div></div>\n          }\n          \n        </InfoSidebarBox>\n      </ProposalInformationWrapper>\n    );\n    \n});\n\nexport default ProposalPage;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { bnum, parseCamelCase, ZERO_ADDRESS, formatCurrency, formatBalance } from '../utils';\nimport { NETWORK_ASSET_SYMBOL } from '../provider/connectors';\n\nconst FinanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: row;\n    color: var(--dark-text-gray);\n    flex-wrap: wrap;\n`;\n\nconst FinanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: ${(props) => props.align};;\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst FinanceInformation = observer(() => {\n    const {\n        context: { daoStore, configStore, coingeckoService },\n    } = useContext();\n\n    const daoInfo = daoStore.getDaoInfo();\n    const schemes = daoStore.getAllSchemes();\n    const prices = coingeckoService.getPrices();\n    const networkAssetSymbol = NETWORK_ASSET_SYMBOL[configStore.getActiveChainName()];\n    \n    let assets = {\n      total: [{\n        address: ZERO_ADDRESS,\n        name: networkAssetSymbol,\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }],\n      avatar: [{\n        address: ZERO_ADDRESS,\n        name: networkAssetSymbol,\n        amount: bnum(daoInfo.ethBalance),\n        decimals: 18\n      }]\n    };\n    Object.keys(daoInfo.tokenBalances).map((tokenAddress) => {\n      const tokenData = configStore.getTokenData(tokenAddress);\n      assets.avatar.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n      assets.total.push({\n        address: tokenAddress,\n        name: tokenData.name,\n        amount: bnum(daoInfo.tokenBalances[tokenAddress]),\n        decimals: tokenData.decimals\n      })\n    });\n    \n    schemes.map((scheme) => {\n      if (scheme.controllerAddress != ZERO_ADDRESS)\n        return;\n        \n      const tokenBalances = scheme.tokenBalances;\n      if (!assets[scheme.name])\n        assets[scheme.name] = [{\n          address: ZERO_ADDRESS,\n          name: networkAssetSymbol,\n          amount: bnum(scheme.ethBalance),\n          decimals: 18\n        }]\n      \n      Object.keys(tokenBalances).map((tokenAddress) => {\n        const tokenData = configStore.getTokenData(tokenAddress);\n\n        assets[scheme.name].push({\n          address: tokenAddress,\n          name: tokenData.name,\n          amount: bnum(tokenBalances[tokenAddress]),\n          decimals: tokenData.decimals\n        })\n        const indexOfAssetInTotal = assets.total.findIndex((asset) => asset.address == tokenAddress);\n        if (indexOfAssetInTotal > -1) {\n          assets.total[indexOfAssetInTotal].amount = assets.total[indexOfAssetInTotal].amount.plus(\n            bnum(tokenBalances[tokenAddress])\n          );\n        } else {\n          assets.total.push({\n            address: tokenAddress,\n            name: tokenData.name,\n            amount: bnum(tokenBalances[tokenAddress]),\n            decimals: tokenData.decimals,\n          })\n        }\n        \n      });\n    });\n    \n    return (\n      <FinanceInfoWrapper>\n        { Object.keys(assets).map((assetHolder, i) => {\n          const assetsOfHolder = assets[assetHolder];\n          return (\n            <div style={{width: i > 0 ? \"50%\" : \"100%\"}}>\n              <h2 style={{textAlign: \"center\"}}>{parseCamelCase(assetHolder)}</h2>\n              <FinanceTableHeaderWrapper>\n              <TableHeader width=\"33%\" align=\"center\"> Asset </TableHeader>\n              <TableHeader width=\"34%\" align=\"center\"> Balance </TableHeader>\n              <TableHeader width=\"33%\" align=\"center\"> USD Value </TableHeader>\n\n              </FinanceTableHeaderWrapper>\n              <TableRowsWrapper>\n              {assetsOfHolder.map((asset, i) => {\n                if (asset && Number(formatBalance(asset.amount, asset.decimals, 2)) > 0) {\n                  return (\n                    <TableRow key={`asset${i}`}>\n                      <TableCell width=\"33%\" align=\"center\" weight='500'>\n                        {asset.name} <BlockchainLink size=\"long\" type=\"address\" text={asset.address} onlyIcon toCopy/>\n                      </TableCell>\n                      <TableCell width=\"34%\" align=\"center\"> \n                        {formatBalance(asset.amount, asset.decimals, 2).toString()}\n                      </TableCell>\n                      <TableCell width=\"33%\" align=\"center\"> \n                        {(prices[asset.address] && prices[asset.address].usd) ?\n                          formatCurrency(\n                            bnum(\n                              Number(formatBalance(asset.amount, asset.decimals, 2)) * prices[asset.address].usd\n                            )\n                          )\n                          : \"-\"\n                        }\n                      </TableCell>\n                    </TableRow>);\n                } else {\n                  return <div key={`asset${i}`} />\n                }\n              })}\n              </TableRowsWrapper>\n            </div>\n          );\n        })}\n      </FinanceInfoWrapper>\n    );\n});\n\nexport default FinanceInformation;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport Question from '../components/common/Question';\nimport { bnum } from '../utils';\nimport moment from 'moment';\n\nconst SchemesInformationWrapper = styled.div`\n  width: 100%;\n  background: white;\n  font-weight: 400;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst ProposalTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--dark-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 16px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    align-items: center;\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n`;\n\nconst TableCell = styled.div`\n    a {\n        text-decoration: none;\n        width: 100%;\n\n        &:hover{\n            color: var(--turquois-text-onHover);\n        }\n    }\n    color: ${(props) => props.color};\n    width: ${(props) => props.width || '25%'};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst SchemesInformation = observer(() => {\n    const {\n        context: { providerStore, daoStore },\n    } = useContext();\n    const { library } = providerStore.getActiveWeb3React();\n    \n    const schemes = daoStore.getAllSchemes();\n    return (\n      <SchemesInformationWrapper>\n        <ProposalTableHeaderWrapper>\n            <TableHeader width=\"15%\" align=\"left\"> Name </TableHeader>\n            <TableHeader width=\"40%\" align=\"center\"> Configuration <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"25%\" align=\"center\"> Permissions <Question question=\"9\"/> </TableHeader>\n            <TableHeader width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n              <span>Boosted</span> - <span>Active</span> - <span>Total</span>\n            </TableHeader>\n        </ProposalTableHeaderWrapper>\n        <TableRowsWrapper>\n        {schemes.map((scheme, i) => {\n          const schemeProposals = daoStore.getSchemeProposals(scheme.address);\n          const votingMachineParameters = daoStore.getVotingParametersOfScheme(scheme.address);\n          if (votingMachineParameters)\n            return (\n              <div key={\"scheme\"+i}>\n                <TableRow>\n                  <TableCell width=\"15%\" align=\"left\" weight='500' wrapText=\"true\">\n                    {scheme.name}<br/>\n                    <BlockchainLink size=\"short\" text={scheme.address} toCopy/>\n                  </TableCell>\n                  <TableCell width=\"40%\" align=\"center\">\n                    <small>Params Hash: {scheme.paramsHash}</small><br/>\n                    <small>Queued Proposal Period: {\n                      moment.duration(votingMachineParameters.queuedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Boosted Proposal Period: {\n                      moment.duration(votingMachineParameters.boostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>PreBoosted Proposal Period: {\n                      moment.duration(votingMachineParameters.preBoostedVotePeriodLimit.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    <small>Quiet Ending Period: {\n                      moment.duration(votingMachineParameters.quietEndingPeriod.toString(), 'seconds').humanize()\n                    }</small><br/>\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max time for execution: {\n                          moment.duration(scheme.maxSecondsForExecution.toString(), 'seconds').humanize()\n                        }<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Max REP % to change in proposal: {scheme.maxRepPercentageChange.toString()} %<br/></small>\n                      : <div/>\n                    }\n                    { (scheme.type == \"WalletScheme\")\n                      ? <small>Required Percentage for boosted approval: {bnum(scheme.boostedVoteRequiredPercentage).div(\"1000\").toString()} %<br/></small>\n                      : <div/>\n                    }\n                    <small>Rep Proposing Reward: {\n                      Number(library.utils.fromWei(votingMachineParameters.proposingRepReward.toString())).toFixed(2)\n                    } REP</small><br/>\n                    <small>Reputation Loss Ratio: {votingMachineParameters.votersReputationLossRatio.toString()} %</small><br/>\n                    <small>Minimum Dao Boost: {\n                      Number(library.utils.fromWei(votingMachineParameters.minimumDaoBounty.toString())).toFixed(2)\n                    } DXD</small><br/>\n                    <small>Proposal Boost Bounty Const: {votingMachineParameters.daoBountyConst.toString()}</small><br/>\n                    <small>Boost Threshold Constant: {votingMachineParameters.thresholdConst.div(10**12).toString()}</small><br/>\n                    <small>Boost Limit Exponent Value: {votingMachineParameters.limitExponentValue.toString()}</small>\n                    \n                  </TableCell>\n                  <TableCell width=\"25%\" align=\"center\" wrapText>\n                    <strong>Controller Permissions</strong><br/>\n                    <small>{scheme.permissions.canGenericCall ? 'Can' : 'Cant'} make generic call</small><br/>\n                    <small>{scheme.permissions.canUpgrade ? 'Can' : 'Cant'} upgrade controller</small><br/>\n                    <small>{scheme.permissions.canChangeConstraints ? 'Can' : 'Cant'} change constraints</small><br/>\n                    <small>{scheme.permissions.canRegisterSchemes ? 'Can' : 'Cant'} register schemes</small>\n\n                  </TableCell>\n\n                  <TableCell width=\"20%\" align=\"center\" style={{display: \"flex\", justifyContent: \"space-around\"}}> \n                    <span>{scheme.boostedProposals}</span>\n                    -\n                    <span>{schemeProposals.filter((proposal) => {\n                      return (proposal.stateInVotingMachine > 2)\n                    }).length}</span>\n                    -\n                    <span>{scheme.proposalIds ? scheme.proposalIds.length : 0}</span>\n                  </TableCell>\n                </TableRow>\n              </div>\n            );\n          else return <div/>;\n          }\n        )}\n        </TableRowsWrapper>\n      </SchemesInformationWrapper>\n    );\n});\n\nexport default SchemesInformation;\n","import styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport BlockchainLink from '../components/common/BlockchainLink';\nimport { FaTrophy, FaMedal } from \"react-icons/fa\";\nimport { bnum } from '../utils';\nimport { Chart } from \"react-google-charts\";\n\nconst GovernanceInfoWrapper = styled.div`\n    background: white;\n    padding: 0px 10px;\n    font-weight: 400;\n    border-radius: 4px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    color: var(--dark-text-gray);\n`;\n\nconst InfoBox = styled.div`\n  flex: 1;\n  text-align: center;\n  padding: 2px 5px;\n  margin: 10px 5px;\n  font-size: 25px;\n  font-weight: 300;\n  border-radius: 3px;\n  color: var(--activeButtonBackground);\n`;\n\nconst GovernanceTableHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    color: var(--light-text-gray);\n    padding: 20px 40px 8px 24px;\n    font-size: 14px;\n    text-align: center;\n`;\n\nconst TableHeader = styled.div`\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n`;\n\nconst TableRowsWrapper = styled.div`\n    overflow-y: scroll;\n`;\n\nconst TableRow = styled.div`\n    font-size: 16px;\n    line-height: 18px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 1px solid var(--line-gray);\n    padding: 16px 24px;\n    color: var(--dark-text-gray);\n    text-align: right;\n    cursor: pointer;\n`;\n\nconst TableCell = styled.div`\n    color: ${(props) => props.color};\n    width: ${(props) => props.width};\n    text-align: ${(props) => props.align};\n    font-weight: ${(props) => props.weight};\n    white-space: ${(props) => props.wrapText ? 'nowrap' : 'inherit'};\n    overflow: ${(props) => props.wrapText ? 'hidden' : 'inherit'};\n    text-overflow: ${(props) => props.wrapText ? 'ellipsis' : 'inherit'};\n`;\n\nconst GovernanceInformation = observer(() => {\n    const {\n        context: { daoStore },\n    } = useContext();\n\n    const daoInfo = daoStore.getDaoInfo();\n    const governanceInfo = daoStore.getGovernanceInfo();\n    console.log(governanceInfo);\n    function toNumber(weiNumber) {\n      return bnum(weiNumber).div(10**18).toFixed(0)\n    }\n    return (\n      <GovernanceInfoWrapper>\n        <h1 style={{textAlign: \"center\"}}>Stats</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            {toNumber(daoInfo.totalRep)} REP\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalPositiveVotes} Positive Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalNegativeVotes} Negative Votes\n          </InfoBox>\n          <InfoBox>\n            {governanceInfo.totalProposalsCreated} Proposals\n          </InfoBox>\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Reputation Charts</h1>\n        <div style={{display: \"flex\", flexDirection: \"row\", width: \"100%\"}}>\n          <Chart\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.rep}\n            options={{\n              legend: 'none',\n              pieSliceText: 'none',\n              pieStartAngle: 100,\n              title: \"Reputation Distribution\",\n              sliceVisibilityThreshold: 0.001, // 0.1%\n            }}\n          />\n          <Chart\n            width=\"100%\"\n            chartType=\"LineChart\"\n            loader={<div>Loading Chart</div>}\n            data={governanceInfo.repEvents}\n            options={{\n              hAxis: { title: 'Block Number', },\n              vAxis: { title: 'Reputation', },\n              title: \"Reputation over Time\",\n              legend: 'none'\n            }}\n          />\n        </div>\n        \n        <h1 style={{textAlign: \"center\"}}>Governance Ranking</h1>\n\n        <div style={{display: \"flex\", flexDirection: \"row\"}}>\n          <InfoBox>\n            Create Proposal<br/>\n            <strong>1 to 30 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Winning Option<br/>\n            <strong>3 Points</strong>\n          </InfoBox>\n          <InfoBox>\n            Vote Losing Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n          <InfoBox>\n            Stake Winning Option<br/>\n            <strong>1 Point</strong>\n          </InfoBox>\n        </div>\n        <GovernanceTableHeaderWrapper>\n          <TableHeader width=\"5%\" align=\"center\"> # </TableHeader>\n          <TableHeader width=\"35%\" align=\"center\"> Address </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Proposals Created </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Voted </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Staked </TableHeader>\n          <TableHeader width=\"15%\" align=\"center\"> Score </TableHeader>\n        </GovernanceTableHeaderWrapper>\n        <TableRowsWrapper>\n        {governanceInfo.ranking.map((user, i) => {\n          return (\n            <TableRow key={`user${i}`}>\n              <TableCell width=\"5%\" align=\"center\" weight='500'> {i + 1}\n              {i == 0 ? <FaTrophy style={{color:\"gold\"}}/> :\n              i == 1 ? <FaTrophy style={{color:\"silver\"}}/> :\n              i == 2 ? <FaTrophy style={{color:\"#CD7F32\"}}/> :\n              i < 6 ? <FaMedal style={{color:\"gold\"}}/> :\n              i < 9 ? <FaMedal style={{color:\"silver\"}}/> :\n              i < 12 ? <FaMedal style={{color:\"#CD7F32\"}}/> :\n              <div/>}\n              </TableCell>\n              <TableCell width=\"35%\" align=\"center\" weight='500'>\n                <BlockchainLink size=\"long\" type=\"address\" text={user.address} toCopy/>\n              </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.proposals} </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctVotes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongVotes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> \n                <span style={{color:\"green\"}}>{user.correctStakes} </span>\n                  -\n                <span style={{color:\"red\"}}> {user.wrongStakes}</span>\n               </TableCell>\n              <TableCell width=\"15%\" align=\"center\"> {user.score.toFixed(0)} </TableCell>\n            </TableRow>\n          );\n        })}\n        </TableRowsWrapper>\n      </GovernanceInfoWrapper>\n    );\n});\n\nexport default GovernanceInformation;\n","import styled from 'styled-components'; \nimport { useLocation } from 'react-router-dom';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Box from '../components/common/Box';\n\nimport FinanceInformation from '../components/FinanceInformation';\nimport SchemesInformation from '../components/SchemesInformation';\nimport GovernanceInformation from '../components/GovernanceInformation';\n\nconst InfoPageWrapper = styled(Box)`\n  width: 100%;\n`;\n\nconst InfoNavigation = styled.div`\n  padding: 0px 10px 10px 10px;\n  color: var(--dark-text-gray);\n  border-bottom: 1px solid var(--line-gray);\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: 1px;\n  display: flex;\n  justify-content: space-around;\n  flex-direction: row;\n`;\nconst InfoPage = () => {\n  const {\n    context: { configStore },\n  } = useContext();\n  const networkName = configStore.getActiveChainName();\n  const searchPath = useLocation().search;\n  return (\n    <InfoPageWrapper>\n      <InfoNavigation>\n        <ActiveButton route={`/${networkName}/info?view=governance`}>Governance</ActiveButton>\n        <ActiveButton route={`/${networkName}/info?view=finance`}>Finance</ActiveButton>\n        <ActiveButton route={`/${networkName}/info?view=schemes`}>Schemes</ActiveButton>\n      </InfoNavigation>\n      <div>\n        { searchPath === `?view=schemes` ?\n          <SchemesInformation/>\n        : searchPath === `?view=governance` ?\n          <GovernanceInformation/>\n        : <FinanceInformation/>\n        }\n      </div>\n    </InfoPageWrapper>\n  );\n};\n\nexport default InfoPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { observer } from 'mobx-react';\nimport { useContext } from '../contexts';\nimport ActiveButton from '../components/common/ActiveButton';\nimport Question from '../components/common/Question';\nimport { FiCheckCircle, FiX } from \"react-icons/fi\";\nimport Box from '../components/common/Box';\n\nconst Row = styled.div`\n  flex-direction: row;\n  flex: auto;\n  display: flex;\n  padding-top: 15px;\n  justify-content: space-around;\n`\n\nconst InputBox = styled.input`\n  background-color: white;\n  border: 1px solid var(--medium-gray );\n  border-radius: 4px;\n  height: 34px;\n  letter-spacing: 1px;\n  font-weight: 500;\n  line-height: 32px;\n  text-align: left;\n  padding: 0px 10px;\n  margin: 5px;\n`;\n\nconst ConfigPage = observer(() => {\n    const {\n        context: { configStore, pinataService, etherscanService },\n    } = useContext();\n    \n    const [etherscanApiStatus, setEtherscanApiStatus] = React.useState(etherscanService.auth);\n    const [pinataKeyStatus, setPinataKeyStatus] = React.useState(pinataService.auth);\n\n    const [localConfig, setLocalConfig] = React.useState(configStore.getLocalConfig());\n    const [, forceUpdate] = React.useReducer(x => x + 1, 0);\n    \n    function onApiKeyValueChange(value, key) {\n      localConfig[key] = value;\n      setLocalConfig(localConfig)\n      forceUpdate();\n    }\n    \n    function saveConfig() {\n      configStore.setLocalConfig(localConfig);\n    }\n    \n    async function testApis() {\n      await pinataService.isAuthenticated();\n      await etherscanService.isAuthenticated();\n      setPinataKeyStatus(pinataService.auth);  \n      setEtherscanApiStatus(etherscanService.auth);\n    }\n    \n    async function pinDXvoteHashes() {\n      pinataService.updatePinList();\n    }\n    \n    async function clearCache() {\n      localStorage.clear();\n    }\n  \n    return (\n      <Box style={{alignItems: \"center\"}}>\n        <h2>API Keys <Question question=\"8\"/></h2>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Etherscan:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"etherscan\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"etherscan\")}\n            value={localConfig.etherscan}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {etherscanApiStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{width: \"80px\", height: \"34px\", padding:\"10px 0px\"}}>Pinata:</span>\n          <InputBox\n            type=\"text\"\n            serviceName=\"pinata\"\n            onChange={(event) => onApiKeyValueChange(event.target.value, \"pinata\")}\n            value={localConfig.pinata}\n            style={{width: \"100%\"}}\n          ></InputBox>\n          <span style={{ height: \"34px\", padding:\"10px 0px\"}}>\n            {pinataKeyStatus ? <FiCheckCircle/> : <FiX/>}\n          </span>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <span style={{height: \"34px\", padding:\"10px 10px\"}}>Pin DXdao hashes on start</span>\n          <InputBox\n            type=\"checkbox\"\n            checked={localConfig.pinOnStart}\n            onChange={(event) => onApiKeyValueChange(event.target.checked, \"pinOnStart\")}\n            style={{width: \"20px\"}}\n          ></InputBox>\n        </Row>\n        <Row style={{maxWidth: \"500px\"}}>\n          <ActiveButton onClick={saveConfig}>Save</ActiveButton>\n          <ActiveButton onClick={testApis}>Test Apis</ActiveButton>\n          <ActiveButton onClick={clearCache}>Clear Cache</ActiveButton>\n          <ActiveButton onClick={pinDXvoteHashes}>Pin DXVote Hashes</ActiveButton>\n        </Row>\n      </Box>\n    );\n});\n\nexport default ConfigPage;\n","import { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { toCamelCaseString } from '../utils';\nimport { observer } from 'mobx-react';\nimport Box from '../components/common/Box';\nimport { useContext } from '../contexts';\nimport { useLocation } from 'react-router-dom';\nimport MDEditor from '@uiw/react-md-editor';\n\nconst FAQPage = observer(() => {\n  \n  const {\n      context: { configStore },\n  } = useContext();\n  \n  const questionId = useLocation().search.indexOf(\"=\") > -1 ? useLocation().search.split(\"=\")[1] : 0;\n  \n  const FAQBox = styled(Box)`\n    padding: 20px 30px;\n    p {\n      line-height: 28px;\n      font-size: 20px;\n    }\n    h2 {\n      margin:10px 0px;\n    }\n    h3 {\n      margin: 5px 0px;\n    }\n    h4 {\n      margin: 0px;\n    }\n  `\n  useEffect(() => {\n    if (questionId > 0)\n      document.querySelectorAll(\"#FAQBody div h1\")[questionId].scrollIntoView();\n  }, []);\n   \n  let daoAddresses = \"\";\n  const networkContracts = configStore.getNetworkContracts();\n  for (let n = 0; n < Object.keys(networkContracts).length; n++) {\n    daoAddresses += \"### \" + toCamelCaseString(Object.keys(networkContracts)[n]) + \" Network\\n\";\n    daoAddresses += \"- Avatar: \" + networkContracts.avatar+\"\\n\";\n    daoAddresses += \"- Controller: \" + networkContracts.controller+\"\\n\";\n    daoAddresses += \"- Reputation: \" + networkContracts.reputation+\"\\n\";\n    daoAddresses += \"- Permission Registry: \" + networkContracts.permissionRegistry+\"\\n\";\n    daoAddresses += \"- Reputation: \" + networkContracts.reputation+\"\\n\";\n  \n  }\n\n   const FAQBody = \n`# Where are the dao funds held?\n\nMost of the ETH and tokens are held in the DXdao avatar address, this is the safest place for the funds to be, the access to this funds is usually slow and it take day for a proposal to move funds from this address. The Wallet Schemes can also hold funds too, but only the ones that dont make calls from the avatar.\n\n## DXdao Addresses\n\n${daoAddresses}\n\n# What is a Wallet Scheme?\n\nA wallet scheme is a smart contract that manage the access to DXdao funds, in order to make transfers or calls from the DXdao avatar or the scheme itself the scheme needs to execute a proposal. The proposals are executed after it reaches a certain amount of votes or stakes over time, the amount of votes, staked and time that has to passed depends on the scheme configuration. An scheme who will have access to the DXdao avatar funds will usually take more votes, stakes and time than a scheme who make calls form itself, this means that funds can be allocated in the schemes as well, but this schemes will have only access to the funds held by themselves.\n\n# Proposal States\n\n## In Queue\n\nA proposal that needs the queuedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Pre Boosted\n\nA proposal that has enough stakes to pass be boosted state but cant be boosted just yet.\n\n## Pending Boost\n\nA proposal that has enough stakes to pass to boosted state.\n\n## Boosted\n\nA proposal that needs the boostedVoteRequiredPercentage % of votes sets in the proposal scheme to pass.\n\n## Quiet Ending Period\n\nA proposal that changed the winning option in the amount of seconds specified as quietEndingPeriod before finishing, this will extend the proposal time for quietEndingPeriod seconds. The quietEndingPeriod is specified in the scheme configuration where the proposal was submitted.\n\n## Pending Execution\n\nA proposal that got enough votes and is ready to be executed.\n\n## Execution Failed\n\nA proposal that was executed after it passed but it execution failed.\n\n## Execution Succeded\n\nA proposal that was executed after it passed but it execution succeeded.\n\n## Expired in Queue\n\nA proposal that spent too much time in Queue state and didnt get enough votes to pass.\n\n# How does voting works?\n\nA proposal needs a minimum amount of votes to pass, and that depends on the state of the proposal at the moment of execution. If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed. If a proposal reaches the queuedVoteRequiredPercentage percentage amount of votes it gets executed instantly. This means that any proposal in Queued state will need that amount of votes to pass.\n\n# How does staking works?\n\nA proposal can receives a financial stake in DXD to speed up the voting process. If a proposal receives enough positive stakes to boost it will enter pre-boosted state, once the pre-boosted state finish if the proposal still has enough DXD staked to boost it will be boosted in the next voting machine action (vote, stake, or voting machine execution). If a proposal is in Boosted state it will need the boostedVoteRequiredPercentage percentage amount specified in the scheme configuration where the proposal was created of votes in favor to be executed.\n\n# How do I get DXD?\n\nYou can get rinkeby DXD buying DXD in dxtrust rinkeby here: https://levelkdev.github.io/dxtrust/\n\n# How are proposals created?\n\nEach proposal has a title, description and calls to be exected by the wallet scheme where it is proposed. The description of the proposal is stored in IPFS, and we save the hash of the IPFS description in the blokchain next to the proposal title and calls. When creating a proposal you first need to submit the description to IPFS and once you get the IPFS hash of the description the proposal can be submited by sending a transaction to the wallet scheme smart contract.\n\n# External APIs\n\nThe app allows you to add external API services. Use Pinata to help DXdao by pinning the proposal description and important documents in you pinata account. Use Etherscan to decode proposal calls and know what the proposal will execute.\n\n# Schemes Configuration\n## Scheme Parameters\n\n### name\n\nThe name of the scheme, this will be used to identify the scheme by name in DXvote dapp.\n\n### callToController\n\nIf the scheme make calls to the controller or not. A Scheme that makes calls to a controller will make calls from the dxdao avatar (which gives access to the dxdao funds) and a scheme that do not call the controller will make call directly from itself, which means that it will have access only to the funds held in the scheme address.\n\n### maxSecondsForExecution\n\nThis is the amount of time that a proposal has to be executed in the scheme, this is useful to \"clean\" proposals that weren't successful or weren't able to be executed for some reason. This means that if a proposal passes in 3 days in the voting machine and the maxSecondsForExecution are 6 days it will have 3 days to be executed, after that it will be marked in ExecutionTimeout state and wont be able to be executed again, reaching a state of termination.\n\n### maxRepPercentageToMint\n\nThis is the maximum amount of rep in percentage allowed to be minted by proposal, the value can be between 0-100, if a proposal execution mints 5% of REP and the maxRepPercentageToMint equals 3, it will fail.\n\n## Controller Permissions\n\nThis are four values that determine what the scheme can do in the dxdao controller contract, the most powerful contract in the stack, the only two values that we use from it are canRegisterSchemes and canGenericCall. canRegisterSchemes allows the addition/removal of schemes and the canGenericCall allows the execution of calls in the avatar contract.\n\n## Permission Registry Permissions\n\nThe permissions are set by asset, specifying the sender and receiver addresses (from and to) and the signature of the function to be used and the value to be transferred.\n\nThis permissions are checked before a proposal execution, checking that the total value transferred by asset and the functions to be called are allowed.\n\nThe asset address will be address 0x0 for ethereum calls (this would be used for ethereum smart contract calls), and if the permission is for an ERC20 address the asset would be the address of the ERC20 token.\n\nIf a scheme make calls to the controller the permissions are checked avatar address as sender (from field in the permission regsitry).\n\nIf a scheme does not make calls to the controller the permissions are checked scheme address as sender (from field in the permission regsitry).\n\nIt allows the use of \"wildcard\" permissions by using 0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa for any address and 0xaaaaaaaa for any signature.\nIt also allows the use of global transfer limits, by setting the limit by asset using the scheme as receiver address, any value recorded here will be used as global transfer limit in the proposal check.\n\nConstant 0x0 address used as \"zero address\": \\`0x0000000000000000000000000000000000000000\\`\n\nConstant address used as \"any address\": \\`0xaAaAaAaaAaAaAaaAaAAAAAAAAaaaAaAaAaaAaaAa\\`\n\nConstant function signature used as \"any function\": \\`0xaaaaaaaa\\`\n\nConstant Max uint256 to be used: \\`0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\\`\n\n## Voting Machine Params\n\n### queuedVoteRequiredPercentage\n\nThe percentage of votes required to execute a proposal in queued state.\n\n### boostedVoteRequiredPercentage\n\nThe percentage of votes required to execute a proposal in boosted state.\n\n### queuedVotePeriodLimit\n\nThe amount of time that a proposal will be in queue state (not boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### boostedVotePeriodLimit\n\nThe amount of time that a proposal will be in boost state (after pre-boosted), once the time limit is reached and the proposal was not executed it finish.\n\n### preBoostedVotePeriodLimit\n\nThe amount of time that a proposal will be in pre-boosted state. A proposal gets into pre-boosted state when it has enough.\n\n### thresholdConst\n\nThe constant used to calculate the needed upstakes in a proposal to reach boosted state, where the upstakes needed equal to downStakes * (thresholdConst ** (numberOfBoostedProposals)) taking in count the number of boosted proposals at the moment of the pre-boost to boosted state change.\n\n### quietEndingPeriod\n\nThe amount of time a proposal has to have the same winning option before it finish, if the winning option change during that time the proposal finish time will be extended till the winning option doesn't change during that time.\n\nproposingRepReward\nThe fixed amount of REP that will be minted to the address who created the proposal.\n\n### votersReputationLossRatio\n\nThe percentage of REP a voter will loose if the voter voted a proposal in queue state for the loosing option.\n\n### minimumDaoBounty\n\nThe minimum amount to be set as downstake when a proposal is created.\n\n### daoBountyConst\n\nThe downstake for proposal is calculated when the proposal is created, by using the formula: (daoBountyConst * averageBoostDownstakes) / 100. If the value calculated is higher than minimumDaoBounty then this value will be used, if not the start downstake of the proposal will be minimumDaoBounty.\n\n# Useful Apps\n\n- Unit Converter Etherscan: https://rinkeby.etherscan.io/unitconverter\n- ETH Converter: https://eth-converter.com\n- UNIX Timestamp Converter: https://www.unixtimestamp.com\n- Hashhex ABI Encoder/Decoder: https://abi.hashex.org\n- Abidas ABI Encoder/Decoder: https://adibas03.github.io/online-ethereum-abi-encoder-decoder\n`\n\n  return (\n    <FAQBox id=\"FAQBody\">\n      <MDEditor.Markdown source={ FAQBody } style={{\n        padding: \"20px 10px\"\n      }} />\n    </FAQBox>\n  );\n});\n\nexport default FAQPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../components/common/Box';\nimport { FiZap } from \"react-icons/fi\";\n\nconst ForumPage = () => {\n  \n  const LoadingBox = styled.div`\n   .loader {\n      text-align: center;\n      font-weight: 500;\n      font-size: 20px;\n      line-height: 18px;\n      color: var(--dark-text-gray);\n      padding: 25px 0px;\n        \n      .svg {\n        height: 30px;\n        width: 30px;\n        margin-bottom: 10px;\n      }\n    }\n  `\n    \n  const [loading, setLoading] = React.useState(true);\n\n  function postMessageReceived(e) {\n    if (!e) {\n      return;\n    }\n  \n    if (loading){\n      setLoading(false);\n    }\n  }\n  window.addEventListener(\"message\", postMessageReceived, false);\n\n  var lists = document.querySelectorAll(\"d-topics-list\");\n  for (var i = 0; i < lists.length; i++) {\n    var list = lists[i];\n    var url = list.getAttribute(\"discourse-url\");\n    if (!url || url.length === 0) {\n      console.error(\"Error, `discourse-url` was not found\");\n      continue;\n    }\n    var frameId = \"de-\" + Math.random().toString(36).substr(2, 9);\n    var params = [\"discourse_embed_id=\" + frameId];\n    list.removeAttribute(\"discourse-url\");\n\n    for (var j = 0; j < list.attributes.length; j++) {\n      var attr = list.attributes[j];\n      params.push(attr.name.replace(\"-\", \"_\") + \"=\" + attr.value);\n    }\n\n    var iframe = document.createElement(\"iframe\");\n    iframe.src = url + \"/embed/topics?\" + params.join(\"&\");\n    iframe.id = frameId;\n    iframe.width = \"100%\";\n    iframe.frameBorder = \"0\";\n    iframe.scrolling = \"no\";\n    console.log(iframe)\n    list.appendChild(iframe);\n  }\n\n  return (\n    <Box style={{padding: \"0px\"}}>\n      { loading ?\n        <LoadingBox>\n        <div className=\"loader\"> <FiZap/> <br/> Loading.. </div>\n        </LoadingBox>\n      :\n        // @ts-ignore\n        <d-topics-list discourse-url=\"https://daotalk.org/\" category=\"15\" per-page=\"10000\" template=\"complete\"></d-topics-list>\n      }\n    </Box>\n  );\n};\n\nexport default ForumPage;\n","import ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { createWeb3ReactRoot } from '@web3-react/core';\nimport Web3ReactManager from 'components/Web3ReactManager';\nimport Web3 from 'web3';\nimport moment from 'moment';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'index.css';\nimport ThemeProvider, { GlobalStyle } from './theme';\n\nimport { web3ContextNames } from 'provider/connectors';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport PageRouter from './PageRouter';\n\nimport ProposalsPage from './pages/Proposals';\nimport NewProposalPage from './pages/NewProposal';\nimport UserPage from './pages/User';\nimport ProposalPage from './pages/Proposal';\nimport InfoPage from './pages/Info';\nimport ConfigPage from './pages/Configuration';\nimport FAQPage from './pages/FAQ';\nimport ForumPage from './pages/Forum';\n\nmoment.updateLocale('en', {\n  relativeTime : {\n    s: \"1 second\",\n    m: \"1 minute\",\n    h: \"1 hour\",\n    d:  \"1 day\",\n  }\n});\n\nconst Web3ProviderInjected = createWeb3ReactRoot(web3ContextNames.injected);\n\nfunction getLibrary(provider) {\n  return new Web3(provider);\n}\n\nconst Root = (\n  <Web3ProviderInjected getLibrary={getLibrary}>\n    <ThemeProvider>\n      <GlobalStyle />\n      <HashRouter>\n        <Switch>\n          <Web3ReactManager>\n            <Header />\n            <PageRouter>\n              <Route exact path=\"/\"> <ProposalsPage /> </Route>\n              <Route exact path=\"/config\"> <ConfigPage /> </Route>\n              <Route exact path=\"/forum\"> <ForumPage /> </Route>\n              <Route exact path=\"/faq\"> <FAQPage /> </Route>\n              <Route exact path=\"/:network/proposals\"> <ProposalsPage /> </Route>\n              <Route exact path=\"/:network/new\"> <NewProposalPage /> </Route>\n              <Route exact path=\"/:network/info\"> <InfoPage /> </Route>\n              <Route exact path=\"/:network/user/:address\"> <UserPage /> </Route>\n              <Route exact path=\"/:network/proposal/:proposalId\"> <ProposalPage /> </Route>\n            </PageRouter>\n            <Footer />\n          </Web3ReactManager>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  </Web3ProviderInjected>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./prism-abap\": [\n\t\t\"XpJP\",\n\t\t0\n\t],\n\t\"./prism-abap.js\": [\n\t\t\"XpJP\",\n\t\t0\n\t],\n\t\"./prism-abap.min\": [\n\t\t\"L4xK\",\n\t\t1\n\t],\n\t\"./prism-abap.min.js\": [\n\t\t\"L4xK\",\n\t\t1\n\t],\n\t\"./prism-abnf\": [\n\t\t\"EbVF\",\n\t\t2\n\t],\n\t\"./prism-abnf.js\": [\n\t\t\"EbVF\",\n\t\t2\n\t],\n\t\"./prism-abnf.min\": [\n\t\t\"oP4u\",\n\t\t3\n\t],\n\t\"./prism-abnf.min.js\": [\n\t\t\"oP4u\",\n\t\t3\n\t],\n\t\"./prism-actionscript\": [\n\t\t\"pZMP\",\n\t\t4\n\t],\n\t\"./prism-actionscript.js\": [\n\t\t\"pZMP\",\n\t\t4\n\t],\n\t\"./prism-actionscript.min\": [\n\t\t\"w6sj\",\n\t\t5\n\t],\n\t\"./prism-actionscript.min.js\": [\n\t\t\"w6sj\",\n\t\t5\n\t],\n\t\"./prism-ada\": [\n\t\t\"LmXF\",\n\t\t6\n\t],\n\t\"./prism-ada.js\": [\n\t\t\"LmXF\",\n\t\t6\n\t],\n\t\"./prism-ada.min\": [\n\t\t\"NeZf\",\n\t\t7\n\t],\n\t\"./prism-ada.min.js\": [\n\t\t\"NeZf\",\n\t\t7\n\t],\n\t\"./prism-agda\": [\n\t\t\"b6mF\",\n\t\t8\n\t],\n\t\"./prism-agda.js\": [\n\t\t\"b6mF\",\n\t\t8\n\t],\n\t\"./prism-agda.min\": [\n\t\t\"2U6L\",\n\t\t9\n\t],\n\t\"./prism-agda.min.js\": [\n\t\t\"2U6L\",\n\t\t9\n\t],\n\t\"./prism-al\": [\n\t\t\"d4OG\",\n\t\t10\n\t],\n\t\"./prism-al.js\": [\n\t\t\"d4OG\",\n\t\t10\n\t],\n\t\"./prism-al.min\": [\n\t\t\"wjrc\",\n\t\t11\n\t],\n\t\"./prism-al.min.js\": [\n\t\t\"wjrc\",\n\t\t11\n\t],\n\t\"./prism-antlr4\": [\n\t\t\"dgcb\",\n\t\t12\n\t],\n\t\"./prism-antlr4.js\": [\n\t\t\"dgcb\",\n\t\t12\n\t],\n\t\"./prism-antlr4.min\": [\n\t\t\"t9JB\",\n\t\t13\n\t],\n\t\"./prism-antlr4.min.js\": [\n\t\t\"t9JB\",\n\t\t13\n\t],\n\t\"./prism-apacheconf\": [\n\t\t\"iB5L\",\n\t\t14\n\t],\n\t\"./prism-apacheconf.js\": [\n\t\t\"iB5L\",\n\t\t14\n\t],\n\t\"./prism-apacheconf.min\": [\n\t\t\"+45o\",\n\t\t15\n\t],\n\t\"./prism-apacheconf.min.js\": [\n\t\t\"+45o\",\n\t\t15\n\t],\n\t\"./prism-apl\": [\n\t\t\"+FDh\",\n\t\t16\n\t],\n\t\"./prism-apl.js\": [\n\t\t\"+FDh\",\n\t\t16\n\t],\n\t\"./prism-apl.min\": [\n\t\t\"4Vz6\",\n\t\t17\n\t],\n\t\"./prism-apl.min.js\": [\n\t\t\"4Vz6\",\n\t\t17\n\t],\n\t\"./prism-applescript\": [\n\t\t\"t2Jj\",\n\t\t18\n\t],\n\t\"./prism-applescript.js\": [\n\t\t\"t2Jj\",\n\t\t18\n\t],\n\t\"./prism-applescript.min\": [\n\t\t\"EeiZ\",\n\t\t19\n\t],\n\t\"./prism-applescript.min.js\": [\n\t\t\"EeiZ\",\n\t\t19\n\t],\n\t\"./prism-aql\": [\n\t\t\"u300\",\n\t\t20\n\t],\n\t\"./prism-aql.js\": [\n\t\t\"u300\",\n\t\t20\n\t],\n\t\"./prism-aql.min\": [\n\t\t\"4vsr\",\n\t\t21\n\t],\n\t\"./prism-aql.min.js\": [\n\t\t\"4vsr\",\n\t\t21\n\t],\n\t\"./prism-arduino\": [\n\t\t\"VOcU\",\n\t\t22\n\t],\n\t\"./prism-arduino.js\": [\n\t\t\"VOcU\",\n\t\t22\n\t],\n\t\"./prism-arduino.min\": [\n\t\t\"Wl4i\",\n\t\t23\n\t],\n\t\"./prism-arduino.min.js\": [\n\t\t\"Wl4i\",\n\t\t23\n\t],\n\t\"./prism-arff\": [\n\t\t\"8ktg\",\n\t\t24\n\t],\n\t\"./prism-arff.js\": [\n\t\t\"8ktg\",\n\t\t24\n\t],\n\t\"./prism-arff.min\": [\n\t\t\"aeOg\",\n\t\t25\n\t],\n\t\"./prism-arff.min.js\": [\n\t\t\"aeOg\",\n\t\t25\n\t],\n\t\"./prism-asciidoc\": [\n\t\t\"jOLr\",\n\t\t26\n\t],\n\t\"./prism-asciidoc.js\": [\n\t\t\"jOLr\",\n\t\t26\n\t],\n\t\"./prism-asciidoc.min\": [\n\t\t\"mOdA\",\n\t\t27\n\t],\n\t\"./prism-asciidoc.min.js\": [\n\t\t\"mOdA\",\n\t\t27\n\t],\n\t\"./prism-asm6502\": [\n\t\t\"ibSS\",\n\t\t28\n\t],\n\t\"./prism-asm6502.js\": [\n\t\t\"ibSS\",\n\t\t28\n\t],\n\t\"./prism-asm6502.min\": [\n\t\t\"4vTq\",\n\t\t29\n\t],\n\t\"./prism-asm6502.min.js\": [\n\t\t\"4vTq\",\n\t\t29\n\t],\n\t\"./prism-aspnet\": [\n\t\t\"drhi\",\n\t\t30\n\t],\n\t\"./prism-aspnet.js\": [\n\t\t\"drhi\",\n\t\t30\n\t],\n\t\"./prism-aspnet.min\": [\n\t\t\"cXUx\",\n\t\t31\n\t],\n\t\"./prism-aspnet.min.js\": [\n\t\t\"cXUx\",\n\t\t31\n\t],\n\t\"./prism-autohotkey\": [\n\t\t\"Mqv6\",\n\t\t32\n\t],\n\t\"./prism-autohotkey.js\": [\n\t\t\"Mqv6\",\n\t\t32\n\t],\n\t\"./prism-autohotkey.min\": [\n\t\t\"Dhz8\",\n\t\t33\n\t],\n\t\"./prism-autohotkey.min.js\": [\n\t\t\"Dhz8\",\n\t\t33\n\t],\n\t\"./prism-autoit\": [\n\t\t\"Q7+W\",\n\t\t34\n\t],\n\t\"./prism-autoit.js\": [\n\t\t\"Q7+W\",\n\t\t34\n\t],\n\t\"./prism-autoit.min\": [\n\t\t\"tDH2\",\n\t\t35\n\t],\n\t\"./prism-autoit.min.js\": [\n\t\t\"tDH2\",\n\t\t35\n\t],\n\t\"./prism-bash\": [\n\t\t\"gAkk\",\n\t\t36\n\t],\n\t\"./prism-bash.js\": [\n\t\t\"gAkk\",\n\t\t36\n\t],\n\t\"./prism-bash.min\": [\n\t\t\"Veyx\",\n\t\t37\n\t],\n\t\"./prism-bash.min.js\": [\n\t\t\"Veyx\",\n\t\t37\n\t],\n\t\"./prism-basic\": [\n\t\t\"qVSt\",\n\t\t38\n\t],\n\t\"./prism-basic.js\": [\n\t\t\"qVSt\",\n\t\t38\n\t],\n\t\"./prism-basic.min\": [\n\t\t\"t4XS\",\n\t\t39\n\t],\n\t\"./prism-basic.min.js\": [\n\t\t\"t4XS\",\n\t\t39\n\t],\n\t\"./prism-batch\": [\n\t\t\"wkPK\",\n\t\t40\n\t],\n\t\"./prism-batch.js\": [\n\t\t\"wkPK\",\n\t\t40\n\t],\n\t\"./prism-batch.min\": [\n\t\t\"yJGk\",\n\t\t41\n\t],\n\t\"./prism-batch.min.js\": [\n\t\t\"yJGk\",\n\t\t41\n\t],\n\t\"./prism-bbcode\": [\n\t\t\"HdDD\",\n\t\t42\n\t],\n\t\"./prism-bbcode.js\": [\n\t\t\"HdDD\",\n\t\t42\n\t],\n\t\"./prism-bbcode.min\": [\n\t\t\"tzWO\",\n\t\t43\n\t],\n\t\"./prism-bbcode.min.js\": [\n\t\t\"tzWO\",\n\t\t43\n\t],\n\t\"./prism-bison\": [\n\t\t\"SL6G\",\n\t\t44\n\t],\n\t\"./prism-bison.js\": [\n\t\t\"SL6G\",\n\t\t44\n\t],\n\t\"./prism-bison.min\": [\n\t\t\"na+9\",\n\t\t45\n\t],\n\t\"./prism-bison.min.js\": [\n\t\t\"na+9\",\n\t\t45\n\t],\n\t\"./prism-bnf\": [\n\t\t\"pksX\",\n\t\t46\n\t],\n\t\"./prism-bnf.js\": [\n\t\t\"pksX\",\n\t\t46\n\t],\n\t\"./prism-bnf.min\": [\n\t\t\"WvSR\",\n\t\t47\n\t],\n\t\"./prism-bnf.min.js\": [\n\t\t\"WvSR\",\n\t\t47\n\t],\n\t\"./prism-brainfuck\": [\n\t\t\"s2Vr\",\n\t\t48\n\t],\n\t\"./prism-brainfuck.js\": [\n\t\t\"s2Vr\",\n\t\t48\n\t],\n\t\"./prism-brainfuck.min\": [\n\t\t\"g5kN\",\n\t\t49\n\t],\n\t\"./prism-brainfuck.min.js\": [\n\t\t\"g5kN\",\n\t\t49\n\t],\n\t\"./prism-brightscript\": [\n\t\t\"xbA4\",\n\t\t50\n\t],\n\t\"./prism-brightscript.js\": [\n\t\t\"xbA4\",\n\t\t50\n\t],\n\t\"./prism-brightscript.min\": [\n\t\t\"yVCt\",\n\t\t51\n\t],\n\t\"./prism-brightscript.min.js\": [\n\t\t\"yVCt\",\n\t\t51\n\t],\n\t\"./prism-bro\": [\n\t\t\"56Ue\",\n\t\t52\n\t],\n\t\"./prism-bro.js\": [\n\t\t\"56Ue\",\n\t\t52\n\t],\n\t\"./prism-bro.min\": [\n\t\t\"Ub7m\",\n\t\t53\n\t],\n\t\"./prism-bro.min.js\": [\n\t\t\"Ub7m\",\n\t\t53\n\t],\n\t\"./prism-c\": [\n\t\t\"huE1\",\n\t\t54\n\t],\n\t\"./prism-c.js\": [\n\t\t\"huE1\",\n\t\t54\n\t],\n\t\"./prism-c.min\": [\n\t\t\"mX65\",\n\t\t55\n\t],\n\t\"./prism-c.min.js\": [\n\t\t\"mX65\",\n\t\t55\n\t],\n\t\"./prism-cil\": [\n\t\t\"J4HD\",\n\t\t56\n\t],\n\t\"./prism-cil.js\": [\n\t\t\"J4HD\",\n\t\t56\n\t],\n\t\"./prism-cil.min\": [\n\t\t\"6cme\",\n\t\t57\n\t],\n\t\"./prism-cil.min.js\": [\n\t\t\"6cme\",\n\t\t57\n\t],\n\t\"./prism-clike\": [\n\t\t\"y1X9\",\n\t\t58\n\t],\n\t\"./prism-clike.js\": [\n\t\t\"y1X9\",\n\t\t58\n\t],\n\t\"./prism-clike.min\": [\n\t\t\"CDxi\",\n\t\t59\n\t],\n\t\"./prism-clike.min.js\": [\n\t\t\"CDxi\",\n\t\t59\n\t],\n\t\"./prism-clojure\": [\n\t\t\"OQpq\",\n\t\t60\n\t],\n\t\"./prism-clojure.js\": [\n\t\t\"OQpq\",\n\t\t60\n\t],\n\t\"./prism-clojure.min\": [\n\t\t\"Qcv2\",\n\t\t61\n\t],\n\t\"./prism-clojure.min.js\": [\n\t\t\"Qcv2\",\n\t\t61\n\t],\n\t\"./prism-cmake\": [\n\t\t\"g0jA\",\n\t\t62\n\t],\n\t\"./prism-cmake.js\": [\n\t\t\"g0jA\",\n\t\t62\n\t],\n\t\"./prism-cmake.min\": [\n\t\t\"6TK8\",\n\t\t63\n\t],\n\t\"./prism-cmake.min.js\": [\n\t\t\"6TK8\",\n\t\t63\n\t],\n\t\"./prism-coffeescript\": [\n\t\t\"Nd5L\",\n\t\t64\n\t],\n\t\"./prism-coffeescript.js\": [\n\t\t\"Nd5L\",\n\t\t64\n\t],\n\t\"./prism-coffeescript.min\": [\n\t\t\"o8ko\",\n\t\t65\n\t],\n\t\"./prism-coffeescript.min.js\": [\n\t\t\"o8ko\",\n\t\t65\n\t],\n\t\"./prism-concurnas\": [\n\t\t\"uQnp\",\n\t\t66\n\t],\n\t\"./prism-concurnas.js\": [\n\t\t\"uQnp\",\n\t\t66\n\t],\n\t\"./prism-concurnas.min\": [\n\t\t\"fjVe\",\n\t\t67\n\t],\n\t\"./prism-concurnas.min.js\": [\n\t\t\"fjVe\",\n\t\t67\n\t],\n\t\"./prism-core\": [\n\t\t\"jHpe\",\n\t\t68\n\t],\n\t\"./prism-core.js\": [\n\t\t\"jHpe\",\n\t\t68\n\t],\n\t\"./prism-core.min\": [\n\t\t\"93uj\",\n\t\t69\n\t],\n\t\"./prism-core.min.js\": [\n\t\t\"93uj\",\n\t\t69\n\t],\n\t\"./prism-cpp\": [\n\t\t\"kfgK\",\n\t\t70\n\t],\n\t\"./prism-cpp.js\": [\n\t\t\"kfgK\",\n\t\t70\n\t],\n\t\"./prism-cpp.min\": [\n\t\t\"nSLE\",\n\t\t71\n\t],\n\t\"./prism-cpp.min.js\": [\n\t\t\"nSLE\",\n\t\t71\n\t],\n\t\"./prism-crystal\": [\n\t\t\"npCj\",\n\t\t72\n\t],\n\t\"./prism-crystal.js\": [\n\t\t\"npCj\",\n\t\t72\n\t],\n\t\"./prism-crystal.min\": [\n\t\t\"K0jR\",\n\t\t73\n\t],\n\t\"./prism-crystal.min.js\": [\n\t\t\"K0jR\",\n\t\t73\n\t],\n\t\"./prism-csharp\": [\n\t\t\"lSgE\",\n\t\t74\n\t],\n\t\"./prism-csharp.js\": [\n\t\t\"lSgE\",\n\t\t74\n\t],\n\t\"./prism-csharp.min\": [\n\t\t\"Mg/h\",\n\t\t75\n\t],\n\t\"./prism-csharp.min.js\": [\n\t\t\"Mg/h\",\n\t\t75\n\t],\n\t\"./prism-csp\": [\n\t\t\"1Nty\",\n\t\t76\n\t],\n\t\"./prism-csp.js\": [\n\t\t\"1Nty\",\n\t\t76\n\t],\n\t\"./prism-csp.min\": [\n\t\t\"AvZM\",\n\t\t77\n\t],\n\t\"./prism-csp.min.js\": [\n\t\t\"AvZM\",\n\t\t77\n\t],\n\t\"./prism-css\": [\n\t\t\"ZgVT\",\n\t\t80\n\t],\n\t\"./prism-css-extras\": [\n\t\t\"KJ57\",\n\t\t78\n\t],\n\t\"./prism-css-extras.js\": [\n\t\t\"KJ57\",\n\t\t78\n\t],\n\t\"./prism-css-extras.min\": [\n\t\t\"ONoJ\",\n\t\t79\n\t],\n\t\"./prism-css-extras.min.js\": [\n\t\t\"ONoJ\",\n\t\t79\n\t],\n\t\"./prism-css.js\": [\n\t\t\"ZgVT\",\n\t\t80\n\t],\n\t\"./prism-css.min\": [\n\t\t\"VXf6\",\n\t\t81\n\t],\n\t\"./prism-css.min.js\": [\n\t\t\"VXf6\",\n\t\t81\n\t],\n\t\"./prism-cypher\": [\n\t\t\"NdPI\",\n\t\t82\n\t],\n\t\"./prism-cypher.js\": [\n\t\t\"NdPI\",\n\t\t82\n\t],\n\t\"./prism-cypher.min\": [\n\t\t\"23m3\",\n\t\t83\n\t],\n\t\"./prism-cypher.min.js\": [\n\t\t\"23m3\",\n\t\t83\n\t],\n\t\"./prism-d\": [\n\t\t\"hkok\",\n\t\t84\n\t],\n\t\"./prism-d.js\": [\n\t\t\"hkok\",\n\t\t84\n\t],\n\t\"./prism-d.min\": [\n\t\t\"6XHo\",\n\t\t85\n\t],\n\t\"./prism-d.min.js\": [\n\t\t\"6XHo\",\n\t\t85\n\t],\n\t\"./prism-dart\": [\n\t\t\"otUN\",\n\t\t86\n\t],\n\t\"./prism-dart.js\": [\n\t\t\"otUN\",\n\t\t86\n\t],\n\t\"./prism-dart.min\": [\n\t\t\"MeRj\",\n\t\t87\n\t],\n\t\"./prism-dart.min.js\": [\n\t\t\"MeRj\",\n\t\t87\n\t],\n\t\"./prism-dax\": [\n\t\t\"kAua\",\n\t\t88\n\t],\n\t\"./prism-dax.js\": [\n\t\t\"kAua\",\n\t\t88\n\t],\n\t\"./prism-dax.min\": [\n\t\t\"ys8T\",\n\t\t89\n\t],\n\t\"./prism-dax.min.js\": [\n\t\t\"ys8T\",\n\t\t89\n\t],\n\t\"./prism-dhall\": [\n\t\t\"ZzuI\",\n\t\t90\n\t],\n\t\"./prism-dhall.js\": [\n\t\t\"ZzuI\",\n\t\t90\n\t],\n\t\"./prism-dhall.min\": [\n\t\t\"pM+Y\",\n\t\t91\n\t],\n\t\"./prism-dhall.min.js\": [\n\t\t\"pM+Y\",\n\t\t91\n\t],\n\t\"./prism-diff\": [\n\t\t\"GD/k\",\n\t\t92\n\t],\n\t\"./prism-diff.js\": [\n\t\t\"GD/k\",\n\t\t92\n\t],\n\t\"./prism-diff.min\": [\n\t\t\"WSBf\",\n\t\t93\n\t],\n\t\"./prism-diff.min.js\": [\n\t\t\"WSBf\",\n\t\t93\n\t],\n\t\"./prism-django\": [\n\t\t\"HGMl\",\n\t\t94\n\t],\n\t\"./prism-django.js\": [\n\t\t\"HGMl\",\n\t\t94\n\t],\n\t\"./prism-django.min\": [\n\t\t\"N3Go\",\n\t\t95\n\t],\n\t\"./prism-django.min.js\": [\n\t\t\"N3Go\",\n\t\t95\n\t],\n\t\"./prism-dns-zone-file\": [\n\t\t\"f7nC\",\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.js\": [\n\t\t\"f7nC\",\n\t\t96\n\t],\n\t\"./prism-dns-zone-file.min\": [\n\t\t\"p7ZI\",\n\t\t97\n\t],\n\t\"./prism-dns-zone-file.min.js\": [\n\t\t\"p7ZI\",\n\t\t97\n\t],\n\t\"./prism-docker\": [\n\t\t\"2et7\",\n\t\t98\n\t],\n\t\"./prism-docker.js\": [\n\t\t\"2et7\",\n\t\t98\n\t],\n\t\"./prism-docker.min\": [\n\t\t\"jdQp\",\n\t\t99\n\t],\n\t\"./prism-docker.min.js\": [\n\t\t\"jdQp\",\n\t\t99\n\t],\n\t\"./prism-ebnf\": [\n\t\t\"xwaw\",\n\t\t100\n\t],\n\t\"./prism-ebnf.js\": [\n\t\t\"xwaw\",\n\t\t100\n\t],\n\t\"./prism-ebnf.min\": [\n\t\t\"3Ky2\",\n\t\t101\n\t],\n\t\"./prism-ebnf.min.js\": [\n\t\t\"3Ky2\",\n\t\t101\n\t],\n\t\"./prism-editorconfig\": [\n\t\t\"B/pZ\",\n\t\t102\n\t],\n\t\"./prism-editorconfig.js\": [\n\t\t\"B/pZ\",\n\t\t102\n\t],\n\t\"./prism-editorconfig.min\": [\n\t\t\"c9/0\",\n\t\t103\n\t],\n\t\"./prism-editorconfig.min.js\": [\n\t\t\"c9/0\",\n\t\t103\n\t],\n\t\"./prism-eiffel\": [\n\t\t\"YctN\",\n\t\t104\n\t],\n\t\"./prism-eiffel.js\": [\n\t\t\"YctN\",\n\t\t104\n\t],\n\t\"./prism-eiffel.min\": [\n\t\t\"aE5W\",\n\t\t105\n\t],\n\t\"./prism-eiffel.min.js\": [\n\t\t\"aE5W\",\n\t\t105\n\t],\n\t\"./prism-ejs\": [\n\t\t\"qJTN\",\n\t\t106\n\t],\n\t\"./prism-ejs.js\": [\n\t\t\"qJTN\",\n\t\t106\n\t],\n\t\"./prism-ejs.min\": [\n\t\t\"46kI\",\n\t\t107\n\t],\n\t\"./prism-ejs.min.js\": [\n\t\t\"46kI\",\n\t\t107\n\t],\n\t\"./prism-elixir\": [\n\t\t\"9QaP\",\n\t\t108\n\t],\n\t\"./prism-elixir.js\": [\n\t\t\"9QaP\",\n\t\t108\n\t],\n\t\"./prism-elixir.min\": [\n\t\t\"55wA\",\n\t\t109\n\t],\n\t\"./prism-elixir.min.js\": [\n\t\t\"55wA\",\n\t\t109\n\t],\n\t\"./prism-elm\": [\n\t\t\"eIXP\",\n\t\t110\n\t],\n\t\"./prism-elm.js\": [\n\t\t\"eIXP\",\n\t\t110\n\t],\n\t\"./prism-elm.min\": [\n\t\t\"RqSG\",\n\t\t111\n\t],\n\t\"./prism-elm.min.js\": [\n\t\t\"RqSG\",\n\t\t111\n\t],\n\t\"./prism-erb\": [\n\t\t\"00hE\",\n\t\t112\n\t],\n\t\"./prism-erb.js\": [\n\t\t\"00hE\",\n\t\t112\n\t],\n\t\"./prism-erb.min\": [\n\t\t\"Ou55\",\n\t\t113\n\t],\n\t\"./prism-erb.min.js\": [\n\t\t\"Ou55\",\n\t\t113\n\t],\n\t\"./prism-erlang\": [\n\t\t\"nrL0\",\n\t\t114\n\t],\n\t\"./prism-erlang.js\": [\n\t\t\"nrL0\",\n\t\t114\n\t],\n\t\"./prism-erlang.min\": [\n\t\t\"2v+r\",\n\t\t115\n\t],\n\t\"./prism-erlang.min.js\": [\n\t\t\"2v+r\",\n\t\t115\n\t],\n\t\"./prism-etlua\": [\n\t\t\"nF1u\",\n\t\t116\n\t],\n\t\"./prism-etlua.js\": [\n\t\t\"nF1u\",\n\t\t116\n\t],\n\t\"./prism-etlua.min\": [\n\t\t\"fZf5\",\n\t\t117\n\t],\n\t\"./prism-etlua.min.js\": [\n\t\t\"fZf5\",\n\t\t117\n\t],\n\t\"./prism-excel-formula\": [\n\t\t\"0fuW\",\n\t\t118\n\t],\n\t\"./prism-excel-formula.js\": [\n\t\t\"0fuW\",\n\t\t118\n\t],\n\t\"./prism-excel-formula.min\": [\n\t\t\"LtKg\",\n\t\t119\n\t],\n\t\"./prism-excel-formula.min.js\": [\n\t\t\"LtKg\",\n\t\t119\n\t],\n\t\"./prism-factor\": [\n\t\t\"jxYe\",\n\t\t120\n\t],\n\t\"./prism-factor.js\": [\n\t\t\"jxYe\",\n\t\t120\n\t],\n\t\"./prism-factor.min\": [\n\t\t\"dvj4\",\n\t\t121\n\t],\n\t\"./prism-factor.min.js\": [\n\t\t\"dvj4\",\n\t\t121\n\t],\n\t\"./prism-firestore-security-rules\": [\n\t\t\"E9jH\",\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.js\": [\n\t\t\"E9jH\",\n\t\t122\n\t],\n\t\"./prism-firestore-security-rules.min\": [\n\t\t\"p/JI\",\n\t\t123\n\t],\n\t\"./prism-firestore-security-rules.min.js\": [\n\t\t\"p/JI\",\n\t\t123\n\t],\n\t\"./prism-flow\": [\n\t\t\"dBHq\",\n\t\t124\n\t],\n\t\"./prism-flow.js\": [\n\t\t\"dBHq\",\n\t\t124\n\t],\n\t\"./prism-flow.min\": [\n\t\t\"HIyA\",\n\t\t125\n\t],\n\t\"./prism-flow.min.js\": [\n\t\t\"HIyA\",\n\t\t125\n\t],\n\t\"./prism-fortran\": [\n\t\t\"/nb9\",\n\t\t126\n\t],\n\t\"./prism-fortran.js\": [\n\t\t\"/nb9\",\n\t\t126\n\t],\n\t\"./prism-fortran.min\": [\n\t\t\"I3A5\",\n\t\t127\n\t],\n\t\"./prism-fortran.min.js\": [\n\t\t\"I3A5\",\n\t\t127\n\t],\n\t\"./prism-fsharp\": [\n\t\t\"PUL1\",\n\t\t128\n\t],\n\t\"./prism-fsharp.js\": [\n\t\t\"PUL1\",\n\t\t128\n\t],\n\t\"./prism-fsharp.min\": [\n\t\t\"7yp0\",\n\t\t129\n\t],\n\t\"./prism-fsharp.min.js\": [\n\t\t\"7yp0\",\n\t\t129\n\t],\n\t\"./prism-ftl\": [\n\t\t\"8RTI\",\n\t\t130\n\t],\n\t\"./prism-ftl.js\": [\n\t\t\"8RTI\",\n\t\t130\n\t],\n\t\"./prism-ftl.min\": [\n\t\t\"urwF\",\n\t\t131\n\t],\n\t\"./prism-ftl.min.js\": [\n\t\t\"urwF\",\n\t\t131\n\t],\n\t\"./prism-gcode\": [\n\t\t\"Q046\",\n\t\t132\n\t],\n\t\"./prism-gcode.js\": [\n\t\t\"Q046\",\n\t\t132\n\t],\n\t\"./prism-gcode.min\": [\n\t\t\"mQJc\",\n\t\t133\n\t],\n\t\"./prism-gcode.min.js\": [\n\t\t\"mQJc\",\n\t\t133\n\t],\n\t\"./prism-gdscript\": [\n\t\t\"Z7/u\",\n\t\t134\n\t],\n\t\"./prism-gdscript.js\": [\n\t\t\"Z7/u\",\n\t\t134\n\t],\n\t\"./prism-gdscript.min\": [\n\t\t\"7Jgu\",\n\t\t135\n\t],\n\t\"./prism-gdscript.min.js\": [\n\t\t\"7Jgu\",\n\t\t135\n\t],\n\t\"./prism-gedcom\": [\n\t\t\"qiXI\",\n\t\t136\n\t],\n\t\"./prism-gedcom.js\": [\n\t\t\"qiXI\",\n\t\t136\n\t],\n\t\"./prism-gedcom.min\": [\n\t\t\"6X6h\",\n\t\t137\n\t],\n\t\"./prism-gedcom.min.js\": [\n\t\t\"6X6h\",\n\t\t137\n\t],\n\t\"./prism-gherkin\": [\n\t\t\"PEIs\",\n\t\t138\n\t],\n\t\"./prism-gherkin.js\": [\n\t\t\"PEIs\",\n\t\t138\n\t],\n\t\"./prism-gherkin.min\": [\n\t\t\"wpE1\",\n\t\t139\n\t],\n\t\"./prism-gherkin.min.js\": [\n\t\t\"wpE1\",\n\t\t139\n\t],\n\t\"./prism-git\": [\n\t\t\"B6Nr\",\n\t\t140\n\t],\n\t\"./prism-git.js\": [\n\t\t\"B6Nr\",\n\t\t140\n\t],\n\t\"./prism-git.min\": [\n\t\t\"svzT\",\n\t\t141\n\t],\n\t\"./prism-git.min.js\": [\n\t\t\"svzT\",\n\t\t141\n\t],\n\t\"./prism-glsl\": [\n\t\t\"3xzq\",\n\t\t142\n\t],\n\t\"./prism-glsl.js\": [\n\t\t\"3xzq\",\n\t\t142\n\t],\n\t\"./prism-glsl.min\": [\n\t\t\"3VrA\",\n\t\t143\n\t],\n\t\"./prism-glsl.min.js\": [\n\t\t\"3VrA\",\n\t\t143\n\t],\n\t\"./prism-gml\": [\n\t\t\"gRcZ\",\n\t\t144\n\t],\n\t\"./prism-gml.js\": [\n\t\t\"gRcZ\",\n\t\t144\n\t],\n\t\"./prism-gml.min\": [\n\t\t\"+i99\",\n\t\t145\n\t],\n\t\"./prism-gml.min.js\": [\n\t\t\"+i99\",\n\t\t145\n\t],\n\t\"./prism-go\": [\n\t\t\"GYl3\",\n\t\t146\n\t],\n\t\"./prism-go.js\": [\n\t\t\"GYl3\",\n\t\t146\n\t],\n\t\"./prism-go.min\": [\n\t\t\"JT94\",\n\t\t147\n\t],\n\t\"./prism-go.min.js\": [\n\t\t\"JT94\",\n\t\t147\n\t],\n\t\"./prism-graphql\": [\n\t\t\"Y613\",\n\t\t148\n\t],\n\t\"./prism-graphql.js\": [\n\t\t\"Y613\",\n\t\t148\n\t],\n\t\"./prism-graphql.min\": [\n\t\t\"CYEG\",\n\t\t149\n\t],\n\t\"./prism-graphql.min.js\": [\n\t\t\"CYEG\",\n\t\t149\n\t],\n\t\"./prism-groovy\": [\n\t\t\"4l/p\",\n\t\t150\n\t],\n\t\"./prism-groovy.js\": [\n\t\t\"4l/p\",\n\t\t150\n\t],\n\t\"./prism-groovy.min\": [\n\t\t\"cjoo\",\n\t\t151\n\t],\n\t\"./prism-groovy.min.js\": [\n\t\t\"cjoo\",\n\t\t151\n\t],\n\t\"./prism-haml\": [\n\t\t\"weJn\",\n\t\t152\n\t],\n\t\"./prism-haml.js\": [\n\t\t\"weJn\",\n\t\t152\n\t],\n\t\"./prism-haml.min\": [\n\t\t\"qzw6\",\n\t\t153\n\t],\n\t\"./prism-haml.min.js\": [\n\t\t\"qzw6\",\n\t\t153\n\t],\n\t\"./prism-handlebars\": [\n\t\t\"5dm5\",\n\t\t154\n\t],\n\t\"./prism-handlebars.js\": [\n\t\t\"5dm5\",\n\t\t154\n\t],\n\t\"./prism-handlebars.min\": [\n\t\t\"PSow\",\n\t\t155\n\t],\n\t\"./prism-handlebars.min.js\": [\n\t\t\"PSow\",\n\t\t155\n\t],\n\t\"./prism-haskell\": [\n\t\t\"T8iE\",\n\t\t156\n\t],\n\t\"./prism-haskell.js\": [\n\t\t\"T8iE\",\n\t\t156\n\t],\n\t\"./prism-haskell.min\": [\n\t\t\"QuqC\",\n\t\t157\n\t],\n\t\"./prism-haskell.min.js\": [\n\t\t\"QuqC\",\n\t\t157\n\t],\n\t\"./prism-haxe\": [\n\t\t\"0WON\",\n\t\t158\n\t],\n\t\"./prism-haxe.js\": [\n\t\t\"0WON\",\n\t\t158\n\t],\n\t\"./prism-haxe.min\": [\n\t\t\"8lNV\",\n\t\t159\n\t],\n\t\"./prism-haxe.min.js\": [\n\t\t\"8lNV\",\n\t\t159\n\t],\n\t\"./prism-hcl\": [\n\t\t\"9pLb\",\n\t\t160\n\t],\n\t\"./prism-hcl.js\": [\n\t\t\"9pLb\",\n\t\t160\n\t],\n\t\"./prism-hcl.min\": [\n\t\t\"T2lk\",\n\t\t161\n\t],\n\t\"./prism-hcl.min.js\": [\n\t\t\"T2lk\",\n\t\t161\n\t],\n\t\"./prism-hlsl\": [\n\t\t\"ZZ/H\",\n\t\t162\n\t],\n\t\"./prism-hlsl.js\": [\n\t\t\"ZZ/H\",\n\t\t162\n\t],\n\t\"./prism-hlsl.min\": [\n\t\t\"eYpK\",\n\t\t163\n\t],\n\t\"./prism-hlsl.min.js\": [\n\t\t\"eYpK\",\n\t\t163\n\t],\n\t\"./prism-hpkp\": [\n\t\t\"zI6Y\",\n\t\t164\n\t],\n\t\"./prism-hpkp.js\": [\n\t\t\"zI6Y\",\n\t\t164\n\t],\n\t\"./prism-hpkp.min\": [\n\t\t\"i2Bp\",\n\t\t165\n\t],\n\t\"./prism-hpkp.min.js\": [\n\t\t\"i2Bp\",\n\t\t165\n\t],\n\t\"./prism-hsts\": [\n\t\t\"xdrT\",\n\t\t166\n\t],\n\t\"./prism-hsts.js\": [\n\t\t\"xdrT\",\n\t\t166\n\t],\n\t\"./prism-hsts.min\": [\n\t\t\"ZghX\",\n\t\t167\n\t],\n\t\"./prism-hsts.min.js\": [\n\t\t\"ZghX\",\n\t\t167\n\t],\n\t\"./prism-http\": [\n\t\t\"kYdm\",\n\t\t168\n\t],\n\t\"./prism-http.js\": [\n\t\t\"kYdm\",\n\t\t168\n\t],\n\t\"./prism-http.min\": [\n\t\t\"U+B9\",\n\t\t169\n\t],\n\t\"./prism-http.min.js\": [\n\t\t\"U+B9\",\n\t\t169\n\t],\n\t\"./prism-ichigojam\": [\n\t\t\"SN7l\",\n\t\t170\n\t],\n\t\"./prism-ichigojam.js\": [\n\t\t\"SN7l\",\n\t\t170\n\t],\n\t\"./prism-ichigojam.min\": [\n\t\t\"++u4\",\n\t\t171\n\t],\n\t\"./prism-ichigojam.min.js\": [\n\t\t\"++u4\",\n\t\t171\n\t],\n\t\"./prism-icon\": [\n\t\t\"dYyu\",\n\t\t172\n\t],\n\t\"./prism-icon.js\": [\n\t\t\"dYyu\",\n\t\t172\n\t],\n\t\"./prism-icon.min\": [\n\t\t\"68Nm\",\n\t\t173\n\t],\n\t\"./prism-icon.min.js\": [\n\t\t\"68Nm\",\n\t\t173\n\t],\n\t\"./prism-iecst\": [\n\t\t\"dC2J\",\n\t\t174\n\t],\n\t\"./prism-iecst.js\": [\n\t\t\"dC2J\",\n\t\t174\n\t],\n\t\"./prism-iecst.min\": [\n\t\t\"FAE3\",\n\t\t175\n\t],\n\t\"./prism-iecst.min.js\": [\n\t\t\"FAE3\",\n\t\t175\n\t],\n\t\"./prism-ignore\": [\n\t\t\"0sus\",\n\t\t176\n\t],\n\t\"./prism-ignore.js\": [\n\t\t\"0sus\",\n\t\t176\n\t],\n\t\"./prism-ignore.min\": [\n\t\t\"ptSg\",\n\t\t177\n\t],\n\t\"./prism-ignore.min.js\": [\n\t\t\"ptSg\",\n\t\t177\n\t],\n\t\"./prism-inform7\": [\n\t\t\"7d9O\",\n\t\t178\n\t],\n\t\"./prism-inform7.js\": [\n\t\t\"7d9O\",\n\t\t178\n\t],\n\t\"./prism-inform7.min\": [\n\t\t\"PB52\",\n\t\t179\n\t],\n\t\"./prism-inform7.min.js\": [\n\t\t\"PB52\",\n\t\t179\n\t],\n\t\"./prism-ini\": [\n\t\t\"vy4m\",\n\t\t180\n\t],\n\t\"./prism-ini.js\": [\n\t\t\"vy4m\",\n\t\t180\n\t],\n\t\"./prism-ini.min\": [\n\t\t\"rdcy\",\n\t\t181\n\t],\n\t\"./prism-ini.min.js\": [\n\t\t\"rdcy\",\n\t\t181\n\t],\n\t\"./prism-io\": [\n\t\t\"DB5f\",\n\t\t182\n\t],\n\t\"./prism-io.js\": [\n\t\t\"DB5f\",\n\t\t182\n\t],\n\t\"./prism-io.min\": [\n\t\t\"NHyX\",\n\t\t183\n\t],\n\t\"./prism-io.min.js\": [\n\t\t\"NHyX\",\n\t\t183\n\t],\n\t\"./prism-j\": [\n\t\t\"8XF4\",\n\t\t184\n\t],\n\t\"./prism-j.js\": [\n\t\t\"8XF4\",\n\t\t184\n\t],\n\t\"./prism-j.min\": [\n\t\t\"OGQG\",\n\t\t185\n\t],\n\t\"./prism-j.min.js\": [\n\t\t\"OGQG\",\n\t\t185\n\t],\n\t\"./prism-java\": [\n\t\t\"ki2X\",\n\t\t186\n\t],\n\t\"./prism-java.js\": [\n\t\t\"ki2X\",\n\t\t186\n\t],\n\t\"./prism-java.min\": [\n\t\t\"2NnL\",\n\t\t187\n\t],\n\t\"./prism-java.min.js\": [\n\t\t\"2NnL\",\n\t\t187\n\t],\n\t\"./prism-javadoc\": [\n\t\t\"PRNa\",\n\t\t188\n\t],\n\t\"./prism-javadoc.js\": [\n\t\t\"PRNa\",\n\t\t188\n\t],\n\t\"./prism-javadoc.min\": [\n\t\t\"haKv\",\n\t\t189\n\t],\n\t\"./prism-javadoc.min.js\": [\n\t\t\"haKv\",\n\t\t189\n\t],\n\t\"./prism-javadoclike\": [\n\t\t\"c11f\",\n\t\t190\n\t],\n\t\"./prism-javadoclike.js\": [\n\t\t\"c11f\",\n\t\t190\n\t],\n\t\"./prism-javadoclike.min\": [\n\t\t\"hKbW\",\n\t\t191\n\t],\n\t\"./prism-javadoclike.min.js\": [\n\t\t\"hKbW\",\n\t\t191\n\t],\n\t\"./prism-javascript\": [\n\t\t\"QWvX\",\n\t\t192\n\t],\n\t\"./prism-javascript.js\": [\n\t\t\"QWvX\",\n\t\t192\n\t],\n\t\"./prism-javascript.min\": [\n\t\t\"F8rA\",\n\t\t193\n\t],\n\t\"./prism-javascript.min.js\": [\n\t\t\"F8rA\",\n\t\t193\n\t],\n\t\"./prism-javastacktrace\": [\n\t\t\"tkzC\",\n\t\t194\n\t],\n\t\"./prism-javastacktrace.js\": [\n\t\t\"tkzC\",\n\t\t194\n\t],\n\t\"./prism-javastacktrace.min\": [\n\t\t\"nkUL\",\n\t\t195\n\t],\n\t\"./prism-javastacktrace.min.js\": [\n\t\t\"nkUL\",\n\t\t195\n\t],\n\t\"./prism-jolie\": [\n\t\t\"/27n\",\n\t\t196\n\t],\n\t\"./prism-jolie.js\": [\n\t\t\"/27n\",\n\t\t196\n\t],\n\t\"./prism-jolie.min\": [\n\t\t\"TuSZ\",\n\t\t197\n\t],\n\t\"./prism-jolie.min.js\": [\n\t\t\"TuSZ\",\n\t\t197\n\t],\n\t\"./prism-jq\": [\n\t\t\"uYYa\",\n\t\t198\n\t],\n\t\"./prism-jq.js\": [\n\t\t\"uYYa\",\n\t\t198\n\t],\n\t\"./prism-jq.min\": [\n\t\t\"NmqT\",\n\t\t199\n\t],\n\t\"./prism-jq.min.js\": [\n\t\t\"NmqT\",\n\t\t199\n\t],\n\t\"./prism-js-extras\": [\n\t\t\"+X5Q\",\n\t\t200\n\t],\n\t\"./prism-js-extras.js\": [\n\t\t\"+X5Q\",\n\t\t200\n\t],\n\t\"./prism-js-extras.min\": [\n\t\t\"Dzqq\",\n\t\t201\n\t],\n\t\"./prism-js-extras.min.js\": [\n\t\t\"Dzqq\",\n\t\t201\n\t],\n\t\"./prism-js-templates\": [\n\t\t\"O9Io\",\n\t\t202\n\t],\n\t\"./prism-js-templates.js\": [\n\t\t\"O9Io\",\n\t\t202\n\t],\n\t\"./prism-js-templates.min\": [\n\t\t\"MYhN\",\n\t\t203\n\t],\n\t\"./prism-js-templates.min.js\": [\n\t\t\"MYhN\",\n\t\t203\n\t],\n\t\"./prism-jsdoc\": [\n\t\t\"k4T/\",\n\t\t204\n\t],\n\t\"./prism-jsdoc.js\": [\n\t\t\"k4T/\",\n\t\t204\n\t],\n\t\"./prism-jsdoc.min\": [\n\t\t\"H/fb\",\n\t\t205\n\t],\n\t\"./prism-jsdoc.min.js\": [\n\t\t\"H/fb\",\n\t\t205\n\t],\n\t\"./prism-json\": [\n\t\t\"85O/\",\n\t\t206\n\t],\n\t\"./prism-json.js\": [\n\t\t\"85O/\",\n\t\t206\n\t],\n\t\"./prism-json.min\": [\n\t\t\"8U5G\",\n\t\t207\n\t],\n\t\"./prism-json.min.js\": [\n\t\t\"8U5G\",\n\t\t207\n\t],\n\t\"./prism-json5\": [\n\t\t\"R4Wz\",\n\t\t208\n\t],\n\t\"./prism-json5.js\": [\n\t\t\"R4Wz\",\n\t\t208\n\t],\n\t\"./prism-json5.min\": [\n\t\t\"aAW9\",\n\t\t209\n\t],\n\t\"./prism-json5.min.js\": [\n\t\t\"aAW9\",\n\t\t209\n\t],\n\t\"./prism-jsonp\": [\n\t\t\"MsKQ\",\n\t\t210\n\t],\n\t\"./prism-jsonp.js\": [\n\t\t\"MsKQ\",\n\t\t210\n\t],\n\t\"./prism-jsonp.min\": [\n\t\t\"gD7p\",\n\t\t211\n\t],\n\t\"./prism-jsonp.min.js\": [\n\t\t\"gD7p\",\n\t\t211\n\t],\n\t\"./prism-jsstacktrace\": [\n\t\t\"IqA8\",\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.js\": [\n\t\t\"IqA8\",\n\t\t212\n\t],\n\t\"./prism-jsstacktrace.min\": [\n\t\t\"3ubN\",\n\t\t213\n\t],\n\t\"./prism-jsstacktrace.min.js\": [\n\t\t\"3ubN\",\n\t\t213\n\t],\n\t\"./prism-jsx\": [\n\t\t\"CjHp\",\n\t\t214\n\t],\n\t\"./prism-jsx.js\": [\n\t\t\"CjHp\",\n\t\t214\n\t],\n\t\"./prism-jsx.min\": [\n\t\t\"s4fy\",\n\t\t215\n\t],\n\t\"./prism-jsx.min.js\": [\n\t\t\"s4fy\",\n\t\t215\n\t],\n\t\"./prism-julia\": [\n\t\t\"5M+F\",\n\t\t216\n\t],\n\t\"./prism-julia.js\": [\n\t\t\"5M+F\",\n\t\t216\n\t],\n\t\"./prism-julia.min\": [\n\t\t\"ZUux\",\n\t\t217\n\t],\n\t\"./prism-julia.min.js\": [\n\t\t\"ZUux\",\n\t\t217\n\t],\n\t\"./prism-keyman\": [\n\t\t\"ST66\",\n\t\t218\n\t],\n\t\"./prism-keyman.js\": [\n\t\t\"ST66\",\n\t\t218\n\t],\n\t\"./prism-keyman.min\": [\n\t\t\"SsWp\",\n\t\t219\n\t],\n\t\"./prism-keyman.min.js\": [\n\t\t\"SsWp\",\n\t\t219\n\t],\n\t\"./prism-kotlin\": [\n\t\t\"ZM0j\",\n\t\t220\n\t],\n\t\"./prism-kotlin.js\": [\n\t\t\"ZM0j\",\n\t\t220\n\t],\n\t\"./prism-kotlin.min\": [\n\t\t\"x9vm\",\n\t\t221\n\t],\n\t\"./prism-kotlin.min.js\": [\n\t\t\"x9vm\",\n\t\t221\n\t],\n\t\"./prism-latex\": [\n\t\t\"u1v7\",\n\t\t222\n\t],\n\t\"./prism-latex.js\": [\n\t\t\"u1v7\",\n\t\t222\n\t],\n\t\"./prism-latex.min\": [\n\t\t\"8GbO\",\n\t\t223\n\t],\n\t\"./prism-latex.min.js\": [\n\t\t\"8GbO\",\n\t\t223\n\t],\n\t\"./prism-latte\": [\n\t\t\"Vj/u\",\n\t\t224\n\t],\n\t\"./prism-latte.js\": [\n\t\t\"Vj/u\",\n\t\t224\n\t],\n\t\"./prism-latte.min\": [\n\t\t\"PrI+\",\n\t\t225\n\t],\n\t\"./prism-latte.min.js\": [\n\t\t\"PrI+\",\n\t\t225\n\t],\n\t\"./prism-less\": [\n\t\t\"+fy4\",\n\t\t226\n\t],\n\t\"./prism-less.js\": [\n\t\t\"+fy4\",\n\t\t226\n\t],\n\t\"./prism-less.min\": [\n\t\t\"+Iwu\",\n\t\t227\n\t],\n\t\"./prism-less.min.js\": [\n\t\t\"+Iwu\",\n\t\t227\n\t],\n\t\"./prism-lilypond\": [\n\t\t\"HAjR\",\n\t\t228\n\t],\n\t\"./prism-lilypond.js\": [\n\t\t\"HAjR\",\n\t\t228\n\t],\n\t\"./prism-lilypond.min\": [\n\t\t\"rFDT\",\n\t\t229\n\t],\n\t\"./prism-lilypond.min.js\": [\n\t\t\"rFDT\",\n\t\t229\n\t],\n\t\"./prism-liquid\": [\n\t\t\"zxki\",\n\t\t230\n\t],\n\t\"./prism-liquid.js\": [\n\t\t\"zxki\",\n\t\t230\n\t],\n\t\"./prism-liquid.min\": [\n\t\t\"dQt3\",\n\t\t231\n\t],\n\t\"./prism-liquid.min.js\": [\n\t\t\"dQt3\",\n\t\t231\n\t],\n\t\"./prism-lisp\": [\n\t\t\"9IQp\",\n\t\t232\n\t],\n\t\"./prism-lisp.js\": [\n\t\t\"9IQp\",\n\t\t232\n\t],\n\t\"./prism-lisp.min\": [\n\t\t\"zW5F\",\n\t\t233\n\t],\n\t\"./prism-lisp.min.js\": [\n\t\t\"zW5F\",\n\t\t233\n\t],\n\t\"./prism-livescript\": [\n\t\t\"Ol/B\",\n\t\t234\n\t],\n\t\"./prism-livescript.js\": [\n\t\t\"Ol/B\",\n\t\t234\n\t],\n\t\"./prism-livescript.min\": [\n\t\t\"N1Py\",\n\t\t235\n\t],\n\t\"./prism-livescript.min.js\": [\n\t\t\"N1Py\",\n\t\t235\n\t],\n\t\"./prism-llvm\": [\n\t\t\"USa+\",\n\t\t236\n\t],\n\t\"./prism-llvm.js\": [\n\t\t\"USa+\",\n\t\t236\n\t],\n\t\"./prism-llvm.min\": [\n\t\t\"i3Qe\",\n\t\t237\n\t],\n\t\"./prism-llvm.min.js\": [\n\t\t\"i3Qe\",\n\t\t237\n\t],\n\t\"./prism-lolcode\": [\n\t\t\"hnL7\",\n\t\t238\n\t],\n\t\"./prism-lolcode.js\": [\n\t\t\"hnL7\",\n\t\t238\n\t],\n\t\"./prism-lolcode.min\": [\n\t\t\"M0SF\",\n\t\t239\n\t],\n\t\"./prism-lolcode.min.js\": [\n\t\t\"M0SF\",\n\t\t239\n\t],\n\t\"./prism-lua\": [\n\t\t\"ZwEA\",\n\t\t240\n\t],\n\t\"./prism-lua.js\": [\n\t\t\"ZwEA\",\n\t\t240\n\t],\n\t\"./prism-lua.min\": [\n\t\t\"qkUO\",\n\t\t241\n\t],\n\t\"./prism-lua.min.js\": [\n\t\t\"qkUO\",\n\t\t241\n\t],\n\t\"./prism-makefile\": [\n\t\t\"DV0F\",\n\t\t242\n\t],\n\t\"./prism-makefile.js\": [\n\t\t\"DV0F\",\n\t\t242\n\t],\n\t\"./prism-makefile.min\": [\n\t\t\"ftGy\",\n\t\t243\n\t],\n\t\"./prism-makefile.min.js\": [\n\t\t\"ftGy\",\n\t\t243\n\t],\n\t\"./prism-markdown\": [\n\t\t\"gmzG\"\n\t],\n\t\"./prism-markdown.js\": [\n\t\t\"gmzG\"\n\t],\n\t\"./prism-markdown.min\": [\n\t\t\"9seO\",\n\t\t244\n\t],\n\t\"./prism-markdown.min.js\": [\n\t\t\"9seO\",\n\t\t244\n\t],\n\t\"./prism-markup\": [\n\t\t\"bPOv\"\n\t],\n\t\"./prism-markup-templating\": [\n\t\t\"Yhcd\",\n\t\t245\n\t],\n\t\"./prism-markup-templating.js\": [\n\t\t\"Yhcd\",\n\t\t245\n\t],\n\t\"./prism-markup-templating.min\": [\n\t\t\"1p9r\",\n\t\t246\n\t],\n\t\"./prism-markup-templating.min.js\": [\n\t\t\"1p9r\",\n\t\t246\n\t],\n\t\"./prism-markup.js\": [\n\t\t\"bPOv\"\n\t],\n\t\"./prism-markup.min\": [\n\t\t\"/Des\",\n\t\t247\n\t],\n\t\"./prism-markup.min.js\": [\n\t\t\"/Des\",\n\t\t247\n\t],\n\t\"./prism-matlab\": [\n\t\t\"1NVV\",\n\t\t248\n\t],\n\t\"./prism-matlab.js\": [\n\t\t\"1NVV\",\n\t\t248\n\t],\n\t\"./prism-matlab.min\": [\n\t\t\"Wmu2\",\n\t\t249\n\t],\n\t\"./prism-matlab.min.js\": [\n\t\t\"Wmu2\",\n\t\t249\n\t],\n\t\"./prism-mel\": [\n\t\t\"+ZwH\",\n\t\t250\n\t],\n\t\"./prism-mel.js\": [\n\t\t\"+ZwH\",\n\t\t250\n\t],\n\t\"./prism-mel.min\": [\n\t\t\"uMZe\",\n\t\t251\n\t],\n\t\"./prism-mel.min.js\": [\n\t\t\"uMZe\",\n\t\t251\n\t],\n\t\"./prism-mizar\": [\n\t\t\"ReX+\",\n\t\t252\n\t],\n\t\"./prism-mizar.js\": [\n\t\t\"ReX+\",\n\t\t252\n\t],\n\t\"./prism-mizar.min\": [\n\t\t\"0JwH\",\n\t\t253\n\t],\n\t\"./prism-mizar.min.js\": [\n\t\t\"0JwH\",\n\t\t253\n\t],\n\t\"./prism-monkey\": [\n\t\t\"BbjY\",\n\t\t254\n\t],\n\t\"./prism-monkey.js\": [\n\t\t\"BbjY\",\n\t\t254\n\t],\n\t\"./prism-monkey.min\": [\n\t\t\"S0he\",\n\t\t255\n\t],\n\t\"./prism-monkey.min.js\": [\n\t\t\"S0he\",\n\t\t255\n\t],\n\t\"./prism-moonscript\": [\n\t\t\"6Kvp\",\n\t\t256\n\t],\n\t\"./prism-moonscript.js\": [\n\t\t\"6Kvp\",\n\t\t256\n\t],\n\t\"./prism-moonscript.min\": [\n\t\t\"YmzF\",\n\t\t257\n\t],\n\t\"./prism-moonscript.min.js\": [\n\t\t\"YmzF\",\n\t\t257\n\t],\n\t\"./prism-n1ql\": [\n\t\t\"YL/C\",\n\t\t258\n\t],\n\t\"./prism-n1ql.js\": [\n\t\t\"YL/C\",\n\t\t258\n\t],\n\t\"./prism-n1ql.min\": [\n\t\t\"pbz6\",\n\t\t259\n\t],\n\t\"./prism-n1ql.min.js\": [\n\t\t\"pbz6\",\n\t\t259\n\t],\n\t\"./prism-n4js\": [\n\t\t\"dgIA\",\n\t\t260\n\t],\n\t\"./prism-n4js.js\": [\n\t\t\"dgIA\",\n\t\t260\n\t],\n\t\"./prism-n4js.min\": [\n\t\t\"ThO0\",\n\t\t261\n\t],\n\t\"./prism-n4js.min.js\": [\n\t\t\"ThO0\",\n\t\t261\n\t],\n\t\"./prism-nand2tetris-hdl\": [\n\t\t\"jjUo\",\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.js\": [\n\t\t\"jjUo\",\n\t\t262\n\t],\n\t\"./prism-nand2tetris-hdl.min\": [\n\t\t\"ApWF\",\n\t\t263\n\t],\n\t\"./prism-nand2tetris-hdl.min.js\": [\n\t\t\"ApWF\",\n\t\t263\n\t],\n\t\"./prism-nasm\": [\n\t\t\"h7LQ\",\n\t\t264\n\t],\n\t\"./prism-nasm.js\": [\n\t\t\"h7LQ\",\n\t\t264\n\t],\n\t\"./prism-nasm.min\": [\n\t\t\"tP6A\",\n\t\t265\n\t],\n\t\"./prism-nasm.min.js\": [\n\t\t\"tP6A\",\n\t\t265\n\t],\n\t\"./prism-neon\": [\n\t\t\"bDPX\",\n\t\t266\n\t],\n\t\"./prism-neon.js\": [\n\t\t\"bDPX\",\n\t\t266\n\t],\n\t\"./prism-neon.min\": [\n\t\t\"b0j2\",\n\t\t267\n\t],\n\t\"./prism-neon.min.js\": [\n\t\t\"b0j2\",\n\t\t267\n\t],\n\t\"./prism-nginx\": [\n\t\t\"oNmE\",\n\t\t268\n\t],\n\t\"./prism-nginx.js\": [\n\t\t\"oNmE\",\n\t\t268\n\t],\n\t\"./prism-nginx.min\": [\n\t\t\"3o8k\",\n\t\t269\n\t],\n\t\"./prism-nginx.min.js\": [\n\t\t\"3o8k\",\n\t\t269\n\t],\n\t\"./prism-nim\": [\n\t\t\"8sAH\",\n\t\t270\n\t],\n\t\"./prism-nim.js\": [\n\t\t\"8sAH\",\n\t\t270\n\t],\n\t\"./prism-nim.min\": [\n\t\t\"9yTW\",\n\t\t271\n\t],\n\t\"./prism-nim.min.js\": [\n\t\t\"9yTW\",\n\t\t271\n\t],\n\t\"./prism-nix\": [\n\t\t\"r4a2\",\n\t\t272\n\t],\n\t\"./prism-nix.js\": [\n\t\t\"r4a2\",\n\t\t272\n\t],\n\t\"./prism-nix.min\": [\n\t\t\"GPNq\",\n\t\t273\n\t],\n\t\"./prism-nix.min.js\": [\n\t\t\"GPNq\",\n\t\t273\n\t],\n\t\"./prism-nsis\": [\n\t\t\"TUlN\",\n\t\t274\n\t],\n\t\"./prism-nsis.js\": [\n\t\t\"TUlN\",\n\t\t274\n\t],\n\t\"./prism-nsis.min\": [\n\t\t\"pqW/\",\n\t\t275\n\t],\n\t\"./prism-nsis.min.js\": [\n\t\t\"pqW/\",\n\t\t275\n\t],\n\t\"./prism-objectivec\": [\n\t\t\"TL9f\",\n\t\t276\n\t],\n\t\"./prism-objectivec.js\": [\n\t\t\"TL9f\",\n\t\t276\n\t],\n\t\"./prism-objectivec.min\": [\n\t\t\"vzhw\",\n\t\t277\n\t],\n\t\"./prism-objectivec.min.js\": [\n\t\t\"vzhw\",\n\t\t277\n\t],\n\t\"./prism-ocaml\": [\n\t\t\"bEZN\",\n\t\t278\n\t],\n\t\"./prism-ocaml.js\": [\n\t\t\"bEZN\",\n\t\t278\n\t],\n\t\"./prism-ocaml.min\": [\n\t\t\"FCFW\",\n\t\t279\n\t],\n\t\"./prism-ocaml.min.js\": [\n\t\t\"FCFW\",\n\t\t279\n\t],\n\t\"./prism-opencl\": [\n\t\t\"YT+k\",\n\t\t280\n\t],\n\t\"./prism-opencl.js\": [\n\t\t\"YT+k\",\n\t\t280\n\t],\n\t\"./prism-opencl.min\": [\n\t\t\"DBTv\",\n\t\t281\n\t],\n\t\"./prism-opencl.min.js\": [\n\t\t\"DBTv\",\n\t\t281\n\t],\n\t\"./prism-oz\": [\n\t\t\"9xB9\",\n\t\t282\n\t],\n\t\"./prism-oz.js\": [\n\t\t\"9xB9\",\n\t\t282\n\t],\n\t\"./prism-oz.min\": [\n\t\t\"fRdp\",\n\t\t283\n\t],\n\t\"./prism-oz.min.js\": [\n\t\t\"fRdp\",\n\t\t283\n\t],\n\t\"./prism-parigp\": [\n\t\t\"GF4Z\",\n\t\t284\n\t],\n\t\"./prism-parigp.js\": [\n\t\t\"GF4Z\",\n\t\t284\n\t],\n\t\"./prism-parigp.min\": [\n\t\t\"nasO\",\n\t\t285\n\t],\n\t\"./prism-parigp.min.js\": [\n\t\t\"nasO\",\n\t\t285\n\t],\n\t\"./prism-parser\": [\n\t\t\"xdtV\",\n\t\t286\n\t],\n\t\"./prism-parser.js\": [\n\t\t\"xdtV\",\n\t\t286\n\t],\n\t\"./prism-parser.min\": [\n\t\t\"+M5j\",\n\t\t287\n\t],\n\t\"./prism-parser.min.js\": [\n\t\t\"+M5j\",\n\t\t287\n\t],\n\t\"./prism-pascal\": [\n\t\t\"Nuiu\",\n\t\t288\n\t],\n\t\"./prism-pascal.js\": [\n\t\t\"Nuiu\",\n\t\t288\n\t],\n\t\"./prism-pascal.min\": [\n\t\t\"NzNO\",\n\t\t289\n\t],\n\t\"./prism-pascal.min.js\": [\n\t\t\"NzNO\",\n\t\t289\n\t],\n\t\"./prism-pascaligo\": [\n\t\t\"F0Kw\",\n\t\t290\n\t],\n\t\"./prism-pascaligo.js\": [\n\t\t\"F0Kw\",\n\t\t290\n\t],\n\t\"./prism-pascaligo.min\": [\n\t\t\"09pL\",\n\t\t291\n\t],\n\t\"./prism-pascaligo.min.js\": [\n\t\t\"09pL\",\n\t\t291\n\t],\n\t\"./prism-pcaxis\": [\n\t\t\"gA1E\",\n\t\t292\n\t],\n\t\"./prism-pcaxis.js\": [\n\t\t\"gA1E\",\n\t\t292\n\t],\n\t\"./prism-pcaxis.min\": [\n\t\t\"ejCP\",\n\t\t293\n\t],\n\t\"./prism-pcaxis.min.js\": [\n\t\t\"ejCP\",\n\t\t293\n\t],\n\t\"./prism-peoplecode\": [\n\t\t\"5625\",\n\t\t294\n\t],\n\t\"./prism-peoplecode.js\": [\n\t\t\"5625\",\n\t\t294\n\t],\n\t\"./prism-peoplecode.min\": [\n\t\t\"Kxp8\",\n\t\t295\n\t],\n\t\"./prism-peoplecode.min.js\": [\n\t\t\"Kxp8\",\n\t\t295\n\t],\n\t\"./prism-perl\": [\n\t\t\"mR1r\",\n\t\t296\n\t],\n\t\"./prism-perl.js\": [\n\t\t\"mR1r\",\n\t\t296\n\t],\n\t\"./prism-perl.min\": [\n\t\t\"yYpj\",\n\t\t297\n\t],\n\t\"./prism-perl.min.js\": [\n\t\t\"yYpj\",\n\t\t297\n\t],\n\t\"./prism-php\": [\n\t\t\"jpss\",\n\t\t300\n\t],\n\t\"./prism-php-extras\": [\n\t\t\"VZmW\",\n\t\t298\n\t],\n\t\"./prism-php-extras.js\": [\n\t\t\"VZmW\",\n\t\t298\n\t],\n\t\"./prism-php-extras.min\": [\n\t\t\"10iB\",\n\t\t299\n\t],\n\t\"./prism-php-extras.min.js\": [\n\t\t\"10iB\",\n\t\t299\n\t],\n\t\"./prism-php.js\": [\n\t\t\"jpss\",\n\t\t300\n\t],\n\t\"./prism-php.min\": [\n\t\t\"rmha\",\n\t\t301\n\t],\n\t\"./prism-php.min.js\": [\n\t\t\"rmha\",\n\t\t301\n\t],\n\t\"./prism-phpdoc\": [\n\t\t\"pC7O\",\n\t\t302\n\t],\n\t\"./prism-phpdoc.js\": [\n\t\t\"pC7O\",\n\t\t302\n\t],\n\t\"./prism-phpdoc.min\": [\n\t\t\"FLKr\",\n\t\t303\n\t],\n\t\"./prism-phpdoc.min.js\": [\n\t\t\"FLKr\",\n\t\t303\n\t],\n\t\"./prism-plsql\": [\n\t\t\"4MSv\",\n\t\t304\n\t],\n\t\"./prism-plsql.js\": [\n\t\t\"4MSv\",\n\t\t304\n\t],\n\t\"./prism-plsql.min\": [\n\t\t\"DwVn\",\n\t\t305\n\t],\n\t\"./prism-plsql.min.js\": [\n\t\t\"DwVn\",\n\t\t305\n\t],\n\t\"./prism-powerquery\": [\n\t\t\"wqKI\",\n\t\t306\n\t],\n\t\"./prism-powerquery.js\": [\n\t\t\"wqKI\",\n\t\t306\n\t],\n\t\"./prism-powerquery.min\": [\n\t\t\"eCR+\",\n\t\t307\n\t],\n\t\"./prism-powerquery.min.js\": [\n\t\t\"eCR+\",\n\t\t307\n\t],\n\t\"./prism-powershell\": [\n\t\t\"OuMq\",\n\t\t308\n\t],\n\t\"./prism-powershell.js\": [\n\t\t\"OuMq\",\n\t\t308\n\t],\n\t\"./prism-powershell.min\": [\n\t\t\"EpDr\",\n\t\t309\n\t],\n\t\"./prism-powershell.min.js\": [\n\t\t\"EpDr\",\n\t\t309\n\t],\n\t\"./prism-processing\": [\n\t\t\"8oPf\",\n\t\t310\n\t],\n\t\"./prism-processing.js\": [\n\t\t\"8oPf\",\n\t\t310\n\t],\n\t\"./prism-processing.min\": [\n\t\t\"grcN\",\n\t\t311\n\t],\n\t\"./prism-processing.min.js\": [\n\t\t\"grcN\",\n\t\t311\n\t],\n\t\"./prism-prolog\": [\n\t\t\"RzVo\",\n\t\t312\n\t],\n\t\"./prism-prolog.js\": [\n\t\t\"RzVo\",\n\t\t312\n\t],\n\t\"./prism-prolog.min\": [\n\t\t\"k5y/\",\n\t\t313\n\t],\n\t\"./prism-prolog.min.js\": [\n\t\t\"k5y/\",\n\t\t313\n\t],\n\t\"./prism-properties\": [\n\t\t\"9wRM\",\n\t\t314\n\t],\n\t\"./prism-properties.js\": [\n\t\t\"9wRM\",\n\t\t314\n\t],\n\t\"./prism-properties.min\": [\n\t\t\"S/0g\",\n\t\t315\n\t],\n\t\"./prism-properties.min.js\": [\n\t\t\"S/0g\",\n\t\t315\n\t],\n\t\"./prism-protobuf\": [\n\t\t\"RZ5y\",\n\t\t316\n\t],\n\t\"./prism-protobuf.js\": [\n\t\t\"RZ5y\",\n\t\t316\n\t],\n\t\"./prism-protobuf.min\": [\n\t\t\"vJkb\",\n\t\t317\n\t],\n\t\"./prism-protobuf.min.js\": [\n\t\t\"vJkb\",\n\t\t317\n\t],\n\t\"./prism-pug\": [\n\t\t\"dVlL\",\n\t\t318\n\t],\n\t\"./prism-pug.js\": [\n\t\t\"dVlL\",\n\t\t318\n\t],\n\t\"./prism-pug.min\": [\n\t\t\"hAa5\",\n\t\t319\n\t],\n\t\"./prism-pug.min.js\": [\n\t\t\"hAa5\",\n\t\t319\n\t],\n\t\"./prism-puppet\": [\n\t\t\"vyez\",\n\t\t320\n\t],\n\t\"./prism-puppet.js\": [\n\t\t\"vyez\",\n\t\t320\n\t],\n\t\"./prism-puppet.min\": [\n\t\t\"oQl/\",\n\t\t321\n\t],\n\t\"./prism-puppet.min.js\": [\n\t\t\"oQl/\",\n\t\t321\n\t],\n\t\"./prism-pure\": [\n\t\t\"V9il\",\n\t\t322\n\t],\n\t\"./prism-pure.js\": [\n\t\t\"V9il\",\n\t\t322\n\t],\n\t\"./prism-pure.min\": [\n\t\t\"hamh\",\n\t\t323\n\t],\n\t\"./prism-pure.min.js\": [\n\t\t\"hamh\",\n\t\t323\n\t],\n\t\"./prism-purebasic\": [\n\t\t\"Q+2V\",\n\t\t324\n\t],\n\t\"./prism-purebasic.js\": [\n\t\t\"Q+2V\",\n\t\t324\n\t],\n\t\"./prism-purebasic.min\": [\n\t\t\"Wset\",\n\t\t325\n\t],\n\t\"./prism-purebasic.min.js\": [\n\t\t\"Wset\",\n\t\t325\n\t],\n\t\"./prism-python\": [\n\t\t\"PSGn\",\n\t\t326\n\t],\n\t\"./prism-python.js\": [\n\t\t\"PSGn\",\n\t\t326\n\t],\n\t\"./prism-python.min\": [\n\t\t\"j9EP\",\n\t\t327\n\t],\n\t\"./prism-python.min.js\": [\n\t\t\"j9EP\",\n\t\t327\n\t],\n\t\"./prism-q\": [\n\t\t\"aTfN\",\n\t\t328\n\t],\n\t\"./prism-q.js\": [\n\t\t\"aTfN\",\n\t\t328\n\t],\n\t\"./prism-q.min\": [\n\t\t\"34Jf\",\n\t\t329\n\t],\n\t\"./prism-q.min.js\": [\n\t\t\"34Jf\",\n\t\t329\n\t],\n\t\"./prism-qml\": [\n\t\t\"Ka68\",\n\t\t330\n\t],\n\t\"./prism-qml.js\": [\n\t\t\"Ka68\",\n\t\t330\n\t],\n\t\"./prism-qml.min\": [\n\t\t\"k6Ku\",\n\t\t331\n\t],\n\t\"./prism-qml.min.js\": [\n\t\t\"k6Ku\",\n\t\t331\n\t],\n\t\"./prism-qore\": [\n\t\t\"+qzQ\",\n\t\t332\n\t],\n\t\"./prism-qore.js\": [\n\t\t\"+qzQ\",\n\t\t332\n\t],\n\t\"./prism-qore.min\": [\n\t\t\"J+n1\",\n\t\t333\n\t],\n\t\"./prism-qore.min.js\": [\n\t\t\"J+n1\",\n\t\t333\n\t],\n\t\"./prism-r\": [\n\t\t\"Scwt\",\n\t\t334\n\t],\n\t\"./prism-r.js\": [\n\t\t\"Scwt\",\n\t\t334\n\t],\n\t\"./prism-r.min\": [\n\t\t\"KoO8\",\n\t\t335\n\t],\n\t\"./prism-r.min.js\": [\n\t\t\"KoO8\",\n\t\t335\n\t],\n\t\"./prism-racket\": [\n\t\t\"9du4\",\n\t\t336\n\t],\n\t\"./prism-racket.js\": [\n\t\t\"9du4\",\n\t\t336\n\t],\n\t\"./prism-racket.min\": [\n\t\t\"l0ah\",\n\t\t337\n\t],\n\t\"./prism-racket.min.js\": [\n\t\t\"l0ah\",\n\t\t337\n\t],\n\t\"./prism-reason\": [\n\t\t\"YD4P\",\n\t\t338\n\t],\n\t\"./prism-reason.js\": [\n\t\t\"YD4P\",\n\t\t338\n\t],\n\t\"./prism-reason.min\": [\n\t\t\"RkqP\",\n\t\t339\n\t],\n\t\"./prism-reason.min.js\": [\n\t\t\"RkqP\",\n\t\t339\n\t],\n\t\"./prism-regex\": [\n\t\t\"uM+M\",\n\t\t340\n\t],\n\t\"./prism-regex.js\": [\n\t\t\"uM+M\",\n\t\t340\n\t],\n\t\"./prism-regex.min\": [\n\t\t\"kjsO\",\n\t\t341\n\t],\n\t\"./prism-regex.min.js\": [\n\t\t\"kjsO\",\n\t\t341\n\t],\n\t\"./prism-renpy\": [\n\t\t\"Nhn9\",\n\t\t342\n\t],\n\t\"./prism-renpy.js\": [\n\t\t\"Nhn9\",\n\t\t342\n\t],\n\t\"./prism-renpy.min\": [\n\t\t\"mfpq\",\n\t\t343\n\t],\n\t\"./prism-renpy.min.js\": [\n\t\t\"mfpq\",\n\t\t343\n\t],\n\t\"./prism-rest\": [\n\t\t\"b7ok\",\n\t\t344\n\t],\n\t\"./prism-rest.js\": [\n\t\t\"b7ok\",\n\t\t344\n\t],\n\t\"./prism-rest.min\": [\n\t\t\"oqii\",\n\t\t345\n\t],\n\t\"./prism-rest.min.js\": [\n\t\t\"oqii\",\n\t\t345\n\t],\n\t\"./prism-rip\": [\n\t\t\"EHpB\",\n\t\t346\n\t],\n\t\"./prism-rip.js\": [\n\t\t\"EHpB\",\n\t\t346\n\t],\n\t\"./prism-rip.min\": [\n\t\t\"e7hJ\",\n\t\t347\n\t],\n\t\"./prism-rip.min.js\": [\n\t\t\"e7hJ\",\n\t\t347\n\t],\n\t\"./prism-roboconf\": [\n\t\t\"6GGF\",\n\t\t348\n\t],\n\t\"./prism-roboconf.js\": [\n\t\t\"6GGF\",\n\t\t348\n\t],\n\t\"./prism-roboconf.min\": [\n\t\t\"I4Uk\",\n\t\t349\n\t],\n\t\"./prism-roboconf.min.js\": [\n\t\t\"I4Uk\",\n\t\t349\n\t],\n\t\"./prism-robotframework\": [\n\t\t\"ceB4\",\n\t\t350\n\t],\n\t\"./prism-robotframework.js\": [\n\t\t\"ceB4\",\n\t\t350\n\t],\n\t\"./prism-robotframework.min\": [\n\t\t\"KrwZ\",\n\t\t351\n\t],\n\t\"./prism-robotframework.min.js\": [\n\t\t\"KrwZ\",\n\t\t351\n\t],\n\t\"./prism-ruby\": [\n\t\t\"sTAn\",\n\t\t352\n\t],\n\t\"./prism-ruby.js\": [\n\t\t\"sTAn\",\n\t\t352\n\t],\n\t\"./prism-ruby.min\": [\n\t\t\"M3bB\",\n\t\t353\n\t],\n\t\"./prism-ruby.min.js\": [\n\t\t\"M3bB\",\n\t\t353\n\t],\n\t\"./prism-rust\": [\n\t\t\"BHca\",\n\t\t354\n\t],\n\t\"./prism-rust.js\": [\n\t\t\"BHca\",\n\t\t354\n\t],\n\t\"./prism-rust.min\": [\n\t\t\"qwOm\",\n\t\t355\n\t],\n\t\"./prism-rust.min.js\": [\n\t\t\"qwOm\",\n\t\t355\n\t],\n\t\"./prism-sas\": [\n\t\t\"8sVL\",\n\t\t356\n\t],\n\t\"./prism-sas.js\": [\n\t\t\"8sVL\",\n\t\t356\n\t],\n\t\"./prism-sas.min\": [\n\t\t\"zG6a\",\n\t\t357\n\t],\n\t\"./prism-sas.min.js\": [\n\t\t\"zG6a\",\n\t\t357\n\t],\n\t\"./prism-sass\": [\n\t\t\"eWXi\",\n\t\t358\n\t],\n\t\"./prism-sass.js\": [\n\t\t\"eWXi\",\n\t\t358\n\t],\n\t\"./prism-sass.min\": [\n\t\t\"Hls3\",\n\t\t359\n\t],\n\t\"./prism-sass.min.js\": [\n\t\t\"Hls3\",\n\t\t359\n\t],\n\t\"./prism-scala\": [\n\t\t\"KTUv\",\n\t\t360\n\t],\n\t\"./prism-scala.js\": [\n\t\t\"KTUv\",\n\t\t360\n\t],\n\t\"./prism-scala.min\": [\n\t\t\"qKm0\",\n\t\t361\n\t],\n\t\"./prism-scala.min.js\": [\n\t\t\"qKm0\",\n\t\t361\n\t],\n\t\"./prism-scheme\": [\n\t\t\"cZAW\",\n\t\t362\n\t],\n\t\"./prism-scheme.js\": [\n\t\t\"cZAW\",\n\t\t362\n\t],\n\t\"./prism-scheme.min\": [\n\t\t\"ELev\",\n\t\t363\n\t],\n\t\"./prism-scheme.min.js\": [\n\t\t\"ELev\",\n\t\t363\n\t],\n\t\"./prism-scss\": [\n\t\t\"hnpa\",\n\t\t364\n\t],\n\t\"./prism-scss.js\": [\n\t\t\"hnpa\",\n\t\t364\n\t],\n\t\"./prism-scss.min\": [\n\t\t\"cMve\",\n\t\t365\n\t],\n\t\"./prism-scss.min.js\": [\n\t\t\"cMve\",\n\t\t365\n\t],\n\t\"./prism-shell-session\": [\n\t\t\"q/gI\",\n\t\t366\n\t],\n\t\"./prism-shell-session.js\": [\n\t\t\"q/gI\",\n\t\t366\n\t],\n\t\"./prism-shell-session.min\": [\n\t\t\"6yCm\",\n\t\t367\n\t],\n\t\"./prism-shell-session.min.js\": [\n\t\t\"6yCm\",\n\t\t367\n\t],\n\t\"./prism-smali\": [\n\t\t\"RehC\",\n\t\t368\n\t],\n\t\"./prism-smali.js\": [\n\t\t\"RehC\",\n\t\t368\n\t],\n\t\"./prism-smali.min\": [\n\t\t\"jpcp\",\n\t\t369\n\t],\n\t\"./prism-smali.min.js\": [\n\t\t\"jpcp\",\n\t\t369\n\t],\n\t\"./prism-smalltalk\": [\n\t\t\"cnKv\",\n\t\t370\n\t],\n\t\"./prism-smalltalk.js\": [\n\t\t\"cnKv\",\n\t\t370\n\t],\n\t\"./prism-smalltalk.min\": [\n\t\t\"amOI\",\n\t\t371\n\t],\n\t\"./prism-smalltalk.min.js\": [\n\t\t\"amOI\",\n\t\t371\n\t],\n\t\"./prism-smarty\": [\n\t\t\"+EFr\",\n\t\t372\n\t],\n\t\"./prism-smarty.js\": [\n\t\t\"+EFr\",\n\t\t372\n\t],\n\t\"./prism-smarty.min\": [\n\t\t\"WM3c\",\n\t\t373\n\t],\n\t\"./prism-smarty.min.js\": [\n\t\t\"WM3c\",\n\t\t373\n\t],\n\t\"./prism-solidity\": [\n\t\t\"gV2Z\",\n\t\t374\n\t],\n\t\"./prism-solidity.js\": [\n\t\t\"gV2Z\",\n\t\t374\n\t],\n\t\"./prism-solidity.min\": [\n\t\t\"rE9J\",\n\t\t375\n\t],\n\t\"./prism-solidity.min.js\": [\n\t\t\"rE9J\",\n\t\t375\n\t],\n\t\"./prism-solution-file\": [\n\t\t\"/s04\",\n\t\t376\n\t],\n\t\"./prism-solution-file.js\": [\n\t\t\"/s04\",\n\t\t376\n\t],\n\t\"./prism-solution-file.min\": [\n\t\t\"M2CX\",\n\t\t377\n\t],\n\t\"./prism-solution-file.min.js\": [\n\t\t\"M2CX\",\n\t\t377\n\t],\n\t\"./prism-soy\": [\n\t\t\"6c1m\",\n\t\t378\n\t],\n\t\"./prism-soy.js\": [\n\t\t\"6c1m\",\n\t\t378\n\t],\n\t\"./prism-soy.min\": [\n\t\t\"giDi\",\n\t\t379\n\t],\n\t\"./prism-soy.min.js\": [\n\t\t\"giDi\",\n\t\t379\n\t],\n\t\"./prism-sparql\": [\n\t\t\"cGNI\",\n\t\t380\n\t],\n\t\"./prism-sparql.js\": [\n\t\t\"cGNI\",\n\t\t380\n\t],\n\t\"./prism-sparql.min\": [\n\t\t\"6e2u\",\n\t\t381\n\t],\n\t\"./prism-sparql.min.js\": [\n\t\t\"6e2u\",\n\t\t381\n\t],\n\t\"./prism-splunk-spl\": [\n\t\t\"rGpf\",\n\t\t382\n\t],\n\t\"./prism-splunk-spl.js\": [\n\t\t\"rGpf\",\n\t\t382\n\t],\n\t\"./prism-splunk-spl.min\": [\n\t\t\"HRg0\",\n\t\t383\n\t],\n\t\"./prism-splunk-spl.min.js\": [\n\t\t\"HRg0\",\n\t\t383\n\t],\n\t\"./prism-sqf\": [\n\t\t\"27LU\",\n\t\t384\n\t],\n\t\"./prism-sqf.js\": [\n\t\t\"27LU\",\n\t\t384\n\t],\n\t\"./prism-sqf.min\": [\n\t\t\"nT9m\",\n\t\t385\n\t],\n\t\"./prism-sqf.min.js\": [\n\t\t\"nT9m\",\n\t\t385\n\t],\n\t\"./prism-sql\": [\n\t\t\"r4oG\",\n\t\t386\n\t],\n\t\"./prism-sql.js\": [\n\t\t\"r4oG\",\n\t\t386\n\t],\n\t\"./prism-sql.min\": [\n\t\t\"o5Wf\",\n\t\t387\n\t],\n\t\"./prism-sql.min.js\": [\n\t\t\"o5Wf\",\n\t\t387\n\t],\n\t\"./prism-stylus\": [\n\t\t\"NymF\",\n\t\t388\n\t],\n\t\"./prism-stylus.js\": [\n\t\t\"NymF\",\n\t\t388\n\t],\n\t\"./prism-stylus.min\": [\n\t\t\"BAi2\",\n\t\t389\n\t],\n\t\"./prism-stylus.min.js\": [\n\t\t\"BAi2\",\n\t\t389\n\t],\n\t\"./prism-swift\": [\n\t\t\"6cul\",\n\t\t390\n\t],\n\t\"./prism-swift.js\": [\n\t\t\"6cul\",\n\t\t390\n\t],\n\t\"./prism-swift.min\": [\n\t\t\"BGnD\",\n\t\t391\n\t],\n\t\"./prism-swift.min.js\": [\n\t\t\"BGnD\",\n\t\t391\n\t],\n\t\"./prism-t4-cs\": [\n\t\t\"TAbw\",\n\t\t392\n\t],\n\t\"./prism-t4-cs.js\": [\n\t\t\"TAbw\",\n\t\t392\n\t],\n\t\"./prism-t4-cs.min\": [\n\t\t\"/bWb\",\n\t\t393\n\t],\n\t\"./prism-t4-cs.min.js\": [\n\t\t\"/bWb\",\n\t\t393\n\t],\n\t\"./prism-t4-templating\": [\n\t\t\"CTf8\",\n\t\t394\n\t],\n\t\"./prism-t4-templating.js\": [\n\t\t\"CTf8\",\n\t\t394\n\t],\n\t\"./prism-t4-templating.min\": [\n\t\t\"X91X\",\n\t\t395\n\t],\n\t\"./prism-t4-templating.min.js\": [\n\t\t\"X91X\",\n\t\t395\n\t],\n\t\"./prism-t4-vb\": [\n\t\t\"yrCP\",\n\t\t396\n\t],\n\t\"./prism-t4-vb.js\": [\n\t\t\"yrCP\",\n\t\t396\n\t],\n\t\"./prism-t4-vb.min\": [\n\t\t\"9Ky/\",\n\t\t397\n\t],\n\t\"./prism-t4-vb.min.js\": [\n\t\t\"9Ky/\",\n\t\t397\n\t],\n\t\"./prism-tap\": [\n\t\t\"sVKi\",\n\t\t398\n\t],\n\t\"./prism-tap.js\": [\n\t\t\"sVKi\",\n\t\t398\n\t],\n\t\"./prism-tap.min\": [\n\t\t\"Fw3D\",\n\t\t399\n\t],\n\t\"./prism-tap.min.js\": [\n\t\t\"Fw3D\",\n\t\t399\n\t],\n\t\"./prism-tcl\": [\n\t\t\"2niF\",\n\t\t400\n\t],\n\t\"./prism-tcl.js\": [\n\t\t\"2niF\",\n\t\t400\n\t],\n\t\"./prism-tcl.min\": [\n\t\t\"parx\",\n\t\t401\n\t],\n\t\"./prism-tcl.min.js\": [\n\t\t\"parx\",\n\t\t401\n\t],\n\t\"./prism-textile\": [\n\t\t\"jOTn\",\n\t\t402\n\t],\n\t\"./prism-textile.js\": [\n\t\t\"jOTn\",\n\t\t402\n\t],\n\t\"./prism-textile.min\": [\n\t\t\"pLaT\",\n\t\t403\n\t],\n\t\"./prism-textile.min.js\": [\n\t\t\"pLaT\",\n\t\t403\n\t],\n\t\"./prism-toml\": [\n\t\t\"/uFR\",\n\t\t404\n\t],\n\t\"./prism-toml.js\": [\n\t\t\"/uFR\",\n\t\t404\n\t],\n\t\"./prism-toml.min\": [\n\t\t\"HEiz\",\n\t\t405\n\t],\n\t\"./prism-toml.min.js\": [\n\t\t\"HEiz\",\n\t\t405\n\t],\n\t\"./prism-tsx\": [\n\t\t\"pYjL\",\n\t\t406\n\t],\n\t\"./prism-tsx.js\": [\n\t\t\"pYjL\",\n\t\t406\n\t],\n\t\"./prism-tsx.min\": [\n\t\t\"5NIk\",\n\t\t407\n\t],\n\t\"./prism-tsx.min.js\": [\n\t\t\"5NIk\",\n\t\t407\n\t],\n\t\"./prism-tt2\": [\n\t\t\"yqz8\",\n\t\t408\n\t],\n\t\"./prism-tt2.js\": [\n\t\t\"yqz8\",\n\t\t408\n\t],\n\t\"./prism-tt2.min\": [\n\t\t\"LU91\",\n\t\t409\n\t],\n\t\"./prism-tt2.min.js\": [\n\t\t\"LU91\",\n\t\t409\n\t],\n\t\"./prism-turtle\": [\n\t\t\"XJAp\",\n\t\t410\n\t],\n\t\"./prism-turtle.js\": [\n\t\t\"XJAp\",\n\t\t410\n\t],\n\t\"./prism-turtle.min\": [\n\t\t\"Ol9o\",\n\t\t411\n\t],\n\t\"./prism-turtle.min.js\": [\n\t\t\"Ol9o\",\n\t\t411\n\t],\n\t\"./prism-twig\": [\n\t\t\"9KPv\",\n\t\t412\n\t],\n\t\"./prism-twig.js\": [\n\t\t\"9KPv\",\n\t\t412\n\t],\n\t\"./prism-twig.min\": [\n\t\t\"HblY\",\n\t\t413\n\t],\n\t\"./prism-twig.min.js\": [\n\t\t\"HblY\",\n\t\t413\n\t],\n\t\"./prism-typescript\": [\n\t\t\"XIHC\",\n\t\t414\n\t],\n\t\"./prism-typescript.js\": [\n\t\t\"XIHC\",\n\t\t414\n\t],\n\t\"./prism-typescript.min\": [\n\t\t\"HxFo\",\n\t\t415\n\t],\n\t\"./prism-typescript.min.js\": [\n\t\t\"HxFo\",\n\t\t415\n\t],\n\t\"./prism-unrealscript\": [\n\t\t\"WrUs\",\n\t\t416\n\t],\n\t\"./prism-unrealscript.js\": [\n\t\t\"WrUs\",\n\t\t416\n\t],\n\t\"./prism-unrealscript.min\": [\n\t\t\"aufD\",\n\t\t417\n\t],\n\t\"./prism-unrealscript.min.js\": [\n\t\t\"aufD\",\n\t\t417\n\t],\n\t\"./prism-vala\": [\n\t\t\"VMbu\",\n\t\t418\n\t],\n\t\"./prism-vala.js\": [\n\t\t\"VMbu\",\n\t\t418\n\t],\n\t\"./prism-vala.min\": [\n\t\t\"tE7E\",\n\t\t419\n\t],\n\t\"./prism-vala.min.js\": [\n\t\t\"tE7E\",\n\t\t419\n\t],\n\t\"./prism-vbnet\": [\n\t\t\"1Muh\",\n\t\t420\n\t],\n\t\"./prism-vbnet.js\": [\n\t\t\"1Muh\",\n\t\t420\n\t],\n\t\"./prism-vbnet.min\": [\n\t\t\"4x75\",\n\t\t421\n\t],\n\t\"./prism-vbnet.min.js\": [\n\t\t\"4x75\",\n\t\t421\n\t],\n\t\"./prism-velocity\": [\n\t\t\"jR7t\",\n\t\t422\n\t],\n\t\"./prism-velocity.js\": [\n\t\t\"jR7t\",\n\t\t422\n\t],\n\t\"./prism-velocity.min\": [\n\t\t\"Cakw\",\n\t\t423\n\t],\n\t\"./prism-velocity.min.js\": [\n\t\t\"Cakw\",\n\t\t423\n\t],\n\t\"./prism-verilog\": [\n\t\t\"tDuG\",\n\t\t424\n\t],\n\t\"./prism-verilog.js\": [\n\t\t\"tDuG\",\n\t\t424\n\t],\n\t\"./prism-verilog.min\": [\n\t\t\"CZ9m\",\n\t\t425\n\t],\n\t\"./prism-verilog.min.js\": [\n\t\t\"CZ9m\",\n\t\t425\n\t],\n\t\"./prism-vhdl\": [\n\t\t\"PFdE\",\n\t\t426\n\t],\n\t\"./prism-vhdl.js\": [\n\t\t\"PFdE\",\n\t\t426\n\t],\n\t\"./prism-vhdl.min\": [\n\t\t\"bFas\",\n\t\t427\n\t],\n\t\"./prism-vhdl.min.js\": [\n\t\t\"bFas\",\n\t\t427\n\t],\n\t\"./prism-vim\": [\n\t\t\"fO3x\",\n\t\t428\n\t],\n\t\"./prism-vim.js\": [\n\t\t\"fO3x\",\n\t\t428\n\t],\n\t\"./prism-vim.min\": [\n\t\t\"T54x\",\n\t\t429\n\t],\n\t\"./prism-vim.min.js\": [\n\t\t\"T54x\",\n\t\t429\n\t],\n\t\"./prism-visual-basic\": [\n\t\t\"bldZ\",\n\t\t430\n\t],\n\t\"./prism-visual-basic.js\": [\n\t\t\"bldZ\",\n\t\t430\n\t],\n\t\"./prism-visual-basic.min\": [\n\t\t\"4U82\",\n\t\t431\n\t],\n\t\"./prism-visual-basic.min.js\": [\n\t\t\"4U82\",\n\t\t431\n\t],\n\t\"./prism-warpscript\": [\n\t\t\"pweW\",\n\t\t432\n\t],\n\t\"./prism-warpscript.js\": [\n\t\t\"pweW\",\n\t\t432\n\t],\n\t\"./prism-warpscript.min\": [\n\t\t\"3WbU\",\n\t\t433\n\t],\n\t\"./prism-warpscript.min.js\": [\n\t\t\"3WbU\",\n\t\t433\n\t],\n\t\"./prism-wasm\": [\n\t\t\"ITQp\",\n\t\t434\n\t],\n\t\"./prism-wasm.js\": [\n\t\t\"ITQp\",\n\t\t434\n\t],\n\t\"./prism-wasm.min\": [\n\t\t\"5vyg\",\n\t\t435\n\t],\n\t\"./prism-wasm.min.js\": [\n\t\t\"5vyg\",\n\t\t435\n\t],\n\t\"./prism-wiki\": [\n\t\t\"oCKR\",\n\t\t436\n\t],\n\t\"./prism-wiki.js\": [\n\t\t\"oCKR\",\n\t\t436\n\t],\n\t\"./prism-wiki.min\": [\n\t\t\"y33g\",\n\t\t437\n\t],\n\t\"./prism-wiki.min.js\": [\n\t\t\"y33g\",\n\t\t437\n\t],\n\t\"./prism-xeora\": [\n\t\t\"+xhP\",\n\t\t438\n\t],\n\t\"./prism-xeora.js\": [\n\t\t\"+xhP\",\n\t\t438\n\t],\n\t\"./prism-xeora.min\": [\n\t\t\"fTM4\",\n\t\t439\n\t],\n\t\"./prism-xeora.min.js\": [\n\t\t\"fTM4\",\n\t\t439\n\t],\n\t\"./prism-xml-doc\": [\n\t\t\"YBrI\",\n\t\t440\n\t],\n\t\"./prism-xml-doc.js\": [\n\t\t\"YBrI\",\n\t\t440\n\t],\n\t\"./prism-xml-doc.min\": [\n\t\t\"ee5R\",\n\t\t441\n\t],\n\t\"./prism-xml-doc.min.js\": [\n\t\t\"ee5R\",\n\t\t441\n\t],\n\t\"./prism-xojo\": [\n\t\t\"z/kO\",\n\t\t442\n\t],\n\t\"./prism-xojo.js\": [\n\t\t\"z/kO\",\n\t\t442\n\t],\n\t\"./prism-xojo.min\": [\n\t\t\"Kwj8\",\n\t\t443\n\t],\n\t\"./prism-xojo.min.js\": [\n\t\t\"Kwj8\",\n\t\t443\n\t],\n\t\"./prism-xquery\": [\n\t\t\"+Nrv\",\n\t\t444\n\t],\n\t\"./prism-xquery.js\": [\n\t\t\"+Nrv\",\n\t\t444\n\t],\n\t\"./prism-xquery.min\": [\n\t\t\"+Qbg\",\n\t\t445\n\t],\n\t\"./prism-xquery.min.js\": [\n\t\t\"+Qbg\",\n\t\t445\n\t],\n\t\"./prism-yaml\": [\n\t\t\"RX2a\",\n\t\t446\n\t],\n\t\"./prism-yaml.js\": [\n\t\t\"RX2a\",\n\t\t446\n\t],\n\t\"./prism-yaml.min\": [\n\t\t\"zSud\",\n\t\t447\n\t],\n\t\"./prism-yaml.min.js\": [\n\t\t\"zSud\",\n\t\t447\n\t],\n\t\"./prism-yang\": [\n\t\t\"+TXG\",\n\t\t448\n\t],\n\t\"./prism-yang.js\": [\n\t\t\"+TXG\",\n\t\t448\n\t],\n\t\"./prism-yang.min\": [\n\t\t\"5s8B\",\n\t\t449\n\t],\n\t\"./prism-yang.min.js\": [\n\t\t\"5s8B\",\n\t\t449\n\t],\n\t\"./prism-zig\": [\n\t\t\"/Ab6\",\n\t\t450\n\t],\n\t\"./prism-zig.js\": [\n\t\t\"/Ab6\",\n\t\t450\n\t],\n\t\"./prism-zig.min\": [\n\t\t\"mj6M\",\n\t\t451\n\t],\n\t\"./prism-zig.min.js\": [\n\t\t\"mj6M\",\n\t\t451\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"VUyG\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}